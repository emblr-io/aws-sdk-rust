// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Web Services Cloud WAN core network that the Direct Connect gateway is associated to. This is only returned when a Direct Connect gateway is associated to a Cloud WAN core network.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociatedCoreNetwork {
    /// <p>The ID of the Cloud WAN core network that the Direct Connect gateway is associated to.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The account owner of the Cloud WAN core network.</p>
    pub owner_account: ::std::option::Option<::std::string::String>,
    /// <p>the ID of the Direct Connect gateway attachment.</p>
    pub attachment_id: ::std::option::Option<::std::string::String>,
}
impl AssociatedCoreNetwork {
    /// <p>The ID of the Cloud WAN core network that the Direct Connect gateway is associated to.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The account owner of the Cloud WAN core network.</p>
    pub fn owner_account(&self) -> ::std::option::Option<&str> {
        self.owner_account.as_deref()
    }
    /// <p>the ID of the Direct Connect gateway attachment.</p>
    pub fn attachment_id(&self) -> ::std::option::Option<&str> {
        self.attachment_id.as_deref()
    }
}
impl AssociatedCoreNetwork {
    /// Creates a new builder-style object to manufacture [`AssociatedCoreNetwork`](crate::types::AssociatedCoreNetwork).
    pub fn builder() -> crate::types::builders::AssociatedCoreNetworkBuilder {
        crate::types::builders::AssociatedCoreNetworkBuilder::default()
    }
}

/// A builder for [`AssociatedCoreNetwork`](crate::types::AssociatedCoreNetwork).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociatedCoreNetworkBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) owner_account: ::std::option::Option<::std::string::String>,
    pub(crate) attachment_id: ::std::option::Option<::std::string::String>,
}
impl AssociatedCoreNetworkBuilder {
    /// <p>The ID of the Cloud WAN core network that the Direct Connect gateway is associated to.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Cloud WAN core network that the Direct Connect gateway is associated to.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the Cloud WAN core network that the Direct Connect gateway is associated to.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The account owner of the Cloud WAN core network.</p>
    pub fn owner_account(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.owner_account = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The account owner of the Cloud WAN core network.</p>
    pub fn set_owner_account(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.owner_account = input;
        self
    }
    /// <p>The account owner of the Cloud WAN core network.</p>
    pub fn get_owner_account(&self) -> &::std::option::Option<::std::string::String> {
        &self.owner_account
    }
    /// <p>the ID of the Direct Connect gateway attachment.</p>
    pub fn attachment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attachment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>the ID of the Direct Connect gateway attachment.</p>
    pub fn set_attachment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attachment_id = input;
        self
    }
    /// <p>the ID of the Direct Connect gateway attachment.</p>
    pub fn get_attachment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.attachment_id
    }
    /// Consumes the builder and constructs a [`AssociatedCoreNetwork`](crate::types::AssociatedCoreNetwork).
    pub fn build(self) -> crate::types::AssociatedCoreNetwork {
        crate::types::AssociatedCoreNetwork {
            id: self.id,
            owner_account: self.owner_account,
            attachment_id: self.attachment_id,
        }
    }
}
