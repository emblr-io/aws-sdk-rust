// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about how to configure IAM for an add-on.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddonPodIdentityConfiguration {
    /// <p>The Kubernetes Service Account name used by the add-on.</p>
    pub service_account: ::std::option::Option<::std::string::String>,
    /// <p>A suggested IAM Policy for the add-on.</p>
    pub recommended_managed_policies: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AddonPodIdentityConfiguration {
    /// <p>The Kubernetes Service Account name used by the add-on.</p>
    pub fn service_account(&self) -> ::std::option::Option<&str> {
        self.service_account.as_deref()
    }
    /// <p>A suggested IAM Policy for the add-on.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.recommended_managed_policies.is_none()`.
    pub fn recommended_managed_policies(&self) -> &[::std::string::String] {
        self.recommended_managed_policies.as_deref().unwrap_or_default()
    }
}
impl AddonPodIdentityConfiguration {
    /// Creates a new builder-style object to manufacture [`AddonPodIdentityConfiguration`](crate::types::AddonPodIdentityConfiguration).
    pub fn builder() -> crate::types::builders::AddonPodIdentityConfigurationBuilder {
        crate::types::builders::AddonPodIdentityConfigurationBuilder::default()
    }
}

/// A builder for [`AddonPodIdentityConfiguration`](crate::types::AddonPodIdentityConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AddonPodIdentityConfigurationBuilder {
    pub(crate) service_account: ::std::option::Option<::std::string::String>,
    pub(crate) recommended_managed_policies: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AddonPodIdentityConfigurationBuilder {
    /// <p>The Kubernetes Service Account name used by the add-on.</p>
    pub fn service_account(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_account = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Kubernetes Service Account name used by the add-on.</p>
    pub fn set_service_account(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_account = input;
        self
    }
    /// <p>The Kubernetes Service Account name used by the add-on.</p>
    pub fn get_service_account(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_account
    }
    /// Appends an item to `recommended_managed_policies`.
    ///
    /// To override the contents of this collection use [`set_recommended_managed_policies`](Self::set_recommended_managed_policies).
    ///
    /// <p>A suggested IAM Policy for the add-on.</p>
    pub fn recommended_managed_policies(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.recommended_managed_policies.unwrap_or_default();
        v.push(input.into());
        self.recommended_managed_policies = ::std::option::Option::Some(v);
        self
    }
    /// <p>A suggested IAM Policy for the add-on.</p>
    pub fn set_recommended_managed_policies(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.recommended_managed_policies = input;
        self
    }
    /// <p>A suggested IAM Policy for the add-on.</p>
    pub fn get_recommended_managed_policies(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.recommended_managed_policies
    }
    /// Consumes the builder and constructs a [`AddonPodIdentityConfiguration`](crate::types::AddonPodIdentityConfiguration).
    pub fn build(self) -> crate::types::AddonPodIdentityConfiguration {
        crate::types::AddonPodIdentityConfiguration {
            service_account: self.service_account,
            recommended_managed_policies: self.recommended_managed_policies,
        }
    }
}
