// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Indicates the status of the request to update the block storage capability of your EKS Auto Mode cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StorageConfigResponse {
    /// <p>Indicates the current configuration of the block storage capability on your EKS Auto Mode cluster. For example, if the capability is enabled or disabled.</p>
    pub block_storage: ::std::option::Option<crate::types::BlockStorage>,
}
impl StorageConfigResponse {
    /// <p>Indicates the current configuration of the block storage capability on your EKS Auto Mode cluster. For example, if the capability is enabled or disabled.</p>
    pub fn block_storage(&self) -> ::std::option::Option<&crate::types::BlockStorage> {
        self.block_storage.as_ref()
    }
}
impl StorageConfigResponse {
    /// Creates a new builder-style object to manufacture [`StorageConfigResponse`](crate::types::StorageConfigResponse).
    pub fn builder() -> crate::types::builders::StorageConfigResponseBuilder {
        crate::types::builders::StorageConfigResponseBuilder::default()
    }
}

/// A builder for [`StorageConfigResponse`](crate::types::StorageConfigResponse).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StorageConfigResponseBuilder {
    pub(crate) block_storage: ::std::option::Option<crate::types::BlockStorage>,
}
impl StorageConfigResponseBuilder {
    /// <p>Indicates the current configuration of the block storage capability on your EKS Auto Mode cluster. For example, if the capability is enabled or disabled.</p>
    pub fn block_storage(mut self, input: crate::types::BlockStorage) -> Self {
        self.block_storage = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates the current configuration of the block storage capability on your EKS Auto Mode cluster. For example, if the capability is enabled or disabled.</p>
    pub fn set_block_storage(mut self, input: ::std::option::Option<crate::types::BlockStorage>) -> Self {
        self.block_storage = input;
        self
    }
    /// <p>Indicates the current configuration of the block storage capability on your EKS Auto Mode cluster. For example, if the capability is enabled or disabled.</p>
    pub fn get_block_storage(&self) -> &::std::option::Option<crate::types::BlockStorage> {
        &self.block_storage
    }
    /// Consumes the builder and constructs a [`StorageConfigResponse`](crate::types::StorageConfigResponse).
    pub fn build(self) -> crate::types::StorageConfigResponse {
        crate::types::StorageConfigResponse {
            block_storage: self.block_storage,
        }
    }
}
