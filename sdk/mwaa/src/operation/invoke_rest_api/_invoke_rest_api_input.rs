// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct InvokeRestApiInput {
    /// <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The Apache Airflow REST API endpoint path to be called. For example, <code>/dags/123456/clearTaskInstances</code>. For more information, see <a href="https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html">Apache Airflow API</a></p>
    pub path: ::std::option::Option<::std::string::String>,
    /// <p>The HTTP method used for making Airflow REST API calls. For example, <code>POST</code>.</p>
    pub method: ::std::option::Option<crate::types::RestApiMethod>,
    /// <p>Query parameters to be included in the Apache Airflow REST API call, provided as a JSON object.</p>
    pub query_parameters: ::std::option::Option<::aws_smithy_types::Document>,
    /// <p>The request body for the Apache Airflow REST API call, provided as a JSON object.</p>
    pub body: ::std::option::Option<::aws_smithy_types::Document>,
}
impl InvokeRestApiInput {
    /// <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Apache Airflow REST API endpoint path to be called. For example, <code>/dags/123456/clearTaskInstances</code>. For more information, see <a href="https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html">Apache Airflow API</a></p>
    pub fn path(&self) -> ::std::option::Option<&str> {
        self.path.as_deref()
    }
    /// <p>The HTTP method used for making Airflow REST API calls. For example, <code>POST</code>.</p>
    pub fn method(&self) -> ::std::option::Option<&crate::types::RestApiMethod> {
        self.method.as_ref()
    }
    /// <p>Query parameters to be included in the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn query_parameters(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.query_parameters.as_ref()
    }
    /// <p>The request body for the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn body(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.body.as_ref()
    }
}
impl ::std::fmt::Debug for InvokeRestApiInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("InvokeRestApiInput");
        formatter.field("name", &self.name);
        formatter.field("path", &self.path);
        formatter.field("method", &self.method);
        formatter.field("query_parameters", &self.query_parameters);
        formatter.field("body", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl InvokeRestApiInput {
    /// Creates a new builder-style object to manufacture [`InvokeRestApiInput`](crate::operation::invoke_rest_api::InvokeRestApiInput).
    pub fn builder() -> crate::operation::invoke_rest_api::builders::InvokeRestApiInputBuilder {
        crate::operation::invoke_rest_api::builders::InvokeRestApiInputBuilder::default()
    }
}

/// A builder for [`InvokeRestApiInput`](crate::operation::invoke_rest_api::InvokeRestApiInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct InvokeRestApiInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) path: ::std::option::Option<::std::string::String>,
    pub(crate) method: ::std::option::Option<crate::types::RestApiMethod>,
    pub(crate) query_parameters: ::std::option::Option<::aws_smithy_types::Document>,
    pub(crate) body: ::std::option::Option<::aws_smithy_types::Document>,
}
impl InvokeRestApiInputBuilder {
    /// <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The Apache Airflow REST API endpoint path to be called. For example, <code>/dags/123456/clearTaskInstances</code>. For more information, see <a href="https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html">Apache Airflow API</a></p>
    /// This field is required.
    pub fn path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Apache Airflow REST API endpoint path to be called. For example, <code>/dags/123456/clearTaskInstances</code>. For more information, see <a href="https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html">Apache Airflow API</a></p>
    pub fn set_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// <p>The Apache Airflow REST API endpoint path to be called. For example, <code>/dags/123456/clearTaskInstances</code>. For more information, see <a href="https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html">Apache Airflow API</a></p>
    pub fn get_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.path
    }
    /// <p>The HTTP method used for making Airflow REST API calls. For example, <code>POST</code>.</p>
    /// This field is required.
    pub fn method(mut self, input: crate::types::RestApiMethod) -> Self {
        self.method = ::std::option::Option::Some(input);
        self
    }
    /// <p>The HTTP method used for making Airflow REST API calls. For example, <code>POST</code>.</p>
    pub fn set_method(mut self, input: ::std::option::Option<crate::types::RestApiMethod>) -> Self {
        self.method = input;
        self
    }
    /// <p>The HTTP method used for making Airflow REST API calls. For example, <code>POST</code>.</p>
    pub fn get_method(&self) -> &::std::option::Option<crate::types::RestApiMethod> {
        &self.method
    }
    /// <p>Query parameters to be included in the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn query_parameters(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.query_parameters = ::std::option::Option::Some(input);
        self
    }
    /// <p>Query parameters to be included in the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn set_query_parameters(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.query_parameters = input;
        self
    }
    /// <p>Query parameters to be included in the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn get_query_parameters(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.query_parameters
    }
    /// <p>The request body for the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn body(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.body = ::std::option::Option::Some(input);
        self
    }
    /// <p>The request body for the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn set_body(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.body = input;
        self
    }
    /// <p>The request body for the Apache Airflow REST API call, provided as a JSON object.</p>
    pub fn get_body(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.body
    }
    /// Consumes the builder and constructs a [`InvokeRestApiInput`](crate::operation::invoke_rest_api::InvokeRestApiInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::invoke_rest_api::InvokeRestApiInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::invoke_rest_api::InvokeRestApiInput {
            name: self.name,
            path: self.path,
            method: self.method,
            query_parameters: self.query_parameters,
            body: self.body,
        })
    }
}
impl ::std::fmt::Debug for InvokeRestApiInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("InvokeRestApiInputBuilder");
        formatter.field("name", &self.name);
        formatter.field("path", &self.path);
        formatter.field("method", &self.method);
        formatter.field("query_parameters", &self.query_parameters);
        formatter.field("body", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
