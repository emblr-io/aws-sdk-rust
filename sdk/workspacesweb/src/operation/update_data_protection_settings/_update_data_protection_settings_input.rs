// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateDataProtectionSettingsInput {
    /// <p>The ARN of the data protection settings.</p>
    pub data_protection_settings_arn: ::std::option::Option<::std::string::String>,
    /// <p>The inline redaction configuration of the data protection settings that will be applied to all sessions.</p>
    pub inline_redaction_configuration: ::std::option::Option<crate::types::InlineRedactionConfiguration>,
    /// <p>The display name of the data protection settings.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the data protection settings.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.</p>
    /// <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateDataProtectionSettingsInput {
    /// <p>The ARN of the data protection settings.</p>
    pub fn data_protection_settings_arn(&self) -> ::std::option::Option<&str> {
        self.data_protection_settings_arn.as_deref()
    }
    /// <p>The inline redaction configuration of the data protection settings that will be applied to all sessions.</p>
    pub fn inline_redaction_configuration(&self) -> ::std::option::Option<&crate::types::InlineRedactionConfiguration> {
        self.inline_redaction_configuration.as_ref()
    }
    /// <p>The display name of the data protection settings.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The description of the data protection settings.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.</p>
    /// <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl ::std::fmt::Debug for UpdateDataProtectionSettingsInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateDataProtectionSettingsInput");
        formatter.field("data_protection_settings_arn", &self.data_protection_settings_arn);
        formatter.field("inline_redaction_configuration", &self.inline_redaction_configuration);
        formatter.field("display_name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
impl UpdateDataProtectionSettingsInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataProtectionSettingsInput`](crate::operation::update_data_protection_settings::UpdateDataProtectionSettingsInput).
    pub fn builder() -> crate::operation::update_data_protection_settings::builders::UpdateDataProtectionSettingsInputBuilder {
        crate::operation::update_data_protection_settings::builders::UpdateDataProtectionSettingsInputBuilder::default()
    }
}

/// A builder for [`UpdateDataProtectionSettingsInput`](crate::operation::update_data_protection_settings::UpdateDataProtectionSettingsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UpdateDataProtectionSettingsInputBuilder {
    pub(crate) data_protection_settings_arn: ::std::option::Option<::std::string::String>,
    pub(crate) inline_redaction_configuration: ::std::option::Option<crate::types::InlineRedactionConfiguration>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateDataProtectionSettingsInputBuilder {
    /// <p>The ARN of the data protection settings.</p>
    /// This field is required.
    pub fn data_protection_settings_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_protection_settings_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the data protection settings.</p>
    pub fn set_data_protection_settings_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_protection_settings_arn = input;
        self
    }
    /// <p>The ARN of the data protection settings.</p>
    pub fn get_data_protection_settings_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_protection_settings_arn
    }
    /// <p>The inline redaction configuration of the data protection settings that will be applied to all sessions.</p>
    pub fn inline_redaction_configuration(mut self, input: crate::types::InlineRedactionConfiguration) -> Self {
        self.inline_redaction_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The inline redaction configuration of the data protection settings that will be applied to all sessions.</p>
    pub fn set_inline_redaction_configuration(mut self, input: ::std::option::Option<crate::types::InlineRedactionConfiguration>) -> Self {
        self.inline_redaction_configuration = input;
        self
    }
    /// <p>The inline redaction configuration of the data protection settings that will be applied to all sessions.</p>
    pub fn get_inline_redaction_configuration(&self) -> &::std::option::Option<crate::types::InlineRedactionConfiguration> {
        &self.inline_redaction_configuration
    }
    /// <p>The display name of the data protection settings.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the data protection settings.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The display name of the data protection settings.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The description of the data protection settings.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the data protection settings.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the data protection settings.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.</p>
    /// <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.</p>
    /// <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.</p>
    /// <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`UpdateDataProtectionSettingsInput`](crate::operation::update_data_protection_settings::UpdateDataProtectionSettingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_data_protection_settings::UpdateDataProtectionSettingsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_data_protection_settings::UpdateDataProtectionSettingsInput {
            data_protection_settings_arn: self.data_protection_settings_arn,
            inline_redaction_configuration: self.inline_redaction_configuration,
            display_name: self.display_name,
            description: self.description,
            client_token: self.client_token,
        })
    }
}
impl ::std::fmt::Debug for UpdateDataProtectionSettingsInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateDataProtectionSettingsInputBuilder");
        formatter.field("data_protection_settings_arn", &self.data_protection_settings_arn);
        formatter.field("inline_redaction_configuration", &self.inline_redaction_configuration);
        formatter.field("display_name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
