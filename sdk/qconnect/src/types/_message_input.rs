// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The message input.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MessageInput {
    /// <p>The message input value.</p>
    pub value: ::std::option::Option<crate::types::MessageData>,
}
impl MessageInput {
    /// <p>The message input value.</p>
    pub fn value(&self) -> ::std::option::Option<&crate::types::MessageData> {
        self.value.as_ref()
    }
}
impl MessageInput {
    /// Creates a new builder-style object to manufacture [`MessageInput`](crate::types::MessageInput).
    pub fn builder() -> crate::types::builders::MessageInputBuilder {
        crate::types::builders::MessageInputBuilder::default()
    }
}

/// A builder for [`MessageInput`](crate::types::MessageInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MessageInputBuilder {
    pub(crate) value: ::std::option::Option<crate::types::MessageData>,
}
impl MessageInputBuilder {
    /// <p>The message input value.</p>
    /// This field is required.
    pub fn value(mut self, input: crate::types::MessageData) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The message input value.</p>
    pub fn set_value(mut self, input: ::std::option::Option<crate::types::MessageData>) -> Self {
        self.value = input;
        self
    }
    /// <p>The message input value.</p>
    pub fn get_value(&self) -> &::std::option::Option<crate::types::MessageData> {
        &self.value
    }
    /// Consumes the builder and constructs a [`MessageInput`](crate::types::MessageInput).
    pub fn build(self) -> crate::types::MessageInput {
        crate::types::MessageInput { value: self.value }
    }
}
