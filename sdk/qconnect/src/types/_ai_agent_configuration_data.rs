// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A type that specifies the AI Agent ID configuration data when mapping an AI Agents to be used for an AI Agent type on a session or assistant.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AiAgentConfigurationData {
    /// <p>The ID of the AI Agent to be configured.</p>
    pub ai_agent_id: ::std::string::String,
}
impl AiAgentConfigurationData {
    /// <p>The ID of the AI Agent to be configured.</p>
    pub fn ai_agent_id(&self) -> &str {
        use std::ops::Deref;
        self.ai_agent_id.deref()
    }
}
impl AiAgentConfigurationData {
    /// Creates a new builder-style object to manufacture [`AiAgentConfigurationData`](crate::types::AiAgentConfigurationData).
    pub fn builder() -> crate::types::builders::AiAgentConfigurationDataBuilder {
        crate::types::builders::AiAgentConfigurationDataBuilder::default()
    }
}

/// A builder for [`AiAgentConfigurationData`](crate::types::AiAgentConfigurationData).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AiAgentConfigurationDataBuilder {
    pub(crate) ai_agent_id: ::std::option::Option<::std::string::String>,
}
impl AiAgentConfigurationDataBuilder {
    /// <p>The ID of the AI Agent to be configured.</p>
    /// This field is required.
    pub fn ai_agent_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ai_agent_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the AI Agent to be configured.</p>
    pub fn set_ai_agent_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ai_agent_id = input;
        self
    }
    /// <p>The ID of the AI Agent to be configured.</p>
    pub fn get_ai_agent_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ai_agent_id
    }
    /// Consumes the builder and constructs a [`AiAgentConfigurationData`](crate::types::AiAgentConfigurationData).
    /// This method will fail if any of the following fields are not set:
    /// - [`ai_agent_id`](crate::types::builders::AiAgentConfigurationDataBuilder::ai_agent_id)
    pub fn build(self) -> ::std::result::Result<crate::types::AiAgentConfigurationData, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AiAgentConfigurationData {
            ai_agent_id: self.ai_agent_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "ai_agent_id",
                    "ai_agent_id was not specified but it is required when building AiAgentConfigurationData",
                )
            })?,
        })
    }
}
