// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The system endpoint attributes that are used with the message template.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct SystemEndpointAttributes {
    /// <p>The customer's phone number if used with <code>customerEndpoint</code>, or the number the customer dialed to call your contact center if used with <code>systemEndpoint</code>.</p>
    pub address: ::std::option::Option<::std::string::String>,
}
impl SystemEndpointAttributes {
    /// <p>The customer's phone number if used with <code>customerEndpoint</code>, or the number the customer dialed to call your contact center if used with <code>systemEndpoint</code>.</p>
    pub fn address(&self) -> ::std::option::Option<&str> {
        self.address.as_deref()
    }
}
impl ::std::fmt::Debug for SystemEndpointAttributes {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SystemEndpointAttributes");
        formatter.field("address", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl SystemEndpointAttributes {
    /// Creates a new builder-style object to manufacture [`SystemEndpointAttributes`](crate::types::SystemEndpointAttributes).
    pub fn builder() -> crate::types::builders::SystemEndpointAttributesBuilder {
        crate::types::builders::SystemEndpointAttributesBuilder::default()
    }
}

/// A builder for [`SystemEndpointAttributes`](crate::types::SystemEndpointAttributes).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct SystemEndpointAttributesBuilder {
    pub(crate) address: ::std::option::Option<::std::string::String>,
}
impl SystemEndpointAttributesBuilder {
    /// <p>The customer's phone number if used with <code>customerEndpoint</code>, or the number the customer dialed to call your contact center if used with <code>systemEndpoint</code>.</p>
    pub fn address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.address = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The customer's phone number if used with <code>customerEndpoint</code>, or the number the customer dialed to call your contact center if used with <code>systemEndpoint</code>.</p>
    pub fn set_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.address = input;
        self
    }
    /// <p>The customer's phone number if used with <code>customerEndpoint</code>, or the number the customer dialed to call your contact center if used with <code>systemEndpoint</code>.</p>
    pub fn get_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.address
    }
    /// Consumes the builder and constructs a [`SystemEndpointAttributes`](crate::types::SystemEndpointAttributes).
    pub fn build(self) -> crate::types::SystemEndpointAttributes {
        crate::types::SystemEndpointAttributes { address: self.address }
    }
}
impl ::std::fmt::Debug for SystemEndpointAttributesBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SystemEndpointAttributesBuilder");
        formatter.field("address", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
