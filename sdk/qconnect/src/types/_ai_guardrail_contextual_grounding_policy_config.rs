// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The policy configuration details for the AI Guardrail's contextual grounding policy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AiGuardrailContextualGroundingPolicyConfig {
    /// <p>The filter configuration details for the AI Guardrails contextual grounding policy.</p>
    pub filters_config: ::std::vec::Vec<crate::types::GuardrailContextualGroundingFilterConfig>,
}
impl AiGuardrailContextualGroundingPolicyConfig {
    /// <p>The filter configuration details for the AI Guardrails contextual grounding policy.</p>
    pub fn filters_config(&self) -> &[crate::types::GuardrailContextualGroundingFilterConfig] {
        use std::ops::Deref;
        self.filters_config.deref()
    }
}
impl AiGuardrailContextualGroundingPolicyConfig {
    /// Creates a new builder-style object to manufacture [`AiGuardrailContextualGroundingPolicyConfig`](crate::types::AiGuardrailContextualGroundingPolicyConfig).
    pub fn builder() -> crate::types::builders::AiGuardrailContextualGroundingPolicyConfigBuilder {
        crate::types::builders::AiGuardrailContextualGroundingPolicyConfigBuilder::default()
    }
}

/// A builder for [`AiGuardrailContextualGroundingPolicyConfig`](crate::types::AiGuardrailContextualGroundingPolicyConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AiGuardrailContextualGroundingPolicyConfigBuilder {
    pub(crate) filters_config: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailContextualGroundingFilterConfig>>,
}
impl AiGuardrailContextualGroundingPolicyConfigBuilder {
    /// Appends an item to `filters_config`.
    ///
    /// To override the contents of this collection use [`set_filters_config`](Self::set_filters_config).
    ///
    /// <p>The filter configuration details for the AI Guardrails contextual grounding policy.</p>
    pub fn filters_config(mut self, input: crate::types::GuardrailContextualGroundingFilterConfig) -> Self {
        let mut v = self.filters_config.unwrap_or_default();
        v.push(input);
        self.filters_config = ::std::option::Option::Some(v);
        self
    }
    /// <p>The filter configuration details for the AI Guardrails contextual grounding policy.</p>
    pub fn set_filters_config(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailContextualGroundingFilterConfig>>,
    ) -> Self {
        self.filters_config = input;
        self
    }
    /// <p>The filter configuration details for the AI Guardrails contextual grounding policy.</p>
    pub fn get_filters_config(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GuardrailContextualGroundingFilterConfig>> {
        &self.filters_config
    }
    /// Consumes the builder and constructs a [`AiGuardrailContextualGroundingPolicyConfig`](crate::types::AiGuardrailContextualGroundingPolicyConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`filters_config`](crate::types::builders::AiGuardrailContextualGroundingPolicyConfigBuilder::filters_config)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AiGuardrailContextualGroundingPolicyConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AiGuardrailContextualGroundingPolicyConfig {
            filters_config: self.filters_config.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "filters_config",
                    "filters_config was not specified but it is required when building AiGuardrailContextualGroundingPolicyConfig",
                )
            })?,
        })
    }
}
