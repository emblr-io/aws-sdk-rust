// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An array of objects with metadata about the requested <code>FlowOperation</code>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowOperationMetadata {
    /// <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    pub flow_operation_id: ::std::option::Option<::std::string::String>,
    /// <p>Defines the type of <code>FlowOperation</code>.</p>
    pub flow_operation_type: ::std::option::Option<crate::types::FlowOperationType>,
    /// <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    pub flow_request_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p>
    /// <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    pub flow_operation_status: ::std::option::Option<crate::types::FlowOperationStatus>,
}
impl FlowOperationMetadata {
    /// <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    pub fn flow_operation_id(&self) -> ::std::option::Option<&str> {
        self.flow_operation_id.as_deref()
    }
    /// <p>Defines the type of <code>FlowOperation</code>.</p>
    pub fn flow_operation_type(&self) -> ::std::option::Option<&crate::types::FlowOperationType> {
        self.flow_operation_type.as_ref()
    }
    /// <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    pub fn flow_request_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.flow_request_timestamp.as_ref()
    }
    /// <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p>
    /// <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    pub fn flow_operation_status(&self) -> ::std::option::Option<&crate::types::FlowOperationStatus> {
        self.flow_operation_status.as_ref()
    }
}
impl FlowOperationMetadata {
    /// Creates a new builder-style object to manufacture [`FlowOperationMetadata`](crate::types::FlowOperationMetadata).
    pub fn builder() -> crate::types::builders::FlowOperationMetadataBuilder {
        crate::types::builders::FlowOperationMetadataBuilder::default()
    }
}

/// A builder for [`FlowOperationMetadata`](crate::types::FlowOperationMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FlowOperationMetadataBuilder {
    pub(crate) flow_operation_id: ::std::option::Option<::std::string::String>,
    pub(crate) flow_operation_type: ::std::option::Option<crate::types::FlowOperationType>,
    pub(crate) flow_request_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) flow_operation_status: ::std::option::Option<crate::types::FlowOperationStatus>,
}
impl FlowOperationMetadataBuilder {
    /// <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    pub fn flow_operation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_operation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    pub fn set_flow_operation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_operation_id = input;
        self
    }
    /// <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    pub fn get_flow_operation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_operation_id
    }
    /// <p>Defines the type of <code>FlowOperation</code>.</p>
    pub fn flow_operation_type(mut self, input: crate::types::FlowOperationType) -> Self {
        self.flow_operation_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the type of <code>FlowOperation</code>.</p>
    pub fn set_flow_operation_type(mut self, input: ::std::option::Option<crate::types::FlowOperationType>) -> Self {
        self.flow_operation_type = input;
        self
    }
    /// <p>Defines the type of <code>FlowOperation</code>.</p>
    pub fn get_flow_operation_type(&self) -> &::std::option::Option<crate::types::FlowOperationType> {
        &self.flow_operation_type
    }
    /// <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    pub fn flow_request_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.flow_request_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    pub fn set_flow_request_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.flow_request_timestamp = input;
        self
    }
    /// <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    pub fn get_flow_request_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.flow_request_timestamp
    }
    /// <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p>
    /// <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    pub fn flow_operation_status(mut self, input: crate::types::FlowOperationStatus) -> Self {
        self.flow_operation_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p>
    /// <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    pub fn set_flow_operation_status(mut self, input: ::std::option::Option<crate::types::FlowOperationStatus>) -> Self {
        self.flow_operation_status = input;
        self
    }
    /// <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p>
    /// <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    pub fn get_flow_operation_status(&self) -> &::std::option::Option<crate::types::FlowOperationStatus> {
        &self.flow_operation_status
    }
    /// Consumes the builder and constructs a [`FlowOperationMetadata`](crate::types::FlowOperationMetadata).
    pub fn build(self) -> crate::types::FlowOperationMetadata {
        crate::types::FlowOperationMetadata {
            flow_operation_id: self.flow_operation_id,
            flow_operation_type: self.flow_operation_type,
            flow_request_timestamp: self.flow_request_timestamp,
            flow_operation_status: self.flow_operation_status,
        }
    }
}
