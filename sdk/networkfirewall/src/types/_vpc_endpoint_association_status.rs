// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detailed information about the current status of a <code>VpcEndpointAssociation</code>. You can retrieve this by calling <code>DescribeVpcEndpointAssociation</code> and providing the VPC endpoint association ARN.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcEndpointAssociationStatus {
    /// <p>The readiness of the configured firewall endpoint to handle network traffic.</p>
    pub status: crate::types::FirewallStatusValue,
    /// <p>The list of the Availability Zone sync states for all subnets that are defined by the firewall.</p>
    pub association_sync_state: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::AzSyncState>>,
}
impl VpcEndpointAssociationStatus {
    /// <p>The readiness of the configured firewall endpoint to handle network traffic.</p>
    pub fn status(&self) -> &crate::types::FirewallStatusValue {
        &self.status
    }
    /// <p>The list of the Availability Zone sync states for all subnets that are defined by the firewall.</p>
    pub fn association_sync_state(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, crate::types::AzSyncState>> {
        self.association_sync_state.as_ref()
    }
}
impl VpcEndpointAssociationStatus {
    /// Creates a new builder-style object to manufacture [`VpcEndpointAssociationStatus`](crate::types::VpcEndpointAssociationStatus).
    pub fn builder() -> crate::types::builders::VpcEndpointAssociationStatusBuilder {
        crate::types::builders::VpcEndpointAssociationStatusBuilder::default()
    }
}

/// A builder for [`VpcEndpointAssociationStatus`](crate::types::VpcEndpointAssociationStatus).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VpcEndpointAssociationStatusBuilder {
    pub(crate) status: ::std::option::Option<crate::types::FirewallStatusValue>,
    pub(crate) association_sync_state: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::AzSyncState>>,
}
impl VpcEndpointAssociationStatusBuilder {
    /// <p>The readiness of the configured firewall endpoint to handle network traffic.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::FirewallStatusValue) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The readiness of the configured firewall endpoint to handle network traffic.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FirewallStatusValue>) -> Self {
        self.status = input;
        self
    }
    /// <p>The readiness of the configured firewall endpoint to handle network traffic.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FirewallStatusValue> {
        &self.status
    }
    /// Adds a key-value pair to `association_sync_state`.
    ///
    /// To override the contents of this collection use [`set_association_sync_state`](Self::set_association_sync_state).
    ///
    /// <p>The list of the Availability Zone sync states for all subnets that are defined by the firewall.</p>
    pub fn association_sync_state(mut self, k: impl ::std::convert::Into<::std::string::String>, v: crate::types::AzSyncState) -> Self {
        let mut hash_map = self.association_sync_state.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.association_sync_state = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The list of the Availability Zone sync states for all subnets that are defined by the firewall.</p>
    pub fn set_association_sync_state(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::AzSyncState>>,
    ) -> Self {
        self.association_sync_state = input;
        self
    }
    /// <p>The list of the Availability Zone sync states for all subnets that are defined by the firewall.</p>
    pub fn get_association_sync_state(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::AzSyncState>> {
        &self.association_sync_state
    }
    /// Consumes the builder and constructs a [`VpcEndpointAssociationStatus`](crate::types::VpcEndpointAssociationStatus).
    /// This method will fail if any of the following fields are not set:
    /// - [`status`](crate::types::builders::VpcEndpointAssociationStatusBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::VpcEndpointAssociationStatus, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VpcEndpointAssociationStatus {
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building VpcEndpointAssociationStatus",
                )
            })?,
            association_sync_state: self.association_sync_state,
        })
    }
}
