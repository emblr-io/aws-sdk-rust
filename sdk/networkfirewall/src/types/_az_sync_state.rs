// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the firewall endpoint defined by a <code>VpcEndpointAssociation</code>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AzSyncState {
    /// <p>The definition and status of the firewall endpoint for a single subnet. In each configured subnet, Network Firewall instantiates a firewall endpoint to handle network traffic.</p>
    /// <p>This data type is used for any firewall endpoint type:</p>
    /// <ul>
    /// <li>
    /// <p>For <code>Firewall.SubnetMappings</code>, this <code>Attachment</code> is part of the <code>FirewallStatus</code> sync states information. You define firewall subnets using <code>CreateFirewall</code> and <code>AssociateSubnets</code>.</p></li>
    /// <li>
    /// <p>For <code>VpcEndpointAssociation</code>, this <code>Attachment</code> is part of the <code>VpcEndpointAssociationStatus</code> sync states information. You define these subnets using <code>CreateVpcEndpointAssociation</code>.</p></li>
    /// </ul>
    pub attachment: ::std::option::Option<crate::types::Attachment>,
}
impl AzSyncState {
    /// <p>The definition and status of the firewall endpoint for a single subnet. In each configured subnet, Network Firewall instantiates a firewall endpoint to handle network traffic.</p>
    /// <p>This data type is used for any firewall endpoint type:</p>
    /// <ul>
    /// <li>
    /// <p>For <code>Firewall.SubnetMappings</code>, this <code>Attachment</code> is part of the <code>FirewallStatus</code> sync states information. You define firewall subnets using <code>CreateFirewall</code> and <code>AssociateSubnets</code>.</p></li>
    /// <li>
    /// <p>For <code>VpcEndpointAssociation</code>, this <code>Attachment</code> is part of the <code>VpcEndpointAssociationStatus</code> sync states information. You define these subnets using <code>CreateVpcEndpointAssociation</code>.</p></li>
    /// </ul>
    pub fn attachment(&self) -> ::std::option::Option<&crate::types::Attachment> {
        self.attachment.as_ref()
    }
}
impl AzSyncState {
    /// Creates a new builder-style object to manufacture [`AzSyncState`](crate::types::AzSyncState).
    pub fn builder() -> crate::types::builders::AzSyncStateBuilder {
        crate::types::builders::AzSyncStateBuilder::default()
    }
}

/// A builder for [`AzSyncState`](crate::types::AzSyncState).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AzSyncStateBuilder {
    pub(crate) attachment: ::std::option::Option<crate::types::Attachment>,
}
impl AzSyncStateBuilder {
    /// <p>The definition and status of the firewall endpoint for a single subnet. In each configured subnet, Network Firewall instantiates a firewall endpoint to handle network traffic.</p>
    /// <p>This data type is used for any firewall endpoint type:</p>
    /// <ul>
    /// <li>
    /// <p>For <code>Firewall.SubnetMappings</code>, this <code>Attachment</code> is part of the <code>FirewallStatus</code> sync states information. You define firewall subnets using <code>CreateFirewall</code> and <code>AssociateSubnets</code>.</p></li>
    /// <li>
    /// <p>For <code>VpcEndpointAssociation</code>, this <code>Attachment</code> is part of the <code>VpcEndpointAssociationStatus</code> sync states information. You define these subnets using <code>CreateVpcEndpointAssociation</code>.</p></li>
    /// </ul>
    pub fn attachment(mut self, input: crate::types::Attachment) -> Self {
        self.attachment = ::std::option::Option::Some(input);
        self
    }
    /// <p>The definition and status of the firewall endpoint for a single subnet. In each configured subnet, Network Firewall instantiates a firewall endpoint to handle network traffic.</p>
    /// <p>This data type is used for any firewall endpoint type:</p>
    /// <ul>
    /// <li>
    /// <p>For <code>Firewall.SubnetMappings</code>, this <code>Attachment</code> is part of the <code>FirewallStatus</code> sync states information. You define firewall subnets using <code>CreateFirewall</code> and <code>AssociateSubnets</code>.</p></li>
    /// <li>
    /// <p>For <code>VpcEndpointAssociation</code>, this <code>Attachment</code> is part of the <code>VpcEndpointAssociationStatus</code> sync states information. You define these subnets using <code>CreateVpcEndpointAssociation</code>.</p></li>
    /// </ul>
    pub fn set_attachment(mut self, input: ::std::option::Option<crate::types::Attachment>) -> Self {
        self.attachment = input;
        self
    }
    /// <p>The definition and status of the firewall endpoint for a single subnet. In each configured subnet, Network Firewall instantiates a firewall endpoint to handle network traffic.</p>
    /// <p>This data type is used for any firewall endpoint type:</p>
    /// <ul>
    /// <li>
    /// <p>For <code>Firewall.SubnetMappings</code>, this <code>Attachment</code> is part of the <code>FirewallStatus</code> sync states information. You define firewall subnets using <code>CreateFirewall</code> and <code>AssociateSubnets</code>.</p></li>
    /// <li>
    /// <p>For <code>VpcEndpointAssociation</code>, this <code>Attachment</code> is part of the <code>VpcEndpointAssociationStatus</code> sync states information. You define these subnets using <code>CreateVpcEndpointAssociation</code>.</p></li>
    /// </ul>
    pub fn get_attachment(&self) -> &::std::option::Option<crate::types::Attachment> {
        &self.attachment
    }
    /// Consumes the builder and constructs a [`AzSyncState`](crate::types::AzSyncState).
    pub fn build(self) -> crate::types::AzSyncState {
        crate::types::AzSyncState { attachment: self.attachment }
    }
}
