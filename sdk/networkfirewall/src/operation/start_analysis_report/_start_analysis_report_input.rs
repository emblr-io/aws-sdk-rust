// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartAnalysisReportInput {
    /// <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub firewall_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the firewall.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub firewall_arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of traffic that will be used to generate a report.</p>
    pub analysis_type: ::std::option::Option<crate::types::EnabledAnalysisType>,
}
impl StartAnalysisReportInput {
    /// <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn firewall_name(&self) -> ::std::option::Option<&str> {
        self.firewall_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the firewall.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn firewall_arn(&self) -> ::std::option::Option<&str> {
        self.firewall_arn.as_deref()
    }
    /// <p>The type of traffic that will be used to generate a report.</p>
    pub fn analysis_type(&self) -> ::std::option::Option<&crate::types::EnabledAnalysisType> {
        self.analysis_type.as_ref()
    }
}
impl StartAnalysisReportInput {
    /// Creates a new builder-style object to manufacture [`StartAnalysisReportInput`](crate::operation::start_analysis_report::StartAnalysisReportInput).
    pub fn builder() -> crate::operation::start_analysis_report::builders::StartAnalysisReportInputBuilder {
        crate::operation::start_analysis_report::builders::StartAnalysisReportInputBuilder::default()
    }
}

/// A builder for [`StartAnalysisReportInput`](crate::operation::start_analysis_report::StartAnalysisReportInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartAnalysisReportInputBuilder {
    pub(crate) firewall_name: ::std::option::Option<::std::string::String>,
    pub(crate) firewall_arn: ::std::option::Option<::std::string::String>,
    pub(crate) analysis_type: ::std::option::Option<crate::types::EnabledAnalysisType>,
}
impl StartAnalysisReportInputBuilder {
    /// <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn firewall_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.firewall_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn set_firewall_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.firewall_name = input;
        self
    }
    /// <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn get_firewall_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.firewall_name
    }
    /// <p>The Amazon Resource Name (ARN) of the firewall.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn firewall_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.firewall_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the firewall.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn set_firewall_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.firewall_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the firewall.</p>
    /// <p>You must specify the ARN or the name, and you can specify both.</p>
    pub fn get_firewall_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.firewall_arn
    }
    /// <p>The type of traffic that will be used to generate a report.</p>
    /// This field is required.
    pub fn analysis_type(mut self, input: crate::types::EnabledAnalysisType) -> Self {
        self.analysis_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of traffic that will be used to generate a report.</p>
    pub fn set_analysis_type(mut self, input: ::std::option::Option<crate::types::EnabledAnalysisType>) -> Self {
        self.analysis_type = input;
        self
    }
    /// <p>The type of traffic that will be used to generate a report.</p>
    pub fn get_analysis_type(&self) -> &::std::option::Option<crate::types::EnabledAnalysisType> {
        &self.analysis_type
    }
    /// Consumes the builder and constructs a [`StartAnalysisReportInput`](crate::operation::start_analysis_report::StartAnalysisReportInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::start_analysis_report::StartAnalysisReportInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::start_analysis_report::StartAnalysisReportInput {
            firewall_name: self.firewall_name,
            firewall_arn: self.firewall_arn,
            analysis_type: self.analysis_type,
        })
    }
}
