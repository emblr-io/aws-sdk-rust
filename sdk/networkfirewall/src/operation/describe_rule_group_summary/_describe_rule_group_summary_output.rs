// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeRuleGroupSummaryOutput {
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    pub rule_group_name: ::std::string::String,
    /// <p>A description of the rule group.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A complex type that contains rule information based on the rule group's configured summary settings. The content varies depending on the fields that you specified to extract in your SummaryConfiguration. When you haven't configured any summary settings, this returns an empty array. The response might include:</p>
    /// <ul>
    /// <li>
    /// <p>Rule identifiers</p></li>
    /// <li>
    /// <p>Rule descriptions</p></li>
    /// <li>
    /// <p>Any metadata fields that you specified in your SummaryConfiguration</p></li>
    /// </ul>
    pub summary: ::std::option::Option<crate::types::Summary>,
    _request_id: Option<String>,
}
impl DescribeRuleGroupSummaryOutput {
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    pub fn rule_group_name(&self) -> &str {
        use std::ops::Deref;
        self.rule_group_name.deref()
    }
    /// <p>A description of the rule group.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A complex type that contains rule information based on the rule group's configured summary settings. The content varies depending on the fields that you specified to extract in your SummaryConfiguration. When you haven't configured any summary settings, this returns an empty array. The response might include:</p>
    /// <ul>
    /// <li>
    /// <p>Rule identifiers</p></li>
    /// <li>
    /// <p>Rule descriptions</p></li>
    /// <li>
    /// <p>Any metadata fields that you specified in your SummaryConfiguration</p></li>
    /// </ul>
    pub fn summary(&self) -> ::std::option::Option<&crate::types::Summary> {
        self.summary.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeRuleGroupSummaryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeRuleGroupSummaryOutput {
    /// Creates a new builder-style object to manufacture [`DescribeRuleGroupSummaryOutput`](crate::operation::describe_rule_group_summary::DescribeRuleGroupSummaryOutput).
    pub fn builder() -> crate::operation::describe_rule_group_summary::builders::DescribeRuleGroupSummaryOutputBuilder {
        crate::operation::describe_rule_group_summary::builders::DescribeRuleGroupSummaryOutputBuilder::default()
    }
}

/// A builder for [`DescribeRuleGroupSummaryOutput`](crate::operation::describe_rule_group_summary::DescribeRuleGroupSummaryOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeRuleGroupSummaryOutputBuilder {
    pub(crate) rule_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) summary: ::std::option::Option<crate::types::Summary>,
    _request_id: Option<String>,
}
impl DescribeRuleGroupSummaryOutputBuilder {
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    /// This field is required.
    pub fn rule_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rule_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    pub fn set_rule_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rule_group_name = input;
        self
    }
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    pub fn get_rule_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.rule_group_name
    }
    /// <p>A description of the rule group.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the rule group.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the rule group.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A complex type that contains rule information based on the rule group's configured summary settings. The content varies depending on the fields that you specified to extract in your SummaryConfiguration. When you haven't configured any summary settings, this returns an empty array. The response might include:</p>
    /// <ul>
    /// <li>
    /// <p>Rule identifiers</p></li>
    /// <li>
    /// <p>Rule descriptions</p></li>
    /// <li>
    /// <p>Any metadata fields that you specified in your SummaryConfiguration</p></li>
    /// </ul>
    pub fn summary(mut self, input: crate::types::Summary) -> Self {
        self.summary = ::std::option::Option::Some(input);
        self
    }
    /// <p>A complex type that contains rule information based on the rule group's configured summary settings. The content varies depending on the fields that you specified to extract in your SummaryConfiguration. When you haven't configured any summary settings, this returns an empty array. The response might include:</p>
    /// <ul>
    /// <li>
    /// <p>Rule identifiers</p></li>
    /// <li>
    /// <p>Rule descriptions</p></li>
    /// <li>
    /// <p>Any metadata fields that you specified in your SummaryConfiguration</p></li>
    /// </ul>
    pub fn set_summary(mut self, input: ::std::option::Option<crate::types::Summary>) -> Self {
        self.summary = input;
        self
    }
    /// <p>A complex type that contains rule information based on the rule group's configured summary settings. The content varies depending on the fields that you specified to extract in your SummaryConfiguration. When you haven't configured any summary settings, this returns an empty array. The response might include:</p>
    /// <ul>
    /// <li>
    /// <p>Rule identifiers</p></li>
    /// <li>
    /// <p>Rule descriptions</p></li>
    /// <li>
    /// <p>Any metadata fields that you specified in your SummaryConfiguration</p></li>
    /// </ul>
    pub fn get_summary(&self) -> &::std::option::Option<crate::types::Summary> {
        &self.summary
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeRuleGroupSummaryOutput`](crate::operation::describe_rule_group_summary::DescribeRuleGroupSummaryOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`rule_group_name`](crate::operation::describe_rule_group_summary::builders::DescribeRuleGroupSummaryOutputBuilder::rule_group_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_rule_group_summary::DescribeRuleGroupSummaryOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_rule_group_summary::DescribeRuleGroupSummaryOutput {
            rule_group_name: self.rule_group_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "rule_group_name",
                    "rule_group_name was not specified but it is required when building DescribeRuleGroupSummaryOutput",
                )
            })?,
            description: self.description,
            summary: self.summary,
            _request_id: self._request_id,
        })
    }
}
