// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteNetworkFirewallTransitGatewayAttachmentOutput {
    /// <p>The ID of the transit gateway attachment that was deleted.</p>
    pub transit_gateway_attachment_id: ::std::string::String,
    /// <p>The current status of the transit gateway attachment deletion process.</p>
    /// <p>Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>CREATING</code> - The attachment is being created</p></li>
    /// <li>
    /// <p><code>DELETING</code> - The attachment is being deleted</p></li>
    /// <li>
    /// <p><code>DELETED</code> - The attachment has been deleted</p></li>
    /// <li>
    /// <p><code>FAILED</code> - The attachment creation has failed and cannot be recovered</p></li>
    /// <li>
    /// <p><code>ERROR</code> - The attachment is in an error state that might be recoverable</p></li>
    /// <li>
    /// <p><code>READY</code> - The attachment is active and processing traffic</p></li>
    /// <li>
    /// <p><code>PENDING_ACCEPTANCE</code> - The attachment is waiting to be accepted</p></li>
    /// <li>
    /// <p><code>REJECTING</code> - The attachment is in the process of being rejected</p></li>
    /// <li>
    /// <p><code>REJECTED</code> - The attachment has been rejected</p></li>
    /// </ul>
    pub transit_gateway_attachment_status: crate::types::TransitGatewayAttachmentStatus,
    _request_id: Option<String>,
}
impl DeleteNetworkFirewallTransitGatewayAttachmentOutput {
    /// <p>The ID of the transit gateway attachment that was deleted.</p>
    pub fn transit_gateway_attachment_id(&self) -> &str {
        use std::ops::Deref;
        self.transit_gateway_attachment_id.deref()
    }
    /// <p>The current status of the transit gateway attachment deletion process.</p>
    /// <p>Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>CREATING</code> - The attachment is being created</p></li>
    /// <li>
    /// <p><code>DELETING</code> - The attachment is being deleted</p></li>
    /// <li>
    /// <p><code>DELETED</code> - The attachment has been deleted</p></li>
    /// <li>
    /// <p><code>FAILED</code> - The attachment creation has failed and cannot be recovered</p></li>
    /// <li>
    /// <p><code>ERROR</code> - The attachment is in an error state that might be recoverable</p></li>
    /// <li>
    /// <p><code>READY</code> - The attachment is active and processing traffic</p></li>
    /// <li>
    /// <p><code>PENDING_ACCEPTANCE</code> - The attachment is waiting to be accepted</p></li>
    /// <li>
    /// <p><code>REJECTING</code> - The attachment is in the process of being rejected</p></li>
    /// <li>
    /// <p><code>REJECTED</code> - The attachment has been rejected</p></li>
    /// </ul>
    pub fn transit_gateway_attachment_status(&self) -> &crate::types::TransitGatewayAttachmentStatus {
        &self.transit_gateway_attachment_status
    }
}
impl ::aws_types::request_id::RequestId for DeleteNetworkFirewallTransitGatewayAttachmentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteNetworkFirewallTransitGatewayAttachmentOutput {
    /// Creates a new builder-style object to manufacture [`DeleteNetworkFirewallTransitGatewayAttachmentOutput`](crate::operation::delete_network_firewall_transit_gateway_attachment::DeleteNetworkFirewallTransitGatewayAttachmentOutput).
    pub fn builder(
    ) -> crate::operation::delete_network_firewall_transit_gateway_attachment::builders::DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder
    {
        crate::operation::delete_network_firewall_transit_gateway_attachment::builders::DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder::default()
    }
}

/// A builder for [`DeleteNetworkFirewallTransitGatewayAttachmentOutput`](crate::operation::delete_network_firewall_transit_gateway_attachment::DeleteNetworkFirewallTransitGatewayAttachmentOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder {
    pub(crate) transit_gateway_attachment_id: ::std::option::Option<::std::string::String>,
    pub(crate) transit_gateway_attachment_status: ::std::option::Option<crate::types::TransitGatewayAttachmentStatus>,
    _request_id: Option<String>,
}
impl DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder {
    /// <p>The ID of the transit gateway attachment that was deleted.</p>
    /// This field is required.
    pub fn transit_gateway_attachment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.transit_gateway_attachment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the transit gateway attachment that was deleted.</p>
    pub fn set_transit_gateway_attachment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.transit_gateway_attachment_id = input;
        self
    }
    /// <p>The ID of the transit gateway attachment that was deleted.</p>
    pub fn get_transit_gateway_attachment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.transit_gateway_attachment_id
    }
    /// <p>The current status of the transit gateway attachment deletion process.</p>
    /// <p>Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>CREATING</code> - The attachment is being created</p></li>
    /// <li>
    /// <p><code>DELETING</code> - The attachment is being deleted</p></li>
    /// <li>
    /// <p><code>DELETED</code> - The attachment has been deleted</p></li>
    /// <li>
    /// <p><code>FAILED</code> - The attachment creation has failed and cannot be recovered</p></li>
    /// <li>
    /// <p><code>ERROR</code> - The attachment is in an error state that might be recoverable</p></li>
    /// <li>
    /// <p><code>READY</code> - The attachment is active and processing traffic</p></li>
    /// <li>
    /// <p><code>PENDING_ACCEPTANCE</code> - The attachment is waiting to be accepted</p></li>
    /// <li>
    /// <p><code>REJECTING</code> - The attachment is in the process of being rejected</p></li>
    /// <li>
    /// <p><code>REJECTED</code> - The attachment has been rejected</p></li>
    /// </ul>
    /// This field is required.
    pub fn transit_gateway_attachment_status(mut self, input: crate::types::TransitGatewayAttachmentStatus) -> Self {
        self.transit_gateway_attachment_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the transit gateway attachment deletion process.</p>
    /// <p>Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>CREATING</code> - The attachment is being created</p></li>
    /// <li>
    /// <p><code>DELETING</code> - The attachment is being deleted</p></li>
    /// <li>
    /// <p><code>DELETED</code> - The attachment has been deleted</p></li>
    /// <li>
    /// <p><code>FAILED</code> - The attachment creation has failed and cannot be recovered</p></li>
    /// <li>
    /// <p><code>ERROR</code> - The attachment is in an error state that might be recoverable</p></li>
    /// <li>
    /// <p><code>READY</code> - The attachment is active and processing traffic</p></li>
    /// <li>
    /// <p><code>PENDING_ACCEPTANCE</code> - The attachment is waiting to be accepted</p></li>
    /// <li>
    /// <p><code>REJECTING</code> - The attachment is in the process of being rejected</p></li>
    /// <li>
    /// <p><code>REJECTED</code> - The attachment has been rejected</p></li>
    /// </ul>
    pub fn set_transit_gateway_attachment_status(mut self, input: ::std::option::Option<crate::types::TransitGatewayAttachmentStatus>) -> Self {
        self.transit_gateway_attachment_status = input;
        self
    }
    /// <p>The current status of the transit gateway attachment deletion process.</p>
    /// <p>Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>CREATING</code> - The attachment is being created</p></li>
    /// <li>
    /// <p><code>DELETING</code> - The attachment is being deleted</p></li>
    /// <li>
    /// <p><code>DELETED</code> - The attachment has been deleted</p></li>
    /// <li>
    /// <p><code>FAILED</code> - The attachment creation has failed and cannot be recovered</p></li>
    /// <li>
    /// <p><code>ERROR</code> - The attachment is in an error state that might be recoverable</p></li>
    /// <li>
    /// <p><code>READY</code> - The attachment is active and processing traffic</p></li>
    /// <li>
    /// <p><code>PENDING_ACCEPTANCE</code> - The attachment is waiting to be accepted</p></li>
    /// <li>
    /// <p><code>REJECTING</code> - The attachment is in the process of being rejected</p></li>
    /// <li>
    /// <p><code>REJECTED</code> - The attachment has been rejected</p></li>
    /// </ul>
    pub fn get_transit_gateway_attachment_status(&self) -> &::std::option::Option<crate::types::TransitGatewayAttachmentStatus> {
        &self.transit_gateway_attachment_status
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteNetworkFirewallTransitGatewayAttachmentOutput`](crate::operation::delete_network_firewall_transit_gateway_attachment::DeleteNetworkFirewallTransitGatewayAttachmentOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`transit_gateway_attachment_id`](crate::operation::delete_network_firewall_transit_gateway_attachment::builders::DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder::transit_gateway_attachment_id)
    /// - [`transit_gateway_attachment_status`](crate::operation::delete_network_firewall_transit_gateway_attachment::builders::DeleteNetworkFirewallTransitGatewayAttachmentOutputBuilder::transit_gateway_attachment_status)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_network_firewall_transit_gateway_attachment::DeleteNetworkFirewallTransitGatewayAttachmentOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_network_firewall_transit_gateway_attachment::DeleteNetworkFirewallTransitGatewayAttachmentOutput {
                transit_gateway_attachment_id: self.transit_gateway_attachment_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("transit_gateway_attachment_id", "transit_gateway_attachment_id was not specified but it is required when building DeleteNetworkFirewallTransitGatewayAttachmentOutput")
                    )?
                ,
                transit_gateway_attachment_status: self.transit_gateway_attachment_status
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("transit_gateway_attachment_status", "transit_gateway_attachment_status was not specified but it is required when building DeleteNetworkFirewallTransitGatewayAttachmentOutput")
                    )?
                ,
                _request_id: self._request_id,
            }
        )
    }
}
