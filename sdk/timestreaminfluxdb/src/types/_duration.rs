// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Duration for InfluxDB parameters in Timestream for InfluxDB.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Duration {
    /// <p>The type of duration for InfluxDB parameters.</p>
    pub duration_type: crate::types::DurationType,
    /// <p>The value of duration for InfluxDB parameters.</p>
    pub value: i64,
}
impl Duration {
    /// <p>The type of duration for InfluxDB parameters.</p>
    pub fn duration_type(&self) -> &crate::types::DurationType {
        &self.duration_type
    }
    /// <p>The value of duration for InfluxDB parameters.</p>
    pub fn value(&self) -> i64 {
        self.value
    }
}
impl Duration {
    /// Creates a new builder-style object to manufacture [`Duration`](crate::types::Duration).
    pub fn builder() -> crate::types::builders::DurationBuilder {
        crate::types::builders::DurationBuilder::default()
    }
}

/// A builder for [`Duration`](crate::types::Duration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DurationBuilder {
    pub(crate) duration_type: ::std::option::Option<crate::types::DurationType>,
    pub(crate) value: ::std::option::Option<i64>,
}
impl DurationBuilder {
    /// <p>The type of duration for InfluxDB parameters.</p>
    /// This field is required.
    pub fn duration_type(mut self, input: crate::types::DurationType) -> Self {
        self.duration_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of duration for InfluxDB parameters.</p>
    pub fn set_duration_type(mut self, input: ::std::option::Option<crate::types::DurationType>) -> Self {
        self.duration_type = input;
        self
    }
    /// <p>The type of duration for InfluxDB parameters.</p>
    pub fn get_duration_type(&self) -> &::std::option::Option<crate::types::DurationType> {
        &self.duration_type
    }
    /// <p>The value of duration for InfluxDB parameters.</p>
    /// This field is required.
    pub fn value(mut self, input: i64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value of duration for InfluxDB parameters.</p>
    pub fn set_value(mut self, input: ::std::option::Option<i64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The value of duration for InfluxDB parameters.</p>
    pub fn get_value(&self) -> &::std::option::Option<i64> {
        &self.value
    }
    /// Consumes the builder and constructs a [`Duration`](crate::types::Duration).
    /// This method will fail if any of the following fields are not set:
    /// - [`duration_type`](crate::types::builders::DurationBuilder::duration_type)
    /// - [`value`](crate::types::builders::DurationBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::Duration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::Duration {
            duration_type: self.duration_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "duration_type",
                    "duration_type was not specified but it is required when building Duration",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building Duration",
                )
            })?,
        })
    }
}
