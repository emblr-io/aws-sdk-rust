// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information on the identity that created the file.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum CreatedByInfo {
    /// <p>STS or IAM ARN representing the identity of API Caller. SDK users cannot populate this and this value is calculated automatically if <code>ConnectUserArn</code> is not provided.</p>
    AwsIdentityArn(::std::string::String),
    /// <p>An agent ARN representing a <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnect.html#amazonconnect-resources-for-iam-policies">connect user</a>.</p>
    ConnectUserArn(::std::string::String),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl CreatedByInfo {
    /// Tries to convert the enum instance into [`AwsIdentityArn`](crate::types::CreatedByInfo::AwsIdentityArn), extracting the inner [`String`](::std::string::String).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_aws_identity_arn(&self) -> ::std::result::Result<&::std::string::String, &Self> {
        if let CreatedByInfo::AwsIdentityArn(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`AwsIdentityArn`](crate::types::CreatedByInfo::AwsIdentityArn).
    pub fn is_aws_identity_arn(&self) -> bool {
        self.as_aws_identity_arn().is_ok()
    }
    /// Tries to convert the enum instance into [`ConnectUserArn`](crate::types::CreatedByInfo::ConnectUserArn), extracting the inner [`String`](::std::string::String).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_connect_user_arn(&self) -> ::std::result::Result<&::std::string::String, &Self> {
        if let CreatedByInfo::ConnectUserArn(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`ConnectUserArn`](crate::types::CreatedByInfo::ConnectUserArn).
    pub fn is_connect_user_arn(&self) -> bool {
        self.as_connect_user_arn().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
