// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the additional recipients of outbound email.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutboundAdditionalRecipients {
    /// <p>Information about the <b>additional</b> CC email address recipients. Email recipients are limited to 50 total addresses: 1 required recipient in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SendOutboundEmail.html#API_SendOutboundEmail_RequestBody">DestinationEmailAddress</a> field and up to 49 recipients in the 'CcEmailAddresses' field.</p>
    pub cc_email_addresses: ::std::option::Option<::std::vec::Vec<crate::types::EmailAddressInfo>>,
}
impl OutboundAdditionalRecipients {
    /// <p>Information about the <b>additional</b> CC email address recipients. Email recipients are limited to 50 total addresses: 1 required recipient in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SendOutboundEmail.html#API_SendOutboundEmail_RequestBody">DestinationEmailAddress</a> field and up to 49 recipients in the 'CcEmailAddresses' field.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.cc_email_addresses.is_none()`.
    pub fn cc_email_addresses(&self) -> &[crate::types::EmailAddressInfo] {
        self.cc_email_addresses.as_deref().unwrap_or_default()
    }
}
impl OutboundAdditionalRecipients {
    /// Creates a new builder-style object to manufacture [`OutboundAdditionalRecipients`](crate::types::OutboundAdditionalRecipients).
    pub fn builder() -> crate::types::builders::OutboundAdditionalRecipientsBuilder {
        crate::types::builders::OutboundAdditionalRecipientsBuilder::default()
    }
}

/// A builder for [`OutboundAdditionalRecipients`](crate::types::OutboundAdditionalRecipients).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OutboundAdditionalRecipientsBuilder {
    pub(crate) cc_email_addresses: ::std::option::Option<::std::vec::Vec<crate::types::EmailAddressInfo>>,
}
impl OutboundAdditionalRecipientsBuilder {
    /// Appends an item to `cc_email_addresses`.
    ///
    /// To override the contents of this collection use [`set_cc_email_addresses`](Self::set_cc_email_addresses).
    ///
    /// <p>Information about the <b>additional</b> CC email address recipients. Email recipients are limited to 50 total addresses: 1 required recipient in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SendOutboundEmail.html#API_SendOutboundEmail_RequestBody">DestinationEmailAddress</a> field and up to 49 recipients in the 'CcEmailAddresses' field.</p>
    pub fn cc_email_addresses(mut self, input: crate::types::EmailAddressInfo) -> Self {
        let mut v = self.cc_email_addresses.unwrap_or_default();
        v.push(input);
        self.cc_email_addresses = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the <b>additional</b> CC email address recipients. Email recipients are limited to 50 total addresses: 1 required recipient in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SendOutboundEmail.html#API_SendOutboundEmail_RequestBody">DestinationEmailAddress</a> field and up to 49 recipients in the 'CcEmailAddresses' field.</p>
    pub fn set_cc_email_addresses(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::EmailAddressInfo>>) -> Self {
        self.cc_email_addresses = input;
        self
    }
    /// <p>Information about the <b>additional</b> CC email address recipients. Email recipients are limited to 50 total addresses: 1 required recipient in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SendOutboundEmail.html#API_SendOutboundEmail_RequestBody">DestinationEmailAddress</a> field and up to 49 recipients in the 'CcEmailAddresses' field.</p>
    pub fn get_cc_email_addresses(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::EmailAddressInfo>> {
        &self.cc_email_addresses
    }
    /// Consumes the builder and constructs a [`OutboundAdditionalRecipients`](crate::types::OutboundAdditionalRecipients).
    pub fn build(self) -> crate::types::OutboundAdditionalRecipients {
        crate::types::OutboundAdditionalRecipients {
            cc_email_addresses: self.cc_email_addresses,
        }
    }
}
