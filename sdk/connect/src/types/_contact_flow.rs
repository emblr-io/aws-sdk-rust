// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a flow.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContactFlow {
    /// <p>The Amazon Resource Name (ARN) of the flow.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the flow.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the flow.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub r#type: ::std::option::Option<crate::types::ContactFlowType>,
    /// <p>The type of flow.</p>
    pub state: ::std::option::Option<crate::types::ContactFlowState>,
    /// <p>The status of the flow.</p>
    pub status: ::std::option::Option<crate::types::ContactFlowStatus>,
    /// <p>The description of the flow.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The JSON string that represents the content of the flow. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example flow in Amazon Connect Flow language</a>.</p>
    /// <p>Length Constraints: Minimum length of 1. Maximum length of 256000.</p>
    pub content: ::std::option::Option<::std::string::String>,
    /// <p>The tags used to organize, track, or control access for this resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.</p>
    pub tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>Indicates the checksum value of the flow content.</p>
    pub flow_content_sha256: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the flow version.</p>
    pub version: ::std::option::Option<i64>,
    /// <p>The description of the flow version.</p>
    pub version_description: ::std::option::Option<::std::string::String>,
    /// <p>The time at which the flow was last modified.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The region in which the flow was last modified</p>
    pub last_modified_region: ::std::option::Option<::std::string::String>,
}
impl ContactFlow {
    /// <p>The Amazon Resource Name (ARN) of the flow.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The identifier of the flow.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the flow.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::ContactFlowType> {
        self.r#type.as_ref()
    }
    /// <p>The type of flow.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::ContactFlowState> {
        self.state.as_ref()
    }
    /// <p>The status of the flow.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ContactFlowStatus> {
        self.status.as_ref()
    }
    /// <p>The description of the flow.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The JSON string that represents the content of the flow. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example flow in Amazon Connect Flow language</a>.</p>
    /// <p>Length Constraints: Minimum length of 1. Maximum length of 256000.</p>
    pub fn content(&self) -> ::std::option::Option<&str> {
        self.content.as_deref()
    }
    /// <p>The tags used to organize, track, or control access for this resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.</p>
    pub fn tags(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.tags.as_ref()
    }
    /// <p>Indicates the checksum value of the flow content.</p>
    pub fn flow_content_sha256(&self) -> ::std::option::Option<&str> {
        self.flow_content_sha256.as_deref()
    }
    /// <p>The identifier of the flow version.</p>
    pub fn version(&self) -> ::std::option::Option<i64> {
        self.version
    }
    /// <p>The description of the flow version.</p>
    pub fn version_description(&self) -> ::std::option::Option<&str> {
        self.version_description.as_deref()
    }
    /// <p>The time at which the flow was last modified.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The region in which the flow was last modified</p>
    pub fn last_modified_region(&self) -> ::std::option::Option<&str> {
        self.last_modified_region.as_deref()
    }
}
impl ContactFlow {
    /// Creates a new builder-style object to manufacture [`ContactFlow`](crate::types::ContactFlow).
    pub fn builder() -> crate::types::builders::ContactFlowBuilder {
        crate::types::builders::ContactFlowBuilder::default()
    }
}

/// A builder for [`ContactFlow`](crate::types::ContactFlow).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ContactFlowBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) r#type: ::std::option::Option<crate::types::ContactFlowType>,
    pub(crate) state: ::std::option::Option<crate::types::ContactFlowState>,
    pub(crate) status: ::std::option::Option<crate::types::ContactFlowStatus>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) content: ::std::option::Option<::std::string::String>,
    pub(crate) tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) flow_content_sha256: ::std::option::Option<::std::string::String>,
    pub(crate) version: ::std::option::Option<i64>,
    pub(crate) version_description: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_region: ::std::option::Option<::std::string::String>,
}
impl ContactFlowBuilder {
    /// <p>The Amazon Resource Name (ARN) of the flow.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The identifier of the flow.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the flow.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of the flow.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the flow.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the flow.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the flow.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn r#type(mut self, input: crate::types::ContactFlowType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ContactFlowType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ContactFlowType> {
        &self.r#type
    }
    /// <p>The type of flow.</p>
    pub fn state(mut self, input: crate::types::ContactFlowState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of flow.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::ContactFlowState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The type of flow.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::ContactFlowState> {
        &self.state
    }
    /// <p>The status of the flow.</p>
    pub fn status(mut self, input: crate::types::ContactFlowStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the flow.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ContactFlowStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the flow.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ContactFlowStatus> {
        &self.status
    }
    /// <p>The description of the flow.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the flow.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the flow.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The JSON string that represents the content of the flow. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example flow in Amazon Connect Flow language</a>.</p>
    /// <p>Length Constraints: Minimum length of 1. Maximum length of 256000.</p>
    pub fn content(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The JSON string that represents the content of the flow. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example flow in Amazon Connect Flow language</a>.</p>
    /// <p>Length Constraints: Minimum length of 1. Maximum length of 256000.</p>
    pub fn set_content(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content = input;
        self
    }
    /// <p>The JSON string that represents the content of the flow. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example flow in Amazon Connect Flow language</a>.</p>
    /// <p>Length Constraints: Minimum length of 1. Maximum length of 256000.</p>
    pub fn get_content(&self) -> &::std::option::Option<::std::string::String> {
        &self.content
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The tags used to organize, track, or control access for this resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.</p>
    pub fn tags(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The tags used to organize, track, or control access for this resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>The tags used to organize, track, or control access for this resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.tags
    }
    /// <p>Indicates the checksum value of the flow content.</p>
    pub fn flow_content_sha256(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_content_sha256 = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the checksum value of the flow content.</p>
    pub fn set_flow_content_sha256(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_content_sha256 = input;
        self
    }
    /// <p>Indicates the checksum value of the flow content.</p>
    pub fn get_flow_content_sha256(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_content_sha256
    }
    /// <p>The identifier of the flow version.</p>
    pub fn version(mut self, input: i64) -> Self {
        self.version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The identifier of the flow version.</p>
    pub fn set_version(mut self, input: ::std::option::Option<i64>) -> Self {
        self.version = input;
        self
    }
    /// <p>The identifier of the flow version.</p>
    pub fn get_version(&self) -> &::std::option::Option<i64> {
        &self.version
    }
    /// <p>The description of the flow version.</p>
    pub fn version_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the flow version.</p>
    pub fn set_version_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_description = input;
        self
    }
    /// <p>The description of the flow version.</p>
    pub fn get_version_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_description
    }
    /// <p>The time at which the flow was last modified.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the flow was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The time at which the flow was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The region in which the flow was last modified</p>
    pub fn last_modified_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_modified_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The region in which the flow was last modified</p>
    pub fn set_last_modified_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_modified_region = input;
        self
    }
    /// <p>The region in which the flow was last modified</p>
    pub fn get_last_modified_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_modified_region
    }
    /// Consumes the builder and constructs a [`ContactFlow`](crate::types::ContactFlow).
    pub fn build(self) -> crate::types::ContactFlow {
        crate::types::ContactFlow {
            arn: self.arn,
            id: self.id,
            name: self.name,
            r#type: self.r#type,
            state: self.state,
            status: self.status,
            description: self.description,
            content: self.content,
            tags: self.tags,
            flow_content_sha256: self.flow_content_sha256,
            version: self.version,
            version_description: self.version_description,
            last_modified_time: self.last_modified_time,
            last_modified_region: self.last_modified_region,
        }
    }
}
