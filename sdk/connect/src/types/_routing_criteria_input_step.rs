// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Step defines the list of agents to be routed or route based on the agent requirements such as ProficiencyLevel, Name, or Value.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RoutingCriteriaInputStep {
    /// <p>An object to specify the expiration of a routing step.</p>
    pub expiry: ::std::option::Option<crate::types::RoutingCriteriaInputStepExpiry>,
    /// <p>A tagged union to specify expression for a routing step.</p>
    pub expression: ::std::option::Option<crate::types::Expression>,
}
impl RoutingCriteriaInputStep {
    /// <p>An object to specify the expiration of a routing step.</p>
    pub fn expiry(&self) -> ::std::option::Option<&crate::types::RoutingCriteriaInputStepExpiry> {
        self.expiry.as_ref()
    }
    /// <p>A tagged union to specify expression for a routing step.</p>
    pub fn expression(&self) -> ::std::option::Option<&crate::types::Expression> {
        self.expression.as_ref()
    }
}
impl RoutingCriteriaInputStep {
    /// Creates a new builder-style object to manufacture [`RoutingCriteriaInputStep`](crate::types::RoutingCriteriaInputStep).
    pub fn builder() -> crate::types::builders::RoutingCriteriaInputStepBuilder {
        crate::types::builders::RoutingCriteriaInputStepBuilder::default()
    }
}

/// A builder for [`RoutingCriteriaInputStep`](crate::types::RoutingCriteriaInputStep).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RoutingCriteriaInputStepBuilder {
    pub(crate) expiry: ::std::option::Option<crate::types::RoutingCriteriaInputStepExpiry>,
    pub(crate) expression: ::std::option::Option<crate::types::Expression>,
}
impl RoutingCriteriaInputStepBuilder {
    /// <p>An object to specify the expiration of a routing step.</p>
    pub fn expiry(mut self, input: crate::types::RoutingCriteriaInputStepExpiry) -> Self {
        self.expiry = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object to specify the expiration of a routing step.</p>
    pub fn set_expiry(mut self, input: ::std::option::Option<crate::types::RoutingCriteriaInputStepExpiry>) -> Self {
        self.expiry = input;
        self
    }
    /// <p>An object to specify the expiration of a routing step.</p>
    pub fn get_expiry(&self) -> &::std::option::Option<crate::types::RoutingCriteriaInputStepExpiry> {
        &self.expiry
    }
    /// <p>A tagged union to specify expression for a routing step.</p>
    pub fn expression(mut self, input: crate::types::Expression) -> Self {
        self.expression = ::std::option::Option::Some(input);
        self
    }
    /// <p>A tagged union to specify expression for a routing step.</p>
    pub fn set_expression(mut self, input: ::std::option::Option<crate::types::Expression>) -> Self {
        self.expression = input;
        self
    }
    /// <p>A tagged union to specify expression for a routing step.</p>
    pub fn get_expression(&self) -> &::std::option::Option<crate::types::Expression> {
        &self.expression
    }
    /// Consumes the builder and constructs a [`RoutingCriteriaInputStep`](crate::types::RoutingCriteriaInputStep).
    pub fn build(self) -> crate::types::RoutingCriteriaInputStep {
        crate::types::RoutingCriteriaInputStep {
            expiry: self.expiry,
            expression: self.expression,
        }
    }
}
