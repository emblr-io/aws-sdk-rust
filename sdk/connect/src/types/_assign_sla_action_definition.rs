// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The AssignSla action definition.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssignSlaActionDefinition {
    /// <p>Type of SLA assignment.</p>
    pub sla_assignment_type: crate::types::SlaAssignmentType,
    /// <p>The SLA configuration for Case SLA Assignment.</p>
    pub case_sla_configuration: ::std::option::Option<crate::types::CaseSlaConfiguration>,
}
impl AssignSlaActionDefinition {
    /// <p>Type of SLA assignment.</p>
    pub fn sla_assignment_type(&self) -> &crate::types::SlaAssignmentType {
        &self.sla_assignment_type
    }
    /// <p>The SLA configuration for Case SLA Assignment.</p>
    pub fn case_sla_configuration(&self) -> ::std::option::Option<&crate::types::CaseSlaConfiguration> {
        self.case_sla_configuration.as_ref()
    }
}
impl AssignSlaActionDefinition {
    /// Creates a new builder-style object to manufacture [`AssignSlaActionDefinition`](crate::types::AssignSlaActionDefinition).
    pub fn builder() -> crate::types::builders::AssignSlaActionDefinitionBuilder {
        crate::types::builders::AssignSlaActionDefinitionBuilder::default()
    }
}

/// A builder for [`AssignSlaActionDefinition`](crate::types::AssignSlaActionDefinition).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssignSlaActionDefinitionBuilder {
    pub(crate) sla_assignment_type: ::std::option::Option<crate::types::SlaAssignmentType>,
    pub(crate) case_sla_configuration: ::std::option::Option<crate::types::CaseSlaConfiguration>,
}
impl AssignSlaActionDefinitionBuilder {
    /// <p>Type of SLA assignment.</p>
    /// This field is required.
    pub fn sla_assignment_type(mut self, input: crate::types::SlaAssignmentType) -> Self {
        self.sla_assignment_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Type of SLA assignment.</p>
    pub fn set_sla_assignment_type(mut self, input: ::std::option::Option<crate::types::SlaAssignmentType>) -> Self {
        self.sla_assignment_type = input;
        self
    }
    /// <p>Type of SLA assignment.</p>
    pub fn get_sla_assignment_type(&self) -> &::std::option::Option<crate::types::SlaAssignmentType> {
        &self.sla_assignment_type
    }
    /// <p>The SLA configuration for Case SLA Assignment.</p>
    pub fn case_sla_configuration(mut self, input: crate::types::CaseSlaConfiguration) -> Self {
        self.case_sla_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The SLA configuration for Case SLA Assignment.</p>
    pub fn set_case_sla_configuration(mut self, input: ::std::option::Option<crate::types::CaseSlaConfiguration>) -> Self {
        self.case_sla_configuration = input;
        self
    }
    /// <p>The SLA configuration for Case SLA Assignment.</p>
    pub fn get_case_sla_configuration(&self) -> &::std::option::Option<crate::types::CaseSlaConfiguration> {
        &self.case_sla_configuration
    }
    /// Consumes the builder and constructs a [`AssignSlaActionDefinition`](crate::types::AssignSlaActionDefinition).
    /// This method will fail if any of the following fields are not set:
    /// - [`sla_assignment_type`](crate::types::builders::AssignSlaActionDefinitionBuilder::sla_assignment_type)
    pub fn build(self) -> ::std::result::Result<crate::types::AssignSlaActionDefinition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssignSlaActionDefinition {
            sla_assignment_type: self.sla_assignment_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "sla_assignment_type",
                    "sla_assignment_type was not specified but it is required when building AssignSlaActionDefinition",
                )
            })?,
            case_sla_configuration: self.case_sla_configuration,
        })
    }
}
