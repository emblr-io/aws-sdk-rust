// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the quality of the Customer's media connection</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomerQualityMetrics {
    /// <p>Information about the audio quality of the Customer</p>
    pub audio: ::std::option::Option<crate::types::AudioQualityMetricsInfo>,
}
impl CustomerQualityMetrics {
    /// <p>Information about the audio quality of the Customer</p>
    pub fn audio(&self) -> ::std::option::Option<&crate::types::AudioQualityMetricsInfo> {
        self.audio.as_ref()
    }
}
impl CustomerQualityMetrics {
    /// Creates a new builder-style object to manufacture [`CustomerQualityMetrics`](crate::types::CustomerQualityMetrics).
    pub fn builder() -> crate::types::builders::CustomerQualityMetricsBuilder {
        crate::types::builders::CustomerQualityMetricsBuilder::default()
    }
}

/// A builder for [`CustomerQualityMetrics`](crate::types::CustomerQualityMetrics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomerQualityMetricsBuilder {
    pub(crate) audio: ::std::option::Option<crate::types::AudioQualityMetricsInfo>,
}
impl CustomerQualityMetricsBuilder {
    /// <p>Information about the audio quality of the Customer</p>
    pub fn audio(mut self, input: crate::types::AudioQualityMetricsInfo) -> Self {
        self.audio = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the audio quality of the Customer</p>
    pub fn set_audio(mut self, input: ::std::option::Option<crate::types::AudioQualityMetricsInfo>) -> Self {
        self.audio = input;
        self
    }
    /// <p>Information about the audio quality of the Customer</p>
    pub fn get_audio(&self) -> &::std::option::Option<crate::types::AudioQualityMetricsInfo> {
        &self.audio
    }
    /// Consumes the builder and constructs a [`CustomerQualityMetrics`](crate::types::CustomerQualityMetrics).
    pub fn build(self) -> crate::types::CustomerQualityMetrics {
        crate::types::CustomerQualityMetrics { audio: self.audio }
    }
}
