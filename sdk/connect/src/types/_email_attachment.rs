// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the email attachment files.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EmailAttachment {
    /// <p>A case-sensitive name of the attached file being uploaded.</p>
    pub file_name: ::std::string::String,
    /// <p>The pre-signed URLs for the S3 bucket where the email attachment is stored.</p>
    pub s3_url: ::std::string::String,
}
impl EmailAttachment {
    /// <p>A case-sensitive name of the attached file being uploaded.</p>
    pub fn file_name(&self) -> &str {
        use std::ops::Deref;
        self.file_name.deref()
    }
    /// <p>The pre-signed URLs for the S3 bucket where the email attachment is stored.</p>
    pub fn s3_url(&self) -> &str {
        use std::ops::Deref;
        self.s3_url.deref()
    }
}
impl EmailAttachment {
    /// Creates a new builder-style object to manufacture [`EmailAttachment`](crate::types::EmailAttachment).
    pub fn builder() -> crate::types::builders::EmailAttachmentBuilder {
        crate::types::builders::EmailAttachmentBuilder::default()
    }
}

/// A builder for [`EmailAttachment`](crate::types::EmailAttachment).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EmailAttachmentBuilder {
    pub(crate) file_name: ::std::option::Option<::std::string::String>,
    pub(crate) s3_url: ::std::option::Option<::std::string::String>,
}
impl EmailAttachmentBuilder {
    /// <p>A case-sensitive name of the attached file being uploaded.</p>
    /// This field is required.
    pub fn file_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A case-sensitive name of the attached file being uploaded.</p>
    pub fn set_file_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_name = input;
        self
    }
    /// <p>A case-sensitive name of the attached file being uploaded.</p>
    pub fn get_file_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_name
    }
    /// <p>The pre-signed URLs for the S3 bucket where the email attachment is stored.</p>
    /// This field is required.
    pub fn s3_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pre-signed URLs for the S3 bucket where the email attachment is stored.</p>
    pub fn set_s3_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_url = input;
        self
    }
    /// <p>The pre-signed URLs for the S3 bucket where the email attachment is stored.</p>
    pub fn get_s3_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_url
    }
    /// Consumes the builder and constructs a [`EmailAttachment`](crate::types::EmailAttachment).
    /// This method will fail if any of the following fields are not set:
    /// - [`file_name`](crate::types::builders::EmailAttachmentBuilder::file_name)
    /// - [`s3_url`](crate::types::builders::EmailAttachmentBuilder::s3_url)
    pub fn build(self) -> ::std::result::Result<crate::types::EmailAttachment, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EmailAttachment {
            file_name: self.file_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "file_name",
                    "file_name was not specified but it is required when building EmailAttachment",
                )
            })?,
            s3_url: self.s3_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "s3_url",
                    "s3_url was not specified but it is required when building EmailAttachment",
                )
            })?,
        })
    }
}
