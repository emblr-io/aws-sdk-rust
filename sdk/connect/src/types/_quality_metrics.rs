// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the quality of the participant's media connection.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QualityMetrics {
    /// <p>Information about the quality of Agent media connection.</p>
    pub agent: ::std::option::Option<crate::types::AgentQualityMetrics>,
    /// <p>Information about the quality of Customer media connection.</p>
    pub customer: ::std::option::Option<crate::types::CustomerQualityMetrics>,
}
impl QualityMetrics {
    /// <p>Information about the quality of Agent media connection.</p>
    pub fn agent(&self) -> ::std::option::Option<&crate::types::AgentQualityMetrics> {
        self.agent.as_ref()
    }
    /// <p>Information about the quality of Customer media connection.</p>
    pub fn customer(&self) -> ::std::option::Option<&crate::types::CustomerQualityMetrics> {
        self.customer.as_ref()
    }
}
impl QualityMetrics {
    /// Creates a new builder-style object to manufacture [`QualityMetrics`](crate::types::QualityMetrics).
    pub fn builder() -> crate::types::builders::QualityMetricsBuilder {
        crate::types::builders::QualityMetricsBuilder::default()
    }
}

/// A builder for [`QualityMetrics`](crate::types::QualityMetrics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct QualityMetricsBuilder {
    pub(crate) agent: ::std::option::Option<crate::types::AgentQualityMetrics>,
    pub(crate) customer: ::std::option::Option<crate::types::CustomerQualityMetrics>,
}
impl QualityMetricsBuilder {
    /// <p>Information about the quality of Agent media connection.</p>
    pub fn agent(mut self, input: crate::types::AgentQualityMetrics) -> Self {
        self.agent = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the quality of Agent media connection.</p>
    pub fn set_agent(mut self, input: ::std::option::Option<crate::types::AgentQualityMetrics>) -> Self {
        self.agent = input;
        self
    }
    /// <p>Information about the quality of Agent media connection.</p>
    pub fn get_agent(&self) -> &::std::option::Option<crate::types::AgentQualityMetrics> {
        &self.agent
    }
    /// <p>Information about the quality of Customer media connection.</p>
    pub fn customer(mut self, input: crate::types::CustomerQualityMetrics) -> Self {
        self.customer = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the quality of Customer media connection.</p>
    pub fn set_customer(mut self, input: ::std::option::Option<crate::types::CustomerQualityMetrics>) -> Self {
        self.customer = input;
        self
    }
    /// <p>Information about the quality of Customer media connection.</p>
    pub fn get_customer(&self) -> &::std::option::Option<crate::types::CustomerQualityMetrics> {
        &self.customer
    }
    /// Consumes the builder and constructs a [`QualityMetrics`](crate::types::QualityMetrics).
    pub fn build(self) -> crate::types::QualityMetrics {
        crate::types::QualityMetrics {
            agent: self.agent,
            customer: self.customer,
        }
    }
}
