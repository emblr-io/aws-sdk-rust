// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateAuthenticationProfileInput {
    /// <p>A unique identifier for the authentication profile.</p>
    pub authentication_profile_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The name for the authentication profile.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The description for the authentication profile.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A list of IP address range strings that are allowed to access the instance. For more information on how to configure IP addresses, see<a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub allowed_ips: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>A list of IP address range strings that are blocked from accessing the instance. For more information on how to configure IP addresses, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac">Configure IP-based access control</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub blocked_ips: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The short lived session duration configuration for users logged in to Amazon Connect, in minutes. This value determines the maximum possible time before an agent is authenticated. For more information, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub periodic_session_duration: ::std::option::Option<i32>,
}
impl UpdateAuthenticationProfileInput {
    /// <p>A unique identifier for the authentication profile.</p>
    pub fn authentication_profile_id(&self) -> ::std::option::Option<&str> {
        self.authentication_profile_id.as_deref()
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The name for the authentication profile.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description for the authentication profile.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A list of IP address range strings that are allowed to access the instance. For more information on how to configure IP addresses, see<a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.allowed_ips.is_none()`.
    pub fn allowed_ips(&self) -> &[::std::string::String] {
        self.allowed_ips.as_deref().unwrap_or_default()
    }
    /// <p>A list of IP address range strings that are blocked from accessing the instance. For more information on how to configure IP addresses, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac">Configure IP-based access control</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.blocked_ips.is_none()`.
    pub fn blocked_ips(&self) -> &[::std::string::String] {
        self.blocked_ips.as_deref().unwrap_or_default()
    }
    /// <p>The short lived session duration configuration for users logged in to Amazon Connect, in minutes. This value determines the maximum possible time before an agent is authenticated. For more information, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn periodic_session_duration(&self) -> ::std::option::Option<i32> {
        self.periodic_session_duration
    }
}
impl UpdateAuthenticationProfileInput {
    /// Creates a new builder-style object to manufacture [`UpdateAuthenticationProfileInput`](crate::operation::update_authentication_profile::UpdateAuthenticationProfileInput).
    pub fn builder() -> crate::operation::update_authentication_profile::builders::UpdateAuthenticationProfileInputBuilder {
        crate::operation::update_authentication_profile::builders::UpdateAuthenticationProfileInputBuilder::default()
    }
}

/// A builder for [`UpdateAuthenticationProfileInput`](crate::operation::update_authentication_profile::UpdateAuthenticationProfileInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateAuthenticationProfileInputBuilder {
    pub(crate) authentication_profile_id: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) allowed_ips: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) blocked_ips: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) periodic_session_duration: ::std::option::Option<i32>,
}
impl UpdateAuthenticationProfileInputBuilder {
    /// <p>A unique identifier for the authentication profile.</p>
    /// This field is required.
    pub fn authentication_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authentication_profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the authentication profile.</p>
    pub fn set_authentication_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authentication_profile_id = input;
        self
    }
    /// <p>A unique identifier for the authentication profile.</p>
    pub fn get_authentication_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.authentication_profile_id
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The name for the authentication profile.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name for the authentication profile.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name for the authentication profile.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description for the authentication profile.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description for the authentication profile.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description for the authentication profile.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Appends an item to `allowed_ips`.
    ///
    /// To override the contents of this collection use [`set_allowed_ips`](Self::set_allowed_ips).
    ///
    /// <p>A list of IP address range strings that are allowed to access the instance. For more information on how to configure IP addresses, see<a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn allowed_ips(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.allowed_ips.unwrap_or_default();
        v.push(input.into());
        self.allowed_ips = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of IP address range strings that are allowed to access the instance. For more information on how to configure IP addresses, see<a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn set_allowed_ips(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.allowed_ips = input;
        self
    }
    /// <p>A list of IP address range strings that are allowed to access the instance. For more information on how to configure IP addresses, see<a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn get_allowed_ips(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.allowed_ips
    }
    /// Appends an item to `blocked_ips`.
    ///
    /// To override the contents of this collection use [`set_blocked_ips`](Self::set_blocked_ips).
    ///
    /// <p>A list of IP address range strings that are blocked from accessing the instance. For more information on how to configure IP addresses, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac">Configure IP-based access control</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn blocked_ips(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.blocked_ips.unwrap_or_default();
        v.push(input.into());
        self.blocked_ips = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of IP address range strings that are blocked from accessing the instance. For more information on how to configure IP addresses, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac">Configure IP-based access control</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn set_blocked_ips(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.blocked_ips = input;
        self
    }
    /// <p>A list of IP address range strings that are blocked from accessing the instance. For more information on how to configure IP addresses, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac">Configure IP-based access control</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn get_blocked_ips(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.blocked_ips
    }
    /// <p>The short lived session duration configuration for users logged in to Amazon Connect, in minutes. This value determines the maximum possible time before an agent is authenticated. For more information, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn periodic_session_duration(mut self, input: i32) -> Self {
        self.periodic_session_duration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The short lived session duration configuration for users logged in to Amazon Connect, in minutes. This value determines the maximum possible time before an agent is authenticated. For more information, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn set_periodic_session_duration(mut self, input: ::std::option::Option<i32>) -> Self {
        self.periodic_session_duration = input;
        self
    }
    /// <p>The short lived session duration configuration for users logged in to Amazon Connect, in minutes. This value determines the maximum possible time before an agent is authenticated. For more information, For more information on how to configure IP addresses, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts">Configure session timeouts</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn get_periodic_session_duration(&self) -> &::std::option::Option<i32> {
        &self.periodic_session_duration
    }
    /// Consumes the builder and constructs a [`UpdateAuthenticationProfileInput`](crate::operation::update_authentication_profile::UpdateAuthenticationProfileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_authentication_profile::UpdateAuthenticationProfileInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_authentication_profile::UpdateAuthenticationProfileInput {
            authentication_profile_id: self.authentication_profile_id,
            instance_id: self.instance_id,
            name: self.name,
            description: self.description,
            allowed_ips: self.allowed_ips,
            blocked_ips: self.blocked_ips,
            periodic_session_duration: self.periodic_session_duration,
        })
    }
}
