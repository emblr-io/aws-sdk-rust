// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateParticipantAuthenticationInput {
    /// <p>The <code>state</code> query parameter that was provided by Cognito in the <code>redirectUri</code>. This will also match the <code>state</code> parameter provided in the <code>AuthenticationUrl</code> from the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html">GetAuthenticationUrl</a> response.</p>
    pub state: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The <code>code</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub code: ::std::option::Option<::std::string::String>,
    /// <p>The <code>error</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub error: ::std::option::Option<::std::string::String>,
    /// <p>The <code>error_description</code> parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub error_description: ::std::option::Option<::std::string::String>,
}
impl UpdateParticipantAuthenticationInput {
    /// <p>The <code>state</code> query parameter that was provided by Cognito in the <code>redirectUri</code>. This will also match the <code>state</code> parameter provided in the <code>AuthenticationUrl</code> from the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html">GetAuthenticationUrl</a> response.</p>
    pub fn state(&self) -> ::std::option::Option<&str> {
        self.state.as_deref()
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The <code>code</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn code(&self) -> ::std::option::Option<&str> {
        self.code.as_deref()
    }
    /// <p>The <code>error</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn error(&self) -> ::std::option::Option<&str> {
        self.error.as_deref()
    }
    /// <p>The <code>error_description</code> parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn error_description(&self) -> ::std::option::Option<&str> {
        self.error_description.as_deref()
    }
}
impl ::std::fmt::Debug for UpdateParticipantAuthenticationInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateParticipantAuthenticationInput");
        formatter.field("state", &self.state);
        formatter.field("instance_id", &self.instance_id);
        formatter.field("code", &"*** Sensitive Data Redacted ***");
        formatter.field("error", &"*** Sensitive Data Redacted ***");
        formatter.field("error_description", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl UpdateParticipantAuthenticationInput {
    /// Creates a new builder-style object to manufacture [`UpdateParticipantAuthenticationInput`](crate::operation::update_participant_authentication::UpdateParticipantAuthenticationInput).
    pub fn builder() -> crate::operation::update_participant_authentication::builders::UpdateParticipantAuthenticationInputBuilder {
        crate::operation::update_participant_authentication::builders::UpdateParticipantAuthenticationInputBuilder::default()
    }
}

/// A builder for [`UpdateParticipantAuthenticationInput`](crate::operation::update_participant_authentication::UpdateParticipantAuthenticationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UpdateParticipantAuthenticationInputBuilder {
    pub(crate) state: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) code: ::std::option::Option<::std::string::String>,
    pub(crate) error: ::std::option::Option<::std::string::String>,
    pub(crate) error_description: ::std::option::Option<::std::string::String>,
}
impl UpdateParticipantAuthenticationInputBuilder {
    /// <p>The <code>state</code> query parameter that was provided by Cognito in the <code>redirectUri</code>. This will also match the <code>state</code> parameter provided in the <code>AuthenticationUrl</code> from the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html">GetAuthenticationUrl</a> response.</p>
    /// This field is required.
    pub fn state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>state</code> query parameter that was provided by Cognito in the <code>redirectUri</code>. This will also match the <code>state</code> parameter provided in the <code>AuthenticationUrl</code> from the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html">GetAuthenticationUrl</a> response.</p>
    pub fn set_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state = input;
        self
    }
    /// <p>The <code>state</code> query parameter that was provided by Cognito in the <code>redirectUri</code>. This will also match the <code>state</code> parameter provided in the <code>AuthenticationUrl</code> from the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html">GetAuthenticationUrl</a> response.</p>
    pub fn get_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.state
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The <code>code</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>code</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn set_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code = input;
        self
    }
    /// <p>The <code>code</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn get_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.code
    }
    /// <p>The <code>error</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn error(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>error</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn set_error(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error = input;
        self
    }
    /// <p>The <code>error</code> query parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn get_error(&self) -> &::std::option::Option<::std::string::String> {
        &self.error
    }
    /// <p>The <code>error_description</code> parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn error_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>error_description</code> parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn set_error_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_description = input;
        self
    }
    /// <p>The <code>error_description</code> parameter provided by Cognito in the <code>redirectUri</code>.</p>
    pub fn get_error_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_description
    }
    /// Consumes the builder and constructs a [`UpdateParticipantAuthenticationInput`](crate::operation::update_participant_authentication::UpdateParticipantAuthenticationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_participant_authentication::UpdateParticipantAuthenticationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_participant_authentication::UpdateParticipantAuthenticationInput {
                state: self.state,
                instance_id: self.instance_id,
                code: self.code,
                error: self.error,
                error_description: self.error_description,
            },
        )
    }
}
impl ::std::fmt::Debug for UpdateParticipantAuthenticationInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateParticipantAuthenticationInputBuilder");
        formatter.field("state", &self.state);
        formatter.field("instance_id", &self.instance_id);
        formatter.field("code", &"*** Sensitive Data Redacted ***");
        formatter.field("error", &"*** Sensitive Data Redacted ***");
        formatter.field("error_description", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
