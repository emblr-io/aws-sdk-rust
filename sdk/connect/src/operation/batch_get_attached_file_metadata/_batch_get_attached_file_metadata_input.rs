// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetAttachedFileMetadataInput {
    /// <p>The unique identifiers of the attached file resource.</p>
    pub file_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The unique identifier of the Connect instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub associated_resource_arn: ::std::option::Option<::std::string::String>,
}
impl BatchGetAttachedFileMetadataInput {
    /// <p>The unique identifiers of the attached file resource.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.file_ids.is_none()`.
    pub fn file_ids(&self) -> &[::std::string::String] {
        self.file_ids.as_deref().unwrap_or_default()
    }
    /// <p>The unique identifier of the Connect instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn associated_resource_arn(&self) -> ::std::option::Option<&str> {
        self.associated_resource_arn.as_deref()
    }
}
impl BatchGetAttachedFileMetadataInput {
    /// Creates a new builder-style object to manufacture [`BatchGetAttachedFileMetadataInput`](crate::operation::batch_get_attached_file_metadata::BatchGetAttachedFileMetadataInput).
    pub fn builder() -> crate::operation::batch_get_attached_file_metadata::builders::BatchGetAttachedFileMetadataInputBuilder {
        crate::operation::batch_get_attached_file_metadata::builders::BatchGetAttachedFileMetadataInputBuilder::default()
    }
}

/// A builder for [`BatchGetAttachedFileMetadataInput`](crate::operation::batch_get_attached_file_metadata::BatchGetAttachedFileMetadataInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchGetAttachedFileMetadataInputBuilder {
    pub(crate) file_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) associated_resource_arn: ::std::option::Option<::std::string::String>,
}
impl BatchGetAttachedFileMetadataInputBuilder {
    /// Appends an item to `file_ids`.
    ///
    /// To override the contents of this collection use [`set_file_ids`](Self::set_file_ids).
    ///
    /// <p>The unique identifiers of the attached file resource.</p>
    pub fn file_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.file_ids.unwrap_or_default();
        v.push(input.into());
        self.file_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The unique identifiers of the attached file resource.</p>
    pub fn set_file_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.file_ids = input;
        self
    }
    /// <p>The unique identifiers of the attached file resource.</p>
    pub fn get_file_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.file_ids
    }
    /// <p>The unique identifier of the Connect instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Connect instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The unique identifier of the Connect instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    /// This field is required.
    pub fn associated_resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.associated_resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn set_associated_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.associated_resource_arn = input;
        self
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn get_associated_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.associated_resource_arn
    }
    /// Consumes the builder and constructs a [`BatchGetAttachedFileMetadataInput`](crate::operation::batch_get_attached_file_metadata::BatchGetAttachedFileMetadataInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_get_attached_file_metadata::BatchGetAttachedFileMetadataInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::batch_get_attached_file_metadata::BatchGetAttachedFileMetadataInput {
            file_ids: self.file_ids,
            instance_id: self.instance_id,
            associated_resource_arn: self.associated_resource_arn,
        })
    }
}
