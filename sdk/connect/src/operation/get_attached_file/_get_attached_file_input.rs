// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request to GetAttachedFile API.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAttachedFileInput {
    /// <p>The unique identifier of the Amazon Connect instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the attached file resource.</p>
    pub file_id: ::std::option::Option<::std::string::String>,
    /// <p>Optional override for the expiry of the pre-signed S3 URL in seconds. The default value is 300.</p>
    pub url_expiry_in_seconds: ::std::option::Option<i32>,
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub associated_resource_arn: ::std::option::Option<::std::string::String>,
}
impl GetAttachedFileInput {
    /// <p>The unique identifier of the Amazon Connect instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The unique identifier of the attached file resource.</p>
    pub fn file_id(&self) -> ::std::option::Option<&str> {
        self.file_id.as_deref()
    }
    /// <p>Optional override for the expiry of the pre-signed S3 URL in seconds. The default value is 300.</p>
    pub fn url_expiry_in_seconds(&self) -> ::std::option::Option<i32> {
        self.url_expiry_in_seconds
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn associated_resource_arn(&self) -> ::std::option::Option<&str> {
        self.associated_resource_arn.as_deref()
    }
}
impl GetAttachedFileInput {
    /// Creates a new builder-style object to manufacture [`GetAttachedFileInput`](crate::operation::get_attached_file::GetAttachedFileInput).
    pub fn builder() -> crate::operation::get_attached_file::builders::GetAttachedFileInputBuilder {
        crate::operation::get_attached_file::builders::GetAttachedFileInputBuilder::default()
    }
}

/// A builder for [`GetAttachedFileInput`](crate::operation::get_attached_file::GetAttachedFileInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetAttachedFileInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) file_id: ::std::option::Option<::std::string::String>,
    pub(crate) url_expiry_in_seconds: ::std::option::Option<i32>,
    pub(crate) associated_resource_arn: ::std::option::Option<::std::string::String>,
}
impl GetAttachedFileInputBuilder {
    /// <p>The unique identifier of the Amazon Connect instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Amazon Connect instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The unique identifier of the Amazon Connect instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The unique identifier of the attached file resource.</p>
    /// This field is required.
    pub fn file_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the attached file resource.</p>
    pub fn set_file_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_id = input;
        self
    }
    /// <p>The unique identifier of the attached file resource.</p>
    pub fn get_file_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_id
    }
    /// <p>Optional override for the expiry of the pre-signed S3 URL in seconds. The default value is 300.</p>
    pub fn url_expiry_in_seconds(mut self, input: i32) -> Self {
        self.url_expiry_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>Optional override for the expiry of the pre-signed S3 URL in seconds. The default value is 300.</p>
    pub fn set_url_expiry_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.url_expiry_in_seconds = input;
        self
    }
    /// <p>Optional override for the expiry of the pre-signed S3 URL in seconds. The default value is 300.</p>
    pub fn get_url_expiry_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.url_expiry_in_seconds
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    /// This field is required.
    pub fn associated_resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.associated_resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn set_associated_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.associated_resource_arn = input;
        self
    }
    /// <p>The resource to which the attached file is (being) uploaded to. The supported resources are <a href="https://docs.aws.amazon.com/connect/latest/adminguide/cases.html">Cases</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html">Email</a>.</p><note>
    /// <p>This value must be a valid ARN.</p>
    /// </note>
    pub fn get_associated_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.associated_resource_arn
    }
    /// Consumes the builder and constructs a [`GetAttachedFileInput`](crate::operation::get_attached_file::GetAttachedFileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_attached_file::GetAttachedFileInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_attached_file::GetAttachedFileInput {
            instance_id: self.instance_id,
            file_id: self.file_id,
            url_expiry_in_seconds: self.url_expiry_in_seconds,
            associated_resource_arn: self.associated_resource_arn,
        })
    }
}
