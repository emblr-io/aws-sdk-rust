// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteMlInputChannelDataInput {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to delete.</p>
    pub ml_input_channel_arn: ::std::option::Option<::std::string::String>,
    /// <p>The membership ID of the membership that contains the ML input channel you want to delete.</p>
    pub membership_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteMlInputChannelDataInput {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to delete.</p>
    pub fn ml_input_channel_arn(&self) -> ::std::option::Option<&str> {
        self.ml_input_channel_arn.as_deref()
    }
    /// <p>The membership ID of the membership that contains the ML input channel you want to delete.</p>
    pub fn membership_identifier(&self) -> ::std::option::Option<&str> {
        self.membership_identifier.as_deref()
    }
}
impl DeleteMlInputChannelDataInput {
    /// Creates a new builder-style object to manufacture [`DeleteMlInputChannelDataInput`](crate::operation::delete_ml_input_channel_data::DeleteMlInputChannelDataInput).
    pub fn builder() -> crate::operation::delete_ml_input_channel_data::builders::DeleteMlInputChannelDataInputBuilder {
        crate::operation::delete_ml_input_channel_data::builders::DeleteMlInputChannelDataInputBuilder::default()
    }
}

/// A builder for [`DeleteMlInputChannelDataInput`](crate::operation::delete_ml_input_channel_data::DeleteMlInputChannelDataInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteMlInputChannelDataInputBuilder {
    pub(crate) ml_input_channel_arn: ::std::option::Option<::std::string::String>,
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteMlInputChannelDataInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to delete.</p>
    /// This field is required.
    pub fn ml_input_channel_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ml_input_channel_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to delete.</p>
    pub fn set_ml_input_channel_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ml_input_channel_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to delete.</p>
    pub fn get_ml_input_channel_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ml_input_channel_arn
    }
    /// <p>The membership ID of the membership that contains the ML input channel you want to delete.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The membership ID of the membership that contains the ML input channel you want to delete.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The membership ID of the membership that contains the ML input channel you want to delete.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// Consumes the builder and constructs a [`DeleteMlInputChannelDataInput`](crate::operation::delete_ml_input_channel_data::DeleteMlInputChannelDataInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_ml_input_channel_data::DeleteMlInputChannelDataInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_ml_input_channel_data::DeleteMlInputChannelDataInput {
            ml_input_channel_arn: self.ml_input_channel_arn,
            membership_identifier: self.membership_identifier,
        })
    }
}
