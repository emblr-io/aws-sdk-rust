// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCollaborationConfiguredModelAlgorithmAssociationsOutput {
    /// <p>The token value used to access the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The configured model algorithm associations that belong to this collaboration.</p>
    pub collaboration_configured_model_algorithm_associations: ::std::vec::Vec<crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary>,
    _request_id: Option<String>,
}
impl ListCollaborationConfiguredModelAlgorithmAssociationsOutput {
    /// <p>The token value used to access the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The configured model algorithm associations that belong to this collaboration.</p>
    pub fn collaboration_configured_model_algorithm_associations(&self) -> &[crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary] {
        use std::ops::Deref;
        self.collaboration_configured_model_algorithm_associations.deref()
    }
}
impl ::aws_types::request_id::RequestId for ListCollaborationConfiguredModelAlgorithmAssociationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCollaborationConfiguredModelAlgorithmAssociationsOutput {
    /// Creates a new builder-style object to manufacture [`ListCollaborationConfiguredModelAlgorithmAssociationsOutput`](crate::operation::list_collaboration_configured_model_algorithm_associations::ListCollaborationConfiguredModelAlgorithmAssociationsOutput).
    pub fn builder() -> crate::operation::list_collaboration_configured_model_algorithm_associations::builders::ListCollaborationConfiguredModelAlgorithmAssociationsOutputBuilder{
        crate::operation::list_collaboration_configured_model_algorithm_associations::builders::ListCollaborationConfiguredModelAlgorithmAssociationsOutputBuilder::default()
    }
}

/// A builder for [`ListCollaborationConfiguredModelAlgorithmAssociationsOutput`](crate::operation::list_collaboration_configured_model_algorithm_associations::ListCollaborationConfiguredModelAlgorithmAssociationsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListCollaborationConfiguredModelAlgorithmAssociationsOutputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) collaboration_configured_model_algorithm_associations:
        ::std::option::Option<::std::vec::Vec<crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary>>,
    _request_id: Option<String>,
}
impl ListCollaborationConfiguredModelAlgorithmAssociationsOutputBuilder {
    /// <p>The token value used to access the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token value used to access the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token value used to access the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Appends an item to `collaboration_configured_model_algorithm_associations`.
    ///
    /// To override the contents of this collection use [`set_collaboration_configured_model_algorithm_associations`](Self::set_collaboration_configured_model_algorithm_associations).
    ///
    /// <p>The configured model algorithm associations that belong to this collaboration.</p>
    pub fn collaboration_configured_model_algorithm_associations(
        mut self,
        input: crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary,
    ) -> Self {
        let mut v = self.collaboration_configured_model_algorithm_associations.unwrap_or_default();
        v.push(input);
        self.collaboration_configured_model_algorithm_associations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The configured model algorithm associations that belong to this collaboration.</p>
    pub fn set_collaboration_configured_model_algorithm_associations(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary>>,
    ) -> Self {
        self.collaboration_configured_model_algorithm_associations = input;
        self
    }
    /// <p>The configured model algorithm associations that belong to this collaboration.</p>
    pub fn get_collaboration_configured_model_algorithm_associations(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::CollaborationConfiguredModelAlgorithmAssociationSummary>> {
        &self.collaboration_configured_model_algorithm_associations
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCollaborationConfiguredModelAlgorithmAssociationsOutput`](crate::operation::list_collaboration_configured_model_algorithm_associations::ListCollaborationConfiguredModelAlgorithmAssociationsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`collaboration_configured_model_algorithm_associations`](crate::operation::list_collaboration_configured_model_algorithm_associations::builders::ListCollaborationConfiguredModelAlgorithmAssociationsOutputBuilder::collaboration_configured_model_algorithm_associations)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_collaboration_configured_model_algorithm_associations::ListCollaborationConfiguredModelAlgorithmAssociationsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_collaboration_configured_model_algorithm_associations::ListCollaborationConfiguredModelAlgorithmAssociationsOutput {
                next_token: self.next_token
                ,
                collaboration_configured_model_algorithm_associations: self.collaboration_configured_model_algorithm_associations
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("collaboration_configured_model_algorithm_associations", "collaboration_configured_model_algorithm_associations was not specified but it is required when building ListCollaborationConfiguredModelAlgorithmAssociationsOutput")
                    )?
                ,
                _request_id: self._request_id,
            }
        )
    }
}
