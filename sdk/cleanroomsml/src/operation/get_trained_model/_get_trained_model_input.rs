// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTrainedModelInput {
    /// <p>The Amazon Resource Name (ARN) of the trained model that you are interested in.</p>
    pub trained_model_arn: ::std::option::Option<::std::string::String>,
    /// <p>The membership ID of the member that created the trained model that you are interested in.</p>
    pub membership_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The version identifier of the trained model to retrieve. If not specified, the operation returns information about the latest version of the trained model.</p>
    pub version_identifier: ::std::option::Option<::std::string::String>,
}
impl GetTrainedModelInput {
    /// <p>The Amazon Resource Name (ARN) of the trained model that you are interested in.</p>
    pub fn trained_model_arn(&self) -> ::std::option::Option<&str> {
        self.trained_model_arn.as_deref()
    }
    /// <p>The membership ID of the member that created the trained model that you are interested in.</p>
    pub fn membership_identifier(&self) -> ::std::option::Option<&str> {
        self.membership_identifier.as_deref()
    }
    /// <p>The version identifier of the trained model to retrieve. If not specified, the operation returns information about the latest version of the trained model.</p>
    pub fn version_identifier(&self) -> ::std::option::Option<&str> {
        self.version_identifier.as_deref()
    }
}
impl GetTrainedModelInput {
    /// Creates a new builder-style object to manufacture [`GetTrainedModelInput`](crate::operation::get_trained_model::GetTrainedModelInput).
    pub fn builder() -> crate::operation::get_trained_model::builders::GetTrainedModelInputBuilder {
        crate::operation::get_trained_model::builders::GetTrainedModelInputBuilder::default()
    }
}

/// A builder for [`GetTrainedModelInput`](crate::operation::get_trained_model::GetTrainedModelInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetTrainedModelInputBuilder {
    pub(crate) trained_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) version_identifier: ::std::option::Option<::std::string::String>,
}
impl GetTrainedModelInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the trained model that you are interested in.</p>
    /// This field is required.
    pub fn trained_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trained_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trained model that you are interested in.</p>
    pub fn set_trained_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trained_model_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trained model that you are interested in.</p>
    pub fn get_trained_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trained_model_arn
    }
    /// <p>The membership ID of the member that created the trained model that you are interested in.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The membership ID of the member that created the trained model that you are interested in.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The membership ID of the member that created the trained model that you are interested in.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>The version identifier of the trained model to retrieve. If not specified, the operation returns information about the latest version of the trained model.</p>
    pub fn version_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version identifier of the trained model to retrieve. If not specified, the operation returns information about the latest version of the trained model.</p>
    pub fn set_version_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_identifier = input;
        self
    }
    /// <p>The version identifier of the trained model to retrieve. If not specified, the operation returns information about the latest version of the trained model.</p>
    pub fn get_version_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_identifier
    }
    /// Consumes the builder and constructs a [`GetTrainedModelInput`](crate::operation::get_trained_model::GetTrainedModelInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_trained_model::GetTrainedModelInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_trained_model::GetTrainedModelInput {
            trained_model_arn: self.trained_model_arn,
            membership_identifier: self.membership_identifier,
            version_identifier: self.version_identifier,
        })
    }
}
