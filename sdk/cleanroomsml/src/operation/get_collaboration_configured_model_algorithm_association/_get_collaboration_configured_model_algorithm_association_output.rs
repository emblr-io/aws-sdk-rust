// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCollaborationConfiguredModelAlgorithmAssociationOutput {
    /// <p>The time at which the configured model algorithm association was created.</p>
    pub create_time: ::aws_smithy_types::DateTime,
    /// <p>The most recent time at which the configured model algorithm association was updated.</p>
    pub update_time: ::aws_smithy_types::DateTime,
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub configured_model_algorithm_association_arn: ::std::string::String,
    /// <p>The membership ID of the member that created the configured model algorithm association.</p>
    pub membership_identifier: ::std::string::String,
    /// <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    pub collaboration_identifier: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub configured_model_algorithm_arn: ::std::string::String,
    /// <p>The name of the configured model algorithm association.</p>
    pub name: ::std::string::String,
    /// <p>The description of the configured model algorithm association.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The account ID of the member that created the configured model algorithm association.</p>
    pub creator_account_id: ::std::string::String,
    /// <p>Information about the privacy configuration for a configured model algorithm association.</p>
    pub privacy_configuration: ::std::option::Option<crate::types::PrivacyConfiguration>,
    _request_id: Option<String>,
}
impl GetCollaborationConfiguredModelAlgorithmAssociationOutput {
    /// <p>The time at which the configured model algorithm association was created.</p>
    pub fn create_time(&self) -> &::aws_smithy_types::DateTime {
        &self.create_time
    }
    /// <p>The most recent time at which the configured model algorithm association was updated.</p>
    pub fn update_time(&self) -> &::aws_smithy_types::DateTime {
        &self.update_time
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn configured_model_algorithm_association_arn(&self) -> &str {
        use std::ops::Deref;
        self.configured_model_algorithm_association_arn.deref()
    }
    /// <p>The membership ID of the member that created the configured model algorithm association.</p>
    pub fn membership_identifier(&self) -> &str {
        use std::ops::Deref;
        self.membership_identifier.deref()
    }
    /// <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    pub fn collaboration_identifier(&self) -> &str {
        use std::ops::Deref;
        self.collaboration_identifier.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn configured_model_algorithm_arn(&self) -> &str {
        use std::ops::Deref;
        self.configured_model_algorithm_arn.deref()
    }
    /// <p>The name of the configured model algorithm association.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The description of the configured model algorithm association.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The account ID of the member that created the configured model algorithm association.</p>
    pub fn creator_account_id(&self) -> &str {
        use std::ops::Deref;
        self.creator_account_id.deref()
    }
    /// <p>Information about the privacy configuration for a configured model algorithm association.</p>
    pub fn privacy_configuration(&self) -> ::std::option::Option<&crate::types::PrivacyConfiguration> {
        self.privacy_configuration.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetCollaborationConfiguredModelAlgorithmAssociationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetCollaborationConfiguredModelAlgorithmAssociationOutput {
    /// Creates a new builder-style object to manufacture [`GetCollaborationConfiguredModelAlgorithmAssociationOutput`](crate::operation::get_collaboration_configured_model_algorithm_association::GetCollaborationConfiguredModelAlgorithmAssociationOutput).
    pub fn builder() -> crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder{
        crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::default()
    }
}

/// A builder for [`GetCollaborationConfiguredModelAlgorithmAssociationOutput`](crate::operation::get_collaboration_configured_model_algorithm_association::GetCollaborationConfiguredModelAlgorithmAssociationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder {
    pub(crate) create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) configured_model_algorithm_association_arn: ::std::option::Option<::std::string::String>,
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) collaboration_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) configured_model_algorithm_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) creator_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) privacy_configuration: ::std::option::Option<crate::types::PrivacyConfiguration>,
    _request_id: Option<String>,
}
impl GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder {
    /// <p>The time at which the configured model algorithm association was created.</p>
    /// This field is required.
    pub fn create_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.create_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the configured model algorithm association was created.</p>
    pub fn set_create_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.create_time = input;
        self
    }
    /// <p>The time at which the configured model algorithm association was created.</p>
    pub fn get_create_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.create_time
    }
    /// <p>The most recent time at which the configured model algorithm association was updated.</p>
    /// This field is required.
    pub fn update_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.update_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The most recent time at which the configured model algorithm association was updated.</p>
    pub fn set_update_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.update_time = input;
        self
    }
    /// <p>The most recent time at which the configured model algorithm association was updated.</p>
    pub fn get_update_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.update_time
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    /// This field is required.
    pub fn configured_model_algorithm_association_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configured_model_algorithm_association_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn set_configured_model_algorithm_association_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configured_model_algorithm_association_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn get_configured_model_algorithm_association_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.configured_model_algorithm_association_arn
    }
    /// <p>The membership ID of the member that created the configured model algorithm association.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The membership ID of the member that created the configured model algorithm association.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The membership ID of the member that created the configured model algorithm association.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    /// This field is required.
    pub fn collaboration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.collaboration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    pub fn set_collaboration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.collaboration_identifier = input;
        self
    }
    /// <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    pub fn get_collaboration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.collaboration_identifier
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    /// This field is required.
    pub fn configured_model_algorithm_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configured_model_algorithm_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn set_configured_model_algorithm_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configured_model_algorithm_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    pub fn get_configured_model_algorithm_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.configured_model_algorithm_arn
    }
    /// <p>The name of the configured model algorithm association.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the configured model algorithm association.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the configured model algorithm association.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the configured model algorithm association.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the configured model algorithm association.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the configured model algorithm association.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The account ID of the member that created the configured model algorithm association.</p>
    /// This field is required.
    pub fn creator_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.creator_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The account ID of the member that created the configured model algorithm association.</p>
    pub fn set_creator_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.creator_account_id = input;
        self
    }
    /// <p>The account ID of the member that created the configured model algorithm association.</p>
    pub fn get_creator_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.creator_account_id
    }
    /// <p>Information about the privacy configuration for a configured model algorithm association.</p>
    pub fn privacy_configuration(mut self, input: crate::types::PrivacyConfiguration) -> Self {
        self.privacy_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the privacy configuration for a configured model algorithm association.</p>
    pub fn set_privacy_configuration(mut self, input: ::std::option::Option<crate::types::PrivacyConfiguration>) -> Self {
        self.privacy_configuration = input;
        self
    }
    /// <p>Information about the privacy configuration for a configured model algorithm association.</p>
    pub fn get_privacy_configuration(&self) -> &::std::option::Option<crate::types::PrivacyConfiguration> {
        &self.privacy_configuration
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetCollaborationConfiguredModelAlgorithmAssociationOutput`](crate::operation::get_collaboration_configured_model_algorithm_association::GetCollaborationConfiguredModelAlgorithmAssociationOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`create_time`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::create_time)
    /// - [`update_time`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::update_time)
    /// - [`configured_model_algorithm_association_arn`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::configured_model_algorithm_association_arn)
    /// - [`membership_identifier`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::membership_identifier)
    /// - [`collaboration_identifier`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::collaboration_identifier)
    /// - [`configured_model_algorithm_arn`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::configured_model_algorithm_arn)
    /// - [`name`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::name)
    /// - [`creator_account_id`](crate::operation::get_collaboration_configured_model_algorithm_association::builders::GetCollaborationConfiguredModelAlgorithmAssociationOutputBuilder::creator_account_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_collaboration_configured_model_algorithm_association::GetCollaborationConfiguredModelAlgorithmAssociationOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_collaboration_configured_model_algorithm_association::GetCollaborationConfiguredModelAlgorithmAssociationOutput {
                create_time: self.create_time
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("create_time", "create_time was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                update_time: self.update_time
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("update_time", "update_time was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                configured_model_algorithm_association_arn: self.configured_model_algorithm_association_arn
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("configured_model_algorithm_association_arn", "configured_model_algorithm_association_arn was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                membership_identifier: self.membership_identifier
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("membership_identifier", "membership_identifier was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                collaboration_identifier: self.collaboration_identifier
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("collaboration_identifier", "collaboration_identifier was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                configured_model_algorithm_arn: self.configured_model_algorithm_arn
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("configured_model_algorithm_arn", "configured_model_algorithm_arn was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                name: self.name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("name", "name was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                description: self.description
                ,
                creator_account_id: self.creator_account_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("creator_account_id", "creator_account_id was not specified but it is required when building GetCollaborationConfiguredModelAlgorithmAssociationOutput")
                    )?
                ,
                privacy_configuration: self.privacy_configuration
                ,
                _request_id: self._request_id,
            }
        )
    }
}
