// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMlConfigurationOutput {
    /// <p>The membership ID of the member that owns the ML configuration you requested.</p>
    pub membership_identifier: ::std::string::String,
    /// <p>The Amazon S3 location where ML model output is stored.</p>
    pub default_output_location: ::std::option::Option<crate::types::MlOutputConfiguration>,
    /// <p>The time at which the ML configuration was created.</p>
    pub create_time: ::aws_smithy_types::DateTime,
    /// <p>The most recent time at which the ML configuration was updated.</p>
    pub update_time: ::aws_smithy_types::DateTime,
    _request_id: Option<String>,
}
impl GetMlConfigurationOutput {
    /// <p>The membership ID of the member that owns the ML configuration you requested.</p>
    pub fn membership_identifier(&self) -> &str {
        use std::ops::Deref;
        self.membership_identifier.deref()
    }
    /// <p>The Amazon S3 location where ML model output is stored.</p>
    pub fn default_output_location(&self) -> ::std::option::Option<&crate::types::MlOutputConfiguration> {
        self.default_output_location.as_ref()
    }
    /// <p>The time at which the ML configuration was created.</p>
    pub fn create_time(&self) -> &::aws_smithy_types::DateTime {
        &self.create_time
    }
    /// <p>The most recent time at which the ML configuration was updated.</p>
    pub fn update_time(&self) -> &::aws_smithy_types::DateTime {
        &self.update_time
    }
}
impl ::aws_types::request_id::RequestId for GetMlConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetMlConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`GetMlConfigurationOutput`](crate::operation::get_ml_configuration::GetMlConfigurationOutput).
    pub fn builder() -> crate::operation::get_ml_configuration::builders::GetMlConfigurationOutputBuilder {
        crate::operation::get_ml_configuration::builders::GetMlConfigurationOutputBuilder::default()
    }
}

/// A builder for [`GetMlConfigurationOutput`](crate::operation::get_ml_configuration::GetMlConfigurationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetMlConfigurationOutputBuilder {
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) default_output_location: ::std::option::Option<crate::types::MlOutputConfiguration>,
    pub(crate) create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetMlConfigurationOutputBuilder {
    /// <p>The membership ID of the member that owns the ML configuration you requested.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The membership ID of the member that owns the ML configuration you requested.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The membership ID of the member that owns the ML configuration you requested.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>The Amazon S3 location where ML model output is stored.</p>
    /// This field is required.
    pub fn default_output_location(mut self, input: crate::types::MlOutputConfiguration) -> Self {
        self.default_output_location = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon S3 location where ML model output is stored.</p>
    pub fn set_default_output_location(mut self, input: ::std::option::Option<crate::types::MlOutputConfiguration>) -> Self {
        self.default_output_location = input;
        self
    }
    /// <p>The Amazon S3 location where ML model output is stored.</p>
    pub fn get_default_output_location(&self) -> &::std::option::Option<crate::types::MlOutputConfiguration> {
        &self.default_output_location
    }
    /// <p>The time at which the ML configuration was created.</p>
    /// This field is required.
    pub fn create_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.create_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the ML configuration was created.</p>
    pub fn set_create_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.create_time = input;
        self
    }
    /// <p>The time at which the ML configuration was created.</p>
    pub fn get_create_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.create_time
    }
    /// <p>The most recent time at which the ML configuration was updated.</p>
    /// This field is required.
    pub fn update_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.update_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The most recent time at which the ML configuration was updated.</p>
    pub fn set_update_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.update_time = input;
        self
    }
    /// <p>The most recent time at which the ML configuration was updated.</p>
    pub fn get_update_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.update_time
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetMlConfigurationOutput`](crate::operation::get_ml_configuration::GetMlConfigurationOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`membership_identifier`](crate::operation::get_ml_configuration::builders::GetMlConfigurationOutputBuilder::membership_identifier)
    /// - [`create_time`](crate::operation::get_ml_configuration::builders::GetMlConfigurationOutputBuilder::create_time)
    /// - [`update_time`](crate::operation::get_ml_configuration::builders::GetMlConfigurationOutputBuilder::update_time)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_ml_configuration::GetMlConfigurationOutput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_ml_configuration::GetMlConfigurationOutput {
            membership_identifier: self.membership_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "membership_identifier",
                    "membership_identifier was not specified but it is required when building GetMlConfigurationOutput",
                )
            })?,
            default_output_location: self.default_output_location,
            create_time: self.create_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "create_time",
                    "create_time was not specified but it is required when building GetMlConfigurationOutput",
                )
            })?,
            update_time: self.update_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "update_time",
                    "update_time was not specified but it is required when building GetMlConfigurationOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
