// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCollaborationMlInputChannelsOutput {
    /// <p>The token value used to access the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The list of ML input channels that you wanted.</p>
    pub collaboration_ml_input_channels_list: ::std::vec::Vec<crate::types::CollaborationMlInputChannelSummary>,
    _request_id: Option<String>,
}
impl ListCollaborationMlInputChannelsOutput {
    /// <p>The token value used to access the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The list of ML input channels that you wanted.</p>
    pub fn collaboration_ml_input_channels_list(&self) -> &[crate::types::CollaborationMlInputChannelSummary] {
        use std::ops::Deref;
        self.collaboration_ml_input_channels_list.deref()
    }
}
impl ::aws_types::request_id::RequestId for ListCollaborationMlInputChannelsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCollaborationMlInputChannelsOutput {
    /// Creates a new builder-style object to manufacture [`ListCollaborationMlInputChannelsOutput`](crate::operation::list_collaboration_ml_input_channels::ListCollaborationMlInputChannelsOutput).
    pub fn builder() -> crate::operation::list_collaboration_ml_input_channels::builders::ListCollaborationMlInputChannelsOutputBuilder {
        crate::operation::list_collaboration_ml_input_channels::builders::ListCollaborationMlInputChannelsOutputBuilder::default()
    }
}

/// A builder for [`ListCollaborationMlInputChannelsOutput`](crate::operation::list_collaboration_ml_input_channels::ListCollaborationMlInputChannelsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListCollaborationMlInputChannelsOutputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) collaboration_ml_input_channels_list: ::std::option::Option<::std::vec::Vec<crate::types::CollaborationMlInputChannelSummary>>,
    _request_id: Option<String>,
}
impl ListCollaborationMlInputChannelsOutputBuilder {
    /// <p>The token value used to access the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token value used to access the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token value used to access the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Appends an item to `collaboration_ml_input_channels_list`.
    ///
    /// To override the contents of this collection use [`set_collaboration_ml_input_channels_list`](Self::set_collaboration_ml_input_channels_list).
    ///
    /// <p>The list of ML input channels that you wanted.</p>
    pub fn collaboration_ml_input_channels_list(mut self, input: crate::types::CollaborationMlInputChannelSummary) -> Self {
        let mut v = self.collaboration_ml_input_channels_list.unwrap_or_default();
        v.push(input);
        self.collaboration_ml_input_channels_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of ML input channels that you wanted.</p>
    pub fn set_collaboration_ml_input_channels_list(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::CollaborationMlInputChannelSummary>>,
    ) -> Self {
        self.collaboration_ml_input_channels_list = input;
        self
    }
    /// <p>The list of ML input channels that you wanted.</p>
    pub fn get_collaboration_ml_input_channels_list(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::CollaborationMlInputChannelSummary>> {
        &self.collaboration_ml_input_channels_list
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCollaborationMlInputChannelsOutput`](crate::operation::list_collaboration_ml_input_channels::ListCollaborationMlInputChannelsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`collaboration_ml_input_channels_list`](crate::operation::list_collaboration_ml_input_channels::builders::ListCollaborationMlInputChannelsOutputBuilder::collaboration_ml_input_channels_list)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_collaboration_ml_input_channels::ListCollaborationMlInputChannelsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_collaboration_ml_input_channels::ListCollaborationMlInputChannelsOutput {
                next_token: self.next_token
                ,
                collaboration_ml_input_channels_list: self.collaboration_ml_input_channels_list
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("collaboration_ml_input_channels_list", "collaboration_ml_input_channels_list was not specified but it is required when building ListCollaborationMlInputChannelsOutput")
                    )?
                ,
                _request_id: self._request_id,
            }
        )
    }
}
