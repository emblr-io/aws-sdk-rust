// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteTrainedModelOutputInput {
    /// <p>The Amazon Resource Name (ARN) of the trained model whose output you want to delete.</p>
    pub trained_model_arn: ::std::option::Option<::std::string::String>,
    /// <p>The membership ID of the member that is deleting the trained model output.</p>
    pub membership_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The version identifier of the trained model to delete. If not specified, the operation will delete the base version of the trained model. When specified, only the particular version will be deleted.</p>
    pub version_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteTrainedModelOutputInput {
    /// <p>The Amazon Resource Name (ARN) of the trained model whose output you want to delete.</p>
    pub fn trained_model_arn(&self) -> ::std::option::Option<&str> {
        self.trained_model_arn.as_deref()
    }
    /// <p>The membership ID of the member that is deleting the trained model output.</p>
    pub fn membership_identifier(&self) -> ::std::option::Option<&str> {
        self.membership_identifier.as_deref()
    }
    /// <p>The version identifier of the trained model to delete. If not specified, the operation will delete the base version of the trained model. When specified, only the particular version will be deleted.</p>
    pub fn version_identifier(&self) -> ::std::option::Option<&str> {
        self.version_identifier.as_deref()
    }
}
impl DeleteTrainedModelOutputInput {
    /// Creates a new builder-style object to manufacture [`DeleteTrainedModelOutputInput`](crate::operation::delete_trained_model_output::DeleteTrainedModelOutputInput).
    pub fn builder() -> crate::operation::delete_trained_model_output::builders::DeleteTrainedModelOutputInputBuilder {
        crate::operation::delete_trained_model_output::builders::DeleteTrainedModelOutputInputBuilder::default()
    }
}

/// A builder for [`DeleteTrainedModelOutputInput`](crate::operation::delete_trained_model_output::DeleteTrainedModelOutputInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteTrainedModelOutputInputBuilder {
    pub(crate) trained_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) version_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteTrainedModelOutputInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the trained model whose output you want to delete.</p>
    /// This field is required.
    pub fn trained_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trained_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trained model whose output you want to delete.</p>
    pub fn set_trained_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trained_model_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trained model whose output you want to delete.</p>
    pub fn get_trained_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trained_model_arn
    }
    /// <p>The membership ID of the member that is deleting the trained model output.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The membership ID of the member that is deleting the trained model output.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>The membership ID of the member that is deleting the trained model output.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>The version identifier of the trained model to delete. If not specified, the operation will delete the base version of the trained model. When specified, only the particular version will be deleted.</p>
    pub fn version_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version identifier of the trained model to delete. If not specified, the operation will delete the base version of the trained model. When specified, only the particular version will be deleted.</p>
    pub fn set_version_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_identifier = input;
        self
    }
    /// <p>The version identifier of the trained model to delete. If not specified, the operation will delete the base version of the trained model. When specified, only the particular version will be deleted.</p>
    pub fn get_version_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_identifier
    }
    /// Consumes the builder and constructs a [`DeleteTrainedModelOutputInput`](crate::operation::delete_trained_model_output::DeleteTrainedModelOutputInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_trained_model_output::DeleteTrainedModelOutputInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_trained_model_output::DeleteTrainedModelOutputInput {
            trained_model_arn: self.trained_model_arn,
            membership_identifier: self.membership_identifier,
            version_identifier: self.version_identifier,
        })
    }
}
