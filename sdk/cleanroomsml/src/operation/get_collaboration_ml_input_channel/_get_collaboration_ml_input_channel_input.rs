// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCollaborationMlInputChannelInput {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p>
    pub ml_input_channel_arn: ::std::option::Option<::std::string::String>,
    /// <p>The collaboration ID of the collaboration that contains the ML input channel that you want to get.</p>
    pub collaboration_identifier: ::std::option::Option<::std::string::String>,
}
impl GetCollaborationMlInputChannelInput {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p>
    pub fn ml_input_channel_arn(&self) -> ::std::option::Option<&str> {
        self.ml_input_channel_arn.as_deref()
    }
    /// <p>The collaboration ID of the collaboration that contains the ML input channel that you want to get.</p>
    pub fn collaboration_identifier(&self) -> ::std::option::Option<&str> {
        self.collaboration_identifier.as_deref()
    }
}
impl GetCollaborationMlInputChannelInput {
    /// Creates a new builder-style object to manufacture [`GetCollaborationMlInputChannelInput`](crate::operation::get_collaboration_ml_input_channel::GetCollaborationMlInputChannelInput).
    pub fn builder() -> crate::operation::get_collaboration_ml_input_channel::builders::GetCollaborationMlInputChannelInputBuilder {
        crate::operation::get_collaboration_ml_input_channel::builders::GetCollaborationMlInputChannelInputBuilder::default()
    }
}

/// A builder for [`GetCollaborationMlInputChannelInput`](crate::operation::get_collaboration_ml_input_channel::GetCollaborationMlInputChannelInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetCollaborationMlInputChannelInputBuilder {
    pub(crate) ml_input_channel_arn: ::std::option::Option<::std::string::String>,
    pub(crate) collaboration_identifier: ::std::option::Option<::std::string::String>,
}
impl GetCollaborationMlInputChannelInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p>
    /// This field is required.
    pub fn ml_input_channel_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ml_input_channel_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p>
    pub fn set_ml_input_channel_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ml_input_channel_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p>
    pub fn get_ml_input_channel_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ml_input_channel_arn
    }
    /// <p>The collaboration ID of the collaboration that contains the ML input channel that you want to get.</p>
    /// This field is required.
    pub fn collaboration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.collaboration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The collaboration ID of the collaboration that contains the ML input channel that you want to get.</p>
    pub fn set_collaboration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.collaboration_identifier = input;
        self
    }
    /// <p>The collaboration ID of the collaboration that contains the ML input channel that you want to get.</p>
    pub fn get_collaboration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.collaboration_identifier
    }
    /// Consumes the builder and constructs a [`GetCollaborationMlInputChannelInput`](crate::operation::get_collaboration_ml_input_channel::GetCollaborationMlInputChannelInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_collaboration_ml_input_channel::GetCollaborationMlInputChannelInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_collaboration_ml_input_channel::GetCollaborationMlInputChannelInput {
                ml_input_channel_arn: self.ml_input_channel_arn,
                collaboration_identifier: self.collaboration_identifier,
            },
        )
    }
}
