// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about how the trained model exports are configured.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrainedModelExportsConfigurationPolicy {
    /// <p>The maximum size of the data that can be exported.</p>
    pub max_size: ::std::option::Option<crate::types::TrainedModelExportsMaxSize>,
    /// <p>The files that are exported during the trained model export job.</p>
    pub files_to_export: ::std::vec::Vec<crate::types::TrainedModelExportFileType>,
}
impl TrainedModelExportsConfigurationPolicy {
    /// <p>The maximum size of the data that can be exported.</p>
    pub fn max_size(&self) -> ::std::option::Option<&crate::types::TrainedModelExportsMaxSize> {
        self.max_size.as_ref()
    }
    /// <p>The files that are exported during the trained model export job.</p>
    pub fn files_to_export(&self) -> &[crate::types::TrainedModelExportFileType] {
        use std::ops::Deref;
        self.files_to_export.deref()
    }
}
impl TrainedModelExportsConfigurationPolicy {
    /// Creates a new builder-style object to manufacture [`TrainedModelExportsConfigurationPolicy`](crate::types::TrainedModelExportsConfigurationPolicy).
    pub fn builder() -> crate::types::builders::TrainedModelExportsConfigurationPolicyBuilder {
        crate::types::builders::TrainedModelExportsConfigurationPolicyBuilder::default()
    }
}

/// A builder for [`TrainedModelExportsConfigurationPolicy`](crate::types::TrainedModelExportsConfigurationPolicy).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TrainedModelExportsConfigurationPolicyBuilder {
    pub(crate) max_size: ::std::option::Option<crate::types::TrainedModelExportsMaxSize>,
    pub(crate) files_to_export: ::std::option::Option<::std::vec::Vec<crate::types::TrainedModelExportFileType>>,
}
impl TrainedModelExportsConfigurationPolicyBuilder {
    /// <p>The maximum size of the data that can be exported.</p>
    /// This field is required.
    pub fn max_size(mut self, input: crate::types::TrainedModelExportsMaxSize) -> Self {
        self.max_size = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum size of the data that can be exported.</p>
    pub fn set_max_size(mut self, input: ::std::option::Option<crate::types::TrainedModelExportsMaxSize>) -> Self {
        self.max_size = input;
        self
    }
    /// <p>The maximum size of the data that can be exported.</p>
    pub fn get_max_size(&self) -> &::std::option::Option<crate::types::TrainedModelExportsMaxSize> {
        &self.max_size
    }
    /// Appends an item to `files_to_export`.
    ///
    /// To override the contents of this collection use [`set_files_to_export`](Self::set_files_to_export).
    ///
    /// <p>The files that are exported during the trained model export job.</p>
    pub fn files_to_export(mut self, input: crate::types::TrainedModelExportFileType) -> Self {
        let mut v = self.files_to_export.unwrap_or_default();
        v.push(input);
        self.files_to_export = ::std::option::Option::Some(v);
        self
    }
    /// <p>The files that are exported during the trained model export job.</p>
    pub fn set_files_to_export(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TrainedModelExportFileType>>) -> Self {
        self.files_to_export = input;
        self
    }
    /// <p>The files that are exported during the trained model export job.</p>
    pub fn get_files_to_export(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TrainedModelExportFileType>> {
        &self.files_to_export
    }
    /// Consumes the builder and constructs a [`TrainedModelExportsConfigurationPolicy`](crate::types::TrainedModelExportsConfigurationPolicy).
    /// This method will fail if any of the following fields are not set:
    /// - [`files_to_export`](crate::types::builders::TrainedModelExportsConfigurationPolicyBuilder::files_to_export)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::TrainedModelExportsConfigurationPolicy, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TrainedModelExportsConfigurationPolicy {
            max_size: self.max_size,
            files_to_export: self.files_to_export.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "files_to_export",
                    "files_to_export was not specified but it is required when building TrainedModelExportsConfigurationPolicy",
                )
            })?,
        })
    }
}
