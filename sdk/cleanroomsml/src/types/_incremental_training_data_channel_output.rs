// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an incremental training data channel that was used to create a trained model. This structure provides details about the base model and channel configuration used during incremental training.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IncrementalTrainingDataChannelOutput {
    /// <p>The name of the incremental training data channel that was used.</p>
    pub channel_name: ::std::string::String,
    /// <p>The version identifier of the trained model that was used for incremental training.</p>
    pub version_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The name of the base trained model that was used for incremental training.</p>
    pub model_name: ::std::string::String,
}
impl IncrementalTrainingDataChannelOutput {
    /// <p>The name of the incremental training data channel that was used.</p>
    pub fn channel_name(&self) -> &str {
        use std::ops::Deref;
        self.channel_name.deref()
    }
    /// <p>The version identifier of the trained model that was used for incremental training.</p>
    pub fn version_identifier(&self) -> ::std::option::Option<&str> {
        self.version_identifier.as_deref()
    }
    /// <p>The name of the base trained model that was used for incremental training.</p>
    pub fn model_name(&self) -> &str {
        use std::ops::Deref;
        self.model_name.deref()
    }
}
impl IncrementalTrainingDataChannelOutput {
    /// Creates a new builder-style object to manufacture [`IncrementalTrainingDataChannelOutput`](crate::types::IncrementalTrainingDataChannelOutput).
    pub fn builder() -> crate::types::builders::IncrementalTrainingDataChannelOutputBuilder {
        crate::types::builders::IncrementalTrainingDataChannelOutputBuilder::default()
    }
}

/// A builder for [`IncrementalTrainingDataChannelOutput`](crate::types::IncrementalTrainingDataChannelOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IncrementalTrainingDataChannelOutputBuilder {
    pub(crate) channel_name: ::std::option::Option<::std::string::String>,
    pub(crate) version_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) model_name: ::std::option::Option<::std::string::String>,
}
impl IncrementalTrainingDataChannelOutputBuilder {
    /// <p>The name of the incremental training data channel that was used.</p>
    /// This field is required.
    pub fn channel_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the incremental training data channel that was used.</p>
    pub fn set_channel_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_name = input;
        self
    }
    /// <p>The name of the incremental training data channel that was used.</p>
    pub fn get_channel_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_name
    }
    /// <p>The version identifier of the trained model that was used for incremental training.</p>
    pub fn version_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version identifier of the trained model that was used for incremental training.</p>
    pub fn set_version_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_identifier = input;
        self
    }
    /// <p>The version identifier of the trained model that was used for incremental training.</p>
    pub fn get_version_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_identifier
    }
    /// <p>The name of the base trained model that was used for incremental training.</p>
    /// This field is required.
    pub fn model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the base trained model that was used for incremental training.</p>
    pub fn set_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_name = input;
        self
    }
    /// <p>The name of the base trained model that was used for incremental training.</p>
    pub fn get_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_name
    }
    /// Consumes the builder and constructs a [`IncrementalTrainingDataChannelOutput`](crate::types::IncrementalTrainingDataChannelOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`channel_name`](crate::types::builders::IncrementalTrainingDataChannelOutputBuilder::channel_name)
    /// - [`model_name`](crate::types::builders::IncrementalTrainingDataChannelOutputBuilder::model_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IncrementalTrainingDataChannelOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IncrementalTrainingDataChannelOutput {
            channel_name: self.channel_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "channel_name",
                    "channel_name was not specified but it is required when building IncrementalTrainingDataChannelOutput",
                )
            })?,
            version_identifier: self.version_identifier,
            model_name: self.model_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "model_name",
                    "model_name was not specified but it is required when building IncrementalTrainingDataChannelOutput",
                )
            })?,
        })
    }
}
