// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the maximum output size for a trained model inference job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrainedModelInferenceMaxOutputSize {
    /// <p>The measurement unit to use.</p>
    pub unit: crate::types::TrainedModelInferenceMaxOutputSizeUnitType,
    /// <p>The maximum output size value.</p>
    pub value: f64,
}
impl TrainedModelInferenceMaxOutputSize {
    /// <p>The measurement unit to use.</p>
    pub fn unit(&self) -> &crate::types::TrainedModelInferenceMaxOutputSizeUnitType {
        &self.unit
    }
    /// <p>The maximum output size value.</p>
    pub fn value(&self) -> f64 {
        self.value
    }
}
impl TrainedModelInferenceMaxOutputSize {
    /// Creates a new builder-style object to manufacture [`TrainedModelInferenceMaxOutputSize`](crate::types::TrainedModelInferenceMaxOutputSize).
    pub fn builder() -> crate::types::builders::TrainedModelInferenceMaxOutputSizeBuilder {
        crate::types::builders::TrainedModelInferenceMaxOutputSizeBuilder::default()
    }
}

/// A builder for [`TrainedModelInferenceMaxOutputSize`](crate::types::TrainedModelInferenceMaxOutputSize).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TrainedModelInferenceMaxOutputSizeBuilder {
    pub(crate) unit: ::std::option::Option<crate::types::TrainedModelInferenceMaxOutputSizeUnitType>,
    pub(crate) value: ::std::option::Option<f64>,
}
impl TrainedModelInferenceMaxOutputSizeBuilder {
    /// <p>The measurement unit to use.</p>
    /// This field is required.
    pub fn unit(mut self, input: crate::types::TrainedModelInferenceMaxOutputSizeUnitType) -> Self {
        self.unit = ::std::option::Option::Some(input);
        self
    }
    /// <p>The measurement unit to use.</p>
    pub fn set_unit(mut self, input: ::std::option::Option<crate::types::TrainedModelInferenceMaxOutputSizeUnitType>) -> Self {
        self.unit = input;
        self
    }
    /// <p>The measurement unit to use.</p>
    pub fn get_unit(&self) -> &::std::option::Option<crate::types::TrainedModelInferenceMaxOutputSizeUnitType> {
        &self.unit
    }
    /// <p>The maximum output size value.</p>
    /// This field is required.
    pub fn value(mut self, input: f64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum output size value.</p>
    pub fn set_value(mut self, input: ::std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The maximum output size value.</p>
    pub fn get_value(&self) -> &::std::option::Option<f64> {
        &self.value
    }
    /// Consumes the builder and constructs a [`TrainedModelInferenceMaxOutputSize`](crate::types::TrainedModelInferenceMaxOutputSize).
    /// This method will fail if any of the following fields are not set:
    /// - [`unit`](crate::types::builders::TrainedModelInferenceMaxOutputSizeBuilder::unit)
    /// - [`value`](crate::types::builders::TrainedModelInferenceMaxOutputSizeBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::TrainedModelInferenceMaxOutputSize, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TrainedModelInferenceMaxOutputSize {
            unit: self.unit.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "unit",
                    "unit was not specified but it is required when building TrainedModelInferenceMaxOutputSize",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building TrainedModelInferenceMaxOutputSize",
                )
            })?,
        })
    }
}
