// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The criteria used to stop model training.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StoppingCondition {
    /// <p>The maximum amount of time, in seconds, that model training can run before it is terminated.</p>
    pub max_runtime_in_seconds: i32,
}
impl StoppingCondition {
    /// <p>The maximum amount of time, in seconds, that model training can run before it is terminated.</p>
    pub fn max_runtime_in_seconds(&self) -> i32 {
        self.max_runtime_in_seconds
    }
}
impl StoppingCondition {
    /// Creates a new builder-style object to manufacture [`StoppingCondition`](crate::types::StoppingCondition).
    pub fn builder() -> crate::types::builders::StoppingConditionBuilder {
        crate::types::builders::StoppingConditionBuilder::default()
    }
}

/// A builder for [`StoppingCondition`](crate::types::StoppingCondition).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StoppingConditionBuilder {
    pub(crate) max_runtime_in_seconds: ::std::option::Option<i32>,
}
impl StoppingConditionBuilder {
    /// <p>The maximum amount of time, in seconds, that model training can run before it is terminated.</p>
    pub fn max_runtime_in_seconds(mut self, input: i32) -> Self {
        self.max_runtime_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum amount of time, in seconds, that model training can run before it is terminated.</p>
    pub fn set_max_runtime_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_runtime_in_seconds = input;
        self
    }
    /// <p>The maximum amount of time, in seconds, that model training can run before it is terminated.</p>
    pub fn get_max_runtime_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.max_runtime_in_seconds
    }
    /// Consumes the builder and constructs a [`StoppingCondition`](crate::types::StoppingCondition).
    pub fn build(self) -> crate::types::StoppingCondition {
        crate::types::StoppingCondition {
            max_runtime_in_seconds: self.max_runtime_in_seconds.unwrap_or(86400),
        }
    }
}
