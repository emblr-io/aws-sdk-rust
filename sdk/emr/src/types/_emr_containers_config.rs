// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The EMR container configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EmrContainersConfig {
    /// <p>The Job run ID for the container configuration.</p>
    pub job_run_id: ::std::option::Option<::std::string::String>,
}
impl EmrContainersConfig {
    /// <p>The Job run ID for the container configuration.</p>
    pub fn job_run_id(&self) -> ::std::option::Option<&str> {
        self.job_run_id.as_deref()
    }
}
impl EmrContainersConfig {
    /// Creates a new builder-style object to manufacture [`EmrContainersConfig`](crate::types::EmrContainersConfig).
    pub fn builder() -> crate::types::builders::EmrContainersConfigBuilder {
        crate::types::builders::EmrContainersConfigBuilder::default()
    }
}

/// A builder for [`EmrContainersConfig`](crate::types::EmrContainersConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EmrContainersConfigBuilder {
    pub(crate) job_run_id: ::std::option::Option<::std::string::String>,
}
impl EmrContainersConfigBuilder {
    /// <p>The Job run ID for the container configuration.</p>
    pub fn job_run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Job run ID for the container configuration.</p>
    pub fn set_job_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_run_id = input;
        self
    }
    /// <p>The Job run ID for the container configuration.</p>
    pub fn get_job_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_run_id
    }
    /// Consumes the builder and constructs a [`EmrContainersConfig`](crate::types::EmrContainersConfig).
    pub fn build(self) -> crate::types::EmrContainersConfig {
        crate::types::EmrContainersConfig { job_run_id: self.job_run_id }
    }
}
