// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateResourceConfigurationInput {
    /// <p>The ID of the resource configuration.</p>
    pub resource_configuration_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The resource configuration.</p>
    pub resource_configuration_definition: ::std::option::Option<crate::types::ResourceConfigurationDefinition>,
    /// <p>Indicates whether to add the resource configuration to service networks that are shared with other accounts.</p>
    pub allow_association_to_shareable_service_network: ::std::option::Option<bool>,
    /// <p>The TCP port ranges that a consumer can use to access a resource configuration. You can separate port ranges with a comma. Example: 1-65535 or 1,2,22-30</p>
    pub port_ranges: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl UpdateResourceConfigurationInput {
    /// <p>The ID of the resource configuration.</p>
    pub fn resource_configuration_identifier(&self) -> ::std::option::Option<&str> {
        self.resource_configuration_identifier.as_deref()
    }
    /// <p>The resource configuration.</p>
    pub fn resource_configuration_definition(&self) -> ::std::option::Option<&crate::types::ResourceConfigurationDefinition> {
        self.resource_configuration_definition.as_ref()
    }
    /// <p>Indicates whether to add the resource configuration to service networks that are shared with other accounts.</p>
    pub fn allow_association_to_shareable_service_network(&self) -> ::std::option::Option<bool> {
        self.allow_association_to_shareable_service_network
    }
    /// <p>The TCP port ranges that a consumer can use to access a resource configuration. You can separate port ranges with a comma. Example: 1-65535 or 1,2,22-30</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.port_ranges.is_none()`.
    pub fn port_ranges(&self) -> &[::std::string::String] {
        self.port_ranges.as_deref().unwrap_or_default()
    }
}
impl UpdateResourceConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateResourceConfigurationInput`](crate::operation::update_resource_configuration::UpdateResourceConfigurationInput).
    pub fn builder() -> crate::operation::update_resource_configuration::builders::UpdateResourceConfigurationInputBuilder {
        crate::operation::update_resource_configuration::builders::UpdateResourceConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateResourceConfigurationInput`](crate::operation::update_resource_configuration::UpdateResourceConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateResourceConfigurationInputBuilder {
    pub(crate) resource_configuration_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) resource_configuration_definition: ::std::option::Option<crate::types::ResourceConfigurationDefinition>,
    pub(crate) allow_association_to_shareable_service_network: ::std::option::Option<bool>,
    pub(crate) port_ranges: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl UpdateResourceConfigurationInputBuilder {
    /// <p>The ID of the resource configuration.</p>
    /// This field is required.
    pub fn resource_configuration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_configuration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn set_resource_configuration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_configuration_identifier = input;
        self
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn get_resource_configuration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_configuration_identifier
    }
    /// <p>The resource configuration.</p>
    pub fn resource_configuration_definition(mut self, input: crate::types::ResourceConfigurationDefinition) -> Self {
        self.resource_configuration_definition = ::std::option::Option::Some(input);
        self
    }
    /// <p>The resource configuration.</p>
    pub fn set_resource_configuration_definition(mut self, input: ::std::option::Option<crate::types::ResourceConfigurationDefinition>) -> Self {
        self.resource_configuration_definition = input;
        self
    }
    /// <p>The resource configuration.</p>
    pub fn get_resource_configuration_definition(&self) -> &::std::option::Option<crate::types::ResourceConfigurationDefinition> {
        &self.resource_configuration_definition
    }
    /// <p>Indicates whether to add the resource configuration to service networks that are shared with other accounts.</p>
    pub fn allow_association_to_shareable_service_network(mut self, input: bool) -> Self {
        self.allow_association_to_shareable_service_network = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether to add the resource configuration to service networks that are shared with other accounts.</p>
    pub fn set_allow_association_to_shareable_service_network(mut self, input: ::std::option::Option<bool>) -> Self {
        self.allow_association_to_shareable_service_network = input;
        self
    }
    /// <p>Indicates whether to add the resource configuration to service networks that are shared with other accounts.</p>
    pub fn get_allow_association_to_shareable_service_network(&self) -> &::std::option::Option<bool> {
        &self.allow_association_to_shareable_service_network
    }
    /// Appends an item to `port_ranges`.
    ///
    /// To override the contents of this collection use [`set_port_ranges`](Self::set_port_ranges).
    ///
    /// <p>The TCP port ranges that a consumer can use to access a resource configuration. You can separate port ranges with a comma. Example: 1-65535 or 1,2,22-30</p>
    pub fn port_ranges(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.port_ranges.unwrap_or_default();
        v.push(input.into());
        self.port_ranges = ::std::option::Option::Some(v);
        self
    }
    /// <p>The TCP port ranges that a consumer can use to access a resource configuration. You can separate port ranges with a comma. Example: 1-65535 or 1,2,22-30</p>
    pub fn set_port_ranges(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.port_ranges = input;
        self
    }
    /// <p>The TCP port ranges that a consumer can use to access a resource configuration. You can separate port ranges with a comma. Example: 1-65535 or 1,2,22-30</p>
    pub fn get_port_ranges(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.port_ranges
    }
    /// Consumes the builder and constructs a [`UpdateResourceConfigurationInput`](crate::operation::update_resource_configuration::UpdateResourceConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_resource_configuration::UpdateResourceConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_resource_configuration::UpdateResourceConfigurationInput {
            resource_configuration_identifier: self.resource_configuration_identifier,
            resource_configuration_definition: self.resource_configuration_definition,
            allow_association_to_shareable_service_network: self.allow_association_to_shareable_service_network,
            port_ranges: self.port_ranges,
        })
    }
}
