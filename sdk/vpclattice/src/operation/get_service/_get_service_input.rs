// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetServiceInput {
    /// <p>The ID or ARN of the service.</p>
    pub service_identifier: ::std::option::Option<::std::string::String>,
}
impl GetServiceInput {
    /// <p>The ID or ARN of the service.</p>
    pub fn service_identifier(&self) -> ::std::option::Option<&str> {
        self.service_identifier.as_deref()
    }
}
impl GetServiceInput {
    /// Creates a new builder-style object to manufacture [`GetServiceInput`](crate::operation::get_service::GetServiceInput).
    pub fn builder() -> crate::operation::get_service::builders::GetServiceInputBuilder {
        crate::operation::get_service::builders::GetServiceInputBuilder::default()
    }
}

/// A builder for [`GetServiceInput`](crate::operation::get_service::GetServiceInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetServiceInputBuilder {
    pub(crate) service_identifier: ::std::option::Option<::std::string::String>,
}
impl GetServiceInputBuilder {
    /// <p>The ID or ARN of the service.</p>
    /// This field is required.
    pub fn service_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID or ARN of the service.</p>
    pub fn set_service_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_identifier = input;
        self
    }
    /// <p>The ID or ARN of the service.</p>
    pub fn get_service_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_identifier
    }
    /// Consumes the builder and constructs a [`GetServiceInput`](crate::operation::get_service::GetServiceInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_service::GetServiceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_service::GetServiceInput {
            service_identifier: self.service_identifier,
        })
    }
}
