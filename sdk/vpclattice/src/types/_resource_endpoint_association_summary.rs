// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about a VPC endpoint association.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceEndpointAssociationSummary {
    /// <p>The ID of the VPC endpoint association.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the VPC endpoint association.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the resource configuration.</p>
    pub resource_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the resource configuration.</p>
    pub resource_configuration_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the resource configuration.</p>
    pub resource_configuration_name: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the VPC endpoint.</p>
    pub vpc_endpoint_id: ::std::option::Option<::std::string::String>,
    /// <p>The owner of the VPC endpoint.</p>
    pub vpc_endpoint_owner: ::std::option::Option<::std::string::String>,
    /// <p>The account that created the association.</p>
    pub created_by: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that the VPC endpoint association was created, in ISO-8601 format.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceEndpointAssociationSummary {
    /// <p>The ID of the VPC endpoint association.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the VPC endpoint association.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn resource_configuration_id(&self) -> ::std::option::Option<&str> {
        self.resource_configuration_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource configuration.</p>
    pub fn resource_configuration_arn(&self) -> ::std::option::Option<&str> {
        self.resource_configuration_arn.as_deref()
    }
    /// <p>The name of the resource configuration.</p>
    pub fn resource_configuration_name(&self) -> ::std::option::Option<&str> {
        self.resource_configuration_name.as_deref()
    }
    /// <p>The ID of the VPC endpoint.</p>
    pub fn vpc_endpoint_id(&self) -> ::std::option::Option<&str> {
        self.vpc_endpoint_id.as_deref()
    }
    /// <p>The owner of the VPC endpoint.</p>
    pub fn vpc_endpoint_owner(&self) -> ::std::option::Option<&str> {
        self.vpc_endpoint_owner.as_deref()
    }
    /// <p>The account that created the association.</p>
    pub fn created_by(&self) -> ::std::option::Option<&str> {
        self.created_by.as_deref()
    }
    /// <p>The date and time that the VPC endpoint association was created, in ISO-8601 format.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
}
impl ResourceEndpointAssociationSummary {
    /// Creates a new builder-style object to manufacture [`ResourceEndpointAssociationSummary`](crate::types::ResourceEndpointAssociationSummary).
    pub fn builder() -> crate::types::builders::ResourceEndpointAssociationSummaryBuilder {
        crate::types::builders::ResourceEndpointAssociationSummaryBuilder::default()
    }
}

/// A builder for [`ResourceEndpointAssociationSummary`](crate::types::ResourceEndpointAssociationSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResourceEndpointAssociationSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_configuration_name: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_endpoint_id: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_endpoint_owner: ::std::option::Option<::std::string::String>,
    pub(crate) created_by: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceEndpointAssociationSummaryBuilder {
    /// <p>The ID of the VPC endpoint association.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the VPC endpoint association.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the VPC endpoint association.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The Amazon Resource Name (ARN) of the VPC endpoint association.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the VPC endpoint association.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the VPC endpoint association.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn resource_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn set_resource_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_configuration_id = input;
        self
    }
    /// <p>The ID of the resource configuration.</p>
    pub fn get_resource_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_configuration_id
    }
    /// <p>The Amazon Resource Name (ARN) of the resource configuration.</p>
    pub fn resource_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource configuration.</p>
    pub fn set_resource_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource configuration.</p>
    pub fn get_resource_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_configuration_arn
    }
    /// <p>The name of the resource configuration.</p>
    pub fn resource_configuration_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_configuration_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the resource configuration.</p>
    pub fn set_resource_configuration_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_configuration_name = input;
        self
    }
    /// <p>The name of the resource configuration.</p>
    pub fn get_resource_configuration_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_configuration_name
    }
    /// <p>The ID of the VPC endpoint.</p>
    pub fn vpc_endpoint_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_endpoint_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the VPC endpoint.</p>
    pub fn set_vpc_endpoint_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_endpoint_id = input;
        self
    }
    /// <p>The ID of the VPC endpoint.</p>
    pub fn get_vpc_endpoint_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_endpoint_id
    }
    /// <p>The owner of the VPC endpoint.</p>
    pub fn vpc_endpoint_owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_endpoint_owner = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The owner of the VPC endpoint.</p>
    pub fn set_vpc_endpoint_owner(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_endpoint_owner = input;
        self
    }
    /// <p>The owner of the VPC endpoint.</p>
    pub fn get_vpc_endpoint_owner(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_endpoint_owner
    }
    /// <p>The account that created the association.</p>
    pub fn created_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.created_by = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The account that created the association.</p>
    pub fn set_created_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.created_by = input;
        self
    }
    /// <p>The account that created the association.</p>
    pub fn get_created_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.created_by
    }
    /// <p>The date and time that the VPC endpoint association was created, in ISO-8601 format.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the VPC endpoint association was created, in ISO-8601 format.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time that the VPC endpoint association was created, in ISO-8601 format.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// Consumes the builder and constructs a [`ResourceEndpointAssociationSummary`](crate::types::ResourceEndpointAssociationSummary).
    pub fn build(self) -> crate::types::ResourceEndpointAssociationSummary {
        crate::types::ResourceEndpointAssociationSummary {
            id: self.id,
            arn: self.arn,
            resource_configuration_id: self.resource_configuration_id,
            resource_configuration_arn: self.resource_configuration_arn,
            resource_configuration_name: self.resource_configuration_name,
            vpc_endpoint_id: self.vpc_endpoint_id,
            vpc_endpoint_owner: self.vpc_endpoint_owner,
            created_by: self.created_by,
            created_at: self.created_at,
        }
    }
}
