// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the configuration of the knowledge store used for the <code>AMAZON.QnAIntent</code>. You must have already created the knowledge store and indexed the documents within it.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataSourceConfiguration {
    /// <p>Contains details about the configuration of the Amazon OpenSearch Service database used for the <code>AMAZON.QnAIntent</code>. To create a domain, follow the steps at <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.</p>
    pub opensearch_configuration: ::std::option::Option<crate::types::OpensearchConfiguration>,
    /// <p>Contains details about the configuration of the Amazon Kendra index used for the <code>AMAZON.QnAIntent</code>. To create a Amazon Kendra index, follow the steps at <a href="https://docs.aws.amazon.com/kendra/latest/dg/create-index.html">Creating an index</a>.</p>
    pub kendra_configuration: ::std::option::Option<crate::types::QnAKendraConfiguration>,
    /// <p>Contains details about the configuration of the Amazon Bedrock knowledge base used for the <code>AMAZON.QnAIntent</code>. To set up a knowledge base, follow the steps at <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html">Building a knowledge base</a>.</p>
    pub bedrock_knowledge_store_configuration: ::std::option::Option<crate::types::BedrockKnowledgeStoreConfiguration>,
}
impl DataSourceConfiguration {
    /// <p>Contains details about the configuration of the Amazon OpenSearch Service database used for the <code>AMAZON.QnAIntent</code>. To create a domain, follow the steps at <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.</p>
    pub fn opensearch_configuration(&self) -> ::std::option::Option<&crate::types::OpensearchConfiguration> {
        self.opensearch_configuration.as_ref()
    }
    /// <p>Contains details about the configuration of the Amazon Kendra index used for the <code>AMAZON.QnAIntent</code>. To create a Amazon Kendra index, follow the steps at <a href="https://docs.aws.amazon.com/kendra/latest/dg/create-index.html">Creating an index</a>.</p>
    pub fn kendra_configuration(&self) -> ::std::option::Option<&crate::types::QnAKendraConfiguration> {
        self.kendra_configuration.as_ref()
    }
    /// <p>Contains details about the configuration of the Amazon Bedrock knowledge base used for the <code>AMAZON.QnAIntent</code>. To set up a knowledge base, follow the steps at <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html">Building a knowledge base</a>.</p>
    pub fn bedrock_knowledge_store_configuration(&self) -> ::std::option::Option<&crate::types::BedrockKnowledgeStoreConfiguration> {
        self.bedrock_knowledge_store_configuration.as_ref()
    }
}
impl DataSourceConfiguration {
    /// Creates a new builder-style object to manufacture [`DataSourceConfiguration`](crate::types::DataSourceConfiguration).
    pub fn builder() -> crate::types::builders::DataSourceConfigurationBuilder {
        crate::types::builders::DataSourceConfigurationBuilder::default()
    }
}

/// A builder for [`DataSourceConfiguration`](crate::types::DataSourceConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataSourceConfigurationBuilder {
    pub(crate) opensearch_configuration: ::std::option::Option<crate::types::OpensearchConfiguration>,
    pub(crate) kendra_configuration: ::std::option::Option<crate::types::QnAKendraConfiguration>,
    pub(crate) bedrock_knowledge_store_configuration: ::std::option::Option<crate::types::BedrockKnowledgeStoreConfiguration>,
}
impl DataSourceConfigurationBuilder {
    /// <p>Contains details about the configuration of the Amazon OpenSearch Service database used for the <code>AMAZON.QnAIntent</code>. To create a domain, follow the steps at <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.</p>
    pub fn opensearch_configuration(mut self, input: crate::types::OpensearchConfiguration) -> Self {
        self.opensearch_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about the configuration of the Amazon OpenSearch Service database used for the <code>AMAZON.QnAIntent</code>. To create a domain, follow the steps at <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.</p>
    pub fn set_opensearch_configuration(mut self, input: ::std::option::Option<crate::types::OpensearchConfiguration>) -> Self {
        self.opensearch_configuration = input;
        self
    }
    /// <p>Contains details about the configuration of the Amazon OpenSearch Service database used for the <code>AMAZON.QnAIntent</code>. To create a domain, follow the steps at <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.</p>
    pub fn get_opensearch_configuration(&self) -> &::std::option::Option<crate::types::OpensearchConfiguration> {
        &self.opensearch_configuration
    }
    /// <p>Contains details about the configuration of the Amazon Kendra index used for the <code>AMAZON.QnAIntent</code>. To create a Amazon Kendra index, follow the steps at <a href="https://docs.aws.amazon.com/kendra/latest/dg/create-index.html">Creating an index</a>.</p>
    pub fn kendra_configuration(mut self, input: crate::types::QnAKendraConfiguration) -> Self {
        self.kendra_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about the configuration of the Amazon Kendra index used for the <code>AMAZON.QnAIntent</code>. To create a Amazon Kendra index, follow the steps at <a href="https://docs.aws.amazon.com/kendra/latest/dg/create-index.html">Creating an index</a>.</p>
    pub fn set_kendra_configuration(mut self, input: ::std::option::Option<crate::types::QnAKendraConfiguration>) -> Self {
        self.kendra_configuration = input;
        self
    }
    /// <p>Contains details about the configuration of the Amazon Kendra index used for the <code>AMAZON.QnAIntent</code>. To create a Amazon Kendra index, follow the steps at <a href="https://docs.aws.amazon.com/kendra/latest/dg/create-index.html">Creating an index</a>.</p>
    pub fn get_kendra_configuration(&self) -> &::std::option::Option<crate::types::QnAKendraConfiguration> {
        &self.kendra_configuration
    }
    /// <p>Contains details about the configuration of the Amazon Bedrock knowledge base used for the <code>AMAZON.QnAIntent</code>. To set up a knowledge base, follow the steps at <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html">Building a knowledge base</a>.</p>
    pub fn bedrock_knowledge_store_configuration(mut self, input: crate::types::BedrockKnowledgeStoreConfiguration) -> Self {
        self.bedrock_knowledge_store_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about the configuration of the Amazon Bedrock knowledge base used for the <code>AMAZON.QnAIntent</code>. To set up a knowledge base, follow the steps at <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html">Building a knowledge base</a>.</p>
    pub fn set_bedrock_knowledge_store_configuration(
        mut self,
        input: ::std::option::Option<crate::types::BedrockKnowledgeStoreConfiguration>,
    ) -> Self {
        self.bedrock_knowledge_store_configuration = input;
        self
    }
    /// <p>Contains details about the configuration of the Amazon Bedrock knowledge base used for the <code>AMAZON.QnAIntent</code>. To set up a knowledge base, follow the steps at <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html">Building a knowledge base</a>.</p>
    pub fn get_bedrock_knowledge_store_configuration(&self) -> &::std::option::Option<crate::types::BedrockKnowledgeStoreConfiguration> {
        &self.bedrock_knowledge_store_configuration
    }
    /// Consumes the builder and constructs a [`DataSourceConfiguration`](crate::types::DataSourceConfiguration).
    pub fn build(self) -> crate::types::DataSourceConfiguration {
        crate::types::DataSourceConfiguration {
            opensearch_configuration: self.opensearch_configuration,
            kendra_configuration: self.kendra_configuration,
            bedrock_knowledge_store_configuration: self.bedrock_knowledge_store_configuration,
        }
    }
}
