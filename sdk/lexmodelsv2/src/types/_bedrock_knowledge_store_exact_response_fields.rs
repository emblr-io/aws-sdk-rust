// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The exact response fields given by the Bedrock knowledge store.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BedrockKnowledgeStoreExactResponseFields {
    /// <p>The answer field used for an exact response from Bedrock Knowledge Store.</p>
    pub answer_field: ::std::option::Option<::std::string::String>,
}
impl BedrockKnowledgeStoreExactResponseFields {
    /// <p>The answer field used for an exact response from Bedrock Knowledge Store.</p>
    pub fn answer_field(&self) -> ::std::option::Option<&str> {
        self.answer_field.as_deref()
    }
}
impl BedrockKnowledgeStoreExactResponseFields {
    /// Creates a new builder-style object to manufacture [`BedrockKnowledgeStoreExactResponseFields`](crate::types::BedrockKnowledgeStoreExactResponseFields).
    pub fn builder() -> crate::types::builders::BedrockKnowledgeStoreExactResponseFieldsBuilder {
        crate::types::builders::BedrockKnowledgeStoreExactResponseFieldsBuilder::default()
    }
}

/// A builder for [`BedrockKnowledgeStoreExactResponseFields`](crate::types::BedrockKnowledgeStoreExactResponseFields).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BedrockKnowledgeStoreExactResponseFieldsBuilder {
    pub(crate) answer_field: ::std::option::Option<::std::string::String>,
}
impl BedrockKnowledgeStoreExactResponseFieldsBuilder {
    /// <p>The answer field used for an exact response from Bedrock Knowledge Store.</p>
    pub fn answer_field(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.answer_field = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The answer field used for an exact response from Bedrock Knowledge Store.</p>
    pub fn set_answer_field(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.answer_field = input;
        self
    }
    /// <p>The answer field used for an exact response from Bedrock Knowledge Store.</p>
    pub fn get_answer_field(&self) -> &::std::option::Option<::std::string::String> {
        &self.answer_field
    }
    /// Consumes the builder and constructs a [`BedrockKnowledgeStoreExactResponseFields`](crate::types::BedrockKnowledgeStoreExactResponseFields).
    pub fn build(self) -> crate::types::BedrockKnowledgeStoreExactResponseFields {
        crate::types::BedrockKnowledgeStoreExactResponseFields {
            answer_field: self.answer_field,
        }
    }
}
