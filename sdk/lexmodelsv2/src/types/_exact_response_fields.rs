// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the names of the fields used for an exact response to the user.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExactResponseFields {
    /// <p>The name of the field that contains the query made to the OpenSearch Service database.</p>
    pub question_field: ::std::string::String,
    /// <p>The name of the field that contains the answer to the query made to the OpenSearch Service database.</p>
    pub answer_field: ::std::string::String,
}
impl ExactResponseFields {
    /// <p>The name of the field that contains the query made to the OpenSearch Service database.</p>
    pub fn question_field(&self) -> &str {
        use std::ops::Deref;
        self.question_field.deref()
    }
    /// <p>The name of the field that contains the answer to the query made to the OpenSearch Service database.</p>
    pub fn answer_field(&self) -> &str {
        use std::ops::Deref;
        self.answer_field.deref()
    }
}
impl ExactResponseFields {
    /// Creates a new builder-style object to manufacture [`ExactResponseFields`](crate::types::ExactResponseFields).
    pub fn builder() -> crate::types::builders::ExactResponseFieldsBuilder {
        crate::types::builders::ExactResponseFieldsBuilder::default()
    }
}

/// A builder for [`ExactResponseFields`](crate::types::ExactResponseFields).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExactResponseFieldsBuilder {
    pub(crate) question_field: ::std::option::Option<::std::string::String>,
    pub(crate) answer_field: ::std::option::Option<::std::string::String>,
}
impl ExactResponseFieldsBuilder {
    /// <p>The name of the field that contains the query made to the OpenSearch Service database.</p>
    /// This field is required.
    pub fn question_field(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.question_field = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the field that contains the query made to the OpenSearch Service database.</p>
    pub fn set_question_field(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.question_field = input;
        self
    }
    /// <p>The name of the field that contains the query made to the OpenSearch Service database.</p>
    pub fn get_question_field(&self) -> &::std::option::Option<::std::string::String> {
        &self.question_field
    }
    /// <p>The name of the field that contains the answer to the query made to the OpenSearch Service database.</p>
    /// This field is required.
    pub fn answer_field(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.answer_field = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the field that contains the answer to the query made to the OpenSearch Service database.</p>
    pub fn set_answer_field(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.answer_field = input;
        self
    }
    /// <p>The name of the field that contains the answer to the query made to the OpenSearch Service database.</p>
    pub fn get_answer_field(&self) -> &::std::option::Option<::std::string::String> {
        &self.answer_field
    }
    /// Consumes the builder and constructs a [`ExactResponseFields`](crate::types::ExactResponseFields).
    /// This method will fail if any of the following fields are not set:
    /// - [`question_field`](crate::types::builders::ExactResponseFieldsBuilder::question_field)
    /// - [`answer_field`](crate::types::builders::ExactResponseFieldsBuilder::answer_field)
    pub fn build(self) -> ::std::result::Result<crate::types::ExactResponseFields, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ExactResponseFields {
            question_field: self.question_field.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "question_field",
                    "question_field was not specified but it is required when building ExactResponseFields",
                )
            })?,
            answer_field: self.answer_field.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "answer_field",
                    "answer_field was not specified but it is required when building ExactResponseFields",
                )
            })?,
        })
    }
}
