// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details of the Qinconnect intent.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QInConnectIntentConfiguration {
    /// <p>The Qinconnect assistant configuration details of the Qinconnect intent.</p>
    pub q_in_connect_assistant_configuration: ::std::option::Option<crate::types::QInConnectAssistantConfiguration>,
}
impl QInConnectIntentConfiguration {
    /// <p>The Qinconnect assistant configuration details of the Qinconnect intent.</p>
    pub fn q_in_connect_assistant_configuration(&self) -> ::std::option::Option<&crate::types::QInConnectAssistantConfiguration> {
        self.q_in_connect_assistant_configuration.as_ref()
    }
}
impl QInConnectIntentConfiguration {
    /// Creates a new builder-style object to manufacture [`QInConnectIntentConfiguration`](crate::types::QInConnectIntentConfiguration).
    pub fn builder() -> crate::types::builders::QInConnectIntentConfigurationBuilder {
        crate::types::builders::QInConnectIntentConfigurationBuilder::default()
    }
}

/// A builder for [`QInConnectIntentConfiguration`](crate::types::QInConnectIntentConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct QInConnectIntentConfigurationBuilder {
    pub(crate) q_in_connect_assistant_configuration: ::std::option::Option<crate::types::QInConnectAssistantConfiguration>,
}
impl QInConnectIntentConfigurationBuilder {
    /// <p>The Qinconnect assistant configuration details of the Qinconnect intent.</p>
    pub fn q_in_connect_assistant_configuration(mut self, input: crate::types::QInConnectAssistantConfiguration) -> Self {
        self.q_in_connect_assistant_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Qinconnect assistant configuration details of the Qinconnect intent.</p>
    pub fn set_q_in_connect_assistant_configuration(mut self, input: ::std::option::Option<crate::types::QInConnectAssistantConfiguration>) -> Self {
        self.q_in_connect_assistant_configuration = input;
        self
    }
    /// <p>The Qinconnect assistant configuration details of the Qinconnect intent.</p>
    pub fn get_q_in_connect_assistant_configuration(&self) -> &::std::option::Option<crate::types::QInConnectAssistantConfiguration> {
        &self.q_in_connect_assistant_configuration
    }
    /// Consumes the builder and constructs a [`QInConnectIntentConfiguration`](crate::types::QInConnectIntentConfiguration).
    pub fn build(self) -> crate::types::QInConnectIntentConfiguration {
        crate::types::QInConnectIntentConfiguration {
            q_in_connect_assistant_configuration: self.q_in_connect_assistant_configuration,
        }
    }
}
