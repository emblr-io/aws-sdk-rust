// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The input file that needs to be analyzed.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProbeInputFile {
    /// Specify the S3, HTTP, or HTTPS URL for your media file.
    pub file_url: ::std::option::Option<::std::string::String>,
}
impl ProbeInputFile {
    /// Specify the S3, HTTP, or HTTPS URL for your media file.
    pub fn file_url(&self) -> ::std::option::Option<&str> {
        self.file_url.as_deref()
    }
}
impl ProbeInputFile {
    /// Creates a new builder-style object to manufacture [`ProbeInputFile`](crate::types::ProbeInputFile).
    pub fn builder() -> crate::types::builders::ProbeInputFileBuilder {
        crate::types::builders::ProbeInputFileBuilder::default()
    }
}

/// A builder for [`ProbeInputFile`](crate::types::ProbeInputFile).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProbeInputFileBuilder {
    pub(crate) file_url: ::std::option::Option<::std::string::String>,
}
impl ProbeInputFileBuilder {
    /// Specify the S3, HTTP, or HTTPS URL for your media file.
    pub fn file_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_url = ::std::option::Option::Some(input.into());
        self
    }
    /// Specify the S3, HTTP, or HTTPS URL for your media file.
    pub fn set_file_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_url = input;
        self
    }
    /// Specify the S3, HTTP, or HTTPS URL for your media file.
    pub fn get_file_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_url
    }
    /// Consumes the builder and constructs a [`ProbeInputFile`](crate::types::ProbeInputFile).
    pub fn build(self) -> crate::types::ProbeInputFile {
        crate::types::ProbeInputFile { file_url: self.file_url }
    }
}
