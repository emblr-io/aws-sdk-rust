// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutIndexPolicyOutput {
    /// <p>The index policy that you just created or updated.</p>
    pub index_policy: ::std::option::Option<crate::types::IndexPolicy>,
    _request_id: Option<String>,
}
impl PutIndexPolicyOutput {
    /// <p>The index policy that you just created or updated.</p>
    pub fn index_policy(&self) -> ::std::option::Option<&crate::types::IndexPolicy> {
        self.index_policy.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for PutIndexPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutIndexPolicyOutput {
    /// Creates a new builder-style object to manufacture [`PutIndexPolicyOutput`](crate::operation::put_index_policy::PutIndexPolicyOutput).
    pub fn builder() -> crate::operation::put_index_policy::builders::PutIndexPolicyOutputBuilder {
        crate::operation::put_index_policy::builders::PutIndexPolicyOutputBuilder::default()
    }
}

/// A builder for [`PutIndexPolicyOutput`](crate::operation::put_index_policy::PutIndexPolicyOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutIndexPolicyOutputBuilder {
    pub(crate) index_policy: ::std::option::Option<crate::types::IndexPolicy>,
    _request_id: Option<String>,
}
impl PutIndexPolicyOutputBuilder {
    /// <p>The index policy that you just created or updated.</p>
    pub fn index_policy(mut self, input: crate::types::IndexPolicy) -> Self {
        self.index_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The index policy that you just created or updated.</p>
    pub fn set_index_policy(mut self, input: ::std::option::Option<crate::types::IndexPolicy>) -> Self {
        self.index_policy = input;
        self
    }
    /// <p>The index policy that you just created or updated.</p>
    pub fn get_index_policy(&self) -> &::std::option::Option<crate::types::IndexPolicy> {
        &self.index_policy
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutIndexPolicyOutput`](crate::operation::put_index_policy::PutIndexPolicyOutput).
    pub fn build(self) -> crate::operation::put_index_policy::PutIndexPolicyOutput {
        crate::operation::put_index_policy::PutIndexPolicyOutput {
            index_policy: self.index_policy,
            _request_id: self._request_id,
        }
    }
}
