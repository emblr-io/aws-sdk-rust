// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This structure contains the default values that are used for each configuration parameter when you use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> to create a deliver under the current service type, resource type, and log type.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConfigurationTemplateDeliveryConfigValues {
    /// <p>The default record fields that will be delivered when a list of record fields is not provided in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation.</p>
    pub record_fields: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The default field delimiter that is used in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation when the field delimiter is not specified in that operation. The field delimiter is used only when the final output delivery is in <code>Plain</code>, <code>W3C</code>, or <code>Raw</code> format.</p>
    pub field_delimiter: ::std::option::Option<::std::string::String>,
    /// <p>The delivery parameters that are used when you create a delivery to a delivery destination that is an S3 Bucket.</p>
    pub s3_delivery_configuration: ::std::option::Option<crate::types::S3DeliveryConfiguration>,
}
impl ConfigurationTemplateDeliveryConfigValues {
    /// <p>The default record fields that will be delivered when a list of record fields is not provided in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.record_fields.is_none()`.
    pub fn record_fields(&self) -> &[::std::string::String] {
        self.record_fields.as_deref().unwrap_or_default()
    }
    /// <p>The default field delimiter that is used in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation when the field delimiter is not specified in that operation. The field delimiter is used only when the final output delivery is in <code>Plain</code>, <code>W3C</code>, or <code>Raw</code> format.</p>
    pub fn field_delimiter(&self) -> ::std::option::Option<&str> {
        self.field_delimiter.as_deref()
    }
    /// <p>The delivery parameters that are used when you create a delivery to a delivery destination that is an S3 Bucket.</p>
    pub fn s3_delivery_configuration(&self) -> ::std::option::Option<&crate::types::S3DeliveryConfiguration> {
        self.s3_delivery_configuration.as_ref()
    }
}
impl ConfigurationTemplateDeliveryConfigValues {
    /// Creates a new builder-style object to manufacture [`ConfigurationTemplateDeliveryConfigValues`](crate::types::ConfigurationTemplateDeliveryConfigValues).
    pub fn builder() -> crate::types::builders::ConfigurationTemplateDeliveryConfigValuesBuilder {
        crate::types::builders::ConfigurationTemplateDeliveryConfigValuesBuilder::default()
    }
}

/// A builder for [`ConfigurationTemplateDeliveryConfigValues`](crate::types::ConfigurationTemplateDeliveryConfigValues).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConfigurationTemplateDeliveryConfigValuesBuilder {
    pub(crate) record_fields: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) field_delimiter: ::std::option::Option<::std::string::String>,
    pub(crate) s3_delivery_configuration: ::std::option::Option<crate::types::S3DeliveryConfiguration>,
}
impl ConfigurationTemplateDeliveryConfigValuesBuilder {
    /// Appends an item to `record_fields`.
    ///
    /// To override the contents of this collection use [`set_record_fields`](Self::set_record_fields).
    ///
    /// <p>The default record fields that will be delivered when a list of record fields is not provided in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation.</p>
    pub fn record_fields(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.record_fields.unwrap_or_default();
        v.push(input.into());
        self.record_fields = ::std::option::Option::Some(v);
        self
    }
    /// <p>The default record fields that will be delivered when a list of record fields is not provided in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation.</p>
    pub fn set_record_fields(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.record_fields = input;
        self
    }
    /// <p>The default record fields that will be delivered when a list of record fields is not provided in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation.</p>
    pub fn get_record_fields(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.record_fields
    }
    /// <p>The default field delimiter that is used in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation when the field delimiter is not specified in that operation. The field delimiter is used only when the final output delivery is in <code>Plain</code>, <code>W3C</code>, or <code>Raw</code> format.</p>
    pub fn field_delimiter(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.field_delimiter = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The default field delimiter that is used in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation when the field delimiter is not specified in that operation. The field delimiter is used only when the final output delivery is in <code>Plain</code>, <code>W3C</code>, or <code>Raw</code> format.</p>
    pub fn set_field_delimiter(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.field_delimiter = input;
        self
    }
    /// <p>The default field delimiter that is used in a <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html">CreateDelivery</a> operation when the field delimiter is not specified in that operation. The field delimiter is used only when the final output delivery is in <code>Plain</code>, <code>W3C</code>, or <code>Raw</code> format.</p>
    pub fn get_field_delimiter(&self) -> &::std::option::Option<::std::string::String> {
        &self.field_delimiter
    }
    /// <p>The delivery parameters that are used when you create a delivery to a delivery destination that is an S3 Bucket.</p>
    pub fn s3_delivery_configuration(mut self, input: crate::types::S3DeliveryConfiguration) -> Self {
        self.s3_delivery_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The delivery parameters that are used when you create a delivery to a delivery destination that is an S3 Bucket.</p>
    pub fn set_s3_delivery_configuration(mut self, input: ::std::option::Option<crate::types::S3DeliveryConfiguration>) -> Self {
        self.s3_delivery_configuration = input;
        self
    }
    /// <p>The delivery parameters that are used when you create a delivery to a delivery destination that is an S3 Bucket.</p>
    pub fn get_s3_delivery_configuration(&self) -> &::std::option::Option<crate::types::S3DeliveryConfiguration> {
        &self.s3_delivery_configuration
    }
    /// Consumes the builder and constructs a [`ConfigurationTemplateDeliveryConfigValues`](crate::types::ConfigurationTemplateDeliveryConfigValues).
    pub fn build(self) -> crate::types::ConfigurationTemplateDeliveryConfigValues {
        crate::types::ConfigurationTemplateDeliveryConfigValues {
            record_fields: self.record_fields,
            field_delimiter: self.field_delimiter,
            s3_delivery_configuration: self.s3_delivery_configuration,
        }
    }
}
