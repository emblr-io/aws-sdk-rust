// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This structure contains information about one log group in your account.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LogGroupSummary {
    /// <p>The name of the log group.</p>
    pub log_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the log group.</p>
    pub log_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>The log group class for this log group. For details about the features supported by each log group class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log classes</a></p>
    pub log_group_class: ::std::option::Option<crate::types::LogGroupClass>,
}
impl LogGroupSummary {
    /// <p>The name of the log group.</p>
    pub fn log_group_name(&self) -> ::std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the log group.</p>
    pub fn log_group_arn(&self) -> ::std::option::Option<&str> {
        self.log_group_arn.as_deref()
    }
    /// <p>The log group class for this log group. For details about the features supported by each log group class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log classes</a></p>
    pub fn log_group_class(&self) -> ::std::option::Option<&crate::types::LogGroupClass> {
        self.log_group_class.as_ref()
    }
}
impl LogGroupSummary {
    /// Creates a new builder-style object to manufacture [`LogGroupSummary`](crate::types::LogGroupSummary).
    pub fn builder() -> crate::types::builders::LogGroupSummaryBuilder {
        crate::types::builders::LogGroupSummaryBuilder::default()
    }
}

/// A builder for [`LogGroupSummary`](crate::types::LogGroupSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LogGroupSummaryBuilder {
    pub(crate) log_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) log_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) log_group_class: ::std::option::Option<crate::types::LogGroupClass>,
}
impl LogGroupSummaryBuilder {
    /// <p>The name of the log group.</p>
    pub fn log_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.log_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the log group.</p>
    pub fn set_log_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// <p>The name of the log group.</p>
    pub fn get_log_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.log_group_name
    }
    /// <p>The Amazon Resource Name (ARN) of the log group.</p>
    pub fn log_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.log_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the log group.</p>
    pub fn set_log_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.log_group_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the log group.</p>
    pub fn get_log_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.log_group_arn
    }
    /// <p>The log group class for this log group. For details about the features supported by each log group class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log classes</a></p>
    pub fn log_group_class(mut self, input: crate::types::LogGroupClass) -> Self {
        self.log_group_class = ::std::option::Option::Some(input);
        self
    }
    /// <p>The log group class for this log group. For details about the features supported by each log group class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log classes</a></p>
    pub fn set_log_group_class(mut self, input: ::std::option::Option<crate::types::LogGroupClass>) -> Self {
        self.log_group_class = input;
        self
    }
    /// <p>The log group class for this log group. For details about the features supported by each log group class, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html">Log classes</a></p>
    pub fn get_log_group_class(&self) -> &::std::option::Option<crate::types::LogGroupClass> {
        &self.log_group_class
    }
    /// Consumes the builder and constructs a [`LogGroupSummary`](crate::types::LogGroupSummary).
    pub fn build(self) -> crate::types::LogGroupSummary {
        crate::types::LogGroupSummary {
            log_group_name: self.log_group_name,
            log_group_arn: self.log_group_arn,
            log_group_class: self.log_group_class,
        }
    }
}
