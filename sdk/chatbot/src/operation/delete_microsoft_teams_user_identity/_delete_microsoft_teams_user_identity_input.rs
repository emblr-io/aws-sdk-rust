// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteMicrosoftTeamsUserIdentityInput {
    /// <p>The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete.</p>
    pub chat_configuration_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Microsoft Teams user ID.</p>
    pub user_id: ::std::option::Option<::std::string::String>,
}
impl DeleteMicrosoftTeamsUserIdentityInput {
    /// <p>The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete.</p>
    pub fn chat_configuration_arn(&self) -> ::std::option::Option<&str> {
        self.chat_configuration_arn.as_deref()
    }
    /// <p>The Microsoft Teams user ID.</p>
    pub fn user_id(&self) -> ::std::option::Option<&str> {
        self.user_id.as_deref()
    }
}
impl DeleteMicrosoftTeamsUserIdentityInput {
    /// Creates a new builder-style object to manufacture [`DeleteMicrosoftTeamsUserIdentityInput`](crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput).
    pub fn builder() -> crate::operation::delete_microsoft_teams_user_identity::builders::DeleteMicrosoftTeamsUserIdentityInputBuilder {
        crate::operation::delete_microsoft_teams_user_identity::builders::DeleteMicrosoftTeamsUserIdentityInputBuilder::default()
    }
}

/// A builder for [`DeleteMicrosoftTeamsUserIdentityInput`](crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteMicrosoftTeamsUserIdentityInputBuilder {
    pub(crate) chat_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) user_id: ::std::option::Option<::std::string::String>,
}
impl DeleteMicrosoftTeamsUserIdentityInputBuilder {
    /// <p>The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete.</p>
    /// This field is required.
    pub fn chat_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.chat_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete.</p>
    pub fn set_chat_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.chat_configuration_arn = input;
        self
    }
    /// <p>The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete.</p>
    pub fn get_chat_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.chat_configuration_arn
    }
    /// <p>The Microsoft Teams user ID.</p>
    /// This field is required.
    pub fn user_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Microsoft Teams user ID.</p>
    pub fn set_user_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_id = input;
        self
    }
    /// <p>The Microsoft Teams user ID.</p>
    pub fn get_user_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_id
    }
    /// Consumes the builder and constructs a [`DeleteMicrosoftTeamsUserIdentityInput`](crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_microsoft_teams_user_identity::DeleteMicrosoftTeamsUserIdentityInput {
                chat_configuration_arn: self.chat_configuration_arn,
                user_id: self.user_id,
            },
        )
    }
}
