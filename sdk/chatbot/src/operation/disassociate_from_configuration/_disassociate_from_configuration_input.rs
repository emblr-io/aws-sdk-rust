// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateFromConfigurationInput {
    /// <p>The resource (for example, a custom action) Amazon Resource Name (ARN) to unlink.</p>
    pub resource: ::std::option::Option<::std::string::String>,
    /// <p>The channel configuration the resource is being disassociated from.</p>
    pub chat_configuration: ::std::option::Option<::std::string::String>,
}
impl DisassociateFromConfigurationInput {
    /// <p>The resource (for example, a custom action) Amazon Resource Name (ARN) to unlink.</p>
    pub fn resource(&self) -> ::std::option::Option<&str> {
        self.resource.as_deref()
    }
    /// <p>The channel configuration the resource is being disassociated from.</p>
    pub fn chat_configuration(&self) -> ::std::option::Option<&str> {
        self.chat_configuration.as_deref()
    }
}
impl DisassociateFromConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DisassociateFromConfigurationInput`](crate::operation::disassociate_from_configuration::DisassociateFromConfigurationInput).
    pub fn builder() -> crate::operation::disassociate_from_configuration::builders::DisassociateFromConfigurationInputBuilder {
        crate::operation::disassociate_from_configuration::builders::DisassociateFromConfigurationInputBuilder::default()
    }
}

/// A builder for [`DisassociateFromConfigurationInput`](crate::operation::disassociate_from_configuration::DisassociateFromConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DisassociateFromConfigurationInputBuilder {
    pub(crate) resource: ::std::option::Option<::std::string::String>,
    pub(crate) chat_configuration: ::std::option::Option<::std::string::String>,
}
impl DisassociateFromConfigurationInputBuilder {
    /// <p>The resource (for example, a custom action) Amazon Resource Name (ARN) to unlink.</p>
    /// This field is required.
    pub fn resource(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource (for example, a custom action) Amazon Resource Name (ARN) to unlink.</p>
    pub fn set_resource(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource = input;
        self
    }
    /// <p>The resource (for example, a custom action) Amazon Resource Name (ARN) to unlink.</p>
    pub fn get_resource(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource
    }
    /// <p>The channel configuration the resource is being disassociated from.</p>
    /// This field is required.
    pub fn chat_configuration(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.chat_configuration = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The channel configuration the resource is being disassociated from.</p>
    pub fn set_chat_configuration(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.chat_configuration = input;
        self
    }
    /// <p>The channel configuration the resource is being disassociated from.</p>
    pub fn get_chat_configuration(&self) -> &::std::option::Option<::std::string::String> {
        &self.chat_configuration
    }
    /// Consumes the builder and constructs a [`DisassociateFromConfigurationInput`](crate::operation::disassociate_from_configuration::DisassociateFromConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_from_configuration::DisassociateFromConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::disassociate_from_configuration::DisassociateFromConfigurationInput {
            resource: self.resource,
            chat_configuration: self.chat_configuration,
        })
    }
}
