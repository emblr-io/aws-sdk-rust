// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteSlackWorkspaceAuthorizationInput {
    /// <p>The ID of the Slack workspace authorized with AWS Chatbot.</p>
    pub slack_team_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSlackWorkspaceAuthorizationInput {
    /// <p>The ID of the Slack workspace authorized with AWS Chatbot.</p>
    pub fn slack_team_id(&self) -> ::std::option::Option<&str> {
        self.slack_team_id.as_deref()
    }
}
impl DeleteSlackWorkspaceAuthorizationInput {
    /// Creates a new builder-style object to manufacture [`DeleteSlackWorkspaceAuthorizationInput`](crate::operation::delete_slack_workspace_authorization::DeleteSlackWorkspaceAuthorizationInput).
    pub fn builder() -> crate::operation::delete_slack_workspace_authorization::builders::DeleteSlackWorkspaceAuthorizationInputBuilder {
        crate::operation::delete_slack_workspace_authorization::builders::DeleteSlackWorkspaceAuthorizationInputBuilder::default()
    }
}

/// A builder for [`DeleteSlackWorkspaceAuthorizationInput`](crate::operation::delete_slack_workspace_authorization::DeleteSlackWorkspaceAuthorizationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteSlackWorkspaceAuthorizationInputBuilder {
    pub(crate) slack_team_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSlackWorkspaceAuthorizationInputBuilder {
    /// <p>The ID of the Slack workspace authorized with AWS Chatbot.</p>
    /// This field is required.
    pub fn slack_team_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slack_team_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Slack workspace authorized with AWS Chatbot.</p>
    pub fn set_slack_team_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slack_team_id = input;
        self
    }
    /// <p>The ID of the Slack workspace authorized with AWS Chatbot.</p>
    pub fn get_slack_team_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.slack_team_id
    }
    /// Consumes the builder and constructs a [`DeleteSlackWorkspaceAuthorizationInput`](crate::operation::delete_slack_workspace_authorization::DeleteSlackWorkspaceAuthorizationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_slack_workspace_authorization::DeleteSlackWorkspaceAuthorizationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_slack_workspace_authorization::DeleteSlackWorkspaceAuthorizationInput {
                slack_team_id: self.slack_team_id,
            },
        )
    }
}
