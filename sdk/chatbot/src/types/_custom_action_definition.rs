// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The definition of the command to run when invoked as an alias or as an action button.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomActionDefinition {
    /// <p>The command string to run which may include variables by prefixing with a dollar sign ($).</p>
    pub command_text: ::std::string::String,
}
impl CustomActionDefinition {
    /// <p>The command string to run which may include variables by prefixing with a dollar sign ($).</p>
    pub fn command_text(&self) -> &str {
        use std::ops::Deref;
        self.command_text.deref()
    }
}
impl CustomActionDefinition {
    /// Creates a new builder-style object to manufacture [`CustomActionDefinition`](crate::types::CustomActionDefinition).
    pub fn builder() -> crate::types::builders::CustomActionDefinitionBuilder {
        crate::types::builders::CustomActionDefinitionBuilder::default()
    }
}

/// A builder for [`CustomActionDefinition`](crate::types::CustomActionDefinition).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomActionDefinitionBuilder {
    pub(crate) command_text: ::std::option::Option<::std::string::String>,
}
impl CustomActionDefinitionBuilder {
    /// <p>The command string to run which may include variables by prefixing with a dollar sign ($).</p>
    /// This field is required.
    pub fn command_text(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.command_text = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The command string to run which may include variables by prefixing with a dollar sign ($).</p>
    pub fn set_command_text(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.command_text = input;
        self
    }
    /// <p>The command string to run which may include variables by prefixing with a dollar sign ($).</p>
    pub fn get_command_text(&self) -> &::std::option::Option<::std::string::String> {
        &self.command_text
    }
    /// Consumes the builder and constructs a [`CustomActionDefinition`](crate::types::CustomActionDefinition).
    /// This method will fail if any of the following fields are not set:
    /// - [`command_text`](crate::types::builders::CustomActionDefinitionBuilder::command_text)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomActionDefinition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomActionDefinition {
            command_text: self.command_text.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "command_text",
                    "command_text was not specified but it is required when building CustomActionDefinition",
                )
            })?,
        })
    }
}
