// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Filter values for the rule execution.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RuleExecutionFilter {
    /// <p>The pipeline execution ID used to filter rule execution history.</p>
    pub pipeline_execution_id: ::std::option::Option<::std::string::String>,
    /// <p>The field that specifies to filter on the latest execution in the pipeline.</p><note>
    /// <p>Filtering on the latest execution is available for executions run on or after February 08, 2024.</p>
    /// </note>
    pub latest_in_pipeline_execution: ::std::option::Option<crate::types::LatestInPipelineExecutionFilter>,
}
impl RuleExecutionFilter {
    /// <p>The pipeline execution ID used to filter rule execution history.</p>
    pub fn pipeline_execution_id(&self) -> ::std::option::Option<&str> {
        self.pipeline_execution_id.as_deref()
    }
    /// <p>The field that specifies to filter on the latest execution in the pipeline.</p><note>
    /// <p>Filtering on the latest execution is available for executions run on or after February 08, 2024.</p>
    /// </note>
    pub fn latest_in_pipeline_execution(&self) -> ::std::option::Option<&crate::types::LatestInPipelineExecutionFilter> {
        self.latest_in_pipeline_execution.as_ref()
    }
}
impl RuleExecutionFilter {
    /// Creates a new builder-style object to manufacture [`RuleExecutionFilter`](crate::types::RuleExecutionFilter).
    pub fn builder() -> crate::types::builders::RuleExecutionFilterBuilder {
        crate::types::builders::RuleExecutionFilterBuilder::default()
    }
}

/// A builder for [`RuleExecutionFilter`](crate::types::RuleExecutionFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RuleExecutionFilterBuilder {
    pub(crate) pipeline_execution_id: ::std::option::Option<::std::string::String>,
    pub(crate) latest_in_pipeline_execution: ::std::option::Option<crate::types::LatestInPipelineExecutionFilter>,
}
impl RuleExecutionFilterBuilder {
    /// <p>The pipeline execution ID used to filter rule execution history.</p>
    pub fn pipeline_execution_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_execution_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pipeline execution ID used to filter rule execution history.</p>
    pub fn set_pipeline_execution_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_execution_id = input;
        self
    }
    /// <p>The pipeline execution ID used to filter rule execution history.</p>
    pub fn get_pipeline_execution_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_execution_id
    }
    /// <p>The field that specifies to filter on the latest execution in the pipeline.</p><note>
    /// <p>Filtering on the latest execution is available for executions run on or after February 08, 2024.</p>
    /// </note>
    pub fn latest_in_pipeline_execution(mut self, input: crate::types::LatestInPipelineExecutionFilter) -> Self {
        self.latest_in_pipeline_execution = ::std::option::Option::Some(input);
        self
    }
    /// <p>The field that specifies to filter on the latest execution in the pipeline.</p><note>
    /// <p>Filtering on the latest execution is available for executions run on or after February 08, 2024.</p>
    /// </note>
    pub fn set_latest_in_pipeline_execution(mut self, input: ::std::option::Option<crate::types::LatestInPipelineExecutionFilter>) -> Self {
        self.latest_in_pipeline_execution = input;
        self
    }
    /// <p>The field that specifies to filter on the latest execution in the pipeline.</p><note>
    /// <p>Filtering on the latest execution is available for executions run on or after February 08, 2024.</p>
    /// </note>
    pub fn get_latest_in_pipeline_execution(&self) -> &::std::option::Option<crate::types::LatestInPipelineExecutionFilter> {
        &self.latest_in_pipeline_execution
    }
    /// Consumes the builder and constructs a [`RuleExecutionFilter`](crate::types::RuleExecutionFilter).
    pub fn build(self) -> crate::types::RuleExecutionFilter {
        crate::types::RuleExecutionFilter {
            pipeline_execution_id: self.pipeline_execution_id,
            latest_in_pipeline_execution: self.latest_in_pipeline_execution,
        }
    }
}
