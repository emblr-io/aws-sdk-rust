// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Output details listed for a rule execution, such as the rule execution result.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RuleExecutionOutput {
    /// <p>Execution result information listed in the output details for a rule execution.</p>
    pub execution_result: ::std::option::Option<crate::types::RuleExecutionResult>,
}
impl RuleExecutionOutput {
    /// <p>Execution result information listed in the output details for a rule execution.</p>
    pub fn execution_result(&self) -> ::std::option::Option<&crate::types::RuleExecutionResult> {
        self.execution_result.as_ref()
    }
}
impl RuleExecutionOutput {
    /// Creates a new builder-style object to manufacture [`RuleExecutionOutput`](crate::types::RuleExecutionOutput).
    pub fn builder() -> crate::types::builders::RuleExecutionOutputBuilder {
        crate::types::builders::RuleExecutionOutputBuilder::default()
    }
}

/// A builder for [`RuleExecutionOutput`](crate::types::RuleExecutionOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RuleExecutionOutputBuilder {
    pub(crate) execution_result: ::std::option::Option<crate::types::RuleExecutionResult>,
}
impl RuleExecutionOutputBuilder {
    /// <p>Execution result information listed in the output details for a rule execution.</p>
    pub fn execution_result(mut self, input: crate::types::RuleExecutionResult) -> Self {
        self.execution_result = ::std::option::Option::Some(input);
        self
    }
    /// <p>Execution result information listed in the output details for a rule execution.</p>
    pub fn set_execution_result(mut self, input: ::std::option::Option<crate::types::RuleExecutionResult>) -> Self {
        self.execution_result = input;
        self
    }
    /// <p>Execution result information listed in the output details for a rule execution.</p>
    pub fn get_execution_result(&self) -> &::std::option::Option<crate::types::RuleExecutionResult> {
        &self.execution_result
    }
    /// Consumes the builder and constructs a [`RuleExecutionOutput`](crate::types::RuleExecutionOutput).
    pub fn build(self) -> crate::types::RuleExecutionOutput {
        crate::types::RuleExecutionOutput {
            execution_result: self.execution_result,
        }
    }
}
