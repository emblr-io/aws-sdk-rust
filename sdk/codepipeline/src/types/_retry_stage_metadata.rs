// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a specific automatic retry on stage failure, including the attempt number and trigger.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetryStageMetadata {
    /// <p>The number of attempts for a specific stage with automatic retry on stage failure. One attempt is allowed for automatic stage retry on failure.</p>
    pub auto_stage_retry_attempt: ::std::option::Option<i32>,
    /// <p>The number of attempts for a specific stage where manual retries have been made upon stage failure.</p>
    pub manual_stage_retry_attempt: ::std::option::Option<i32>,
    /// <p>The latest trigger for a specific stage where manual or automatic retries have been made upon stage failure.</p>
    pub latest_retry_trigger: ::std::option::Option<crate::types::RetryTrigger>,
}
impl RetryStageMetadata {
    /// <p>The number of attempts for a specific stage with automatic retry on stage failure. One attempt is allowed for automatic stage retry on failure.</p>
    pub fn auto_stage_retry_attempt(&self) -> ::std::option::Option<i32> {
        self.auto_stage_retry_attempt
    }
    /// <p>The number of attempts for a specific stage where manual retries have been made upon stage failure.</p>
    pub fn manual_stage_retry_attempt(&self) -> ::std::option::Option<i32> {
        self.manual_stage_retry_attempt
    }
    /// <p>The latest trigger for a specific stage where manual or automatic retries have been made upon stage failure.</p>
    pub fn latest_retry_trigger(&self) -> ::std::option::Option<&crate::types::RetryTrigger> {
        self.latest_retry_trigger.as_ref()
    }
}
impl RetryStageMetadata {
    /// Creates a new builder-style object to manufacture [`RetryStageMetadata`](crate::types::RetryStageMetadata).
    pub fn builder() -> crate::types::builders::RetryStageMetadataBuilder {
        crate::types::builders::RetryStageMetadataBuilder::default()
    }
}

/// A builder for [`RetryStageMetadata`](crate::types::RetryStageMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetryStageMetadataBuilder {
    pub(crate) auto_stage_retry_attempt: ::std::option::Option<i32>,
    pub(crate) manual_stage_retry_attempt: ::std::option::Option<i32>,
    pub(crate) latest_retry_trigger: ::std::option::Option<crate::types::RetryTrigger>,
}
impl RetryStageMetadataBuilder {
    /// <p>The number of attempts for a specific stage with automatic retry on stage failure. One attempt is allowed for automatic stage retry on failure.</p>
    pub fn auto_stage_retry_attempt(mut self, input: i32) -> Self {
        self.auto_stage_retry_attempt = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of attempts for a specific stage with automatic retry on stage failure. One attempt is allowed for automatic stage retry on failure.</p>
    pub fn set_auto_stage_retry_attempt(mut self, input: ::std::option::Option<i32>) -> Self {
        self.auto_stage_retry_attempt = input;
        self
    }
    /// <p>The number of attempts for a specific stage with automatic retry on stage failure. One attempt is allowed for automatic stage retry on failure.</p>
    pub fn get_auto_stage_retry_attempt(&self) -> &::std::option::Option<i32> {
        &self.auto_stage_retry_attempt
    }
    /// <p>The number of attempts for a specific stage where manual retries have been made upon stage failure.</p>
    pub fn manual_stage_retry_attempt(mut self, input: i32) -> Self {
        self.manual_stage_retry_attempt = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of attempts for a specific stage where manual retries have been made upon stage failure.</p>
    pub fn set_manual_stage_retry_attempt(mut self, input: ::std::option::Option<i32>) -> Self {
        self.manual_stage_retry_attempt = input;
        self
    }
    /// <p>The number of attempts for a specific stage where manual retries have been made upon stage failure.</p>
    pub fn get_manual_stage_retry_attempt(&self) -> &::std::option::Option<i32> {
        &self.manual_stage_retry_attempt
    }
    /// <p>The latest trigger for a specific stage where manual or automatic retries have been made upon stage failure.</p>
    pub fn latest_retry_trigger(mut self, input: crate::types::RetryTrigger) -> Self {
        self.latest_retry_trigger = ::std::option::Option::Some(input);
        self
    }
    /// <p>The latest trigger for a specific stage where manual or automatic retries have been made upon stage failure.</p>
    pub fn set_latest_retry_trigger(mut self, input: ::std::option::Option<crate::types::RetryTrigger>) -> Self {
        self.latest_retry_trigger = input;
        self
    }
    /// <p>The latest trigger for a specific stage where manual or automatic retries have been made upon stage failure.</p>
    pub fn get_latest_retry_trigger(&self) -> &::std::option::Option<crate::types::RetryTrigger> {
        &self.latest_retry_trigger
    }
    /// Consumes the builder and constructs a [`RetryStageMetadata`](crate::types::RetryStageMetadata).
    pub fn build(self) -> crate::types::RetryStageMetadata {
        crate::types::RetryStageMetadata {
            auto_stage_retry_attempt: self.auto_stage_retry_attempt,
            manual_stage_retry_attempt: self.manual_stage_retry_attempt,
            latest_retry_trigger: self.latest_retry_trigger,
        }
    }
}
