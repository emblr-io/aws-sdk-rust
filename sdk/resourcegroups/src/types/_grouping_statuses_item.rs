// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The information about a grouping or ungrouping resource action.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GroupingStatusesItem {
    /// <p>The Amazon resource name (ARN) of a resource.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
    /// <p>Describes the resource grouping action with values of <code>GROUP</code> or <code>UNGROUP</code>.</p>
    pub action: ::std::option::Option<crate::types::GroupingType>,
    /// <p>Describes the resource grouping status with values of <code>SUCCESS</code>, <code>FAILED</code>, <code>IN_PROGRESS</code>, or <code>SKIPPED</code>.</p>
    pub status: ::std::option::Option<crate::types::GroupingStatus>,
    /// <p>A message that explains the <code>ErrorCode</code>.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the error code that was raised.</p>
    pub error_code: ::std::option::Option<::std::string::String>,
    /// <p>A timestamp of when the status was last updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl GroupingStatusesItem {
    /// <p>The Amazon resource name (ARN) of a resource.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>Describes the resource grouping action with values of <code>GROUP</code> or <code>UNGROUP</code>.</p>
    pub fn action(&self) -> ::std::option::Option<&crate::types::GroupingType> {
        self.action.as_ref()
    }
    /// <p>Describes the resource grouping status with values of <code>SUCCESS</code>, <code>FAILED</code>, <code>IN_PROGRESS</code>, or <code>SKIPPED</code>.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::GroupingStatus> {
        self.status.as_ref()
    }
    /// <p>A message that explains the <code>ErrorCode</code>.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p>Specifies the error code that was raised.</p>
    pub fn error_code(&self) -> ::std::option::Option<&str> {
        self.error_code.as_deref()
    }
    /// <p>A timestamp of when the status was last updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl GroupingStatusesItem {
    /// Creates a new builder-style object to manufacture [`GroupingStatusesItem`](crate::types::GroupingStatusesItem).
    pub fn builder() -> crate::types::builders::GroupingStatusesItemBuilder {
        crate::types::builders::GroupingStatusesItemBuilder::default()
    }
}

/// A builder for [`GroupingStatusesItem`](crate::types::GroupingStatusesItem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GroupingStatusesItemBuilder {
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::GroupingType>,
    pub(crate) status: ::std::option::Option<crate::types::GroupingStatus>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
    pub(crate) error_code: ::std::option::Option<::std::string::String>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl GroupingStatusesItemBuilder {
    /// <p>The Amazon resource name (ARN) of a resource.</p>
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon resource name (ARN) of a resource.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon resource name (ARN) of a resource.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// <p>Describes the resource grouping action with values of <code>GROUP</code> or <code>UNGROUP</code>.</p>
    pub fn action(mut self, input: crate::types::GroupingType) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the resource grouping action with values of <code>GROUP</code> or <code>UNGROUP</code>.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::GroupingType>) -> Self {
        self.action = input;
        self
    }
    /// <p>Describes the resource grouping action with values of <code>GROUP</code> or <code>UNGROUP</code>.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::GroupingType> {
        &self.action
    }
    /// <p>Describes the resource grouping status with values of <code>SUCCESS</code>, <code>FAILED</code>, <code>IN_PROGRESS</code>, or <code>SKIPPED</code>.</p>
    pub fn status(mut self, input: crate::types::GroupingStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the resource grouping status with values of <code>SUCCESS</code>, <code>FAILED</code>, <code>IN_PROGRESS</code>, or <code>SKIPPED</code>.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::GroupingStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Describes the resource grouping status with values of <code>SUCCESS</code>, <code>FAILED</code>, <code>IN_PROGRESS</code>, or <code>SKIPPED</code>.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::GroupingStatus> {
        &self.status
    }
    /// <p>A message that explains the <code>ErrorCode</code>.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message that explains the <code>ErrorCode</code>.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>A message that explains the <code>ErrorCode</code>.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// <p>Specifies the error code that was raised.</p>
    pub fn error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the error code that was raised.</p>
    pub fn set_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>Specifies the error code that was raised.</p>
    pub fn get_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_code
    }
    /// <p>A timestamp of when the status was last updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>A timestamp of when the status was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>A timestamp of when the status was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`GroupingStatusesItem`](crate::types::GroupingStatusesItem).
    pub fn build(self) -> crate::types::GroupingStatusesItem {
        crate::types::GroupingStatusesItem {
            resource_arn: self.resource_arn,
            action: self.action,
            status: self.status,
            error_message: self.error_message,
            error_code: self.error_code,
            updated_at: self.updated_at,
        }
    }
}
