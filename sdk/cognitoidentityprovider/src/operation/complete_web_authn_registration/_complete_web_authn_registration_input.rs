// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CompleteWebAuthnRegistrationInput {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub access_token: ::std::option::Option<::std::string::String>,
    /// <p>A <a href="https://www.w3.org/TR/WebAuthn-3/#dictdef-registrationresponsejson">RegistrationResponseJSON</a> public-key credential response from the user's passkey provider.</p>
    pub credential: ::std::option::Option<::aws_smithy_types::Document>,
}
impl CompleteWebAuthnRegistrationInput {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn access_token(&self) -> ::std::option::Option<&str> {
        self.access_token.as_deref()
    }
    /// <p>A <a href="https://www.w3.org/TR/WebAuthn-3/#dictdef-registrationresponsejson">RegistrationResponseJSON</a> public-key credential response from the user's passkey provider.</p>
    pub fn credential(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.credential.as_ref()
    }
}
impl ::std::fmt::Debug for CompleteWebAuthnRegistrationInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CompleteWebAuthnRegistrationInput");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("credential", &self.credential);
        formatter.finish()
    }
}
impl CompleteWebAuthnRegistrationInput {
    /// Creates a new builder-style object to manufacture [`CompleteWebAuthnRegistrationInput`](crate::operation::complete_web_authn_registration::CompleteWebAuthnRegistrationInput).
    pub fn builder() -> crate::operation::complete_web_authn_registration::builders::CompleteWebAuthnRegistrationInputBuilder {
        crate::operation::complete_web_authn_registration::builders::CompleteWebAuthnRegistrationInputBuilder::default()
    }
}

/// A builder for [`CompleteWebAuthnRegistrationInput`](crate::operation::complete_web_authn_registration::CompleteWebAuthnRegistrationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CompleteWebAuthnRegistrationInputBuilder {
    pub(crate) access_token: ::std::option::Option<::std::string::String>,
    pub(crate) credential: ::std::option::Option<::aws_smithy_types::Document>,
}
impl CompleteWebAuthnRegistrationInputBuilder {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    /// This field is required.
    pub fn access_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.access_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn set_access_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.access_token = input;
        self
    }
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn get_access_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.access_token
    }
    /// <p>A <a href="https://www.w3.org/TR/WebAuthn-3/#dictdef-registrationresponsejson">RegistrationResponseJSON</a> public-key credential response from the user's passkey provider.</p>
    /// This field is required.
    pub fn credential(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.credential = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <a href="https://www.w3.org/TR/WebAuthn-3/#dictdef-registrationresponsejson">RegistrationResponseJSON</a> public-key credential response from the user's passkey provider.</p>
    pub fn set_credential(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.credential = input;
        self
    }
    /// <p>A <a href="https://www.w3.org/TR/WebAuthn-3/#dictdef-registrationresponsejson">RegistrationResponseJSON</a> public-key credential response from the user's passkey provider.</p>
    pub fn get_credential(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.credential
    }
    /// Consumes the builder and constructs a [`CompleteWebAuthnRegistrationInput`](crate::operation::complete_web_authn_registration::CompleteWebAuthnRegistrationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::complete_web_authn_registration::CompleteWebAuthnRegistrationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::complete_web_authn_registration::CompleteWebAuthnRegistrationInput {
            access_token: self.access_token,
            credential: self.credential,
        })
    }
}
impl ::std::fmt::Debug for CompleteWebAuthnRegistrationInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CompleteWebAuthnRegistrationInputBuilder");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("credential", &self.credential);
        formatter.finish()
    }
}
