// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct DeleteWebAuthnCredentialInput {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub access_token: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the passkey that you want to delete.</p>
    pub credential_id: ::std::option::Option<::std::string::String>,
}
impl DeleteWebAuthnCredentialInput {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn access_token(&self) -> ::std::option::Option<&str> {
        self.access_token.as_deref()
    }
    /// <p>The unique identifier of the passkey that you want to delete.</p>
    pub fn credential_id(&self) -> ::std::option::Option<&str> {
        self.credential_id.as_deref()
    }
}
impl ::std::fmt::Debug for DeleteWebAuthnCredentialInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DeleteWebAuthnCredentialInput");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("credential_id", &self.credential_id);
        formatter.finish()
    }
}
impl DeleteWebAuthnCredentialInput {
    /// Creates a new builder-style object to manufacture [`DeleteWebAuthnCredentialInput`](crate::operation::delete_web_authn_credential::DeleteWebAuthnCredentialInput).
    pub fn builder() -> crate::operation::delete_web_authn_credential::builders::DeleteWebAuthnCredentialInputBuilder {
        crate::operation::delete_web_authn_credential::builders::DeleteWebAuthnCredentialInputBuilder::default()
    }
}

/// A builder for [`DeleteWebAuthnCredentialInput`](crate::operation::delete_web_authn_credential::DeleteWebAuthnCredentialInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct DeleteWebAuthnCredentialInputBuilder {
    pub(crate) access_token: ::std::option::Option<::std::string::String>,
    pub(crate) credential_id: ::std::option::Option<::std::string::String>,
}
impl DeleteWebAuthnCredentialInputBuilder {
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    /// This field is required.
    pub fn access_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.access_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn set_access_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.access_token = input;
        self
    }
    /// <p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p>
    pub fn get_access_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.access_token
    }
    /// <p>The unique identifier of the passkey that you want to delete.</p>
    /// This field is required.
    pub fn credential_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.credential_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the passkey that you want to delete.</p>
    pub fn set_credential_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.credential_id = input;
        self
    }
    /// <p>The unique identifier of the passkey that you want to delete.</p>
    pub fn get_credential_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.credential_id
    }
    /// Consumes the builder and constructs a [`DeleteWebAuthnCredentialInput`](crate::operation::delete_web_authn_credential::DeleteWebAuthnCredentialInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_web_authn_credential::DeleteWebAuthnCredentialInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_web_authn_credential::DeleteWebAuthnCredentialInput {
            access_token: self.access_token,
            credential_id: self.credential_id,
        })
    }
}
impl ::std::fmt::Debug for DeleteWebAuthnCredentialInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DeleteWebAuthnCredentialInputBuilder");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("credential_id", &self.credential_id);
        formatter.finish()
    }
}
