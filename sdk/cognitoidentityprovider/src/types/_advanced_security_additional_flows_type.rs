// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Threat protection configuration options for additional authentication types in your user pool, including custom authentication.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdvancedSecurityAdditionalFlowsType {
    /// <p>The operating mode of threat protection in custom authentication with <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html"> Custom authentication challenge Lambda triggers</a>.</p>
    pub custom_auth_mode: ::std::option::Option<crate::types::AdvancedSecurityEnabledModeType>,
}
impl AdvancedSecurityAdditionalFlowsType {
    /// <p>The operating mode of threat protection in custom authentication with <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html"> Custom authentication challenge Lambda triggers</a>.</p>
    pub fn custom_auth_mode(&self) -> ::std::option::Option<&crate::types::AdvancedSecurityEnabledModeType> {
        self.custom_auth_mode.as_ref()
    }
}
impl AdvancedSecurityAdditionalFlowsType {
    /// Creates a new builder-style object to manufacture [`AdvancedSecurityAdditionalFlowsType`](crate::types::AdvancedSecurityAdditionalFlowsType).
    pub fn builder() -> crate::types::builders::AdvancedSecurityAdditionalFlowsTypeBuilder {
        crate::types::builders::AdvancedSecurityAdditionalFlowsTypeBuilder::default()
    }
}

/// A builder for [`AdvancedSecurityAdditionalFlowsType`](crate::types::AdvancedSecurityAdditionalFlowsType).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AdvancedSecurityAdditionalFlowsTypeBuilder {
    pub(crate) custom_auth_mode: ::std::option::Option<crate::types::AdvancedSecurityEnabledModeType>,
}
impl AdvancedSecurityAdditionalFlowsTypeBuilder {
    /// <p>The operating mode of threat protection in custom authentication with <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html"> Custom authentication challenge Lambda triggers</a>.</p>
    pub fn custom_auth_mode(mut self, input: crate::types::AdvancedSecurityEnabledModeType) -> Self {
        self.custom_auth_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The operating mode of threat protection in custom authentication with <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html"> Custom authentication challenge Lambda triggers</a>.</p>
    pub fn set_custom_auth_mode(mut self, input: ::std::option::Option<crate::types::AdvancedSecurityEnabledModeType>) -> Self {
        self.custom_auth_mode = input;
        self
    }
    /// <p>The operating mode of threat protection in custom authentication with <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html"> Custom authentication challenge Lambda triggers</a>.</p>
    pub fn get_custom_auth_mode(&self) -> &::std::option::Option<crate::types::AdvancedSecurityEnabledModeType> {
        &self.custom_auth_mode
    }
    /// Consumes the builder and constructs a [`AdvancedSecurityAdditionalFlowsType`](crate::types::AdvancedSecurityAdditionalFlowsType).
    pub fn build(self) -> crate::types::AdvancedSecurityAdditionalFlowsType {
        crate::types::AdvancedSecurityAdditionalFlowsType {
            custom_auth_mode: self.custom_auth_mode,
        }
    }
}
