// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A collection of user pool Lambda triggers. Amazon Cognito invokes triggers at several possible stages of user pool operations. Triggers can modify the outcome of the operations that invoked them.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LambdaConfigType {
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html">pre sign-up Lambda trigger</a> in a user pool. This trigger evaluates new users and can bypass confirmation, <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html">link a federated user profile</a>, or block sign-up requests.</p>
    pub pre_sign_up: ::std::option::Option<::std::string::String>,
    /// <p>A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.</p>
    pub custom_message: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html">post confirmation Lambda trigger</a> in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.</p>
    pub post_confirmation: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html">pre authentication trigger</a> in a user pool. This trigger can evaluate and modify user sign-in events.</p>
    pub pre_authentication: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html">post authentication Lambda trigger</a> in a user pool. This trigger can take custom actions after a user signs in.</p>
    pub post_authentication: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub define_auth_challenge: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub create_auth_challenge: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub verify_auth_challenge_response: ::std::option::Option<::std::string::String>,
    /// <p>The legacy configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool.</p>
    /// <p>Set this parameter for legacy purposes. If you also set an ARN in <code>PreTokenGenerationConfig</code>, its value must be identical to <code>PreTokenGeneration</code>. For new instances of pre token generation triggers, set the <code>LambdaArn</code> of <code>PreTokenGenerationConfig</code>.</p>
    pub pre_token_generation: ::std::option::Option<::std::string::String>,
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html">migrate user Lambda trigger</a> in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.</p>
    pub user_migration: ::std::option::Option<::std::string::String>,
    /// <p>The detailed configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool. If you also set an ARN in <code>PreTokenGeneration</code>, its value must be identical to <code>PreTokenGenerationConfig</code>.</p>
    pub pre_token_generation_config: ::std::option::Option<crate::types::PreTokenGenerationVersionConfigType>,
    /// <p>The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub custom_sms_sender: ::std::option::Option<crate::types::CustomSmsLambdaVersionConfigType>,
    /// <p>The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub custom_email_sender: ::std::option::Option<crate::types::CustomEmailLambdaVersionConfigType>,
    /// <p>The ARN of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.</p>
    pub kms_key_id: ::std::option::Option<::std::string::String>,
}
impl LambdaConfigType {
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html">pre sign-up Lambda trigger</a> in a user pool. This trigger evaluates new users and can bypass confirmation, <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html">link a federated user profile</a>, or block sign-up requests.</p>
    pub fn pre_sign_up(&self) -> ::std::option::Option<&str> {
        self.pre_sign_up.as_deref()
    }
    /// <p>A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.</p>
    pub fn custom_message(&self) -> ::std::option::Option<&str> {
        self.custom_message.as_deref()
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html">post confirmation Lambda trigger</a> in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.</p>
    pub fn post_confirmation(&self) -> ::std::option::Option<&str> {
        self.post_confirmation.as_deref()
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html">pre authentication trigger</a> in a user pool. This trigger can evaluate and modify user sign-in events.</p>
    pub fn pre_authentication(&self) -> ::std::option::Option<&str> {
        self.pre_authentication.as_deref()
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html">post authentication Lambda trigger</a> in a user pool. This trigger can take custom actions after a user signs in.</p>
    pub fn post_authentication(&self) -> ::std::option::Option<&str> {
        self.post_authentication.as_deref()
    }
    /// <p>The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn define_auth_challenge(&self) -> ::std::option::Option<&str> {
        self.define_auth_challenge.as_deref()
    }
    /// <p>The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn create_auth_challenge(&self) -> ::std::option::Option<&str> {
        self.create_auth_challenge.as_deref()
    }
    /// <p>The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn verify_auth_challenge_response(&self) -> ::std::option::Option<&str> {
        self.verify_auth_challenge_response.as_deref()
    }
    /// <p>The legacy configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool.</p>
    /// <p>Set this parameter for legacy purposes. If you also set an ARN in <code>PreTokenGenerationConfig</code>, its value must be identical to <code>PreTokenGeneration</code>. For new instances of pre token generation triggers, set the <code>LambdaArn</code> of <code>PreTokenGenerationConfig</code>.</p>
    pub fn pre_token_generation(&self) -> ::std::option::Option<&str> {
        self.pre_token_generation.as_deref()
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html">migrate user Lambda trigger</a> in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.</p>
    pub fn user_migration(&self) -> ::std::option::Option<&str> {
        self.user_migration.as_deref()
    }
    /// <p>The detailed configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool. If you also set an ARN in <code>PreTokenGeneration</code>, its value must be identical to <code>PreTokenGenerationConfig</code>.</p>
    pub fn pre_token_generation_config(&self) -> ::std::option::Option<&crate::types::PreTokenGenerationVersionConfigType> {
        self.pre_token_generation_config.as_ref()
    }
    /// <p>The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn custom_sms_sender(&self) -> ::std::option::Option<&crate::types::CustomSmsLambdaVersionConfigType> {
        self.custom_sms_sender.as_ref()
    }
    /// <p>The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn custom_email_sender(&self) -> ::std::option::Option<&crate::types::CustomEmailLambdaVersionConfigType> {
        self.custom_email_sender.as_ref()
    }
    /// <p>The ARN of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.</p>
    pub fn kms_key_id(&self) -> ::std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
}
impl LambdaConfigType {
    /// Creates a new builder-style object to manufacture [`LambdaConfigType`](crate::types::LambdaConfigType).
    pub fn builder() -> crate::types::builders::LambdaConfigTypeBuilder {
        crate::types::builders::LambdaConfigTypeBuilder::default()
    }
}

/// A builder for [`LambdaConfigType`](crate::types::LambdaConfigType).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LambdaConfigTypeBuilder {
    pub(crate) pre_sign_up: ::std::option::Option<::std::string::String>,
    pub(crate) custom_message: ::std::option::Option<::std::string::String>,
    pub(crate) post_confirmation: ::std::option::Option<::std::string::String>,
    pub(crate) pre_authentication: ::std::option::Option<::std::string::String>,
    pub(crate) post_authentication: ::std::option::Option<::std::string::String>,
    pub(crate) define_auth_challenge: ::std::option::Option<::std::string::String>,
    pub(crate) create_auth_challenge: ::std::option::Option<::std::string::String>,
    pub(crate) verify_auth_challenge_response: ::std::option::Option<::std::string::String>,
    pub(crate) pre_token_generation: ::std::option::Option<::std::string::String>,
    pub(crate) user_migration: ::std::option::Option<::std::string::String>,
    pub(crate) pre_token_generation_config: ::std::option::Option<crate::types::PreTokenGenerationVersionConfigType>,
    pub(crate) custom_sms_sender: ::std::option::Option<crate::types::CustomSmsLambdaVersionConfigType>,
    pub(crate) custom_email_sender: ::std::option::Option<crate::types::CustomEmailLambdaVersionConfigType>,
    pub(crate) kms_key_id: ::std::option::Option<::std::string::String>,
}
impl LambdaConfigTypeBuilder {
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html">pre sign-up Lambda trigger</a> in a user pool. This trigger evaluates new users and can bypass confirmation, <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html">link a federated user profile</a>, or block sign-up requests.</p>
    pub fn pre_sign_up(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pre_sign_up = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html">pre sign-up Lambda trigger</a> in a user pool. This trigger evaluates new users and can bypass confirmation, <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html">link a federated user profile</a>, or block sign-up requests.</p>
    pub fn set_pre_sign_up(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pre_sign_up = input;
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html">pre sign-up Lambda trigger</a> in a user pool. This trigger evaluates new users and can bypass confirmation, <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html">link a federated user profile</a>, or block sign-up requests.</p>
    pub fn get_pre_sign_up(&self) -> &::std::option::Option<::std::string::String> {
        &self.pre_sign_up
    }
    /// <p>A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.</p>
    pub fn custom_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.</p>
    pub fn set_custom_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_message = input;
        self
    }
    /// <p>A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.</p>
    pub fn get_custom_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_message
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html">post confirmation Lambda trigger</a> in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.</p>
    pub fn post_confirmation(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.post_confirmation = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html">post confirmation Lambda trigger</a> in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.</p>
    pub fn set_post_confirmation(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.post_confirmation = input;
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html">post confirmation Lambda trigger</a> in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.</p>
    pub fn get_post_confirmation(&self) -> &::std::option::Option<::std::string::String> {
        &self.post_confirmation
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html">pre authentication trigger</a> in a user pool. This trigger can evaluate and modify user sign-in events.</p>
    pub fn pre_authentication(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pre_authentication = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html">pre authentication trigger</a> in a user pool. This trigger can evaluate and modify user sign-in events.</p>
    pub fn set_pre_authentication(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pre_authentication = input;
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html">pre authentication trigger</a> in a user pool. This trigger can evaluate and modify user sign-in events.</p>
    pub fn get_pre_authentication(&self) -> &::std::option::Option<::std::string::String> {
        &self.pre_authentication
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html">post authentication Lambda trigger</a> in a user pool. This trigger can take custom actions after a user signs in.</p>
    pub fn post_authentication(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.post_authentication = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html">post authentication Lambda trigger</a> in a user pool. This trigger can take custom actions after a user signs in.</p>
    pub fn set_post_authentication(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.post_authentication = input;
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html">post authentication Lambda trigger</a> in a user pool. This trigger can take custom actions after a user signs in.</p>
    pub fn get_post_authentication(&self) -> &::std::option::Option<::std::string::String> {
        &self.post_authentication
    }
    /// <p>The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn define_auth_challenge(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.define_auth_challenge = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn set_define_auth_challenge(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.define_auth_challenge = input;
        self
    }
    /// <p>The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn get_define_auth_challenge(&self) -> &::std::option::Option<::std::string::String> {
        &self.define_auth_challenge
    }
    /// <p>The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn create_auth_challenge(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.create_auth_challenge = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn set_create_auth_challenge(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.create_auth_challenge = input;
        self
    }
    /// <p>The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn get_create_auth_challenge(&self) -> &::std::option::Option<::std::string::String> {
        &self.create_auth_challenge
    }
    /// <p>The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn verify_auth_challenge_response(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.verify_auth_challenge_response = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn set_verify_auth_challenge_response(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.verify_auth_challenge_response = input;
        self
    }
    /// <p>The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html">custom authentication challenge triggers</a>.</p>
    pub fn get_verify_auth_challenge_response(&self) -> &::std::option::Option<::std::string::String> {
        &self.verify_auth_challenge_response
    }
    /// <p>The legacy configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool.</p>
    /// <p>Set this parameter for legacy purposes. If you also set an ARN in <code>PreTokenGenerationConfig</code>, its value must be identical to <code>PreTokenGeneration</code>. For new instances of pre token generation triggers, set the <code>LambdaArn</code> of <code>PreTokenGenerationConfig</code>.</p>
    pub fn pre_token_generation(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pre_token_generation = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The legacy configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool.</p>
    /// <p>Set this parameter for legacy purposes. If you also set an ARN in <code>PreTokenGenerationConfig</code>, its value must be identical to <code>PreTokenGeneration</code>. For new instances of pre token generation triggers, set the <code>LambdaArn</code> of <code>PreTokenGenerationConfig</code>.</p>
    pub fn set_pre_token_generation(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pre_token_generation = input;
        self
    }
    /// <p>The legacy configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool.</p>
    /// <p>Set this parameter for legacy purposes. If you also set an ARN in <code>PreTokenGenerationConfig</code>, its value must be identical to <code>PreTokenGeneration</code>. For new instances of pre token generation triggers, set the <code>LambdaArn</code> of <code>PreTokenGenerationConfig</code>.</p>
    pub fn get_pre_token_generation(&self) -> &::std::option::Option<::std::string::String> {
        &self.pre_token_generation
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html">migrate user Lambda trigger</a> in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.</p>
    pub fn user_migration(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_migration = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html">migrate user Lambda trigger</a> in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.</p>
    pub fn set_user_migration(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_migration = input;
        self
    }
    /// <p>The configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html">migrate user Lambda trigger</a> in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.</p>
    pub fn get_user_migration(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_migration
    }
    /// <p>The detailed configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool. If you also set an ARN in <code>PreTokenGeneration</code>, its value must be identical to <code>PreTokenGenerationConfig</code>.</p>
    pub fn pre_token_generation_config(mut self, input: crate::types::PreTokenGenerationVersionConfigType) -> Self {
        self.pre_token_generation_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The detailed configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool. If you also set an ARN in <code>PreTokenGeneration</code>, its value must be identical to <code>PreTokenGenerationConfig</code>.</p>
    pub fn set_pre_token_generation_config(mut self, input: ::std::option::Option<crate::types::PreTokenGenerationVersionConfigType>) -> Self {
        self.pre_token_generation_config = input;
        self
    }
    /// <p>The detailed configuration of a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html">pre token generation Lambda trigger</a> in a user pool. If you also set an ARN in <code>PreTokenGeneration</code>, its value must be identical to <code>PreTokenGenerationConfig</code>.</p>
    pub fn get_pre_token_generation_config(&self) -> &::std::option::Option<crate::types::PreTokenGenerationVersionConfigType> {
        &self.pre_token_generation_config
    }
    /// <p>The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn custom_sms_sender(mut self, input: crate::types::CustomSmsLambdaVersionConfigType) -> Self {
        self.custom_sms_sender = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn set_custom_sms_sender(mut self, input: ::std::option::Option<crate::types::CustomSmsLambdaVersionConfigType>) -> Self {
        self.custom_sms_sender = input;
        self
    }
    /// <p>The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn get_custom_sms_sender(&self) -> &::std::option::Option<crate::types::CustomSmsLambdaVersionConfigType> {
        &self.custom_sms_sender
    }
    /// <p>The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn custom_email_sender(mut self, input: crate::types::CustomEmailLambdaVersionConfigType) -> Self {
        self.custom_email_sender = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn set_custom_email_sender(mut self, input: ::std::option::Option<crate::types::CustomEmailLambdaVersionConfigType>) -> Self {
        self.custom_email_sender = input;
        self
    }
    /// <p>The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.</p>
    pub fn get_custom_email_sender(&self) -> &::std::option::Option<crate::types::CustomEmailLambdaVersionConfigType> {
        &self.custom_email_sender
    }
    /// <p>The ARN of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.</p>
    pub fn kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.</p>
    pub fn set_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// <p>The ARN of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.</p>
    pub fn get_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key_id
    }
    /// Consumes the builder and constructs a [`LambdaConfigType`](crate::types::LambdaConfigType).
    pub fn build(self) -> crate::types::LambdaConfigType {
        crate::types::LambdaConfigType {
            pre_sign_up: self.pre_sign_up,
            custom_message: self.custom_message,
            post_confirmation: self.post_confirmation,
            pre_authentication: self.pre_authentication,
            post_authentication: self.post_authentication,
            define_auth_challenge: self.define_auth_challenge,
            create_auth_challenge: self.create_auth_challenge,
            verify_auth_challenge_response: self.verify_auth_challenge_response,
            pre_token_generation: self.pre_token_generation,
            user_migration: self.user_migration,
            pre_token_generation_config: self.pre_token_generation_config,
            custom_sms_sender: self.custom_sms_sender,
            custom_email_sender: self.custom_email_sender,
            kms_key_id: self.kms_key_id,
        }
    }
}
