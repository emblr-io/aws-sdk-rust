// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for the Amazon Data Firehose stream destination of user activity log export with threat protection.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FirehoseConfigurationType {
    /// <p>The ARN of an Amazon Data Firehose stream that's the destination for threat protection log export.</p>
    pub stream_arn: ::std::option::Option<::std::string::String>,
}
impl FirehoseConfigurationType {
    /// <p>The ARN of an Amazon Data Firehose stream that's the destination for threat protection log export.</p>
    pub fn stream_arn(&self) -> ::std::option::Option<&str> {
        self.stream_arn.as_deref()
    }
}
impl FirehoseConfigurationType {
    /// Creates a new builder-style object to manufacture [`FirehoseConfigurationType`](crate::types::FirehoseConfigurationType).
    pub fn builder() -> crate::types::builders::FirehoseConfigurationTypeBuilder {
        crate::types::builders::FirehoseConfigurationTypeBuilder::default()
    }
}

/// A builder for [`FirehoseConfigurationType`](crate::types::FirehoseConfigurationType).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FirehoseConfigurationTypeBuilder {
    pub(crate) stream_arn: ::std::option::Option<::std::string::String>,
}
impl FirehoseConfigurationTypeBuilder {
    /// <p>The ARN of an Amazon Data Firehose stream that's the destination for threat protection log export.</p>
    pub fn stream_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stream_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of an Amazon Data Firehose stream that's the destination for threat protection log export.</p>
    pub fn set_stream_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stream_arn = input;
        self
    }
    /// <p>The ARN of an Amazon Data Firehose stream that's the destination for threat protection log export.</p>
    pub fn get_stream_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.stream_arn
    }
    /// Consumes the builder and constructs a [`FirehoseConfigurationType`](crate::types::FirehoseConfigurationType).
    pub fn build(self) -> crate::types::FirehoseConfigurationType {
        crate::types::FirehoseConfigurationType { stream_arn: self.stream_arn }
    }
}
