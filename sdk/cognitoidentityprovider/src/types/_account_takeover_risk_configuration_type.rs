// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The settings for automated responses and notification templates for adaptive authentication with threat protection features.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccountTakeoverRiskConfigurationType {
    /// <p>The settings for composing and sending an email message when threat protection assesses a risk level with adaptive authentication. When you choose to notify users in <code>AccountTakeoverRiskConfiguration</code>, Amazon Cognito sends an email message using the method and template that you set with this data type.</p>
    pub notify_configuration: ::std::option::Option<crate::types::NotifyConfigurationType>,
    /// <p>A list of account-takeover actions for each level of risk that Amazon Cognito might assess with threat protection.</p>
    pub actions: ::std::option::Option<crate::types::AccountTakeoverActionsType>,
}
impl AccountTakeoverRiskConfigurationType {
    /// <p>The settings for composing and sending an email message when threat protection assesses a risk level with adaptive authentication. When you choose to notify users in <code>AccountTakeoverRiskConfiguration</code>, Amazon Cognito sends an email message using the method and template that you set with this data type.</p>
    pub fn notify_configuration(&self) -> ::std::option::Option<&crate::types::NotifyConfigurationType> {
        self.notify_configuration.as_ref()
    }
    /// <p>A list of account-takeover actions for each level of risk that Amazon Cognito might assess with threat protection.</p>
    pub fn actions(&self) -> ::std::option::Option<&crate::types::AccountTakeoverActionsType> {
        self.actions.as_ref()
    }
}
impl AccountTakeoverRiskConfigurationType {
    /// Creates a new builder-style object to manufacture [`AccountTakeoverRiskConfigurationType`](crate::types::AccountTakeoverRiskConfigurationType).
    pub fn builder() -> crate::types::builders::AccountTakeoverRiskConfigurationTypeBuilder {
        crate::types::builders::AccountTakeoverRiskConfigurationTypeBuilder::default()
    }
}

/// A builder for [`AccountTakeoverRiskConfigurationType`](crate::types::AccountTakeoverRiskConfigurationType).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AccountTakeoverRiskConfigurationTypeBuilder {
    pub(crate) notify_configuration: ::std::option::Option<crate::types::NotifyConfigurationType>,
    pub(crate) actions: ::std::option::Option<crate::types::AccountTakeoverActionsType>,
}
impl AccountTakeoverRiskConfigurationTypeBuilder {
    /// <p>The settings for composing and sending an email message when threat protection assesses a risk level with adaptive authentication. When you choose to notify users in <code>AccountTakeoverRiskConfiguration</code>, Amazon Cognito sends an email message using the method and template that you set with this data type.</p>
    pub fn notify_configuration(mut self, input: crate::types::NotifyConfigurationType) -> Self {
        self.notify_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The settings for composing and sending an email message when threat protection assesses a risk level with adaptive authentication. When you choose to notify users in <code>AccountTakeoverRiskConfiguration</code>, Amazon Cognito sends an email message using the method and template that you set with this data type.</p>
    pub fn set_notify_configuration(mut self, input: ::std::option::Option<crate::types::NotifyConfigurationType>) -> Self {
        self.notify_configuration = input;
        self
    }
    /// <p>The settings for composing and sending an email message when threat protection assesses a risk level with adaptive authentication. When you choose to notify users in <code>AccountTakeoverRiskConfiguration</code>, Amazon Cognito sends an email message using the method and template that you set with this data type.</p>
    pub fn get_notify_configuration(&self) -> &::std::option::Option<crate::types::NotifyConfigurationType> {
        &self.notify_configuration
    }
    /// <p>A list of account-takeover actions for each level of risk that Amazon Cognito might assess with threat protection.</p>
    /// This field is required.
    pub fn actions(mut self, input: crate::types::AccountTakeoverActionsType) -> Self {
        self.actions = ::std::option::Option::Some(input);
        self
    }
    /// <p>A list of account-takeover actions for each level of risk that Amazon Cognito might assess with threat protection.</p>
    pub fn set_actions(mut self, input: ::std::option::Option<crate::types::AccountTakeoverActionsType>) -> Self {
        self.actions = input;
        self
    }
    /// <p>A list of account-takeover actions for each level of risk that Amazon Cognito might assess with threat protection.</p>
    pub fn get_actions(&self) -> &::std::option::Option<crate::types::AccountTakeoverActionsType> {
        &self.actions
    }
    /// Consumes the builder and constructs a [`AccountTakeoverRiskConfigurationType`](crate::types::AccountTakeoverRiskConfigurationType).
    pub fn build(self) -> crate::types::AccountTakeoverRiskConfigurationType {
        crate::types::AccountTakeoverRiskConfigurationType {
            notify_configuration: self.notify_configuration,
            actions: self.actions,
        }
    }
}
