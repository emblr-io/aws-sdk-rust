// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the specified export task.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportTaskDetails {
    /// <p>The start time of the export task.</p>
    pub start_time: ::aws_smithy_types::DateTime,
    /// <p>The time elapsed, in seconds, since the start time of the export task.</p>
    pub time_elapsed_seconds: i64,
    /// <p>The number of progress percentage of the export task.</p>
    pub progress_percentage: i32,
    /// <p>The number of exported vertices.</p>
    pub num_vertices_written: ::std::option::Option<i64>,
    /// <p>The number of exported edges.</p>
    pub num_edges_written: ::std::option::Option<i64>,
}
impl ExportTaskDetails {
    /// <p>The start time of the export task.</p>
    pub fn start_time(&self) -> &::aws_smithy_types::DateTime {
        &self.start_time
    }
    /// <p>The time elapsed, in seconds, since the start time of the export task.</p>
    pub fn time_elapsed_seconds(&self) -> i64 {
        self.time_elapsed_seconds
    }
    /// <p>The number of progress percentage of the export task.</p>
    pub fn progress_percentage(&self) -> i32 {
        self.progress_percentage
    }
    /// <p>The number of exported vertices.</p>
    pub fn num_vertices_written(&self) -> ::std::option::Option<i64> {
        self.num_vertices_written
    }
    /// <p>The number of exported edges.</p>
    pub fn num_edges_written(&self) -> ::std::option::Option<i64> {
        self.num_edges_written
    }
}
impl ExportTaskDetails {
    /// Creates a new builder-style object to manufacture [`ExportTaskDetails`](crate::types::ExportTaskDetails).
    pub fn builder() -> crate::types::builders::ExportTaskDetailsBuilder {
        crate::types::builders::ExportTaskDetailsBuilder::default()
    }
}

/// A builder for [`ExportTaskDetails`](crate::types::ExportTaskDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExportTaskDetailsBuilder {
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) time_elapsed_seconds: ::std::option::Option<i64>,
    pub(crate) progress_percentage: ::std::option::Option<i32>,
    pub(crate) num_vertices_written: ::std::option::Option<i64>,
    pub(crate) num_edges_written: ::std::option::Option<i64>,
}
impl ExportTaskDetailsBuilder {
    /// <p>The start time of the export task.</p>
    /// This field is required.
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start time of the export task.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The start time of the export task.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>The time elapsed, in seconds, since the start time of the export task.</p>
    /// This field is required.
    pub fn time_elapsed_seconds(mut self, input: i64) -> Self {
        self.time_elapsed_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time elapsed, in seconds, since the start time of the export task.</p>
    pub fn set_time_elapsed_seconds(mut self, input: ::std::option::Option<i64>) -> Self {
        self.time_elapsed_seconds = input;
        self
    }
    /// <p>The time elapsed, in seconds, since the start time of the export task.</p>
    pub fn get_time_elapsed_seconds(&self) -> &::std::option::Option<i64> {
        &self.time_elapsed_seconds
    }
    /// <p>The number of progress percentage of the export task.</p>
    /// This field is required.
    pub fn progress_percentage(mut self, input: i32) -> Self {
        self.progress_percentage = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of progress percentage of the export task.</p>
    pub fn set_progress_percentage(mut self, input: ::std::option::Option<i32>) -> Self {
        self.progress_percentage = input;
        self
    }
    /// <p>The number of progress percentage of the export task.</p>
    pub fn get_progress_percentage(&self) -> &::std::option::Option<i32> {
        &self.progress_percentage
    }
    /// <p>The number of exported vertices.</p>
    pub fn num_vertices_written(mut self, input: i64) -> Self {
        self.num_vertices_written = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of exported vertices.</p>
    pub fn set_num_vertices_written(mut self, input: ::std::option::Option<i64>) -> Self {
        self.num_vertices_written = input;
        self
    }
    /// <p>The number of exported vertices.</p>
    pub fn get_num_vertices_written(&self) -> &::std::option::Option<i64> {
        &self.num_vertices_written
    }
    /// <p>The number of exported edges.</p>
    pub fn num_edges_written(mut self, input: i64) -> Self {
        self.num_edges_written = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of exported edges.</p>
    pub fn set_num_edges_written(mut self, input: ::std::option::Option<i64>) -> Self {
        self.num_edges_written = input;
        self
    }
    /// <p>The number of exported edges.</p>
    pub fn get_num_edges_written(&self) -> &::std::option::Option<i64> {
        &self.num_edges_written
    }
    /// Consumes the builder and constructs a [`ExportTaskDetails`](crate::types::ExportTaskDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`start_time`](crate::types::builders::ExportTaskDetailsBuilder::start_time)
    /// - [`time_elapsed_seconds`](crate::types::builders::ExportTaskDetailsBuilder::time_elapsed_seconds)
    /// - [`progress_percentage`](crate::types::builders::ExportTaskDetailsBuilder::progress_percentage)
    pub fn build(self) -> ::std::result::Result<crate::types::ExportTaskDetails, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ExportTaskDetails {
            start_time: self.start_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_time",
                    "start_time was not specified but it is required when building ExportTaskDetails",
                )
            })?,
            time_elapsed_seconds: self.time_elapsed_seconds.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "time_elapsed_seconds",
                    "time_elapsed_seconds was not specified but it is required when building ExportTaskDetails",
                )
            })?,
            progress_percentage: self.progress_percentage.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "progress_percentage",
                    "progress_percentage was not specified but it is required when building ExportTaskDetails",
                )
            })?,
            num_vertices_written: self.num_vertices_written,
            num_edges_written: self.num_edges_written,
        })
    }
}
