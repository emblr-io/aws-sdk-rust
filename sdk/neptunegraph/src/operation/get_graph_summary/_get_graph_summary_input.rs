// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetGraphSummaryInput {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub graph_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The summary mode can take one of two values: <code>basic</code> (the default), and <code>detailed</code>.</p>
    pub mode: ::std::option::Option<crate::types::GraphSummaryMode>,
}
impl GetGraphSummaryInput {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn graph_identifier(&self) -> ::std::option::Option<&str> {
        self.graph_identifier.as_deref()
    }
    /// <p>The summary mode can take one of two values: <code>basic</code> (the default), and <code>detailed</code>.</p>
    pub fn mode(&self) -> ::std::option::Option<&crate::types::GraphSummaryMode> {
        self.mode.as_ref()
    }
}
impl GetGraphSummaryInput {
    /// Creates a new builder-style object to manufacture [`GetGraphSummaryInput`](crate::operation::get_graph_summary::GetGraphSummaryInput).
    pub fn builder() -> crate::operation::get_graph_summary::builders::GetGraphSummaryInputBuilder {
        crate::operation::get_graph_summary::builders::GetGraphSummaryInputBuilder::default()
    }
}

/// A builder for [`GetGraphSummaryInput`](crate::operation::get_graph_summary::GetGraphSummaryInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetGraphSummaryInputBuilder {
    pub(crate) graph_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) mode: ::std::option::Option<crate::types::GraphSummaryMode>,
}
impl GetGraphSummaryInputBuilder {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    /// This field is required.
    pub fn graph_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.graph_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn set_graph_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.graph_identifier = input;
        self
    }
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn get_graph_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.graph_identifier
    }
    /// <p>The summary mode can take one of two values: <code>basic</code> (the default), and <code>detailed</code>.</p>
    pub fn mode(mut self, input: crate::types::GraphSummaryMode) -> Self {
        self.mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The summary mode can take one of two values: <code>basic</code> (the default), and <code>detailed</code>.</p>
    pub fn set_mode(mut self, input: ::std::option::Option<crate::types::GraphSummaryMode>) -> Self {
        self.mode = input;
        self
    }
    /// <p>The summary mode can take one of two values: <code>basic</code> (the default), and <code>detailed</code>.</p>
    pub fn get_mode(&self) -> &::std::option::Option<crate::types::GraphSummaryMode> {
        &self.mode
    }
    /// Consumes the builder and constructs a [`GetGraphSummaryInput`](crate::operation::get_graph_summary::GetGraphSummaryInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_graph_summary::GetGraphSummaryInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_graph_summary::GetGraphSummaryInput {
            graph_identifier: self.graph_identifier,
            mode: self.mode,
        })
    }
}
