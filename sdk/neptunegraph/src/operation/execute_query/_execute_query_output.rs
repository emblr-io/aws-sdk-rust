// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::fmt::Debug)]
pub struct ExecuteQueryOutput {
    /// <p>The query results.</p>
    #[cfg_attr(any(feature = "serde-serialize", feature = "serde-deserialize"), serde(skip))]
    pub payload: ::aws_smithy_types::byte_stream::ByteStream,
    _request_id: Option<String>,
}
impl ExecuteQueryOutput {
    /// <p>The query results.</p>
    pub fn payload(&self) -> &::aws_smithy_types::byte_stream::ByteStream {
        &self.payload
    }
}
impl ::aws_types::request_id::RequestId for ExecuteQueryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ExecuteQueryOutput {
    /// Creates a new builder-style object to manufacture [`ExecuteQueryOutput`](crate::operation::execute_query::ExecuteQueryOutput).
    pub fn builder() -> crate::operation::execute_query::builders::ExecuteQueryOutputBuilder {
        crate::operation::execute_query::builders::ExecuteQueryOutputBuilder::default()
    }
}

/// A builder for [`ExecuteQueryOutput`](crate::operation::execute_query::ExecuteQueryOutput).
#[derive(::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExecuteQueryOutputBuilder {
    pub(crate) payload: ::std::option::Option<::aws_smithy_types::byte_stream::ByteStream>,
    _request_id: Option<String>,
}
impl ExecuteQueryOutputBuilder {
    /// <p>The query results.</p>
    /// This field is required.
    pub fn payload(mut self, input: ::aws_smithy_types::byte_stream::ByteStream) -> Self {
        self.payload = ::std::option::Option::Some(input);
        self
    }
    /// <p>The query results.</p>
    pub fn set_payload(mut self, input: ::std::option::Option<::aws_smithy_types::byte_stream::ByteStream>) -> Self {
        self.payload = input;
        self
    }
    /// <p>The query results.</p>
    pub fn get_payload(&self) -> &::std::option::Option<::aws_smithy_types::byte_stream::ByteStream> {
        &self.payload
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ExecuteQueryOutput`](crate::operation::execute_query::ExecuteQueryOutput).
    pub fn build(self) -> crate::operation::execute_query::ExecuteQueryOutput {
        crate::operation::execute_query::ExecuteQueryOutput {
            payload: self.payload.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
