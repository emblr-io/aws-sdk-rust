// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Add an output to a bridge.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddBridgeSourceRequest {
    /// <p>The source of the flow.</p>
    pub flow_source: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>,
    /// <p>The source of the network.</p>
    pub network_source: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>,
}
impl AddBridgeSourceRequest {
    /// <p>The source of the flow.</p>
    pub fn flow_source(&self) -> ::std::option::Option<&crate::types::AddBridgeFlowSourceRequest> {
        self.flow_source.as_ref()
    }
    /// <p>The source of the network.</p>
    pub fn network_source(&self) -> ::std::option::Option<&crate::types::AddBridgeNetworkSourceRequest> {
        self.network_source.as_ref()
    }
}
impl AddBridgeSourceRequest {
    /// Creates a new builder-style object to manufacture [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
    pub fn builder() -> crate::types::builders::AddBridgeSourceRequestBuilder {
        crate::types::builders::AddBridgeSourceRequestBuilder::default()
    }
}

/// A builder for [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AddBridgeSourceRequestBuilder {
    pub(crate) flow_source: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>,
    pub(crate) network_source: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>,
}
impl AddBridgeSourceRequestBuilder {
    /// <p>The source of the flow.</p>
    pub fn flow_source(mut self, input: crate::types::AddBridgeFlowSourceRequest) -> Self {
        self.flow_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source of the flow.</p>
    pub fn set_flow_source(mut self, input: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>) -> Self {
        self.flow_source = input;
        self
    }
    /// <p>The source of the flow.</p>
    pub fn get_flow_source(&self) -> &::std::option::Option<crate::types::AddBridgeFlowSourceRequest> {
        &self.flow_source
    }
    /// <p>The source of the network.</p>
    pub fn network_source(mut self, input: crate::types::AddBridgeNetworkSourceRequest) -> Self {
        self.network_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source of the network.</p>
    pub fn set_network_source(mut self, input: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>) -> Self {
        self.network_source = input;
        self
    }
    /// <p>The source of the network.</p>
    pub fn get_network_source(&self) -> &::std::option::Option<crate::types::AddBridgeNetworkSourceRequest> {
        &self.network_source
    }
    /// Consumes the builder and constructs a [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
    pub fn build(self) -> crate::types::AddBridgeSourceRequest {
        crate::types::AddBridgeSourceRequest {
            flow_source: self.flow_source,
            network_source: self.network_source,
        }
    }
}
