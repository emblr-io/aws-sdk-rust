// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of an instance.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListedGatewayInstance {
    /// <p>The Amazon Resource Name (ARN) of the gateway.</p>
    pub gateway_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub gateway_instance_arn: ::std::option::Option<::std::string::String>,
    /// <p>The managed instance ID generated by the SSM install. This will begin with "mi-".</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The status of the instance.</p>
    pub instance_state: ::std::option::Option<crate::types::InstanceState>,
}
impl ListedGatewayInstance {
    /// <p>The Amazon Resource Name (ARN) of the gateway.</p>
    pub fn gateway_arn(&self) -> ::std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn gateway_instance_arn(&self) -> ::std::option::Option<&str> {
        self.gateway_instance_arn.as_deref()
    }
    /// <p>The managed instance ID generated by the SSM install. This will begin with "mi-".</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The status of the instance.</p>
    pub fn instance_state(&self) -> ::std::option::Option<&crate::types::InstanceState> {
        self.instance_state.as_ref()
    }
}
impl ListedGatewayInstance {
    /// Creates a new builder-style object to manufacture [`ListedGatewayInstance`](crate::types::ListedGatewayInstance).
    pub fn builder() -> crate::types::builders::ListedGatewayInstanceBuilder {
        crate::types::builders::ListedGatewayInstanceBuilder::default()
    }
}

/// A builder for [`ListedGatewayInstance`](crate::types::ListedGatewayInstance).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListedGatewayInstanceBuilder {
    pub(crate) gateway_arn: ::std::option::Option<::std::string::String>,
    pub(crate) gateway_instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) instance_state: ::std::option::Option<crate::types::InstanceState>,
}
impl ListedGatewayInstanceBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway.</p>
    /// This field is required.
    pub fn gateway_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway.</p>
    pub fn set_gateway_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway.</p>
    pub fn get_gateway_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn gateway_instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_gateway_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_instance_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_gateway_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_instance_arn
    }
    /// <p>The managed instance ID generated by the SSM install. This will begin with "mi-".</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The managed instance ID generated by the SSM install. This will begin with "mi-".</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The managed instance ID generated by the SSM install. This will begin with "mi-".</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The status of the instance.</p>
    pub fn instance_state(mut self, input: crate::types::InstanceState) -> Self {
        self.instance_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the instance.</p>
    pub fn set_instance_state(mut self, input: ::std::option::Option<crate::types::InstanceState>) -> Self {
        self.instance_state = input;
        self
    }
    /// <p>The status of the instance.</p>
    pub fn get_instance_state(&self) -> &::std::option::Option<crate::types::InstanceState> {
        &self.instance_state
    }
    /// Consumes the builder and constructs a [`ListedGatewayInstance`](crate::types::ListedGatewayInstance).
    pub fn build(self) -> crate::types::ListedGatewayInstance {
        crate::types::ListedGatewayInstance {
            gateway_arn: self.gateway_arn,
            gateway_instance_arn: self.gateway_instance_arn,
            instance_id: self.instance_id,
            instance_state: self.instance_state,
        }
    }
}
