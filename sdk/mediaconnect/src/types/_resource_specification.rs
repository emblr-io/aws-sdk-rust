// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A definition of what is being billed for, including the type and amount.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceSpecification {
    /// <p>The amount of outbound bandwidth that is discounted in the offering.</p>
    pub reserved_bitrate: ::std::option::Option<i32>,
    /// <p>The type of resource and the unit that is being billed for.</p>
    pub resource_type: ::std::option::Option<crate::types::ResourceType>,
}
impl ResourceSpecification {
    /// <p>The amount of outbound bandwidth that is discounted in the offering.</p>
    pub fn reserved_bitrate(&self) -> ::std::option::Option<i32> {
        self.reserved_bitrate
    }
    /// <p>The type of resource and the unit that is being billed for.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&crate::types::ResourceType> {
        self.resource_type.as_ref()
    }
}
impl ResourceSpecification {
    /// Creates a new builder-style object to manufacture [`ResourceSpecification`](crate::types::ResourceSpecification).
    pub fn builder() -> crate::types::builders::ResourceSpecificationBuilder {
        crate::types::builders::ResourceSpecificationBuilder::default()
    }
}

/// A builder for [`ResourceSpecification`](crate::types::ResourceSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResourceSpecificationBuilder {
    pub(crate) reserved_bitrate: ::std::option::Option<i32>,
    pub(crate) resource_type: ::std::option::Option<crate::types::ResourceType>,
}
impl ResourceSpecificationBuilder {
    /// <p>The amount of outbound bandwidth that is discounted in the offering.</p>
    pub fn reserved_bitrate(mut self, input: i32) -> Self {
        self.reserved_bitrate = ::std::option::Option::Some(input);
        self
    }
    /// <p>The amount of outbound bandwidth that is discounted in the offering.</p>
    pub fn set_reserved_bitrate(mut self, input: ::std::option::Option<i32>) -> Self {
        self.reserved_bitrate = input;
        self
    }
    /// <p>The amount of outbound bandwidth that is discounted in the offering.</p>
    pub fn get_reserved_bitrate(&self) -> &::std::option::Option<i32> {
        &self.reserved_bitrate
    }
    /// <p>The type of resource and the unit that is being billed for.</p>
    /// This field is required.
    pub fn resource_type(mut self, input: crate::types::ResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource and the unit that is being billed for.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::ResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The type of resource and the unit that is being billed for.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::ResourceType> {
        &self.resource_type
    }
    /// Consumes the builder and constructs a [`ResourceSpecification`](crate::types::ResourceSpecification).
    pub fn build(self) -> crate::types::ResourceSpecification {
        crate::types::ResourceSpecification {
            reserved_bitrate: self.reserved_bitrate,
            resource_type: self.resource_type,
        }
    }
}
