// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The network settings for a gateway.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GatewayNetwork {
    /// <p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>
    pub cidr_block: ::std::option::Option<::std::string::String>,
    /// <p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway.</p>
    pub name: ::std::option::Option<::std::string::String>,
}
impl GatewayNetwork {
    /// <p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>
    pub fn cidr_block(&self) -> ::std::option::Option<&str> {
        self.cidr_block.as_deref()
    }
    /// <p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl GatewayNetwork {
    /// Creates a new builder-style object to manufacture [`GatewayNetwork`](crate::types::GatewayNetwork).
    pub fn builder() -> crate::types::builders::GatewayNetworkBuilder {
        crate::types::builders::GatewayNetworkBuilder::default()
    }
}

/// A builder for [`GatewayNetwork`](crate::types::GatewayNetwork).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GatewayNetworkBuilder {
    pub(crate) cidr_block: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl GatewayNetworkBuilder {
    /// <p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>
    /// This field is required.
    pub fn cidr_block(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cidr_block = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>
    pub fn set_cidr_block(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cidr_block = input;
        self
    }
    /// <p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>
    pub fn get_cidr_block(&self) -> &::std::option::Option<::std::string::String> {
        &self.cidr_block
    }
    /// <p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`GatewayNetwork`](crate::types::GatewayNetwork).
    pub fn build(self) -> crate::types::GatewayNetwork {
        crate::types::GatewayNetwork {
            cidr_block: self.cidr_block,
            name: self.name,
        }
    }
}
