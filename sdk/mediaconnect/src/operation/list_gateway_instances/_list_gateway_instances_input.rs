// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListGatewayInstancesInput {
    /// <p>Filter the list results to display only the instances associated with the selected Gateway ARN.</p>
    pub filter_arn: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return per API request.</p>
    /// <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.)</p>
    /// <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The token that identifies the batch of results that you want to see.</p>
    /// <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListGatewayInstancesInput {
    /// <p>Filter the list results to display only the instances associated with the selected Gateway ARN.</p>
    pub fn filter_arn(&self) -> ::std::option::Option<&str> {
        self.filter_arn.as_deref()
    }
    /// <p>The maximum number of results to return per API request.</p>
    /// <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.)</p>
    /// <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token that identifies the batch of results that you want to see.</p>
    /// <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListGatewayInstancesInput {
    /// Creates a new builder-style object to manufacture [`ListGatewayInstancesInput`](crate::operation::list_gateway_instances::ListGatewayInstancesInput).
    pub fn builder() -> crate::operation::list_gateway_instances::builders::ListGatewayInstancesInputBuilder {
        crate::operation::list_gateway_instances::builders::ListGatewayInstancesInputBuilder::default()
    }
}

/// A builder for [`ListGatewayInstancesInput`](crate::operation::list_gateway_instances::ListGatewayInstancesInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListGatewayInstancesInputBuilder {
    pub(crate) filter_arn: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListGatewayInstancesInputBuilder {
    /// <p>Filter the list results to display only the instances associated with the selected Gateway ARN.</p>
    pub fn filter_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.filter_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Filter the list results to display only the instances associated with the selected Gateway ARN.</p>
    pub fn set_filter_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.filter_arn = input;
        self
    }
    /// <p>Filter the list results to display only the instances associated with the selected Gateway ARN.</p>
    pub fn get_filter_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.filter_arn
    }
    /// <p>The maximum number of results to return per API request.</p>
    /// <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.)</p>
    /// <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return per API request.</p>
    /// <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.)</p>
    /// <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return per API request.</p>
    /// <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.)</p>
    /// <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The token that identifies the batch of results that you want to see.</p>
    /// <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token that identifies the batch of results that you want to see.</p>
    /// <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token that identifies the batch of results that you want to see.</p>
    /// <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListGatewayInstancesInput`](crate::operation::list_gateway_instances::ListGatewayInstancesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_gateway_instances::ListGatewayInstancesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::list_gateway_instances::ListGatewayInstancesInput {
            filter_arn: self.filter_arn,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
