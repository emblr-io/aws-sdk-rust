// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMarketplaceResourceInput {
    /// <p>Specifies which type of Amazon Web Services Marketplace resource Image Builder retrieves.</p>
    pub resource_type: ::std::option::Option<crate::types::MarketplaceResourceType>,
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies an Amazon Web Services Marketplace resource.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
    /// <p>The bucket path that you can specify to download the resource from Amazon S3.</p>
    pub resource_location: ::std::option::Option<::std::string::String>,
}
impl GetMarketplaceResourceInput {
    /// <p>Specifies which type of Amazon Web Services Marketplace resource Image Builder retrieves.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&crate::types::MarketplaceResourceType> {
        self.resource_type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies an Amazon Web Services Marketplace resource.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The bucket path that you can specify to download the resource from Amazon S3.</p>
    pub fn resource_location(&self) -> ::std::option::Option<&str> {
        self.resource_location.as_deref()
    }
}
impl GetMarketplaceResourceInput {
    /// Creates a new builder-style object to manufacture [`GetMarketplaceResourceInput`](crate::operation::get_marketplace_resource::GetMarketplaceResourceInput).
    pub fn builder() -> crate::operation::get_marketplace_resource::builders::GetMarketplaceResourceInputBuilder {
        crate::operation::get_marketplace_resource::builders::GetMarketplaceResourceInputBuilder::default()
    }
}

/// A builder for [`GetMarketplaceResourceInput`](crate::operation::get_marketplace_resource::GetMarketplaceResourceInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetMarketplaceResourceInputBuilder {
    pub(crate) resource_type: ::std::option::Option<crate::types::MarketplaceResourceType>,
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_location: ::std::option::Option<::std::string::String>,
}
impl GetMarketplaceResourceInputBuilder {
    /// <p>Specifies which type of Amazon Web Services Marketplace resource Image Builder retrieves.</p>
    /// This field is required.
    pub fn resource_type(mut self, input: crate::types::MarketplaceResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies which type of Amazon Web Services Marketplace resource Image Builder retrieves.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::MarketplaceResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>Specifies which type of Amazon Web Services Marketplace resource Image Builder retrieves.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::MarketplaceResourceType> {
        &self.resource_type
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies an Amazon Web Services Marketplace resource.</p>
    /// This field is required.
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies an Amazon Web Services Marketplace resource.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies an Amazon Web Services Marketplace resource.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// <p>The bucket path that you can specify to download the resource from Amazon S3.</p>
    pub fn resource_location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The bucket path that you can specify to download the resource from Amazon S3.</p>
    pub fn set_resource_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_location = input;
        self
    }
    /// <p>The bucket path that you can specify to download the resource from Amazon S3.</p>
    pub fn get_resource_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_location
    }
    /// Consumes the builder and constructs a [`GetMarketplaceResourceInput`](crate::operation::get_marketplace_resource::GetMarketplaceResourceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_marketplace_resource::GetMarketplaceResourceInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_marketplace_resource::GetMarketplaceResourceInput {
            resource_type: self.resource_type,
            resource_arn: self.resource_arn,
            resource_location: self.resource_location,
        })
    }
}
