// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A source resource can be a source server, a migration wave, an application, or any other resource that you track.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SourceResource {
    /// <p>This is the name that you want to use to identify the resource. If the resource is an AWS resource, we recommend that you set this parameter to the ARN of the resource.</p>
    pub name: ::std::string::String,
    /// <p>A description that can be free-form text to record additional detail about the resource for clarity or later reference.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A free-form description of the status of the resource.</p>
    pub status_detail: ::std::option::Option<::std::string::String>,
}
impl SourceResource {
    /// <p>This is the name that you want to use to identify the resource. If the resource is an AWS resource, we recommend that you set this parameter to the ARN of the resource.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>A description that can be free-form text to record additional detail about the resource for clarity or later reference.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A free-form description of the status of the resource.</p>
    pub fn status_detail(&self) -> ::std::option::Option<&str> {
        self.status_detail.as_deref()
    }
}
impl SourceResource {
    /// Creates a new builder-style object to manufacture [`SourceResource`](crate::types::SourceResource).
    pub fn builder() -> crate::types::builders::SourceResourceBuilder {
        crate::types::builders::SourceResourceBuilder::default()
    }
}

/// A builder for [`SourceResource`](crate::types::SourceResource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SourceResourceBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) status_detail: ::std::option::Option<::std::string::String>,
}
impl SourceResourceBuilder {
    /// <p>This is the name that you want to use to identify the resource. If the resource is an AWS resource, we recommend that you set this parameter to the ARN of the resource.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This is the name that you want to use to identify the resource. If the resource is an AWS resource, we recommend that you set this parameter to the ARN of the resource.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>This is the name that you want to use to identify the resource. If the resource is an AWS resource, we recommend that you set this parameter to the ARN of the resource.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A description that can be free-form text to record additional detail about the resource for clarity or later reference.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description that can be free-form text to record additional detail about the resource for clarity or later reference.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description that can be free-form text to record additional detail about the resource for clarity or later reference.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A free-form description of the status of the resource.</p>
    pub fn status_detail(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_detail = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A free-form description of the status of the resource.</p>
    pub fn set_status_detail(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_detail = input;
        self
    }
    /// <p>A free-form description of the status of the resource.</p>
    pub fn get_status_detail(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_detail
    }
    /// Consumes the builder and constructs a [`SourceResource`](crate::types::SourceResource).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::SourceResourceBuilder::name)
    pub fn build(self) -> ::std::result::Result<crate::types::SourceResource, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SourceResource {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building SourceResource",
                )
            })?,
            description: self.description,
            status_detail: self.status_detail,
        })
    }
}
