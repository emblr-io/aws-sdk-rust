// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListHookResultsOutput {
    /// <p>The type of operation being targeted by the Hook.</p>
    pub target_type: ::std::option::Option<crate::types::ListHookResultsTargetType>,
    /// <p>The logical ID of the target the operation is acting on by the Hook. If the target is a change set, it's the ARN of the change set.</p>
    /// <p>If the target is a Cloud Control API operation, this will be the <code>HooksRequestToken</code> returned by the Cloud Control API operation request. For more information on the <code>HooksRequestToken</code>, see <a href="https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_ProgressEvent.html">ProgressEvent</a>.</p>
    pub target_id: ::std::option::Option<::std::string::String>,
    /// <p>A list of <code>HookResultSummary</code> structures that provides the status and Hook status reason for each Hook invocation for the specified target.</p>
    pub hook_results: ::std::option::Option<::std::vec::Vec<crate::types::HookResultSummary>>,
    /// <p>Pagination token, <code>null</code> or empty if no more results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListHookResultsOutput {
    /// <p>The type of operation being targeted by the Hook.</p>
    pub fn target_type(&self) -> ::std::option::Option<&crate::types::ListHookResultsTargetType> {
        self.target_type.as_ref()
    }
    /// <p>The logical ID of the target the operation is acting on by the Hook. If the target is a change set, it's the ARN of the change set.</p>
    /// <p>If the target is a Cloud Control API operation, this will be the <code>HooksRequestToken</code> returned by the Cloud Control API operation request. For more information on the <code>HooksRequestToken</code>, see <a href="https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_ProgressEvent.html">ProgressEvent</a>.</p>
    pub fn target_id(&self) -> ::std::option::Option<&str> {
        self.target_id.as_deref()
    }
    /// <p>A list of <code>HookResultSummary</code> structures that provides the status and Hook status reason for each Hook invocation for the specified target.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.hook_results.is_none()`.
    pub fn hook_results(&self) -> &[crate::types::HookResultSummary] {
        self.hook_results.as_deref().unwrap_or_default()
    }
    /// <p>Pagination token, <code>null</code> or empty if no more results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListHookResultsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListHookResultsOutput {
    /// Creates a new builder-style object to manufacture [`ListHookResultsOutput`](crate::operation::list_hook_results::ListHookResultsOutput).
    pub fn builder() -> crate::operation::list_hook_results::builders::ListHookResultsOutputBuilder {
        crate::operation::list_hook_results::builders::ListHookResultsOutputBuilder::default()
    }
}

/// A builder for [`ListHookResultsOutput`](crate::operation::list_hook_results::ListHookResultsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListHookResultsOutputBuilder {
    pub(crate) target_type: ::std::option::Option<crate::types::ListHookResultsTargetType>,
    pub(crate) target_id: ::std::option::Option<::std::string::String>,
    pub(crate) hook_results: ::std::option::Option<::std::vec::Vec<crate::types::HookResultSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListHookResultsOutputBuilder {
    /// <p>The type of operation being targeted by the Hook.</p>
    pub fn target_type(mut self, input: crate::types::ListHookResultsTargetType) -> Self {
        self.target_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of operation being targeted by the Hook.</p>
    pub fn set_target_type(mut self, input: ::std::option::Option<crate::types::ListHookResultsTargetType>) -> Self {
        self.target_type = input;
        self
    }
    /// <p>The type of operation being targeted by the Hook.</p>
    pub fn get_target_type(&self) -> &::std::option::Option<crate::types::ListHookResultsTargetType> {
        &self.target_type
    }
    /// <p>The logical ID of the target the operation is acting on by the Hook. If the target is a change set, it's the ARN of the change set.</p>
    /// <p>If the target is a Cloud Control API operation, this will be the <code>HooksRequestToken</code> returned by the Cloud Control API operation request. For more information on the <code>HooksRequestToken</code>, see <a href="https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_ProgressEvent.html">ProgressEvent</a>.</p>
    pub fn target_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The logical ID of the target the operation is acting on by the Hook. If the target is a change set, it's the ARN of the change set.</p>
    /// <p>If the target is a Cloud Control API operation, this will be the <code>HooksRequestToken</code> returned by the Cloud Control API operation request. For more information on the <code>HooksRequestToken</code>, see <a href="https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_ProgressEvent.html">ProgressEvent</a>.</p>
    pub fn set_target_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_id = input;
        self
    }
    /// <p>The logical ID of the target the operation is acting on by the Hook. If the target is a change set, it's the ARN of the change set.</p>
    /// <p>If the target is a Cloud Control API operation, this will be the <code>HooksRequestToken</code> returned by the Cloud Control API operation request. For more information on the <code>HooksRequestToken</code>, see <a href="https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_ProgressEvent.html">ProgressEvent</a>.</p>
    pub fn get_target_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_id
    }
    /// Appends an item to `hook_results`.
    ///
    /// To override the contents of this collection use [`set_hook_results`](Self::set_hook_results).
    ///
    /// <p>A list of <code>HookResultSummary</code> structures that provides the status and Hook status reason for each Hook invocation for the specified target.</p>
    pub fn hook_results(mut self, input: crate::types::HookResultSummary) -> Self {
        let mut v = self.hook_results.unwrap_or_default();
        v.push(input);
        self.hook_results = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>HookResultSummary</code> structures that provides the status and Hook status reason for each Hook invocation for the specified target.</p>
    pub fn set_hook_results(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::HookResultSummary>>) -> Self {
        self.hook_results = input;
        self
    }
    /// <p>A list of <code>HookResultSummary</code> structures that provides the status and Hook status reason for each Hook invocation for the specified target.</p>
    pub fn get_hook_results(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::HookResultSummary>> {
        &self.hook_results
    }
    /// <p>Pagination token, <code>null</code> or empty if no more results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Pagination token, <code>null</code> or empty if no more results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Pagination token, <code>null</code> or empty if no more results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListHookResultsOutput`](crate::operation::list_hook_results::ListHookResultsOutput).
    pub fn build(self) -> crate::operation::list_hook_results::ListHookResultsOutput {
        crate::operation::list_hook_results::ListHookResultsOutput {
            target_type: self.target_type,
            target_id: self.target_id,
            hook_results: self.hook_results,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
