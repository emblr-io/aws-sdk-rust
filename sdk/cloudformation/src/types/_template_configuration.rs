// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details of a generated template.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TemplateConfiguration {
    /// <p>The <code>DeletionPolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the stack is deleted.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the stack is deleted.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html">DeletionPolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub deletion_policy: ::std::option::Option<crate::types::GeneratedTemplateDeletionPolicy>,
    /// <p>The <code>UpdateReplacePolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the resource is replaced during an update operation.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the resource is replaced during an update operation.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html">UpdateReplacePolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub update_replace_policy: ::std::option::Option<crate::types::GeneratedTemplateUpdateReplacePolicy>,
}
impl TemplateConfiguration {
    /// <p>The <code>DeletionPolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the stack is deleted.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the stack is deleted.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html">DeletionPolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn deletion_policy(&self) -> ::std::option::Option<&crate::types::GeneratedTemplateDeletionPolicy> {
        self.deletion_policy.as_ref()
    }
    /// <p>The <code>UpdateReplacePolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the resource is replaced during an update operation.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the resource is replaced during an update operation.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html">UpdateReplacePolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn update_replace_policy(&self) -> ::std::option::Option<&crate::types::GeneratedTemplateUpdateReplacePolicy> {
        self.update_replace_policy.as_ref()
    }
}
impl TemplateConfiguration {
    /// Creates a new builder-style object to manufacture [`TemplateConfiguration`](crate::types::TemplateConfiguration).
    pub fn builder() -> crate::types::builders::TemplateConfigurationBuilder {
        crate::types::builders::TemplateConfigurationBuilder::default()
    }
}

/// A builder for [`TemplateConfiguration`](crate::types::TemplateConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TemplateConfigurationBuilder {
    pub(crate) deletion_policy: ::std::option::Option<crate::types::GeneratedTemplateDeletionPolicy>,
    pub(crate) update_replace_policy: ::std::option::Option<crate::types::GeneratedTemplateUpdateReplacePolicy>,
}
impl TemplateConfigurationBuilder {
    /// <p>The <code>DeletionPolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the stack is deleted.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the stack is deleted.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html">DeletionPolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn deletion_policy(mut self, input: crate::types::GeneratedTemplateDeletionPolicy) -> Self {
        self.deletion_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>DeletionPolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the stack is deleted.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the stack is deleted.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html">DeletionPolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn set_deletion_policy(mut self, input: ::std::option::Option<crate::types::GeneratedTemplateDeletionPolicy>) -> Self {
        self.deletion_policy = input;
        self
    }
    /// <p>The <code>DeletionPolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the stack is deleted.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the stack is deleted.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html">DeletionPolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn get_deletion_policy(&self) -> &::std::option::Option<crate::types::GeneratedTemplateDeletionPolicy> {
        &self.deletion_policy
    }
    /// <p>The <code>UpdateReplacePolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the resource is replaced during an update operation.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the resource is replaced during an update operation.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html">UpdateReplacePolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn update_replace_policy(mut self, input: crate::types::GeneratedTemplateUpdateReplacePolicy) -> Self {
        self.update_replace_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>UpdateReplacePolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the resource is replaced during an update operation.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the resource is replaced during an update operation.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html">UpdateReplacePolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn set_update_replace_policy(mut self, input: ::std::option::Option<crate::types::GeneratedTemplateUpdateReplacePolicy>) -> Self {
        self.update_replace_policy = input;
        self
    }
    /// <p>The <code>UpdateReplacePolicy</code> assigned to resources in the generated template. Supported values are:</p>
    /// <ul>
    /// <li>
    /// <p><code>DELETE</code> - delete all resources when the resource is replaced during an update operation.</p></li>
    /// <li>
    /// <p><code>RETAIN</code> - retain all resources when the resource is replaced during an update operation.</p></li>
    /// </ul>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html">UpdateReplacePolicy attribute</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn get_update_replace_policy(&self) -> &::std::option::Option<crate::types::GeneratedTemplateUpdateReplacePolicy> {
        &self.update_replace_policy
    }
    /// Consumes the builder and constructs a [`TemplateConfiguration`](crate::types::TemplateConfiguration).
    pub fn build(self) -> crate::types::TemplateConfiguration {
        crate::types::TemplateConfiguration {
            deletion_policy: self.deletion_policy,
            update_replace_policy: self.update_replace_policy,
        }
    }
}
