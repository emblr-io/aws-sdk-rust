// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The drift summary of the enabled baseline. Amazon Web Services Control Tower reports inheritance drift when an enabled baseline configuration of a member account is different than the configuration that applies to the OU. Amazon Web Services Control Tower reports this type of drift for a parent or child enabled baseline. One way to repair this drift by resetting the parent enabled baseline, on the OU.</p>
/// <p>For example, you may see this type of drift if you move accounts between OUs, but the accounts are not yet (re-)enrolled.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnabledBaselineDriftStatusSummary {
    /// <p>The types of drift that can be detected for an enabled baseline. Amazon Web Services Control Tower detects inheritance drift on enabled baselines that apply at the OU level.</p>
    pub types: ::std::option::Option<crate::types::EnabledBaselineDriftTypes>,
}
impl EnabledBaselineDriftStatusSummary {
    /// <p>The types of drift that can be detected for an enabled baseline. Amazon Web Services Control Tower detects inheritance drift on enabled baselines that apply at the OU level.</p>
    pub fn types(&self) -> ::std::option::Option<&crate::types::EnabledBaselineDriftTypes> {
        self.types.as_ref()
    }
}
impl EnabledBaselineDriftStatusSummary {
    /// Creates a new builder-style object to manufacture [`EnabledBaselineDriftStatusSummary`](crate::types::EnabledBaselineDriftStatusSummary).
    pub fn builder() -> crate::types::builders::EnabledBaselineDriftStatusSummaryBuilder {
        crate::types::builders::EnabledBaselineDriftStatusSummaryBuilder::default()
    }
}

/// A builder for [`EnabledBaselineDriftStatusSummary`](crate::types::EnabledBaselineDriftStatusSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EnabledBaselineDriftStatusSummaryBuilder {
    pub(crate) types: ::std::option::Option<crate::types::EnabledBaselineDriftTypes>,
}
impl EnabledBaselineDriftStatusSummaryBuilder {
    /// <p>The types of drift that can be detected for an enabled baseline. Amazon Web Services Control Tower detects inheritance drift on enabled baselines that apply at the OU level.</p>
    pub fn types(mut self, input: crate::types::EnabledBaselineDriftTypes) -> Self {
        self.types = ::std::option::Option::Some(input);
        self
    }
    /// <p>The types of drift that can be detected for an enabled baseline. Amazon Web Services Control Tower detects inheritance drift on enabled baselines that apply at the OU level.</p>
    pub fn set_types(mut self, input: ::std::option::Option<crate::types::EnabledBaselineDriftTypes>) -> Self {
        self.types = input;
        self
    }
    /// <p>The types of drift that can be detected for an enabled baseline. Amazon Web Services Control Tower detects inheritance drift on enabled baselines that apply at the OU level.</p>
    pub fn get_types(&self) -> &::std::option::Option<crate::types::EnabledBaselineDriftTypes> {
        &self.types
    }
    /// Consumes the builder and constructs a [`EnabledBaselineDriftStatusSummary`](crate::types::EnabledBaselineDriftStatusSummary).
    pub fn build(self) -> crate::types::EnabledBaselineDriftStatusSummary {
        crate::types::EnabledBaselineDriftStatusSummary { types: self.types }
    }
}
