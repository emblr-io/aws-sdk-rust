// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the error when experiment report generation has failed.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExperimentReportError {
    /// <p>The error code for the failed experiment report generation.</p>
    pub code: ::std::option::Option<::std::string::String>,
}
impl ExperimentReportError {
    /// <p>The error code for the failed experiment report generation.</p>
    pub fn code(&self) -> ::std::option::Option<&str> {
        self.code.as_deref()
    }
}
impl ExperimentReportError {
    /// Creates a new builder-style object to manufacture [`ExperimentReportError`](crate::types::ExperimentReportError).
    pub fn builder() -> crate::types::builders::ExperimentReportErrorBuilder {
        crate::types::builders::ExperimentReportErrorBuilder::default()
    }
}

/// A builder for [`ExperimentReportError`](crate::types::ExperimentReportError).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExperimentReportErrorBuilder {
    pub(crate) code: ::std::option::Option<::std::string::String>,
}
impl ExperimentReportErrorBuilder {
    /// <p>The error code for the failed experiment report generation.</p>
    pub fn code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code for the failed experiment report generation.</p>
    pub fn set_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code = input;
        self
    }
    /// <p>The error code for the failed experiment report generation.</p>
    pub fn get_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.code
    }
    /// Consumes the builder and constructs a [`ExperimentReportError`](crate::types::ExperimentReportError).
    pub fn build(self) -> crate::types::ExperimentReportError {
        crate::types::ExperimentReportError { code: self.code }
    }
}
