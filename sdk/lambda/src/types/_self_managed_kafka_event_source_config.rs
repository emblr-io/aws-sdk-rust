// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specific configuration settings for a self-managed Apache Kafka event source.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SelfManagedKafkaEventSourceConfig {
    /// <p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka-process.html#services-smaa-topic-add">Customizable consumer group ID</a>.</p>
    pub consumer_group_id: ::std::option::Option<::std::string::String>,
    /// <p>Specific configuration settings for a Kafka schema registry.</p>
    pub schema_registry_config: ::std::option::Option<crate::types::KafkaSchemaRegistryConfig>,
}
impl SelfManagedKafkaEventSourceConfig {
    /// <p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka-process.html#services-smaa-topic-add">Customizable consumer group ID</a>.</p>
    pub fn consumer_group_id(&self) -> ::std::option::Option<&str> {
        self.consumer_group_id.as_deref()
    }
    /// <p>Specific configuration settings for a Kafka schema registry.</p>
    pub fn schema_registry_config(&self) -> ::std::option::Option<&crate::types::KafkaSchemaRegistryConfig> {
        self.schema_registry_config.as_ref()
    }
}
impl SelfManagedKafkaEventSourceConfig {
    /// Creates a new builder-style object to manufacture [`SelfManagedKafkaEventSourceConfig`](crate::types::SelfManagedKafkaEventSourceConfig).
    pub fn builder() -> crate::types::builders::SelfManagedKafkaEventSourceConfigBuilder {
        crate::types::builders::SelfManagedKafkaEventSourceConfigBuilder::default()
    }
}

/// A builder for [`SelfManagedKafkaEventSourceConfig`](crate::types::SelfManagedKafkaEventSourceConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SelfManagedKafkaEventSourceConfigBuilder {
    pub(crate) consumer_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) schema_registry_config: ::std::option::Option<crate::types::KafkaSchemaRegistryConfig>,
}
impl SelfManagedKafkaEventSourceConfigBuilder {
    /// <p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka-process.html#services-smaa-topic-add">Customizable consumer group ID</a>.</p>
    pub fn consumer_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.consumer_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka-process.html#services-smaa-topic-add">Customizable consumer group ID</a>.</p>
    pub fn set_consumer_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.consumer_group_id = input;
        self
    }
    /// <p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka-process.html#services-smaa-topic-add">Customizable consumer group ID</a>.</p>
    pub fn get_consumer_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.consumer_group_id
    }
    /// <p>Specific configuration settings for a Kafka schema registry.</p>
    pub fn schema_registry_config(mut self, input: crate::types::KafkaSchemaRegistryConfig) -> Self {
        self.schema_registry_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specific configuration settings for a Kafka schema registry.</p>
    pub fn set_schema_registry_config(mut self, input: ::std::option::Option<crate::types::KafkaSchemaRegistryConfig>) -> Self {
        self.schema_registry_config = input;
        self
    }
    /// <p>Specific configuration settings for a Kafka schema registry.</p>
    pub fn get_schema_registry_config(&self) -> &::std::option::Option<crate::types::KafkaSchemaRegistryConfig> {
        &self.schema_registry_config
    }
    /// Consumes the builder and constructs a [`SelfManagedKafkaEventSourceConfig`](crate::types::SelfManagedKafkaEventSourceConfig).
    pub fn build(self) -> crate::types::SelfManagedKafkaEventSourceConfig {
        crate::types::SelfManagedKafkaEventSourceConfig {
            consumer_group_id: self.consumer_group_id,
            schema_registry_config: self.schema_registry_config,
        }
    }
}
