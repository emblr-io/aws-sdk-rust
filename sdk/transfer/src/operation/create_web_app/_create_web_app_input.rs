// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateWebAppInput {
    /// <p>You can provide a structure that contains the details for the identity provider to use with your web app.</p>
    /// <p>For more details about this parameter, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-identity-center.html">Configure your identity provider for Transfer Family web apps</a>.</p>
    pub identity_provider_details: ::std::option::Option<crate::types::WebAppIdentityProviderDetails>,
    /// <p>The <code>AccessEndpoint</code> is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.</p>
    /// <p>Before you enter a custom URL for this parameter, follow the steps described in <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-customize.html">Update your access endpoint with a custom URL</a>.</p>
    pub access_endpoint: ::std::option::Option<::std::string::String>,
    /// <p>A union that contains the value for number of concurrent connections or the user sessions on your web app.</p>
    pub web_app_units: ::std::option::Option<crate::types::WebAppUnits>,
    /// <p>Key-value pairs that can be used to group and search for web apps.</p>
    pub tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
    /// <p>Setting for the type of endpoint policy for the web app. The default value is <code>STANDARD</code>.</p>
    /// <p>If you are creating the web app in an Amazon Web Services GovCloud (US) Region, you can set this parameter to <code>FIPS</code>.</p>
    pub web_app_endpoint_policy: ::std::option::Option<crate::types::WebAppEndpointPolicy>,
}
impl CreateWebAppInput {
    /// <p>You can provide a structure that contains the details for the identity provider to use with your web app.</p>
    /// <p>For more details about this parameter, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-identity-center.html">Configure your identity provider for Transfer Family web apps</a>.</p>
    pub fn identity_provider_details(&self) -> ::std::option::Option<&crate::types::WebAppIdentityProviderDetails> {
        self.identity_provider_details.as_ref()
    }
    /// <p>The <code>AccessEndpoint</code> is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.</p>
    /// <p>Before you enter a custom URL for this parameter, follow the steps described in <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-customize.html">Update your access endpoint with a custom URL</a>.</p>
    pub fn access_endpoint(&self) -> ::std::option::Option<&str> {
        self.access_endpoint.as_deref()
    }
    /// <p>A union that contains the value for number of concurrent connections or the user sessions on your web app.</p>
    pub fn web_app_units(&self) -> ::std::option::Option<&crate::types::WebAppUnits> {
        self.web_app_units.as_ref()
    }
    /// <p>Key-value pairs that can be used to group and search for web apps.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.tags.is_none()`.
    pub fn tags(&self) -> &[crate::types::Tag] {
        self.tags.as_deref().unwrap_or_default()
    }
    /// <p>Setting for the type of endpoint policy for the web app. The default value is <code>STANDARD</code>.</p>
    /// <p>If you are creating the web app in an Amazon Web Services GovCloud (US) Region, you can set this parameter to <code>FIPS</code>.</p>
    pub fn web_app_endpoint_policy(&self) -> ::std::option::Option<&crate::types::WebAppEndpointPolicy> {
        self.web_app_endpoint_policy.as_ref()
    }
}
impl CreateWebAppInput {
    /// Creates a new builder-style object to manufacture [`CreateWebAppInput`](crate::operation::create_web_app::CreateWebAppInput).
    pub fn builder() -> crate::operation::create_web_app::builders::CreateWebAppInputBuilder {
        crate::operation::create_web_app::builders::CreateWebAppInputBuilder::default()
    }
}

/// A builder for [`CreateWebAppInput`](crate::operation::create_web_app::CreateWebAppInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateWebAppInputBuilder {
    pub(crate) identity_provider_details: ::std::option::Option<crate::types::WebAppIdentityProviderDetails>,
    pub(crate) access_endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) web_app_units: ::std::option::Option<crate::types::WebAppUnits>,
    pub(crate) tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
    pub(crate) web_app_endpoint_policy: ::std::option::Option<crate::types::WebAppEndpointPolicy>,
}
impl CreateWebAppInputBuilder {
    /// <p>You can provide a structure that contains the details for the identity provider to use with your web app.</p>
    /// <p>For more details about this parameter, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-identity-center.html">Configure your identity provider for Transfer Family web apps</a>.</p>
    /// This field is required.
    pub fn identity_provider_details(mut self, input: crate::types::WebAppIdentityProviderDetails) -> Self {
        self.identity_provider_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>You can provide a structure that contains the details for the identity provider to use with your web app.</p>
    /// <p>For more details about this parameter, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-identity-center.html">Configure your identity provider for Transfer Family web apps</a>.</p>
    pub fn set_identity_provider_details(mut self, input: ::std::option::Option<crate::types::WebAppIdentityProviderDetails>) -> Self {
        self.identity_provider_details = input;
        self
    }
    /// <p>You can provide a structure that contains the details for the identity provider to use with your web app.</p>
    /// <p>For more details about this parameter, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-identity-center.html">Configure your identity provider for Transfer Family web apps</a>.</p>
    pub fn get_identity_provider_details(&self) -> &::std::option::Option<crate::types::WebAppIdentityProviderDetails> {
        &self.identity_provider_details
    }
    /// <p>The <code>AccessEndpoint</code> is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.</p>
    /// <p>Before you enter a custom URL for this parameter, follow the steps described in <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-customize.html">Update your access endpoint with a custom URL</a>.</p>
    pub fn access_endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.access_endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>AccessEndpoint</code> is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.</p>
    /// <p>Before you enter a custom URL for this parameter, follow the steps described in <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-customize.html">Update your access endpoint with a custom URL</a>.</p>
    pub fn set_access_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.access_endpoint = input;
        self
    }
    /// <p>The <code>AccessEndpoint</code> is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.</p>
    /// <p>Before you enter a custom URL for this parameter, follow the steps described in <a href="https://docs.aws.amazon.com/transfer/latest/userguide/webapp-customize.html">Update your access endpoint with a custom URL</a>.</p>
    pub fn get_access_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.access_endpoint
    }
    /// <p>A union that contains the value for number of concurrent connections or the user sessions on your web app.</p>
    pub fn web_app_units(mut self, input: crate::types::WebAppUnits) -> Self {
        self.web_app_units = ::std::option::Option::Some(input);
        self
    }
    /// <p>A union that contains the value for number of concurrent connections or the user sessions on your web app.</p>
    pub fn set_web_app_units(mut self, input: ::std::option::Option<crate::types::WebAppUnits>) -> Self {
        self.web_app_units = input;
        self
    }
    /// <p>A union that contains the value for number of concurrent connections or the user sessions on your web app.</p>
    pub fn get_web_app_units(&self) -> &::std::option::Option<crate::types::WebAppUnits> {
        &self.web_app_units
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>Key-value pairs that can be used to group and search for web apps.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = ::std::option::Option::Some(v);
        self
    }
    /// <p>Key-value pairs that can be used to group and search for web apps.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>Key-value pairs that can be used to group and search for web apps.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Tag>> {
        &self.tags
    }
    /// <p>Setting for the type of endpoint policy for the web app. The default value is <code>STANDARD</code>.</p>
    /// <p>If you are creating the web app in an Amazon Web Services GovCloud (US) Region, you can set this parameter to <code>FIPS</code>.</p>
    pub fn web_app_endpoint_policy(mut self, input: crate::types::WebAppEndpointPolicy) -> Self {
        self.web_app_endpoint_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>Setting for the type of endpoint policy for the web app. The default value is <code>STANDARD</code>.</p>
    /// <p>If you are creating the web app in an Amazon Web Services GovCloud (US) Region, you can set this parameter to <code>FIPS</code>.</p>
    pub fn set_web_app_endpoint_policy(mut self, input: ::std::option::Option<crate::types::WebAppEndpointPolicy>) -> Self {
        self.web_app_endpoint_policy = input;
        self
    }
    /// <p>Setting for the type of endpoint policy for the web app. The default value is <code>STANDARD</code>.</p>
    /// <p>If you are creating the web app in an Amazon Web Services GovCloud (US) Region, you can set this parameter to <code>FIPS</code>.</p>
    pub fn get_web_app_endpoint_policy(&self) -> &::std::option::Option<crate::types::WebAppEndpointPolicy> {
        &self.web_app_endpoint_policy
    }
    /// Consumes the builder and constructs a [`CreateWebAppInput`](crate::operation::create_web_app::CreateWebAppInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_web_app::CreateWebAppInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_web_app::CreateWebAppInput {
            identity_provider_details: self.identity_provider_details,
            access_endpoint: self.access_endpoint,
            web_app_units: self.web_app_units,
            tags: self.tags,
            web_app_endpoint_policy: self.web_app_endpoint_policy,
        })
    }
}
