// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Indicates the rejected grouping recommendation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RejectGroupingRecommendationEntry {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub grouping_recommendation_id: ::std::string::String,
    /// <p>Indicates the reason you had selected while rejecting a grouping recommendation.</p>
    pub rejection_reason: ::std::option::Option<crate::types::GroupingRecommendationRejectionReason>,
}
impl RejectGroupingRecommendationEntry {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn grouping_recommendation_id(&self) -> &str {
        use std::ops::Deref;
        self.grouping_recommendation_id.deref()
    }
    /// <p>Indicates the reason you had selected while rejecting a grouping recommendation.</p>
    pub fn rejection_reason(&self) -> ::std::option::Option<&crate::types::GroupingRecommendationRejectionReason> {
        self.rejection_reason.as_ref()
    }
}
impl RejectGroupingRecommendationEntry {
    /// Creates a new builder-style object to manufacture [`RejectGroupingRecommendationEntry`](crate::types::RejectGroupingRecommendationEntry).
    pub fn builder() -> crate::types::builders::RejectGroupingRecommendationEntryBuilder {
        crate::types::builders::RejectGroupingRecommendationEntryBuilder::default()
    }
}

/// A builder for [`RejectGroupingRecommendationEntry`](crate::types::RejectGroupingRecommendationEntry).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RejectGroupingRecommendationEntryBuilder {
    pub(crate) grouping_recommendation_id: ::std::option::Option<::std::string::String>,
    pub(crate) rejection_reason: ::std::option::Option<crate::types::GroupingRecommendationRejectionReason>,
}
impl RejectGroupingRecommendationEntryBuilder {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    /// This field is required.
    pub fn grouping_recommendation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.grouping_recommendation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn set_grouping_recommendation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.grouping_recommendation_id = input;
        self
    }
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn get_grouping_recommendation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.grouping_recommendation_id
    }
    /// <p>Indicates the reason you had selected while rejecting a grouping recommendation.</p>
    pub fn rejection_reason(mut self, input: crate::types::GroupingRecommendationRejectionReason) -> Self {
        self.rejection_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates the reason you had selected while rejecting a grouping recommendation.</p>
    pub fn set_rejection_reason(mut self, input: ::std::option::Option<crate::types::GroupingRecommendationRejectionReason>) -> Self {
        self.rejection_reason = input;
        self
    }
    /// <p>Indicates the reason you had selected while rejecting a grouping recommendation.</p>
    pub fn get_rejection_reason(&self) -> &::std::option::Option<crate::types::GroupingRecommendationRejectionReason> {
        &self.rejection_reason
    }
    /// Consumes the builder and constructs a [`RejectGroupingRecommendationEntry`](crate::types::RejectGroupingRecommendationEntry).
    /// This method will fail if any of the following fields are not set:
    /// - [`grouping_recommendation_id`](crate::types::builders::RejectGroupingRecommendationEntryBuilder::grouping_recommendation_id)
    pub fn build(self) -> ::std::result::Result<crate::types::RejectGroupingRecommendationEntry, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RejectGroupingRecommendationEntry {
            grouping_recommendation_id: self.grouping_recommendation_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "grouping_recommendation_id",
                    "grouping_recommendation_id was not specified but it is required when building RejectGroupingRecommendationEntry",
                )
            })?,
            rejection_reason: self.rejection_reason,
        })
    }
}
