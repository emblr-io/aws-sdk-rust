// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Indicates the accepted grouping recommendation whose implementation failed.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FailedGroupingRecommendationEntry {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub grouping_recommendation_id: ::std::string::String,
    /// <p>Indicates the error that occurred while implementing a grouping recommendation.</p>
    pub error_message: ::std::string::String,
}
impl FailedGroupingRecommendationEntry {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn grouping_recommendation_id(&self) -> &str {
        use std::ops::Deref;
        self.grouping_recommendation_id.deref()
    }
    /// <p>Indicates the error that occurred while implementing a grouping recommendation.</p>
    pub fn error_message(&self) -> &str {
        use std::ops::Deref;
        self.error_message.deref()
    }
}
impl FailedGroupingRecommendationEntry {
    /// Creates a new builder-style object to manufacture [`FailedGroupingRecommendationEntry`](crate::types::FailedGroupingRecommendationEntry).
    pub fn builder() -> crate::types::builders::FailedGroupingRecommendationEntryBuilder {
        crate::types::builders::FailedGroupingRecommendationEntryBuilder::default()
    }
}

/// A builder for [`FailedGroupingRecommendationEntry`](crate::types::FailedGroupingRecommendationEntry).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FailedGroupingRecommendationEntryBuilder {
    pub(crate) grouping_recommendation_id: ::std::option::Option<::std::string::String>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
}
impl FailedGroupingRecommendationEntryBuilder {
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    /// This field is required.
    pub fn grouping_recommendation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.grouping_recommendation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn set_grouping_recommendation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.grouping_recommendation_id = input;
        self
    }
    /// <p>Indicates the identifier of the grouping recommendation.</p>
    pub fn get_grouping_recommendation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.grouping_recommendation_id
    }
    /// <p>Indicates the error that occurred while implementing a grouping recommendation.</p>
    /// This field is required.
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the error that occurred while implementing a grouping recommendation.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>Indicates the error that occurred while implementing a grouping recommendation.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// Consumes the builder and constructs a [`FailedGroupingRecommendationEntry`](crate::types::FailedGroupingRecommendationEntry).
    /// This method will fail if any of the following fields are not set:
    /// - [`grouping_recommendation_id`](crate::types::builders::FailedGroupingRecommendationEntryBuilder::grouping_recommendation_id)
    /// - [`error_message`](crate::types::builders::FailedGroupingRecommendationEntryBuilder::error_message)
    pub fn build(self) -> ::std::result::Result<crate::types::FailedGroupingRecommendationEntry, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FailedGroupingRecommendationEntry {
            grouping_recommendation_id: self.grouping_recommendation_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "grouping_recommendation_id",
                    "grouping_recommendation_id was not specified but it is required when building FailedGroupingRecommendationEntry",
                )
            })?,
            error_message: self.error_message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_message",
                    "error_message was not specified but it is required when building FailedGroupingRecommendationEntry",
                )
            })?,
        })
    }
}
