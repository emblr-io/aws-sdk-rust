// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Indicates the Amazon CloudWatch alarm detected while running an assessment.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Alarm {
    /// <p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>
    pub alarm_arn: ::std::option::Option<::std::string::String>,
    /// <p>Indicates the source of the Amazon CloudWatch alarm. That is, it indicates if the alarm was created using Resilience Hub recommendation (<code>AwsResilienceHub</code>), or if you had created the alarm in Amazon CloudWatch (<code>Customer</code>).</p>
    pub source: ::std::option::Option<::std::string::String>,
}
impl Alarm {
    /// <p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>
    pub fn alarm_arn(&self) -> ::std::option::Option<&str> {
        self.alarm_arn.as_deref()
    }
    /// <p>Indicates the source of the Amazon CloudWatch alarm. That is, it indicates if the alarm was created using Resilience Hub recommendation (<code>AwsResilienceHub</code>), or if you had created the alarm in Amazon CloudWatch (<code>Customer</code>).</p>
    pub fn source(&self) -> ::std::option::Option<&str> {
        self.source.as_deref()
    }
}
impl Alarm {
    /// Creates a new builder-style object to manufacture [`Alarm`](crate::types::Alarm).
    pub fn builder() -> crate::types::builders::AlarmBuilder {
        crate::types::builders::AlarmBuilder::default()
    }
}

/// A builder for [`Alarm`](crate::types::Alarm).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AlarmBuilder {
    pub(crate) alarm_arn: ::std::option::Option<::std::string::String>,
    pub(crate) source: ::std::option::Option<::std::string::String>,
}
impl AlarmBuilder {
    /// <p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>
    pub fn alarm_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.alarm_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>
    pub fn set_alarm_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.alarm_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>
    pub fn get_alarm_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.alarm_arn
    }
    /// <p>Indicates the source of the Amazon CloudWatch alarm. That is, it indicates if the alarm was created using Resilience Hub recommendation (<code>AwsResilienceHub</code>), or if you had created the alarm in Amazon CloudWatch (<code>Customer</code>).</p>
    pub fn source(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the source of the Amazon CloudWatch alarm. That is, it indicates if the alarm was created using Resilience Hub recommendation (<code>AwsResilienceHub</code>), or if you had created the alarm in Amazon CloudWatch (<code>Customer</code>).</p>
    pub fn set_source(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>Indicates the source of the Amazon CloudWatch alarm. That is, it indicates if the alarm was created using Resilience Hub recommendation (<code>AwsResilienceHub</code>), or if you had created the alarm in Amazon CloudWatch (<code>Customer</code>).</p>
    pub fn get_source(&self) -> &::std::option::Option<::std::string::String> {
        &self.source
    }
    /// Consumes the builder and constructs a [`Alarm`](crate::types::Alarm).
    pub fn build(self) -> crate::types::Alarm {
        crate::types::Alarm {
            alarm_arn: self.alarm_arn,
            source: self.source,
        }
    }
}
