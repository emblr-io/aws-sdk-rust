// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Filters for your invoice summaries.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InvoiceSummariesFilter {
    /// <p>The date range for invoice summary retrieval.</p>
    pub time_interval: ::std::option::Option<crate::types::DateInterval>,
    /// <p>The billing period associated with the invoice documents.</p>
    pub billing_period: ::std::option::Option<crate::types::BillingPeriod>,
    /// <p>The name of the entity that issues the Amazon Web Services invoice.</p>
    pub invoicing_entity: ::std::option::Option<::std::string::String>,
}
impl InvoiceSummariesFilter {
    /// <p>The date range for invoice summary retrieval.</p>
    pub fn time_interval(&self) -> ::std::option::Option<&crate::types::DateInterval> {
        self.time_interval.as_ref()
    }
    /// <p>The billing period associated with the invoice documents.</p>
    pub fn billing_period(&self) -> ::std::option::Option<&crate::types::BillingPeriod> {
        self.billing_period.as_ref()
    }
    /// <p>The name of the entity that issues the Amazon Web Services invoice.</p>
    pub fn invoicing_entity(&self) -> ::std::option::Option<&str> {
        self.invoicing_entity.as_deref()
    }
}
impl InvoiceSummariesFilter {
    /// Creates a new builder-style object to manufacture [`InvoiceSummariesFilter`](crate::types::InvoiceSummariesFilter).
    pub fn builder() -> crate::types::builders::InvoiceSummariesFilterBuilder {
        crate::types::builders::InvoiceSummariesFilterBuilder::default()
    }
}

/// A builder for [`InvoiceSummariesFilter`](crate::types::InvoiceSummariesFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InvoiceSummariesFilterBuilder {
    pub(crate) time_interval: ::std::option::Option<crate::types::DateInterval>,
    pub(crate) billing_period: ::std::option::Option<crate::types::BillingPeriod>,
    pub(crate) invoicing_entity: ::std::option::Option<::std::string::String>,
}
impl InvoiceSummariesFilterBuilder {
    /// <p>The date range for invoice summary retrieval.</p>
    pub fn time_interval(mut self, input: crate::types::DateInterval) -> Self {
        self.time_interval = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date range for invoice summary retrieval.</p>
    pub fn set_time_interval(mut self, input: ::std::option::Option<crate::types::DateInterval>) -> Self {
        self.time_interval = input;
        self
    }
    /// <p>The date range for invoice summary retrieval.</p>
    pub fn get_time_interval(&self) -> &::std::option::Option<crate::types::DateInterval> {
        &self.time_interval
    }
    /// <p>The billing period associated with the invoice documents.</p>
    pub fn billing_period(mut self, input: crate::types::BillingPeriod) -> Self {
        self.billing_period = ::std::option::Option::Some(input);
        self
    }
    /// <p>The billing period associated with the invoice documents.</p>
    pub fn set_billing_period(mut self, input: ::std::option::Option<crate::types::BillingPeriod>) -> Self {
        self.billing_period = input;
        self
    }
    /// <p>The billing period associated with the invoice documents.</p>
    pub fn get_billing_period(&self) -> &::std::option::Option<crate::types::BillingPeriod> {
        &self.billing_period
    }
    /// <p>The name of the entity that issues the Amazon Web Services invoice.</p>
    pub fn invoicing_entity(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoicing_entity = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the entity that issues the Amazon Web Services invoice.</p>
    pub fn set_invoicing_entity(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoicing_entity = input;
        self
    }
    /// <p>The name of the entity that issues the Amazon Web Services invoice.</p>
    pub fn get_invoicing_entity(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoicing_entity
    }
    /// Consumes the builder and constructs a [`InvoiceSummariesFilter`](crate::types::InvoiceSummariesFilter).
    pub fn build(self) -> crate::types::InvoiceSummariesFilter {
        crate::types::InvoiceSummariesFilter {
            time_interval: self.time_interval,
            billing_period: self.billing_period,
            invoicing_entity: self.invoicing_entity,
        }
    }
}
