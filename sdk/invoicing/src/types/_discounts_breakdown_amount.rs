// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The discounted amount.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DiscountsBreakdownAmount {
    /// <p>The list of discounts information.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The discounted amount.</p>
    pub amount: ::std::option::Option<::std::string::String>,
    /// <p>The details for the discount rate..</p>
    pub rate: ::std::option::Option<::std::string::String>,
}
impl DiscountsBreakdownAmount {
    /// <p>The list of discounts information.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The discounted amount.</p>
    pub fn amount(&self) -> ::std::option::Option<&str> {
        self.amount.as_deref()
    }
    /// <p>The details for the discount rate..</p>
    pub fn rate(&self) -> ::std::option::Option<&str> {
        self.rate.as_deref()
    }
}
impl DiscountsBreakdownAmount {
    /// Creates a new builder-style object to manufacture [`DiscountsBreakdownAmount`](crate::types::DiscountsBreakdownAmount).
    pub fn builder() -> crate::types::builders::DiscountsBreakdownAmountBuilder {
        crate::types::builders::DiscountsBreakdownAmountBuilder::default()
    }
}

/// A builder for [`DiscountsBreakdownAmount`](crate::types::DiscountsBreakdownAmount).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DiscountsBreakdownAmountBuilder {
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) amount: ::std::option::Option<::std::string::String>,
    pub(crate) rate: ::std::option::Option<::std::string::String>,
}
impl DiscountsBreakdownAmountBuilder {
    /// <p>The list of discounts information.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The list of discounts information.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The list of discounts information.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The discounted amount.</p>
    pub fn amount(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.amount = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The discounted amount.</p>
    pub fn set_amount(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.amount = input;
        self
    }
    /// <p>The discounted amount.</p>
    pub fn get_amount(&self) -> &::std::option::Option<::std::string::String> {
        &self.amount
    }
    /// <p>The details for the discount rate..</p>
    pub fn rate(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rate = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The details for the discount rate..</p>
    pub fn set_rate(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rate = input;
        self
    }
    /// <p>The details for the discount rate..</p>
    pub fn get_rate(&self) -> &::std::option::Option<::std::string::String> {
        &self.rate
    }
    /// Consumes the builder and constructs a [`DiscountsBreakdownAmount`](crate::types::DiscountsBreakdownAmount).
    pub fn build(self) -> crate::types::DiscountsBreakdownAmount {
        crate::types::DiscountsBreakdownAmount {
            description: self.description,
            amount: self.amount,
            rate: self.rate,
        }
    }
}
