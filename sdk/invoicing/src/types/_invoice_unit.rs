// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An invoice unit is a set of mutually exclusive accounts that correspond to your business entity. Invoice units allow you separate Amazon Web Services account costs and configures your invoice for each business entity going forward.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InvoiceUnit {
    /// <p>ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub invoice_unit_arn: ::std::option::Option<::std::string::String>,
    /// <p>The account that receives invoices related to the invoice unit.</p>
    pub invoice_receiver: ::std::option::Option<::std::string::String>,
    /// <p>A unique name that is distinctive within your Amazon Web Services.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub tax_inheritance_disabled: ::std::option::Option<bool>,
    /// <p>An <code>InvoiceUnitRule</code> object used the categorize invoice units.</p>
    pub rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    /// <p>The last time the invoice unit was updated. This is important to determine the version of invoice unit configuration used to create the invoices. Any invoice created after this modified time will use this invoice unit configuration.</p>
    pub last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl InvoiceUnit {
    /// <p>ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn invoice_unit_arn(&self) -> ::std::option::Option<&str> {
        self.invoice_unit_arn.as_deref()
    }
    /// <p>The account that receives invoices related to the invoice unit.</p>
    pub fn invoice_receiver(&self) -> ::std::option::Option<&str> {
        self.invoice_receiver.as_deref()
    }
    /// <p>A unique name that is distinctive within your Amazon Web Services.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(&self) -> ::std::option::Option<bool> {
        self.tax_inheritance_disabled
    }
    /// <p>An <code>InvoiceUnitRule</code> object used the categorize invoice units.</p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::InvoiceUnitRule> {
        self.rule.as_ref()
    }
    /// <p>The last time the invoice unit was updated. This is important to determine the version of invoice unit configuration used to create the invoices. Any invoice created after this modified time will use this invoice unit configuration.</p>
    pub fn last_modified(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified.as_ref()
    }
}
impl InvoiceUnit {
    /// Creates a new builder-style object to manufacture [`InvoiceUnit`](crate::types::InvoiceUnit).
    pub fn builder() -> crate::types::builders::InvoiceUnitBuilder {
        crate::types::builders::InvoiceUnitBuilder::default()
    }
}

/// A builder for [`InvoiceUnit`](crate::types::InvoiceUnit).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InvoiceUnitBuilder {
    pub(crate) invoice_unit_arn: ::std::option::Option<::std::string::String>,
    pub(crate) invoice_receiver: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) tax_inheritance_disabled: ::std::option::Option<bool>,
    pub(crate) rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    pub(crate) last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl InvoiceUnitBuilder {
    /// <p>ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn invoice_unit_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_unit_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn set_invoice_unit_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_unit_arn = input;
        self
    }
    /// <p>ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn get_invoice_unit_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_unit_arn
    }
    /// <p>The account that receives invoices related to the invoice unit.</p>
    pub fn invoice_receiver(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_receiver = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The account that receives invoices related to the invoice unit.</p>
    pub fn set_invoice_receiver(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_receiver = input;
        self
    }
    /// <p>The account that receives invoices related to the invoice unit.</p>
    pub fn get_invoice_receiver(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_receiver
    }
    /// <p>A unique name that is distinctive within your Amazon Web Services.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique name that is distinctive within your Amazon Web Services.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A unique name that is distinctive within your Amazon Web Services.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(mut self, input: bool) -> Self {
        self.tax_inheritance_disabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn set_tax_inheritance_disabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.tax_inheritance_disabled = input;
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn get_tax_inheritance_disabled(&self) -> &::std::option::Option<bool> {
        &self.tax_inheritance_disabled
    }
    /// <p>An <code>InvoiceUnitRule</code> object used the categorize invoice units.</p>
    pub fn rule(mut self, input: crate::types::InvoiceUnitRule) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>An <code>InvoiceUnitRule</code> object used the categorize invoice units.</p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::InvoiceUnitRule>) -> Self {
        self.rule = input;
        self
    }
    /// <p>An <code>InvoiceUnitRule</code> object used the categorize invoice units.</p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::InvoiceUnitRule> {
        &self.rule
    }
    /// <p>The last time the invoice unit was updated. This is important to determine the version of invoice unit configuration used to create the invoices. Any invoice created after this modified time will use this invoice unit configuration.</p>
    pub fn last_modified(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last time the invoice unit was updated. This is important to determine the version of invoice unit configuration used to create the invoices. Any invoice created after this modified time will use this invoice unit configuration.</p>
    pub fn set_last_modified(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified = input;
        self
    }
    /// <p>The last time the invoice unit was updated. This is important to determine the version of invoice unit configuration used to create the invoices. Any invoice created after this modified time will use this invoice unit configuration.</p>
    pub fn get_last_modified(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified
    }
    /// Consumes the builder and constructs a [`InvoiceUnit`](crate::types::InvoiceUnit).
    pub fn build(self) -> crate::types::InvoiceUnit {
        crate::types::InvoiceUnit {
            invoice_unit_arn: self.invoice_unit_arn,
            invoice_receiver: self.invoice_receiver,
            name: self.name,
            description: self.description,
            tax_inheritance_disabled: self.tax_inheritance_disabled,
            rule: self.rule,
            last_modified: self.last_modified,
        }
    }
}
