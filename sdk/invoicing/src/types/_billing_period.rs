// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The billing period for which you want to retrieve invoice-related documents.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BillingPeriod {
    /// <p>The billing period month.</p>
    pub month: i32,
    /// <p>The billing period year.</p>
    pub year: i32,
}
impl BillingPeriod {
    /// <p>The billing period month.</p>
    pub fn month(&self) -> i32 {
        self.month
    }
    /// <p>The billing period year.</p>
    pub fn year(&self) -> i32 {
        self.year
    }
}
impl BillingPeriod {
    /// Creates a new builder-style object to manufacture [`BillingPeriod`](crate::types::BillingPeriod).
    pub fn builder() -> crate::types::builders::BillingPeriodBuilder {
        crate::types::builders::BillingPeriodBuilder::default()
    }
}

/// A builder for [`BillingPeriod`](crate::types::BillingPeriod).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BillingPeriodBuilder {
    pub(crate) month: ::std::option::Option<i32>,
    pub(crate) year: ::std::option::Option<i32>,
}
impl BillingPeriodBuilder {
    /// <p>The billing period month.</p>
    /// This field is required.
    pub fn month(mut self, input: i32) -> Self {
        self.month = ::std::option::Option::Some(input);
        self
    }
    /// <p>The billing period month.</p>
    pub fn set_month(mut self, input: ::std::option::Option<i32>) -> Self {
        self.month = input;
        self
    }
    /// <p>The billing period month.</p>
    pub fn get_month(&self) -> &::std::option::Option<i32> {
        &self.month
    }
    /// <p>The billing period year.</p>
    /// This field is required.
    pub fn year(mut self, input: i32) -> Self {
        self.year = ::std::option::Option::Some(input);
        self
    }
    /// <p>The billing period year.</p>
    pub fn set_year(mut self, input: ::std::option::Option<i32>) -> Self {
        self.year = input;
        self
    }
    /// <p>The billing period year.</p>
    pub fn get_year(&self) -> &::std::option::Option<i32> {
        &self.year
    }
    /// Consumes the builder and constructs a [`BillingPeriod`](crate::types::BillingPeriod).
    /// This method will fail if any of the following fields are not set:
    /// - [`month`](crate::types::builders::BillingPeriodBuilder::month)
    /// - [`year`](crate::types::builders::BillingPeriodBuilder::year)
    pub fn build(self) -> ::std::result::Result<crate::types::BillingPeriod, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BillingPeriod {
            month: self.month.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "month",
                    "month was not specified but it is required when building BillingPeriod",
                )
            })?,
            year: self.year.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "year",
                    "year was not specified but it is required when building BillingPeriod",
                )
            })?,
        })
    }
}
