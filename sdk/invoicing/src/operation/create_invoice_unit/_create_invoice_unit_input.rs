// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateInvoiceUnitInput {
    /// <p>The unique name of the invoice unit that is shown on the generated invoice. This can't be changed once it is set. To change this name, you must delete the invoice unit recreate.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub invoice_receiver: ::std::option::Option<::std::string::String>,
    /// <p>The invoice unit's description. This can be changed at a later time.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub tax_inheritance_disabled: ::std::option::Option<bool>,
    /// <p>The <code>InvoiceUnitRule</code> object used to create invoice units.</p>
    pub rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    /// <p>The tag structure that contains a tag key and value.</p>
    pub resource_tags: ::std::option::Option<::std::vec::Vec<crate::types::ResourceTag>>,
}
impl CreateInvoiceUnitInput {
    /// <p>The unique name of the invoice unit that is shown on the generated invoice. This can't be changed once it is set. To change this name, you must delete the invoice unit recreate.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn invoice_receiver(&self) -> ::std::option::Option<&str> {
        self.invoice_receiver.as_deref()
    }
    /// <p>The invoice unit's description. This can be changed at a later time.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(&self) -> ::std::option::Option<bool> {
        self.tax_inheritance_disabled
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to create invoice units.</p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::InvoiceUnitRule> {
        self.rule.as_ref()
    }
    /// <p>The tag structure that contains a tag key and value.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.resource_tags.is_none()`.
    pub fn resource_tags(&self) -> &[crate::types::ResourceTag] {
        self.resource_tags.as_deref().unwrap_or_default()
    }
}
impl CreateInvoiceUnitInput {
    /// Creates a new builder-style object to manufacture [`CreateInvoiceUnitInput`](crate::operation::create_invoice_unit::CreateInvoiceUnitInput).
    pub fn builder() -> crate::operation::create_invoice_unit::builders::CreateInvoiceUnitInputBuilder {
        crate::operation::create_invoice_unit::builders::CreateInvoiceUnitInputBuilder::default()
    }
}

/// A builder for [`CreateInvoiceUnitInput`](crate::operation::create_invoice_unit::CreateInvoiceUnitInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateInvoiceUnitInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) invoice_receiver: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) tax_inheritance_disabled: ::std::option::Option<bool>,
    pub(crate) rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    pub(crate) resource_tags: ::std::option::Option<::std::vec::Vec<crate::types::ResourceTag>>,
}
impl CreateInvoiceUnitInputBuilder {
    /// <p>The unique name of the invoice unit that is shown on the generated invoice. This can't be changed once it is set. To change this name, you must delete the invoice unit recreate.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice. This can't be changed once it is set. To change this name, you must delete the invoice unit recreate.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice. This can't be changed once it is set. To change this name, you must delete the invoice unit recreate.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    /// This field is required.
    pub fn invoice_receiver(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_receiver = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn set_invoice_receiver(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_receiver = input;
        self
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn get_invoice_receiver(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_receiver
    }
    /// <p>The invoice unit's description. This can be changed at a later time.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The invoice unit's description. This can be changed at a later time.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The invoice unit's description. This can be changed at a later time.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(mut self, input: bool) -> Self {
        self.tax_inheritance_disabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn set_tax_inheritance_disabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.tax_inheritance_disabled = input;
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn get_tax_inheritance_disabled(&self) -> &::std::option::Option<bool> {
        &self.tax_inheritance_disabled
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to create invoice units.</p>
    /// This field is required.
    pub fn rule(mut self, input: crate::types::InvoiceUnitRule) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to create invoice units.</p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::InvoiceUnitRule>) -> Self {
        self.rule = input;
        self
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to create invoice units.</p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::InvoiceUnitRule> {
        &self.rule
    }
    /// Appends an item to `resource_tags`.
    ///
    /// To override the contents of this collection use [`set_resource_tags`](Self::set_resource_tags).
    ///
    /// <p>The tag structure that contains a tag key and value.</p>
    pub fn resource_tags(mut self, input: crate::types::ResourceTag) -> Self {
        let mut v = self.resource_tags.unwrap_or_default();
        v.push(input);
        self.resource_tags = ::std::option::Option::Some(v);
        self
    }
    /// <p>The tag structure that contains a tag key and value.</p>
    pub fn set_resource_tags(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ResourceTag>>) -> Self {
        self.resource_tags = input;
        self
    }
    /// <p>The tag structure that contains a tag key and value.</p>
    pub fn get_resource_tags(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ResourceTag>> {
        &self.resource_tags
    }
    /// Consumes the builder and constructs a [`CreateInvoiceUnitInput`](crate::operation::create_invoice_unit::CreateInvoiceUnitInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_invoice_unit::CreateInvoiceUnitInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_invoice_unit::CreateInvoiceUnitInput {
            name: self.name,
            invoice_receiver: self.invoice_receiver,
            description: self.description,
            tax_inheritance_disabled: self.tax_inheritance_disabled,
            rule: self.rule,
            resource_tags: self.resource_tags,
        })
    }
}
