// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateInvoiceUnitInput {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub invoice_unit_arn: ::std::option::Option<::std::string::String>,
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub tax_inheritance_disabled: ::std::option::Option<bool>,
    /// <p>The <code>InvoiceUnitRule</code> object used to update invoice units.</p>
    pub rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
}
impl UpdateInvoiceUnitInput {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn invoice_unit_arn(&self) -> ::std::option::Option<&str> {
        self.invoice_unit_arn.as_deref()
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(&self) -> ::std::option::Option<bool> {
        self.tax_inheritance_disabled
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to update invoice units.</p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::InvoiceUnitRule> {
        self.rule.as_ref()
    }
}
impl UpdateInvoiceUnitInput {
    /// Creates a new builder-style object to manufacture [`UpdateInvoiceUnitInput`](crate::operation::update_invoice_unit::UpdateInvoiceUnitInput).
    pub fn builder() -> crate::operation::update_invoice_unit::builders::UpdateInvoiceUnitInputBuilder {
        crate::operation::update_invoice_unit::builders::UpdateInvoiceUnitInputBuilder::default()
    }
}

/// A builder for [`UpdateInvoiceUnitInput`](crate::operation::update_invoice_unit::UpdateInvoiceUnitInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateInvoiceUnitInputBuilder {
    pub(crate) invoice_unit_arn: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) tax_inheritance_disabled: ::std::option::Option<bool>,
    pub(crate) rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
}
impl UpdateInvoiceUnitInputBuilder {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    /// This field is required.
    pub fn invoice_unit_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_unit_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn set_invoice_unit_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_unit_arn = input;
        self
    }
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn get_invoice_unit_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_unit_arn
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The assigned description for an invoice unit. This information can't be modified or deleted.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(mut self, input: bool) -> Self {
        self.tax_inheritance_disabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn set_tax_inheritance_disabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.tax_inheritance_disabled = input;
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn get_tax_inheritance_disabled(&self) -> &::std::option::Option<bool> {
        &self.tax_inheritance_disabled
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to update invoice units.</p>
    pub fn rule(mut self, input: crate::types::InvoiceUnitRule) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to update invoice units.</p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::InvoiceUnitRule>) -> Self {
        self.rule = input;
        self
    }
    /// <p>The <code>InvoiceUnitRule</code> object used to update invoice units.</p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::InvoiceUnitRule> {
        &self.rule
    }
    /// Consumes the builder and constructs a [`UpdateInvoiceUnitInput`](crate::operation::update_invoice_unit::UpdateInvoiceUnitInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_invoice_unit::UpdateInvoiceUnitInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_invoice_unit::UpdateInvoiceUnitInput {
            invoice_unit_arn: self.invoice_unit_arn,
            description: self.description,
            tax_inheritance_disabled: self.tax_inheritance_disabled,
            rule: self.rule,
        })
    }
}
