// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListInvoiceUnitsInput {
    /// <p>An optional input to the list API. If multiple filters are specified, the returned list will be a configuration that match all of the provided filters. Supported filter types are <code>InvoiceReceivers</code>, <code>Names</code>, and <code>Accounts</code>.</p>
    pub filters: ::std::option::Option<crate::types::Filters>,
    /// <p>The next token used to indicate where the returned list should start from.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of invoice units that can be returned.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The state of an invoice unit at a specified time. You can see legacy invoice units that are currently deleted if the <code>AsOf</code> time is set to before it was deleted. If an <code>AsOf</code> is not provided, the default value is the current time.</p>
    pub as_of: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ListInvoiceUnitsInput {
    /// <p>An optional input to the list API. If multiple filters are specified, the returned list will be a configuration that match all of the provided filters. Supported filter types are <code>InvoiceReceivers</code>, <code>Names</code>, and <code>Accounts</code>.</p>
    pub fn filters(&self) -> ::std::option::Option<&crate::types::Filters> {
        self.filters.as_ref()
    }
    /// <p>The next token used to indicate where the returned list should start from.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of invoice units that can be returned.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The state of an invoice unit at a specified time. You can see legacy invoice units that are currently deleted if the <code>AsOf</code> time is set to before it was deleted. If an <code>AsOf</code> is not provided, the default value is the current time.</p>
    pub fn as_of(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.as_of.as_ref()
    }
}
impl ListInvoiceUnitsInput {
    /// Creates a new builder-style object to manufacture [`ListInvoiceUnitsInput`](crate::operation::list_invoice_units::ListInvoiceUnitsInput).
    pub fn builder() -> crate::operation::list_invoice_units::builders::ListInvoiceUnitsInputBuilder {
        crate::operation::list_invoice_units::builders::ListInvoiceUnitsInputBuilder::default()
    }
}

/// A builder for [`ListInvoiceUnitsInput`](crate::operation::list_invoice_units::ListInvoiceUnitsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListInvoiceUnitsInputBuilder {
    pub(crate) filters: ::std::option::Option<crate::types::Filters>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) as_of: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ListInvoiceUnitsInputBuilder {
    /// <p>An optional input to the list API. If multiple filters are specified, the returned list will be a configuration that match all of the provided filters. Supported filter types are <code>InvoiceReceivers</code>, <code>Names</code>, and <code>Accounts</code>.</p>
    pub fn filters(mut self, input: crate::types::Filters) -> Self {
        self.filters = ::std::option::Option::Some(input);
        self
    }
    /// <p>An optional input to the list API. If multiple filters are specified, the returned list will be a configuration that match all of the provided filters. Supported filter types are <code>InvoiceReceivers</code>, <code>Names</code>, and <code>Accounts</code>.</p>
    pub fn set_filters(mut self, input: ::std::option::Option<crate::types::Filters>) -> Self {
        self.filters = input;
        self
    }
    /// <p>An optional input to the list API. If multiple filters are specified, the returned list will be a configuration that match all of the provided filters. Supported filter types are <code>InvoiceReceivers</code>, <code>Names</code>, and <code>Accounts</code>.</p>
    pub fn get_filters(&self) -> &::std::option::Option<crate::types::Filters> {
        &self.filters
    }
    /// <p>The next token used to indicate where the returned list should start from.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next token used to indicate where the returned list should start from.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next token used to indicate where the returned list should start from.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of invoice units that can be returned.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of invoice units that can be returned.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of invoice units that can be returned.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The state of an invoice unit at a specified time. You can see legacy invoice units that are currently deleted if the <code>AsOf</code> time is set to before it was deleted. If an <code>AsOf</code> is not provided, the default value is the current time.</p>
    pub fn as_of(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.as_of = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of an invoice unit at a specified time. You can see legacy invoice units that are currently deleted if the <code>AsOf</code> time is set to before it was deleted. If an <code>AsOf</code> is not provided, the default value is the current time.</p>
    pub fn set_as_of(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.as_of = input;
        self
    }
    /// <p>The state of an invoice unit at a specified time. You can see legacy invoice units that are currently deleted if the <code>AsOf</code> time is set to before it was deleted. If an <code>AsOf</code> is not provided, the default value is the current time.</p>
    pub fn get_as_of(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.as_of
    }
    /// Consumes the builder and constructs a [`ListInvoiceUnitsInput`](crate::operation::list_invoice_units::ListInvoiceUnitsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_invoice_units::ListInvoiceUnitsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::list_invoice_units::ListInvoiceUnitsInput {
            filters: self.filters,
            next_token: self.next_token,
            max_results: self.max_results,
            as_of: self.as_of,
        })
    }
}
