// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetInvoiceUnitOutput {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub invoice_unit_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub invoice_receiver: ::std::option::Option<::std::string::String>,
    /// <p>The unique name of the invoice unit that is shown on the generated invoice.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The assigned description for an invoice unit.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub tax_inheritance_disabled: ::std::option::Option<bool>,
    /// <p>This is used to categorize the invoice unit. Values are Amazon Web Services account IDs. Currently, the only supported rule is <code>LINKED_ACCOUNT</code>.</p>
    pub rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    /// <p>The most recent date the invoice unit response was updated.</p>
    pub last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetInvoiceUnitOutput {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn invoice_unit_arn(&self) -> ::std::option::Option<&str> {
        self.invoice_unit_arn.as_deref()
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn invoice_receiver(&self) -> ::std::option::Option<&str> {
        self.invoice_receiver.as_deref()
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The assigned description for an invoice unit.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(&self) -> ::std::option::Option<bool> {
        self.tax_inheritance_disabled
    }
    /// <p>This is used to categorize the invoice unit. Values are Amazon Web Services account IDs. Currently, the only supported rule is <code>LINKED_ACCOUNT</code>.</p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::InvoiceUnitRule> {
        self.rule.as_ref()
    }
    /// <p>The most recent date the invoice unit response was updated.</p>
    pub fn last_modified(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetInvoiceUnitOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetInvoiceUnitOutput {
    /// Creates a new builder-style object to manufacture [`GetInvoiceUnitOutput`](crate::operation::get_invoice_unit::GetInvoiceUnitOutput).
    pub fn builder() -> crate::operation::get_invoice_unit::builders::GetInvoiceUnitOutputBuilder {
        crate::operation::get_invoice_unit::builders::GetInvoiceUnitOutputBuilder::default()
    }
}

/// A builder for [`GetInvoiceUnitOutput`](crate::operation::get_invoice_unit::GetInvoiceUnitOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetInvoiceUnitOutputBuilder {
    pub(crate) invoice_unit_arn: ::std::option::Option<::std::string::String>,
    pub(crate) invoice_receiver: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) tax_inheritance_disabled: ::std::option::Option<bool>,
    pub(crate) rule: ::std::option::Option<crate::types::InvoiceUnitRule>,
    pub(crate) last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetInvoiceUnitOutputBuilder {
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn invoice_unit_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_unit_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn set_invoice_unit_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_unit_arn = input;
        self
    }
    /// <p>The ARN to identify an invoice unit. This information can't be modified or deleted.</p>
    pub fn get_invoice_unit_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_unit_arn
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn invoice_receiver(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invoice_receiver = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn set_invoice_receiver(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invoice_receiver = input;
        self
    }
    /// <p>The Amazon Web Services account ID chosen to be the receiver of an invoice unit. All invoices generated for that invoice unit will be sent to this account ID.</p>
    pub fn get_invoice_receiver(&self) -> &::std::option::Option<::std::string::String> {
        &self.invoice_receiver
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The unique name of the invoice unit that is shown on the generated invoice.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The assigned description for an invoice unit.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The assigned description for an invoice unit.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The assigned description for an invoice unit.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn tax_inheritance_disabled(mut self, input: bool) -> Self {
        self.tax_inheritance_disabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn set_tax_inheritance_disabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.tax_inheritance_disabled = input;
        self
    }
    /// <p>Whether the invoice unit based tax inheritance is/ should be enabled or disabled.</p>
    pub fn get_tax_inheritance_disabled(&self) -> &::std::option::Option<bool> {
        &self.tax_inheritance_disabled
    }
    /// <p>This is used to categorize the invoice unit. Values are Amazon Web Services account IDs. Currently, the only supported rule is <code>LINKED_ACCOUNT</code>.</p>
    pub fn rule(mut self, input: crate::types::InvoiceUnitRule) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is used to categorize the invoice unit. Values are Amazon Web Services account IDs. Currently, the only supported rule is <code>LINKED_ACCOUNT</code>.</p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::InvoiceUnitRule>) -> Self {
        self.rule = input;
        self
    }
    /// <p>This is used to categorize the invoice unit. Values are Amazon Web Services account IDs. Currently, the only supported rule is <code>LINKED_ACCOUNT</code>.</p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::InvoiceUnitRule> {
        &self.rule
    }
    /// <p>The most recent date the invoice unit response was updated.</p>
    pub fn last_modified(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified = ::std::option::Option::Some(input);
        self
    }
    /// <p>The most recent date the invoice unit response was updated.</p>
    pub fn set_last_modified(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified = input;
        self
    }
    /// <p>The most recent date the invoice unit response was updated.</p>
    pub fn get_last_modified(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetInvoiceUnitOutput`](crate::operation::get_invoice_unit::GetInvoiceUnitOutput).
    pub fn build(self) -> crate::operation::get_invoice_unit::GetInvoiceUnitOutput {
        crate::operation::get_invoice_unit::GetInvoiceUnitOutput {
            invoice_unit_arn: self.invoice_unit_arn,
            invoice_receiver: self.invoice_receiver,
            name: self.name,
            description: self.description,
            tax_inheritance_disabled: self.tax_inheritance_disabled,
            rule: self.rule,
            last_modified: self.last_modified,
            _request_id: self._request_id,
        }
    }
}
