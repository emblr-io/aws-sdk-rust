// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListInvoiceSummariesInput {
    /// <p>The option to retrieve details for a specific invoice by providing its unique ID. Alternatively, access information for all invoices linked to the account by providing an account ID.</p>
    pub selector: ::std::option::Option<crate::types::InvoiceSummariesSelector>,
    /// <p>Filters you can use to customize your invoice summary.</p>
    pub filter: ::std::option::Option<crate::types::InvoiceSummariesFilter>,
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of invoice summaries a paginated response can contain.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListInvoiceSummariesInput {
    /// <p>The option to retrieve details for a specific invoice by providing its unique ID. Alternatively, access information for all invoices linked to the account by providing an account ID.</p>
    pub fn selector(&self) -> ::std::option::Option<&crate::types::InvoiceSummariesSelector> {
        self.selector.as_ref()
    }
    /// <p>Filters you can use to customize your invoice summary.</p>
    pub fn filter(&self) -> ::std::option::Option<&crate::types::InvoiceSummariesFilter> {
        self.filter.as_ref()
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of invoice summaries a paginated response can contain.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListInvoiceSummariesInput {
    /// Creates a new builder-style object to manufacture [`ListInvoiceSummariesInput`](crate::operation::list_invoice_summaries::ListInvoiceSummariesInput).
    pub fn builder() -> crate::operation::list_invoice_summaries::builders::ListInvoiceSummariesInputBuilder {
        crate::operation::list_invoice_summaries::builders::ListInvoiceSummariesInputBuilder::default()
    }
}

/// A builder for [`ListInvoiceSummariesInput`](crate::operation::list_invoice_summaries::ListInvoiceSummariesInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListInvoiceSummariesInputBuilder {
    pub(crate) selector: ::std::option::Option<crate::types::InvoiceSummariesSelector>,
    pub(crate) filter: ::std::option::Option<crate::types::InvoiceSummariesFilter>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListInvoiceSummariesInputBuilder {
    /// <p>The option to retrieve details for a specific invoice by providing its unique ID. Alternatively, access information for all invoices linked to the account by providing an account ID.</p>
    /// This field is required.
    pub fn selector(mut self, input: crate::types::InvoiceSummariesSelector) -> Self {
        self.selector = ::std::option::Option::Some(input);
        self
    }
    /// <p>The option to retrieve details for a specific invoice by providing its unique ID. Alternatively, access information for all invoices linked to the account by providing an account ID.</p>
    pub fn set_selector(mut self, input: ::std::option::Option<crate::types::InvoiceSummariesSelector>) -> Self {
        self.selector = input;
        self
    }
    /// <p>The option to retrieve details for a specific invoice by providing its unique ID. Alternatively, access information for all invoices linked to the account by providing an account ID.</p>
    pub fn get_selector(&self) -> &::std::option::Option<crate::types::InvoiceSummariesSelector> {
        &self.selector
    }
    /// <p>Filters you can use to customize your invoice summary.</p>
    pub fn filter(mut self, input: crate::types::InvoiceSummariesFilter) -> Self {
        self.filter = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filters you can use to customize your invoice summary.</p>
    pub fn set_filter(mut self, input: ::std::option::Option<crate::types::InvoiceSummariesFilter>) -> Self {
        self.filter = input;
        self
    }
    /// <p>Filters you can use to customize your invoice summary.</p>
    pub fn get_filter(&self) -> &::std::option::Option<crate::types::InvoiceSummariesFilter> {
        &self.filter
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of invoice summaries a paginated response can contain.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of invoice summaries a paginated response can contain.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of invoice summaries a paginated response can contain.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListInvoiceSummariesInput`](crate::operation::list_invoice_summaries::ListInvoiceSummariesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_invoice_summaries::ListInvoiceSummariesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::list_invoice_summaries::ListInvoiceSummariesInput {
            selector: self.selector,
            filter: self.filter,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
