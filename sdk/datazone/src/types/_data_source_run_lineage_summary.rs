// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The run lineage summary of a data source.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataSourceRunLineageSummary {
    /// <p>The import status that's part of the run lineage summary of a data source.</p>
    pub import_status: ::std::option::Option<crate::types::LineageImportStatus>,
}
impl DataSourceRunLineageSummary {
    /// <p>The import status that's part of the run lineage summary of a data source.</p>
    pub fn import_status(&self) -> ::std::option::Option<&crate::types::LineageImportStatus> {
        self.import_status.as_ref()
    }
}
impl DataSourceRunLineageSummary {
    /// Creates a new builder-style object to manufacture [`DataSourceRunLineageSummary`](crate::types::DataSourceRunLineageSummary).
    pub fn builder() -> crate::types::builders::DataSourceRunLineageSummaryBuilder {
        crate::types::builders::DataSourceRunLineageSummaryBuilder::default()
    }
}

/// A builder for [`DataSourceRunLineageSummary`](crate::types::DataSourceRunLineageSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataSourceRunLineageSummaryBuilder {
    pub(crate) import_status: ::std::option::Option<crate::types::LineageImportStatus>,
}
impl DataSourceRunLineageSummaryBuilder {
    /// <p>The import status that's part of the run lineage summary of a data source.</p>
    pub fn import_status(mut self, input: crate::types::LineageImportStatus) -> Self {
        self.import_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The import status that's part of the run lineage summary of a data source.</p>
    pub fn set_import_status(mut self, input: ::std::option::Option<crate::types::LineageImportStatus>) -> Self {
        self.import_status = input;
        self
    }
    /// <p>The import status that's part of the run lineage summary of a data source.</p>
    pub fn get_import_status(&self) -> &::std::option::Option<crate::types::LineageImportStatus> {
        &self.import_status
    }
    /// Consumes the builder and constructs a [`DataSourceRunLineageSummary`](crate::types::DataSourceRunLineageSummary).
    pub fn build(self) -> crate::types::DataSourceRunLineageSummary {
        crate::types::DataSourceRunLineageSummary {
            import_status: self.import_status,
        }
    }
}
