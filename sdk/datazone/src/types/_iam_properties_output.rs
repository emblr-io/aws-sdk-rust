// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The IAM properties of a connection.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IamPropertiesOutput {
    /// <p>The environment ID of the connection.</p>
    pub environment_id: ::std::option::Option<::std::string::String>,
    /// <p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>
    pub glue_lineage_sync_enabled: ::std::option::Option<bool>,
}
impl IamPropertiesOutput {
    /// <p>The environment ID of the connection.</p>
    pub fn environment_id(&self) -> ::std::option::Option<&str> {
        self.environment_id.as_deref()
    }
    /// <p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>
    pub fn glue_lineage_sync_enabled(&self) -> ::std::option::Option<bool> {
        self.glue_lineage_sync_enabled
    }
}
impl IamPropertiesOutput {
    /// Creates a new builder-style object to manufacture [`IamPropertiesOutput`](crate::types::IamPropertiesOutput).
    pub fn builder() -> crate::types::builders::IamPropertiesOutputBuilder {
        crate::types::builders::IamPropertiesOutputBuilder::default()
    }
}

/// A builder for [`IamPropertiesOutput`](crate::types::IamPropertiesOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IamPropertiesOutputBuilder {
    pub(crate) environment_id: ::std::option::Option<::std::string::String>,
    pub(crate) glue_lineage_sync_enabled: ::std::option::Option<bool>,
}
impl IamPropertiesOutputBuilder {
    /// <p>The environment ID of the connection.</p>
    pub fn environment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.environment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The environment ID of the connection.</p>
    pub fn set_environment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.environment_id = input;
        self
    }
    /// <p>The environment ID of the connection.</p>
    pub fn get_environment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.environment_id
    }
    /// <p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>
    pub fn glue_lineage_sync_enabled(mut self, input: bool) -> Self {
        self.glue_lineage_sync_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>
    pub fn set_glue_lineage_sync_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.glue_lineage_sync_enabled = input;
        self
    }
    /// <p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>
    pub fn get_glue_lineage_sync_enabled(&self) -> &::std::option::Option<bool> {
        &self.glue_lineage_sync_enabled
    }
    /// Consumes the builder and constructs a [`IamPropertiesOutput`](crate::types::IamPropertiesOutput).
    pub fn build(self) -> crate::types::IamPropertiesOutput {
        crate::types::IamPropertiesOutput {
            environment_id: self.environment_id,
            glue_lineage_sync_enabled: self.glue_lineage_sync_enabled,
        }
    }
}
