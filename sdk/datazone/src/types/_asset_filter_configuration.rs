// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details of the asset filter.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum AssetFilterConfiguration {
    /// <p>The column configuration of the asset filter.</p>
    ColumnConfiguration(crate::types::ColumnFilterConfiguration),
    /// <p>The row configuration of the asset filter.</p>
    RowConfiguration(crate::types::RowFilterConfiguration),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl AssetFilterConfiguration {
    /// Tries to convert the enum instance into [`ColumnConfiguration`](crate::types::AssetFilterConfiguration::ColumnConfiguration), extracting the inner [`ColumnFilterConfiguration`](crate::types::ColumnFilterConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_column_configuration(&self) -> ::std::result::Result<&crate::types::ColumnFilterConfiguration, &Self> {
        if let AssetFilterConfiguration::ColumnConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`ColumnConfiguration`](crate::types::AssetFilterConfiguration::ColumnConfiguration).
    pub fn is_column_configuration(&self) -> bool {
        self.as_column_configuration().is_ok()
    }
    /// Tries to convert the enum instance into [`RowConfiguration`](crate::types::AssetFilterConfiguration::RowConfiguration), extracting the inner [`RowFilterConfiguration`](crate::types::RowFilterConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_row_configuration(&self) -> ::std::result::Result<&crate::types::RowFilterConfiguration, &Self> {
        if let AssetFilterConfiguration::RowConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`RowConfiguration`](crate::types::AssetFilterConfiguration::RowConfiguration).
    pub fn is_row_configuration(&self) -> bool {
        self.as_row_configuration().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
