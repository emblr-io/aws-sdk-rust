// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The time series data points form.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TimeSeriesDataPointFormOutput {
    /// <p>The name of the time series data points form.</p>
    pub form_name: ::std::string::String,
    /// <p>The ID of the type of the time series data points form.</p>
    pub type_identifier: ::std::string::String,
    /// <p>The revision type of the time series data points form.</p>
    pub type_revision: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp of the time series data points form.</p>
    pub timestamp: ::aws_smithy_types::DateTime,
    /// <p>The content of the time series data points form.</p>
    pub content: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the time series data points form.</p>
    pub id: ::std::option::Option<::std::string::String>,
}
impl TimeSeriesDataPointFormOutput {
    /// <p>The name of the time series data points form.</p>
    pub fn form_name(&self) -> &str {
        use std::ops::Deref;
        self.form_name.deref()
    }
    /// <p>The ID of the type of the time series data points form.</p>
    pub fn type_identifier(&self) -> &str {
        use std::ops::Deref;
        self.type_identifier.deref()
    }
    /// <p>The revision type of the time series data points form.</p>
    pub fn type_revision(&self) -> ::std::option::Option<&str> {
        self.type_revision.as_deref()
    }
    /// <p>The timestamp of the time series data points form.</p>
    pub fn timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.timestamp
    }
    /// <p>The content of the time series data points form.</p>
    pub fn content(&self) -> ::std::option::Option<&str> {
        self.content.as_deref()
    }
    /// <p>The ID of the time series data points form.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl TimeSeriesDataPointFormOutput {
    /// Creates a new builder-style object to manufacture [`TimeSeriesDataPointFormOutput`](crate::types::TimeSeriesDataPointFormOutput).
    pub fn builder() -> crate::types::builders::TimeSeriesDataPointFormOutputBuilder {
        crate::types::builders::TimeSeriesDataPointFormOutputBuilder::default()
    }
}

/// A builder for [`TimeSeriesDataPointFormOutput`](crate::types::TimeSeriesDataPointFormOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TimeSeriesDataPointFormOutputBuilder {
    pub(crate) form_name: ::std::option::Option<::std::string::String>,
    pub(crate) type_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) type_revision: ::std::option::Option<::std::string::String>,
    pub(crate) timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) content: ::std::option::Option<::std::string::String>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl TimeSeriesDataPointFormOutputBuilder {
    /// <p>The name of the time series data points form.</p>
    /// This field is required.
    pub fn form_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.form_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the time series data points form.</p>
    pub fn set_form_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.form_name = input;
        self
    }
    /// <p>The name of the time series data points form.</p>
    pub fn get_form_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.form_name
    }
    /// <p>The ID of the type of the time series data points form.</p>
    /// This field is required.
    pub fn type_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.type_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the type of the time series data points form.</p>
    pub fn set_type_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.type_identifier = input;
        self
    }
    /// <p>The ID of the type of the time series data points form.</p>
    pub fn get_type_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.type_identifier
    }
    /// <p>The revision type of the time series data points form.</p>
    pub fn type_revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.type_revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The revision type of the time series data points form.</p>
    pub fn set_type_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.type_revision = input;
        self
    }
    /// <p>The revision type of the time series data points form.</p>
    pub fn get_type_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.type_revision
    }
    /// <p>The timestamp of the time series data points form.</p>
    /// This field is required.
    pub fn timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of the time series data points form.</p>
    pub fn set_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// <p>The timestamp of the time series data points form.</p>
    pub fn get_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.timestamp
    }
    /// <p>The content of the time series data points form.</p>
    pub fn content(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The content of the time series data points form.</p>
    pub fn set_content(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content = input;
        self
    }
    /// <p>The content of the time series data points form.</p>
    pub fn get_content(&self) -> &::std::option::Option<::std::string::String> {
        &self.content
    }
    /// <p>The ID of the time series data points form.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the time series data points form.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the time series data points form.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`TimeSeriesDataPointFormOutput`](crate::types::TimeSeriesDataPointFormOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`form_name`](crate::types::builders::TimeSeriesDataPointFormOutputBuilder::form_name)
    /// - [`type_identifier`](crate::types::builders::TimeSeriesDataPointFormOutputBuilder::type_identifier)
    /// - [`timestamp`](crate::types::builders::TimeSeriesDataPointFormOutputBuilder::timestamp)
    pub fn build(self) -> ::std::result::Result<crate::types::TimeSeriesDataPointFormOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TimeSeriesDataPointFormOutput {
            form_name: self.form_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "form_name",
                    "form_name was not specified but it is required when building TimeSeriesDataPointFormOutput",
                )
            })?,
            type_identifier: self.type_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "type_identifier",
                    "type_identifier was not specified but it is required when building TimeSeriesDataPointFormOutput",
                )
            })?,
            type_revision: self.type_revision,
            timestamp: self.timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "timestamp",
                    "timestamp was not specified but it is required when building TimeSeriesDataPointFormOutput",
                )
            })?,
            content: self.content,
            id: self.id,
        })
    }
}
