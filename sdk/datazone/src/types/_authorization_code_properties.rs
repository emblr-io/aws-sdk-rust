// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The authorization code properties of a connection.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AuthorizationCodeProperties {
    /// <p>The authorization code of a connection.</p>
    pub authorization_code: ::std::option::Option<::std::string::String>,
    /// <p>The redirect URI of a connection.</p>
    pub redirect_uri: ::std::option::Option<::std::string::String>,
}
impl AuthorizationCodeProperties {
    /// <p>The authorization code of a connection.</p>
    pub fn authorization_code(&self) -> ::std::option::Option<&str> {
        self.authorization_code.as_deref()
    }
    /// <p>The redirect URI of a connection.</p>
    pub fn redirect_uri(&self) -> ::std::option::Option<&str> {
        self.redirect_uri.as_deref()
    }
}
impl AuthorizationCodeProperties {
    /// Creates a new builder-style object to manufacture [`AuthorizationCodeProperties`](crate::types::AuthorizationCodeProperties).
    pub fn builder() -> crate::types::builders::AuthorizationCodePropertiesBuilder {
        crate::types::builders::AuthorizationCodePropertiesBuilder::default()
    }
}

/// A builder for [`AuthorizationCodeProperties`](crate::types::AuthorizationCodeProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AuthorizationCodePropertiesBuilder {
    pub(crate) authorization_code: ::std::option::Option<::std::string::String>,
    pub(crate) redirect_uri: ::std::option::Option<::std::string::String>,
}
impl AuthorizationCodePropertiesBuilder {
    /// <p>The authorization code of a connection.</p>
    pub fn authorization_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authorization_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The authorization code of a connection.</p>
    pub fn set_authorization_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authorization_code = input;
        self
    }
    /// <p>The authorization code of a connection.</p>
    pub fn get_authorization_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.authorization_code
    }
    /// <p>The redirect URI of a connection.</p>
    pub fn redirect_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.redirect_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The redirect URI of a connection.</p>
    pub fn set_redirect_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.redirect_uri = input;
        self
    }
    /// <p>The redirect URI of a connection.</p>
    pub fn get_redirect_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.redirect_uri
    }
    /// Consumes the builder and constructs a [`AuthorizationCodeProperties`](crate::types::AuthorizationCodeProperties).
    pub fn build(self) -> crate::types::AuthorizationCodeProperties {
        crate::types::AuthorizationCodeProperties {
            authorization_code: self.authorization_code,
            redirect_uri: self.redirect_uri,
        }
    }
}
