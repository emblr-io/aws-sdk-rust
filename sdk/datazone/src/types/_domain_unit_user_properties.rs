// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The properties of the domain unit user.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DomainUnitUserProperties {
    /// <p>The ID of teh domain unit user.</p>
    pub user_id: ::std::option::Option<::std::string::String>,
}
impl DomainUnitUserProperties {
    /// <p>The ID of teh domain unit user.</p>
    pub fn user_id(&self) -> ::std::option::Option<&str> {
        self.user_id.as_deref()
    }
}
impl DomainUnitUserProperties {
    /// Creates a new builder-style object to manufacture [`DomainUnitUserProperties`](crate::types::DomainUnitUserProperties).
    pub fn builder() -> crate::types::builders::DomainUnitUserPropertiesBuilder {
        crate::types::builders::DomainUnitUserPropertiesBuilder::default()
    }
}

/// A builder for [`DomainUnitUserProperties`](crate::types::DomainUnitUserProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DomainUnitUserPropertiesBuilder {
    pub(crate) user_id: ::std::option::Option<::std::string::String>,
}
impl DomainUnitUserPropertiesBuilder {
    /// <p>The ID of teh domain unit user.</p>
    pub fn user_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of teh domain unit user.</p>
    pub fn set_user_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_id = input;
        self
    }
    /// <p>The ID of teh domain unit user.</p>
    pub fn get_user_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_id
    }
    /// Consumes the builder and constructs a [`DomainUnitUserProperties`](crate::types::DomainUnitUserProperties).
    pub fn build(self) -> crate::types::DomainUnitUserProperties {
        crate::types::DomainUnitUserProperties { user_id: self.user_id }
    }
}
