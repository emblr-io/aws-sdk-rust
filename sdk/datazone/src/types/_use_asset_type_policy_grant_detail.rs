// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the domain unit(s) whose projects can use this asset type while creating asset or asset revisions.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UseAssetTypePolicyGrantDetail {
    /// <p>The ID of the domain unit.</p>
    pub domain_unit_id: ::std::option::Option<::std::string::String>,
}
impl UseAssetTypePolicyGrantDetail {
    /// <p>The ID of the domain unit.</p>
    pub fn domain_unit_id(&self) -> ::std::option::Option<&str> {
        self.domain_unit_id.as_deref()
    }
}
impl UseAssetTypePolicyGrantDetail {
    /// Creates a new builder-style object to manufacture [`UseAssetTypePolicyGrantDetail`](crate::types::UseAssetTypePolicyGrantDetail).
    pub fn builder() -> crate::types::builders::UseAssetTypePolicyGrantDetailBuilder {
        crate::types::builders::UseAssetTypePolicyGrantDetailBuilder::default()
    }
}

/// A builder for [`UseAssetTypePolicyGrantDetail`](crate::types::UseAssetTypePolicyGrantDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UseAssetTypePolicyGrantDetailBuilder {
    pub(crate) domain_unit_id: ::std::option::Option<::std::string::String>,
}
impl UseAssetTypePolicyGrantDetailBuilder {
    /// <p>The ID of the domain unit.</p>
    pub fn domain_unit_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_unit_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the domain unit.</p>
    pub fn set_domain_unit_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_unit_id = input;
        self
    }
    /// <p>The ID of the domain unit.</p>
    pub fn get_domain_unit_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_unit_id
    }
    /// Consumes the builder and constructs a [`UseAssetTypePolicyGrantDetail`](crate::types::UseAssetTypePolicyGrantDetail).
    pub fn build(self) -> crate::types::UseAssetTypePolicyGrantDetail {
        crate::types::UseAssetTypePolicyGrantDetail {
            domain_unit_id: self.domain_unit_id,
        }
    }
}
