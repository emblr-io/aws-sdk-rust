// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of the business name generation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BusinessNameGenerationConfiguration {
    /// <p>Specifies whether the business name generation is enabled.</p>
    pub enabled: ::std::option::Option<bool>,
}
impl BusinessNameGenerationConfiguration {
    /// <p>Specifies whether the business name generation is enabled.</p>
    pub fn enabled(&self) -> ::std::option::Option<bool> {
        self.enabled
    }
}
impl BusinessNameGenerationConfiguration {
    /// Creates a new builder-style object to manufacture [`BusinessNameGenerationConfiguration`](crate::types::BusinessNameGenerationConfiguration).
    pub fn builder() -> crate::types::builders::BusinessNameGenerationConfigurationBuilder {
        crate::types::builders::BusinessNameGenerationConfigurationBuilder::default()
    }
}

/// A builder for [`BusinessNameGenerationConfiguration`](crate::types::BusinessNameGenerationConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BusinessNameGenerationConfigurationBuilder {
    pub(crate) enabled: ::std::option::Option<bool>,
}
impl BusinessNameGenerationConfigurationBuilder {
    /// <p>Specifies whether the business name generation is enabled.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the business name generation is enabled.</p>
    pub fn set_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>Specifies whether the business name generation is enabled.</p>
    pub fn get_enabled(&self) -> &::std::option::Option<bool> {
        &self.enabled
    }
    /// Consumes the builder and constructs a [`BusinessNameGenerationConfiguration`](crate::types::BusinessNameGenerationConfiguration).
    pub fn build(self) -> crate::types::BusinessNameGenerationConfiguration {
        crate::types::BusinessNameGenerationConfiguration { enabled: self.enabled }
    }
}
