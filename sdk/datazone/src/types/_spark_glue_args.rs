// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Spark Amazon Web Services Glue args.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SparkGlueArgs {
    /// <p>The connection in the Spark Amazon Web Services Glue args.</p>
    pub connection: ::std::option::Option<::std::string::String>,
}
impl SparkGlueArgs {
    /// <p>The connection in the Spark Amazon Web Services Glue args.</p>
    pub fn connection(&self) -> ::std::option::Option<&str> {
        self.connection.as_deref()
    }
}
impl SparkGlueArgs {
    /// Creates a new builder-style object to manufacture [`SparkGlueArgs`](crate::types::SparkGlueArgs).
    pub fn builder() -> crate::types::builders::SparkGlueArgsBuilder {
        crate::types::builders::SparkGlueArgsBuilder::default()
    }
}

/// A builder for [`SparkGlueArgs`](crate::types::SparkGlueArgs).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SparkGlueArgsBuilder {
    pub(crate) connection: ::std::option::Option<::std::string::String>,
}
impl SparkGlueArgsBuilder {
    /// <p>The connection in the Spark Amazon Web Services Glue args.</p>
    pub fn connection(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connection = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The connection in the Spark Amazon Web Services Glue args.</p>
    pub fn set_connection(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connection = input;
        self
    }
    /// <p>The connection in the Spark Amazon Web Services Glue args.</p>
    pub fn get_connection(&self) -> &::std::option::Option<::std::string::String> {
        &self.connection
    }
    /// Consumes the builder and constructs a [`SparkGlueArgs`](crate::types::SparkGlueArgs).
    pub fn build(self) -> crate::types::SparkGlueArgs {
        crate::types::SparkGlueArgs { connection: self.connection }
    }
}
