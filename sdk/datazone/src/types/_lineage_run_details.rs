// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The data lineage run details.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LineageRunDetails {
    /// <p>The SQL query run details of a data lineage run.</p>
    pub sql_query_run_details: ::std::option::Option<crate::types::LineageSqlQueryRunDetails>,
}
impl LineageRunDetails {
    /// <p>The SQL query run details of a data lineage run.</p>
    pub fn sql_query_run_details(&self) -> ::std::option::Option<&crate::types::LineageSqlQueryRunDetails> {
        self.sql_query_run_details.as_ref()
    }
}
impl LineageRunDetails {
    /// Creates a new builder-style object to manufacture [`LineageRunDetails`](crate::types::LineageRunDetails).
    pub fn builder() -> crate::types::builders::LineageRunDetailsBuilder {
        crate::types::builders::LineageRunDetailsBuilder::default()
    }
}

/// A builder for [`LineageRunDetails`](crate::types::LineageRunDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LineageRunDetailsBuilder {
    pub(crate) sql_query_run_details: ::std::option::Option<crate::types::LineageSqlQueryRunDetails>,
}
impl LineageRunDetailsBuilder {
    /// <p>The SQL query run details of a data lineage run.</p>
    pub fn sql_query_run_details(mut self, input: crate::types::LineageSqlQueryRunDetails) -> Self {
        self.sql_query_run_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The SQL query run details of a data lineage run.</p>
    pub fn set_sql_query_run_details(mut self, input: ::std::option::Option<crate::types::LineageSqlQueryRunDetails>) -> Self {
        self.sql_query_run_details = input;
        self
    }
    /// <p>The SQL query run details of a data lineage run.</p>
    pub fn get_sql_query_run_details(&self) -> &::std::option::Option<crate::types::LineageSqlQueryRunDetails> {
        &self.sql_query_run_details
    }
    /// Consumes the builder and constructs a [`LineageRunDetails`](crate::types::LineageRunDetails).
    pub fn build(self) -> crate::types::LineageRunDetails {
        crate::types::LineageRunDetails {
            sql_query_run_details: self.sql_query_run_details,
        }
    }
}
