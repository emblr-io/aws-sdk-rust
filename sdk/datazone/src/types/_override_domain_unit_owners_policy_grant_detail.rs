// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The grant details of the override domain unit owners policy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OverrideDomainUnitOwnersPolicyGrantDetail {
    /// <p>Specifies whether the policy is inherited by child domain units.</p>
    pub include_child_domain_units: ::std::option::Option<bool>,
}
impl OverrideDomainUnitOwnersPolicyGrantDetail {
    /// <p>Specifies whether the policy is inherited by child domain units.</p>
    pub fn include_child_domain_units(&self) -> ::std::option::Option<bool> {
        self.include_child_domain_units
    }
}
impl OverrideDomainUnitOwnersPolicyGrantDetail {
    /// Creates a new builder-style object to manufacture [`OverrideDomainUnitOwnersPolicyGrantDetail`](crate::types::OverrideDomainUnitOwnersPolicyGrantDetail).
    pub fn builder() -> crate::types::builders::OverrideDomainUnitOwnersPolicyGrantDetailBuilder {
        crate::types::builders::OverrideDomainUnitOwnersPolicyGrantDetailBuilder::default()
    }
}

/// A builder for [`OverrideDomainUnitOwnersPolicyGrantDetail`](crate::types::OverrideDomainUnitOwnersPolicyGrantDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OverrideDomainUnitOwnersPolicyGrantDetailBuilder {
    pub(crate) include_child_domain_units: ::std::option::Option<bool>,
}
impl OverrideDomainUnitOwnersPolicyGrantDetailBuilder {
    /// <p>Specifies whether the policy is inherited by child domain units.</p>
    pub fn include_child_domain_units(mut self, input: bool) -> Self {
        self.include_child_domain_units = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the policy is inherited by child domain units.</p>
    pub fn set_include_child_domain_units(mut self, input: ::std::option::Option<bool>) -> Self {
        self.include_child_domain_units = input;
        self
    }
    /// <p>Specifies whether the policy is inherited by child domain units.</p>
    pub fn get_include_child_domain_units(&self) -> &::std::option::Option<bool> {
        &self.include_child_domain_units
    }
    /// Consumes the builder and constructs a [`OverrideDomainUnitOwnersPolicyGrantDetail`](crate::types::OverrideDomainUnitOwnersPolicyGrantDetail).
    pub fn build(self) -> crate::types::OverrideDomainUnitOwnersPolicyGrantDetail {
        crate::types::OverrideDomainUnitOwnersPolicyGrantDetail {
            include_child_domain_units: self.include_child_domain_units,
        }
    }
}
