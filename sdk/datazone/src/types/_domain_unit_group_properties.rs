// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The properties of a domain unit group.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DomainUnitGroupProperties {
    /// <p>The ID of the domain unit group.</p>
    pub group_id: ::std::option::Option<::std::string::String>,
}
impl DomainUnitGroupProperties {
    /// <p>The ID of the domain unit group.</p>
    pub fn group_id(&self) -> ::std::option::Option<&str> {
        self.group_id.as_deref()
    }
}
impl DomainUnitGroupProperties {
    /// Creates a new builder-style object to manufacture [`DomainUnitGroupProperties`](crate::types::DomainUnitGroupProperties).
    pub fn builder() -> crate::types::builders::DomainUnitGroupPropertiesBuilder {
        crate::types::builders::DomainUnitGroupPropertiesBuilder::default()
    }
}

/// A builder for [`DomainUnitGroupProperties`](crate::types::DomainUnitGroupProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DomainUnitGroupPropertiesBuilder {
    pub(crate) group_id: ::std::option::Option<::std::string::String>,
}
impl DomainUnitGroupPropertiesBuilder {
    /// <p>The ID of the domain unit group.</p>
    pub fn group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the domain unit group.</p>
    pub fn set_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// <p>The ID of the domain unit group.</p>
    pub fn get_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.group_id
    }
    /// Consumes the builder and constructs a [`DomainUnitGroupProperties`](crate::types::DomainUnitGroupProperties).
    pub fn build(self) -> crate::types::DomainUnitGroupProperties {
        crate::types::DomainUnitGroupProperties { group_id: self.group_id }
    }
}
