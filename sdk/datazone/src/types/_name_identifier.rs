// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name identifier.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NameIdentifier {
    /// <p>The name in the name identifier.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The namespace in the name identifier.</p>
    pub namespace: ::std::option::Option<::std::string::String>,
}
impl NameIdentifier {
    /// <p>The name in the name identifier.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The namespace in the name identifier.</p>
    pub fn namespace(&self) -> ::std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl NameIdentifier {
    /// Creates a new builder-style object to manufacture [`NameIdentifier`](crate::types::NameIdentifier).
    pub fn builder() -> crate::types::builders::NameIdentifierBuilder {
        crate::types::builders::NameIdentifierBuilder::default()
    }
}

/// A builder for [`NameIdentifier`](crate::types::NameIdentifier).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NameIdentifierBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) namespace: ::std::option::Option<::std::string::String>,
}
impl NameIdentifierBuilder {
    /// <p>The name in the name identifier.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name in the name identifier.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name in the name identifier.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The namespace in the name identifier.</p>
    pub fn namespace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.namespace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The namespace in the name identifier.</p>
    pub fn set_namespace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The namespace in the name identifier.</p>
    pub fn get_namespace(&self) -> &::std::option::Option<::std::string::String> {
        &self.namespace
    }
    /// Consumes the builder and constructs a [`NameIdentifier`](crate::types::NameIdentifier).
    pub fn build(self) -> crate::types::NameIdentifier {
        crate::types::NameIdentifier {
            name: self.name,
            namespace: self.namespace,
        }
    }
}
