// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The additional attributes of the asset of the data product.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataProductListingItemAdditionalAttributes {
    /// <p>The metadata forms of the asset of the data product.</p>
    pub forms: ::std::option::Option<::std::string::String>,
}
impl DataProductListingItemAdditionalAttributes {
    /// <p>The metadata forms of the asset of the data product.</p>
    pub fn forms(&self) -> ::std::option::Option<&str> {
        self.forms.as_deref()
    }
}
impl DataProductListingItemAdditionalAttributes {
    /// Creates a new builder-style object to manufacture [`DataProductListingItemAdditionalAttributes`](crate::types::DataProductListingItemAdditionalAttributes).
    pub fn builder() -> crate::types::builders::DataProductListingItemAdditionalAttributesBuilder {
        crate::types::builders::DataProductListingItemAdditionalAttributesBuilder::default()
    }
}

/// A builder for [`DataProductListingItemAdditionalAttributes`](crate::types::DataProductListingItemAdditionalAttributes).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataProductListingItemAdditionalAttributesBuilder {
    pub(crate) forms: ::std::option::Option<::std::string::String>,
}
impl DataProductListingItemAdditionalAttributesBuilder {
    /// <p>The metadata forms of the asset of the data product.</p>
    pub fn forms(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.forms = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metadata forms of the asset of the data product.</p>
    pub fn set_forms(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.forms = input;
        self
    }
    /// <p>The metadata forms of the asset of the data product.</p>
    pub fn get_forms(&self) -> &::std::option::Option<::std::string::String> {
        &self.forms
    }
    /// Consumes the builder and constructs a [`DataProductListingItemAdditionalAttributes`](crate::types::DataProductListingItemAdditionalAttributes).
    pub fn build(self) -> crate::types::DataProductListingItemAdditionalAttributes {
        crate::types::DataProductListingItemAdditionalAttributes { forms: self.forms }
    }
}
