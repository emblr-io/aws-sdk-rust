// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The enforcement details of a metadata form.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MetadataFormEnforcementDetail {
    /// <p>The required metadata forms.</p>
    pub required_metadata_forms: ::std::option::Option<::std::vec::Vec<crate::types::MetadataFormReference>>,
}
impl MetadataFormEnforcementDetail {
    /// <p>The required metadata forms.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.required_metadata_forms.is_none()`.
    pub fn required_metadata_forms(&self) -> &[crate::types::MetadataFormReference] {
        self.required_metadata_forms.as_deref().unwrap_or_default()
    }
}
impl MetadataFormEnforcementDetail {
    /// Creates a new builder-style object to manufacture [`MetadataFormEnforcementDetail`](crate::types::MetadataFormEnforcementDetail).
    pub fn builder() -> crate::types::builders::MetadataFormEnforcementDetailBuilder {
        crate::types::builders::MetadataFormEnforcementDetailBuilder::default()
    }
}

/// A builder for [`MetadataFormEnforcementDetail`](crate::types::MetadataFormEnforcementDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MetadataFormEnforcementDetailBuilder {
    pub(crate) required_metadata_forms: ::std::option::Option<::std::vec::Vec<crate::types::MetadataFormReference>>,
}
impl MetadataFormEnforcementDetailBuilder {
    /// Appends an item to `required_metadata_forms`.
    ///
    /// To override the contents of this collection use [`set_required_metadata_forms`](Self::set_required_metadata_forms).
    ///
    /// <p>The required metadata forms.</p>
    pub fn required_metadata_forms(mut self, input: crate::types::MetadataFormReference) -> Self {
        let mut v = self.required_metadata_forms.unwrap_or_default();
        v.push(input);
        self.required_metadata_forms = ::std::option::Option::Some(v);
        self
    }
    /// <p>The required metadata forms.</p>
    pub fn set_required_metadata_forms(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MetadataFormReference>>) -> Self {
        self.required_metadata_forms = input;
        self
    }
    /// <p>The required metadata forms.</p>
    pub fn get_required_metadata_forms(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MetadataFormReference>> {
        &self.required_metadata_forms
    }
    /// Consumes the builder and constructs a [`MetadataFormEnforcementDetail`](crate::types::MetadataFormEnforcementDetail).
    pub fn build(self) -> crate::types::MetadataFormEnforcementDetail {
        crate::types::MetadataFormEnforcementDetail {
            required_metadata_forms: self.required_metadata_forms,
        }
    }
}
