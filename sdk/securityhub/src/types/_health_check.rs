// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the operational status and health of a connectorV2.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HealthCheck {
    /// <p>The status of the connectorV2.</p>
    pub connector_status: ::std::option::Option<crate::types::ConnectorStatus>,
    /// <p>The message for the reason of connectorStatus change.</p>
    pub message: ::std::option::Option<::std::string::String>,
    /// <p>ISO 8601 UTC timestamp for the time check the health status of the connectorV2.</p>
    pub last_checked_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl HealthCheck {
    /// <p>The status of the connectorV2.</p>
    pub fn connector_status(&self) -> ::std::option::Option<&crate::types::ConnectorStatus> {
        self.connector_status.as_ref()
    }
    /// <p>The message for the reason of connectorStatus change.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>ISO 8601 UTC timestamp for the time check the health status of the connectorV2.</p>
    pub fn last_checked_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_checked_at.as_ref()
    }
}
impl HealthCheck {
    /// Creates a new builder-style object to manufacture [`HealthCheck`](crate::types::HealthCheck).
    pub fn builder() -> crate::types::builders::HealthCheckBuilder {
        crate::types::builders::HealthCheckBuilder::default()
    }
}

/// A builder for [`HealthCheck`](crate::types::HealthCheck).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HealthCheckBuilder {
    pub(crate) connector_status: ::std::option::Option<crate::types::ConnectorStatus>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) last_checked_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl HealthCheckBuilder {
    /// <p>The status of the connectorV2.</p>
    /// This field is required.
    pub fn connector_status(mut self, input: crate::types::ConnectorStatus) -> Self {
        self.connector_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the connectorV2.</p>
    pub fn set_connector_status(mut self, input: ::std::option::Option<crate::types::ConnectorStatus>) -> Self {
        self.connector_status = input;
        self
    }
    /// <p>The status of the connectorV2.</p>
    pub fn get_connector_status(&self) -> &::std::option::Option<crate::types::ConnectorStatus> {
        &self.connector_status
    }
    /// <p>The message for the reason of connectorStatus change.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The message for the reason of connectorStatus change.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The message for the reason of connectorStatus change.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// <p>ISO 8601 UTC timestamp for the time check the health status of the connectorV2.</p>
    /// This field is required.
    pub fn last_checked_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_checked_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>ISO 8601 UTC timestamp for the time check the health status of the connectorV2.</p>
    pub fn set_last_checked_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_checked_at = input;
        self
    }
    /// <p>ISO 8601 UTC timestamp for the time check the health status of the connectorV2.</p>
    pub fn get_last_checked_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_checked_at
    }
    /// Consumes the builder and constructs a [`HealthCheck`](crate::types::HealthCheck).
    pub fn build(self) -> crate::types::HealthCheck {
        crate::types::HealthCheck {
            connector_status: self.connector_status,
            message: self.message,
            last_checked_at: self.last_checked_at,
        }
    }
}
