// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the provisioned throughput for the table or for a global secondary index.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsDynamoDbTableProvisionedThroughput {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub last_decrease_date_time: ::std::option::Option<::std::string::String>,
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub last_increase_date_time: ::std::option::Option<::std::string::String>,
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub number_of_decreases_today: ::std::option::Option<i32>,
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub read_capacity_units: ::std::option::Option<i32>,
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub write_capacity_units: ::std::option::Option<i32>,
}
impl AwsDynamoDbTableProvisionedThroughput {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn last_decrease_date_time(&self) -> ::std::option::Option<&str> {
        self.last_decrease_date_time.as_deref()
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn last_increase_date_time(&self) -> ::std::option::Option<&str> {
        self.last_increase_date_time.as_deref()
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn number_of_decreases_today(&self) -> ::std::option::Option<i32> {
        self.number_of_decreases_today
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn read_capacity_units(&self) -> ::std::option::Option<i32> {
        self.read_capacity_units
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn write_capacity_units(&self) -> ::std::option::Option<i32> {
        self.write_capacity_units
    }
}
impl AwsDynamoDbTableProvisionedThroughput {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableProvisionedThroughputBuilder {
        crate::types::builders::AwsDynamoDbTableProvisionedThroughputBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AwsDynamoDbTableProvisionedThroughputBuilder {
    pub(crate) last_decrease_date_time: ::std::option::Option<::std::string::String>,
    pub(crate) last_increase_date_time: ::std::option::Option<::std::string::String>,
    pub(crate) number_of_decreases_today: ::std::option::Option<i32>,
    pub(crate) read_capacity_units: ::std::option::Option<i32>,
    pub(crate) write_capacity_units: ::std::option::Option<i32>,
}
impl AwsDynamoDbTableProvisionedThroughputBuilder {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn last_decrease_date_time(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_decrease_date_time = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn set_last_decrease_date_time(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_decrease_date_time = input;
        self
    }
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn get_last_decrease_date_time(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_decrease_date_time
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn last_increase_date_time(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_increase_date_time = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn set_last_increase_date_time(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_increase_date_time = input;
        self
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn get_last_increase_date_time(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_increase_date_time
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn number_of_decreases_today(mut self, input: i32) -> Self {
        self.number_of_decreases_today = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn set_number_of_decreases_today(mut self, input: ::std::option::Option<i32>) -> Self {
        self.number_of_decreases_today = input;
        self
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn get_number_of_decreases_today(&self) -> &::std::option::Option<i32> {
        &self.number_of_decreases_today
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn read_capacity_units(mut self, input: i32) -> Self {
        self.read_capacity_units = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn set_read_capacity_units(mut self, input: ::std::option::Option<i32>) -> Self {
        self.read_capacity_units = input;
        self
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn get_read_capacity_units(&self) -> &::std::option::Option<i32> {
        &self.read_capacity_units
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn write_capacity_units(mut self, input: i32) -> Self {
        self.write_capacity_units = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn set_write_capacity_units(mut self, input: ::std::option::Option<i32>) -> Self {
        self.write_capacity_units = input;
        self
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn get_write_capacity_units(&self) -> &::std::option::Option<i32> {
        &self.write_capacity_units
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
    pub fn build(self) -> crate::types::AwsDynamoDbTableProvisionedThroughput {
        crate::types::AwsDynamoDbTableProvisionedThroughput {
            last_decrease_date_time: self.last_decrease_date_time,
            last_increase_date_time: self.last_increase_date_time,
            number_of_decreases_today: self.number_of_decreases_today,
            read_capacity_units: self.read_capacity_units,
            write_capacity_units: self.write_capacity_units,
        }
    }
}
