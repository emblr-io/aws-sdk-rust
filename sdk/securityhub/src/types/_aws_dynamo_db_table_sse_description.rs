// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the server-side encryption for the table.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsDynamoDbTableSseDescription {
    /// <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub inaccessible_encryption_date_time: ::std::option::Option<::std::string::String>,
    /// <p>The status of the server-side encryption.</p>
    pub status: ::std::option::Option<::std::string::String>,
    /// <p>The type of server-side encryption.</p>
    pub sse_type: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the KMS key that is used for the KMS encryption.</p>
    pub kms_master_key_arn: ::std::option::Option<::std::string::String>,
}
impl AwsDynamoDbTableSseDescription {
    /// <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn inaccessible_encryption_date_time(&self) -> ::std::option::Option<&str> {
        self.inaccessible_encryption_date_time.as_deref()
    }
    /// <p>The status of the server-side encryption.</p>
    pub fn status(&self) -> ::std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>The type of server-side encryption.</p>
    pub fn sse_type(&self) -> ::std::option::Option<&str> {
        self.sse_type.as_deref()
    }
    /// <p>The ARN of the KMS key that is used for the KMS encryption.</p>
    pub fn kms_master_key_arn(&self) -> ::std::option::Option<&str> {
        self.kms_master_key_arn.as_deref()
    }
}
impl AwsDynamoDbTableSseDescription {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableSseDescription`](crate::types::AwsDynamoDbTableSseDescription).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableSseDescriptionBuilder {
        crate::types::builders::AwsDynamoDbTableSseDescriptionBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableSseDescription`](crate::types::AwsDynamoDbTableSseDescription).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AwsDynamoDbTableSseDescriptionBuilder {
    pub(crate) inaccessible_encryption_date_time: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<::std::string::String>,
    pub(crate) sse_type: ::std::option::Option<::std::string::String>,
    pub(crate) kms_master_key_arn: ::std::option::Option<::std::string::String>,
}
impl AwsDynamoDbTableSseDescriptionBuilder {
    /// <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn inaccessible_encryption_date_time(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inaccessible_encryption_date_time = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn set_inaccessible_encryption_date_time(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inaccessible_encryption_date_time = input;
        self
    }
    /// <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p>
    /// <p>For more information about the validation and formatting of timestamp fields in Security Hub, see <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps">Timestamps</a>.</p>
    pub fn get_inaccessible_encryption_date_time(&self) -> &::std::option::Option<::std::string::String> {
        &self.inaccessible_encryption_date_time
    }
    /// <p>The status of the server-side encryption.</p>
    pub fn status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status of the server-side encryption.</p>
    pub fn set_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the server-side encryption.</p>
    pub fn get_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.status
    }
    /// <p>The type of server-side encryption.</p>
    pub fn sse_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sse_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of server-side encryption.</p>
    pub fn set_sse_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sse_type = input;
        self
    }
    /// <p>The type of server-side encryption.</p>
    pub fn get_sse_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.sse_type
    }
    /// <p>The ARN of the KMS key that is used for the KMS encryption.</p>
    pub fn kms_master_key_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_master_key_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the KMS key that is used for the KMS encryption.</p>
    pub fn set_kms_master_key_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_master_key_arn = input;
        self
    }
    /// <p>The ARN of the KMS key that is used for the KMS encryption.</p>
    pub fn get_kms_master_key_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_master_key_arn
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableSseDescription`](crate::types::AwsDynamoDbTableSseDescription).
    pub fn build(self) -> crate::types::AwsDynamoDbTableSseDescription {
        crate::types::AwsDynamoDbTableSseDescription {
            inaccessible_encryption_date_time: self.inaccessible_encryption_date_time,
            status: self.status,
            sse_type: self.sse_type,
            kms_master_key_arn: self.kms_master_key_arn,
        }
    }
}
