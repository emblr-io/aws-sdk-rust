// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Allows you to configure automated responses.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomationRulesActionV2 {
    /// <p>The category of action to be executed by the automation rule.</p>
    pub r#type: ::std::option::Option<crate::types::AutomationRulesActionTypeV2>,
    /// <p>The changes to be applied to fields in a security finding when an automation rule is triggered.</p>
    pub finding_fields_update: ::std::option::Option<crate::types::AutomationRulesFindingFieldsUpdateV2>,
    /// <p>The settings for integrating automation rule actions with external systems or service.</p>
    pub external_integration_configuration: ::std::option::Option<crate::types::ExternalIntegrationConfiguration>,
}
impl AutomationRulesActionV2 {
    /// <p>The category of action to be executed by the automation rule.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::AutomationRulesActionTypeV2> {
        self.r#type.as_ref()
    }
    /// <p>The changes to be applied to fields in a security finding when an automation rule is triggered.</p>
    pub fn finding_fields_update(&self) -> ::std::option::Option<&crate::types::AutomationRulesFindingFieldsUpdateV2> {
        self.finding_fields_update.as_ref()
    }
    /// <p>The settings for integrating automation rule actions with external systems or service.</p>
    pub fn external_integration_configuration(&self) -> ::std::option::Option<&crate::types::ExternalIntegrationConfiguration> {
        self.external_integration_configuration.as_ref()
    }
}
impl AutomationRulesActionV2 {
    /// Creates a new builder-style object to manufacture [`AutomationRulesActionV2`](crate::types::AutomationRulesActionV2).
    pub fn builder() -> crate::types::builders::AutomationRulesActionV2Builder {
        crate::types::builders::AutomationRulesActionV2Builder::default()
    }
}

/// A builder for [`AutomationRulesActionV2`](crate::types::AutomationRulesActionV2).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomationRulesActionV2Builder {
    pub(crate) r#type: ::std::option::Option<crate::types::AutomationRulesActionTypeV2>,
    pub(crate) finding_fields_update: ::std::option::Option<crate::types::AutomationRulesFindingFieldsUpdateV2>,
    pub(crate) external_integration_configuration: ::std::option::Option<crate::types::ExternalIntegrationConfiguration>,
}
impl AutomationRulesActionV2Builder {
    /// <p>The category of action to be executed by the automation rule.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::AutomationRulesActionTypeV2) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The category of action to be executed by the automation rule.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::AutomationRulesActionTypeV2>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The category of action to be executed by the automation rule.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::AutomationRulesActionTypeV2> {
        &self.r#type
    }
    /// <p>The changes to be applied to fields in a security finding when an automation rule is triggered.</p>
    pub fn finding_fields_update(mut self, input: crate::types::AutomationRulesFindingFieldsUpdateV2) -> Self {
        self.finding_fields_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>The changes to be applied to fields in a security finding when an automation rule is triggered.</p>
    pub fn set_finding_fields_update(mut self, input: ::std::option::Option<crate::types::AutomationRulesFindingFieldsUpdateV2>) -> Self {
        self.finding_fields_update = input;
        self
    }
    /// <p>The changes to be applied to fields in a security finding when an automation rule is triggered.</p>
    pub fn get_finding_fields_update(&self) -> &::std::option::Option<crate::types::AutomationRulesFindingFieldsUpdateV2> {
        &self.finding_fields_update
    }
    /// <p>The settings for integrating automation rule actions with external systems or service.</p>
    pub fn external_integration_configuration(mut self, input: crate::types::ExternalIntegrationConfiguration) -> Self {
        self.external_integration_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The settings for integrating automation rule actions with external systems or service.</p>
    pub fn set_external_integration_configuration(mut self, input: ::std::option::Option<crate::types::ExternalIntegrationConfiguration>) -> Self {
        self.external_integration_configuration = input;
        self
    }
    /// <p>The settings for integrating automation rule actions with external systems or service.</p>
    pub fn get_external_integration_configuration(&self) -> &::std::option::Option<crate::types::ExternalIntegrationConfiguration> {
        &self.external_integration_configuration
    }
    /// Consumes the builder and constructs a [`AutomationRulesActionV2`](crate::types::AutomationRulesActionV2).
    pub fn build(self) -> crate::types::AutomationRulesActionV2 {
        crate::types::AutomationRulesActionV2 {
            r#type: self.r#type,
            finding_fields_update: self.finding_fields_update,
            external_integration_configuration: self.external_integration_configuration,
        }
    }
}
