// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The connectorV2 third-party provider configuration summary.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProviderSummary {
    /// <p>The name of the provider.</p>
    pub provider_name: ::std::option::Option<crate::types::ConnectorProviderName>,
    /// <p>The status for the connectorV2.</p>
    pub connector_status: ::std::option::Option<crate::types::ConnectorStatus>,
}
impl ProviderSummary {
    /// <p>The name of the provider.</p>
    pub fn provider_name(&self) -> ::std::option::Option<&crate::types::ConnectorProviderName> {
        self.provider_name.as_ref()
    }
    /// <p>The status for the connectorV2.</p>
    pub fn connector_status(&self) -> ::std::option::Option<&crate::types::ConnectorStatus> {
        self.connector_status.as_ref()
    }
}
impl ProviderSummary {
    /// Creates a new builder-style object to manufacture [`ProviderSummary`](crate::types::ProviderSummary).
    pub fn builder() -> crate::types::builders::ProviderSummaryBuilder {
        crate::types::builders::ProviderSummaryBuilder::default()
    }
}

/// A builder for [`ProviderSummary`](crate::types::ProviderSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProviderSummaryBuilder {
    pub(crate) provider_name: ::std::option::Option<crate::types::ConnectorProviderName>,
    pub(crate) connector_status: ::std::option::Option<crate::types::ConnectorStatus>,
}
impl ProviderSummaryBuilder {
    /// <p>The name of the provider.</p>
    pub fn provider_name(mut self, input: crate::types::ConnectorProviderName) -> Self {
        self.provider_name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the provider.</p>
    pub fn set_provider_name(mut self, input: ::std::option::Option<crate::types::ConnectorProviderName>) -> Self {
        self.provider_name = input;
        self
    }
    /// <p>The name of the provider.</p>
    pub fn get_provider_name(&self) -> &::std::option::Option<crate::types::ConnectorProviderName> {
        &self.provider_name
    }
    /// <p>The status for the connectorV2.</p>
    pub fn connector_status(mut self, input: crate::types::ConnectorStatus) -> Self {
        self.connector_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status for the connectorV2.</p>
    pub fn set_connector_status(mut self, input: ::std::option::Option<crate::types::ConnectorStatus>) -> Self {
        self.connector_status = input;
        self
    }
    /// <p>The status for the connectorV2.</p>
    pub fn get_connector_status(&self) -> &::std::option::Option<crate::types::ConnectorStatus> {
        &self.connector_status
    }
    /// Consumes the builder and constructs a [`ProviderSummary`](crate::types::ProviderSummary).
    pub fn build(self) -> crate::types::ProviderSummary {
        crate::types::ProviderSummary {
            provider_name: self.provider_name,
            connector_status: self.connector_status,
        }
    }
}
