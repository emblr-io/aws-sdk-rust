// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the Autonomous System (AS) of the network endpoints involved in an Amazon GuardDuty Extended Threat Detection attack sequence. GuardDuty generates an attack sequence finding when multiple events align to a potentially suspicious activity. To receive GuardDuty attack sequence findings in Security Hub, you must have GuardDuty enabled. For more information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html">GuardDuty Extended Threat Detection </a> in the <i>Amazon GuardDuty User Guide</i>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NetworkAutonomousSystem {
    /// <p>The name associated with the AS.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The unique number that identifies the AS.</p>
    pub number: ::std::option::Option<i32>,
}
impl NetworkAutonomousSystem {
    /// <p>The name associated with the AS.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The unique number that identifies the AS.</p>
    pub fn number(&self) -> ::std::option::Option<i32> {
        self.number
    }
}
impl NetworkAutonomousSystem {
    /// Creates a new builder-style object to manufacture [`NetworkAutonomousSystem`](crate::types::NetworkAutonomousSystem).
    pub fn builder() -> crate::types::builders::NetworkAutonomousSystemBuilder {
        crate::types::builders::NetworkAutonomousSystemBuilder::default()
    }
}

/// A builder for [`NetworkAutonomousSystem`](crate::types::NetworkAutonomousSystem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NetworkAutonomousSystemBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) number: ::std::option::Option<i32>,
}
impl NetworkAutonomousSystemBuilder {
    /// <p>The name associated with the AS.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name associated with the AS.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name associated with the AS.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The unique number that identifies the AS.</p>
    pub fn number(mut self, input: i32) -> Self {
        self.number = ::std::option::Option::Some(input);
        self
    }
    /// <p>The unique number that identifies the AS.</p>
    pub fn set_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.number = input;
        self
    }
    /// <p>The unique number that identifies the AS.</p>
    pub fn get_number(&self) -> &::std::option::Option<i32> {
        &self.number
    }
    /// Consumes the builder and constructs a [`NetworkAutonomousSystem`](crate::types::NetworkAutonomousSystem).
    pub fn build(self) -> crate::types::NetworkAutonomousSystem {
        crate::types::NetworkAutonomousSystem {
            name: self.name,
            number: self.number,
        }
    }
}
