// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes how the recommendations are ordered.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OrderBy {
    /// <p>The dimension values to sort the recommendations.</p>
    pub dimension: ::std::option::Option<crate::types::Dimension>,
    /// <p>The order to sort the recommendations.</p>
    pub order: ::std::option::Option<crate::types::Order>,
}
impl OrderBy {
    /// <p>The dimension values to sort the recommendations.</p>
    pub fn dimension(&self) -> ::std::option::Option<&crate::types::Dimension> {
        self.dimension.as_ref()
    }
    /// <p>The order to sort the recommendations.</p>
    pub fn order(&self) -> ::std::option::Option<&crate::types::Order> {
        self.order.as_ref()
    }
}
impl OrderBy {
    /// Creates a new builder-style object to manufacture [`OrderBy`](crate::types::OrderBy).
    pub fn builder() -> crate::types::builders::OrderByBuilder {
        crate::types::builders::OrderByBuilder::default()
    }
}

/// A builder for [`OrderBy`](crate::types::OrderBy).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OrderByBuilder {
    pub(crate) dimension: ::std::option::Option<crate::types::Dimension>,
    pub(crate) order: ::std::option::Option<crate::types::Order>,
}
impl OrderByBuilder {
    /// <p>The dimension values to sort the recommendations.</p>
    pub fn dimension(mut self, input: crate::types::Dimension) -> Self {
        self.dimension = ::std::option::Option::Some(input);
        self
    }
    /// <p>The dimension values to sort the recommendations.</p>
    pub fn set_dimension(mut self, input: ::std::option::Option<crate::types::Dimension>) -> Self {
        self.dimension = input;
        self
    }
    /// <p>The dimension values to sort the recommendations.</p>
    pub fn get_dimension(&self) -> &::std::option::Option<crate::types::Dimension> {
        &self.dimension
    }
    /// <p>The order to sort the recommendations.</p>
    pub fn order(mut self, input: crate::types::Order) -> Self {
        self.order = ::std::option::Option::Some(input);
        self
    }
    /// <p>The order to sort the recommendations.</p>
    pub fn set_order(mut self, input: ::std::option::Option<crate::types::Order>) -> Self {
        self.order = input;
        self
    }
    /// <p>The order to sort the recommendations.</p>
    pub fn get_order(&self) -> &::std::option::Option<crate::types::Order> {
        &self.order
    }
    /// Consumes the builder and constructs a [`OrderBy`](crate::types::OrderBy).
    pub fn build(self) -> crate::types::OrderBy {
        crate::types::OrderBy {
            dimension: self.dimension,
            order: self.order,
        }
    }
}
