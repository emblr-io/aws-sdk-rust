// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the findings summary of the idle resources.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdleSummary {
    /// <p>The name of the finding group for the idle resources.</p>
    pub name: ::std::option::Option<crate::types::IdleFinding>,
    /// <p>The count of idle resources in the finding group.</p>
    pub value: f64,
}
impl IdleSummary {
    /// <p>The name of the finding group for the idle resources.</p>
    pub fn name(&self) -> ::std::option::Option<&crate::types::IdleFinding> {
        self.name.as_ref()
    }
    /// <p>The count of idle resources in the finding group.</p>
    pub fn value(&self) -> f64 {
        self.value
    }
}
impl IdleSummary {
    /// Creates a new builder-style object to manufacture [`IdleSummary`](crate::types::IdleSummary).
    pub fn builder() -> crate::types::builders::IdleSummaryBuilder {
        crate::types::builders::IdleSummaryBuilder::default()
    }
}

/// A builder for [`IdleSummary`](crate::types::IdleSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IdleSummaryBuilder {
    pub(crate) name: ::std::option::Option<crate::types::IdleFinding>,
    pub(crate) value: ::std::option::Option<f64>,
}
impl IdleSummaryBuilder {
    /// <p>The name of the finding group for the idle resources.</p>
    pub fn name(mut self, input: crate::types::IdleFinding) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the finding group for the idle resources.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::IdleFinding>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the finding group for the idle resources.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::IdleFinding> {
        &self.name
    }
    /// <p>The count of idle resources in the finding group.</p>
    pub fn value(mut self, input: f64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The count of idle resources in the finding group.</p>
    pub fn set_value(mut self, input: ::std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The count of idle resources in the finding group.</p>
    pub fn get_value(&self) -> &::std::option::Option<f64> {
        &self.value
    }
    /// Consumes the builder and constructs a [`IdleSummary`](crate::types::IdleSummary).
    pub fn build(self) -> crate::types::IdleSummary {
        crate::types::IdleSummary {
            name: self.name,
            value: self.value.unwrap_or_default(),
        }
    }
}
