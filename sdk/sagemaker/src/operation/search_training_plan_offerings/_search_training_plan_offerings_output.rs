// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchTrainingPlanOfferingsOutput {
    /// <p>A list of training plan offerings that match the search criteria.</p>
    pub training_plan_offerings: ::std::option::Option<::std::vec::Vec<crate::types::TrainingPlanOffering>>,
    _request_id: Option<String>,
}
impl SearchTrainingPlanOfferingsOutput {
    /// <p>A list of training plan offerings that match the search criteria.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.training_plan_offerings.is_none()`.
    pub fn training_plan_offerings(&self) -> &[crate::types::TrainingPlanOffering] {
        self.training_plan_offerings.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for SearchTrainingPlanOfferingsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl SearchTrainingPlanOfferingsOutput {
    /// Creates a new builder-style object to manufacture [`SearchTrainingPlanOfferingsOutput`](crate::operation::search_training_plan_offerings::SearchTrainingPlanOfferingsOutput).
    pub fn builder() -> crate::operation::search_training_plan_offerings::builders::SearchTrainingPlanOfferingsOutputBuilder {
        crate::operation::search_training_plan_offerings::builders::SearchTrainingPlanOfferingsOutputBuilder::default()
    }
}

/// A builder for [`SearchTrainingPlanOfferingsOutput`](crate::operation::search_training_plan_offerings::SearchTrainingPlanOfferingsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SearchTrainingPlanOfferingsOutputBuilder {
    pub(crate) training_plan_offerings: ::std::option::Option<::std::vec::Vec<crate::types::TrainingPlanOffering>>,
    _request_id: Option<String>,
}
impl SearchTrainingPlanOfferingsOutputBuilder {
    /// Appends an item to `training_plan_offerings`.
    ///
    /// To override the contents of this collection use [`set_training_plan_offerings`](Self::set_training_plan_offerings).
    ///
    /// <p>A list of training plan offerings that match the search criteria.</p>
    pub fn training_plan_offerings(mut self, input: crate::types::TrainingPlanOffering) -> Self {
        let mut v = self.training_plan_offerings.unwrap_or_default();
        v.push(input);
        self.training_plan_offerings = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of training plan offerings that match the search criteria.</p>
    pub fn set_training_plan_offerings(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TrainingPlanOffering>>) -> Self {
        self.training_plan_offerings = input;
        self
    }
    /// <p>A list of training plan offerings that match the search criteria.</p>
    pub fn get_training_plan_offerings(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TrainingPlanOffering>> {
        &self.training_plan_offerings
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`SearchTrainingPlanOfferingsOutput`](crate::operation::search_training_plan_offerings::SearchTrainingPlanOfferingsOutput).
    pub fn build(self) -> crate::operation::search_training_plan_offerings::SearchTrainingPlanOfferingsOutput {
        crate::operation::search_training_plan_offerings::SearchTrainingPlanOfferingsOutput {
            training_plan_offerings: self.training_plan_offerings,
            _request_id: self._request_id,
        }
    }
}
