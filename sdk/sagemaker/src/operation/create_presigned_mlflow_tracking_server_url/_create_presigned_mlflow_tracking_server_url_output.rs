// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreatePresignedMlflowTrackingServerUrlOutput {
    /// <p>A presigned URL with an authorization token.</p>
    pub authorized_url: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreatePresignedMlflowTrackingServerUrlOutput {
    /// <p>A presigned URL with an authorization token.</p>
    pub fn authorized_url(&self) -> ::std::option::Option<&str> {
        self.authorized_url.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for CreatePresignedMlflowTrackingServerUrlOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreatePresignedMlflowTrackingServerUrlOutput {
    /// Creates a new builder-style object to manufacture [`CreatePresignedMlflowTrackingServerUrlOutput`](crate::operation::create_presigned_mlflow_tracking_server_url::CreatePresignedMlflowTrackingServerUrlOutput).
    pub fn builder() -> crate::operation::create_presigned_mlflow_tracking_server_url::builders::CreatePresignedMlflowTrackingServerUrlOutputBuilder {
        crate::operation::create_presigned_mlflow_tracking_server_url::builders::CreatePresignedMlflowTrackingServerUrlOutputBuilder::default()
    }
}

/// A builder for [`CreatePresignedMlflowTrackingServerUrlOutput`](crate::operation::create_presigned_mlflow_tracking_server_url::CreatePresignedMlflowTrackingServerUrlOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreatePresignedMlflowTrackingServerUrlOutputBuilder {
    pub(crate) authorized_url: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreatePresignedMlflowTrackingServerUrlOutputBuilder {
    /// <p>A presigned URL with an authorization token.</p>
    pub fn authorized_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authorized_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A presigned URL with an authorization token.</p>
    pub fn set_authorized_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authorized_url = input;
        self
    }
    /// <p>A presigned URL with an authorization token.</p>
    pub fn get_authorized_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.authorized_url
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreatePresignedMlflowTrackingServerUrlOutput`](crate::operation::create_presigned_mlflow_tracking_server_url::CreatePresignedMlflowTrackingServerUrlOutput).
    pub fn build(self) -> crate::operation::create_presigned_mlflow_tracking_server_url::CreatePresignedMlflowTrackingServerUrlOutput {
        crate::operation::create_presigned_mlflow_tracking_server_url::CreatePresignedMlflowTrackingServerUrlOutput {
            authorized_url: self.authorized_url,
            _request_id: self._request_id,
        }
    }
}
