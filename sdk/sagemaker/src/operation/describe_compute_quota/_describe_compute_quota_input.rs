// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeComputeQuotaInput {
    /// <p>ID of the compute allocation definition.</p>
    pub compute_quota_id: ::std::option::Option<::std::string::String>,
    /// <p>Version of the compute allocation definition.</p>
    pub compute_quota_version: ::std::option::Option<i32>,
}
impl DescribeComputeQuotaInput {
    /// <p>ID of the compute allocation definition.</p>
    pub fn compute_quota_id(&self) -> ::std::option::Option<&str> {
        self.compute_quota_id.as_deref()
    }
    /// <p>Version of the compute allocation definition.</p>
    pub fn compute_quota_version(&self) -> ::std::option::Option<i32> {
        self.compute_quota_version
    }
}
impl DescribeComputeQuotaInput {
    /// Creates a new builder-style object to manufacture [`DescribeComputeQuotaInput`](crate::operation::describe_compute_quota::DescribeComputeQuotaInput).
    pub fn builder() -> crate::operation::describe_compute_quota::builders::DescribeComputeQuotaInputBuilder {
        crate::operation::describe_compute_quota::builders::DescribeComputeQuotaInputBuilder::default()
    }
}

/// A builder for [`DescribeComputeQuotaInput`](crate::operation::describe_compute_quota::DescribeComputeQuotaInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeComputeQuotaInputBuilder {
    pub(crate) compute_quota_id: ::std::option::Option<::std::string::String>,
    pub(crate) compute_quota_version: ::std::option::Option<i32>,
}
impl DescribeComputeQuotaInputBuilder {
    /// <p>ID of the compute allocation definition.</p>
    /// This field is required.
    pub fn compute_quota_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.compute_quota_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ID of the compute allocation definition.</p>
    pub fn set_compute_quota_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.compute_quota_id = input;
        self
    }
    /// <p>ID of the compute allocation definition.</p>
    pub fn get_compute_quota_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.compute_quota_id
    }
    /// <p>Version of the compute allocation definition.</p>
    pub fn compute_quota_version(mut self, input: i32) -> Self {
        self.compute_quota_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>Version of the compute allocation definition.</p>
    pub fn set_compute_quota_version(mut self, input: ::std::option::Option<i32>) -> Self {
        self.compute_quota_version = input;
        self
    }
    /// <p>Version of the compute allocation definition.</p>
    pub fn get_compute_quota_version(&self) -> &::std::option::Option<i32> {
        &self.compute_quota_version
    }
    /// Consumes the builder and constructs a [`DescribeComputeQuotaInput`](crate::operation::describe_compute_quota::DescribeComputeQuotaInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_compute_quota::DescribeComputeQuotaInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::describe_compute_quota::DescribeComputeQuotaInput {
            compute_quota_id: self.compute_quota_id,
            compute_quota_version: self.compute_quota_version,
        })
    }
}
