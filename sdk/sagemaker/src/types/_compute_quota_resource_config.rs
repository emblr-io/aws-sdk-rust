// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration of the resources used for the compute allocation definition.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ComputeQuotaResourceConfig {
    /// <p>The instance type of the instance group for the cluster.</p>
    pub instance_type: ::std::option::Option<crate::types::ClusterInstanceType>,
    /// <p>The number of instances to add to the instance group of a SageMaker HyperPod cluster.</p>
    pub count: ::std::option::Option<i32>,
}
impl ComputeQuotaResourceConfig {
    /// <p>The instance type of the instance group for the cluster.</p>
    pub fn instance_type(&self) -> ::std::option::Option<&crate::types::ClusterInstanceType> {
        self.instance_type.as_ref()
    }
    /// <p>The number of instances to add to the instance group of a SageMaker HyperPod cluster.</p>
    pub fn count(&self) -> ::std::option::Option<i32> {
        self.count
    }
}
impl ComputeQuotaResourceConfig {
    /// Creates a new builder-style object to manufacture [`ComputeQuotaResourceConfig`](crate::types::ComputeQuotaResourceConfig).
    pub fn builder() -> crate::types::builders::ComputeQuotaResourceConfigBuilder {
        crate::types::builders::ComputeQuotaResourceConfigBuilder::default()
    }
}

/// A builder for [`ComputeQuotaResourceConfig`](crate::types::ComputeQuotaResourceConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ComputeQuotaResourceConfigBuilder {
    pub(crate) instance_type: ::std::option::Option<crate::types::ClusterInstanceType>,
    pub(crate) count: ::std::option::Option<i32>,
}
impl ComputeQuotaResourceConfigBuilder {
    /// <p>The instance type of the instance group for the cluster.</p>
    /// This field is required.
    pub fn instance_type(mut self, input: crate::types::ClusterInstanceType) -> Self {
        self.instance_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The instance type of the instance group for the cluster.</p>
    pub fn set_instance_type(mut self, input: ::std::option::Option<crate::types::ClusterInstanceType>) -> Self {
        self.instance_type = input;
        self
    }
    /// <p>The instance type of the instance group for the cluster.</p>
    pub fn get_instance_type(&self) -> &::std::option::Option<crate::types::ClusterInstanceType> {
        &self.instance_type
    }
    /// <p>The number of instances to add to the instance group of a SageMaker HyperPod cluster.</p>
    /// This field is required.
    pub fn count(mut self, input: i32) -> Self {
        self.count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of instances to add to the instance group of a SageMaker HyperPod cluster.</p>
    pub fn set_count(mut self, input: ::std::option::Option<i32>) -> Self {
        self.count = input;
        self
    }
    /// <p>The number of instances to add to the instance group of a SageMaker HyperPod cluster.</p>
    pub fn get_count(&self) -> &::std::option::Option<i32> {
        &self.count
    }
    /// Consumes the builder and constructs a [`ComputeQuotaResourceConfig`](crate::types::ComputeQuotaResourceConfig).
    pub fn build(self) -> crate::types::ComputeQuotaResourceConfig {
        crate::types::ComputeQuotaResourceConfig {
            instance_type: self.instance_type,
            count: self.count,
        }
    }
}
