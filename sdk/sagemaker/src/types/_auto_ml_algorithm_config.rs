// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoMlAlgorithmConfig {
    /// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
    /// <ul>
    /// <li>
    /// <p><b>For the tabular problem type <code>TabularJobConfig</code>:</b></p><note>
    /// <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm.</p>
    /// </note>
    /// <ul>
    /// <li>
    /// <p>In <code>ENSEMBLING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"catboost"</p></li>
    /// <li>
    /// <p>"extra-trees"</p></li>
    /// <li>
    /// <p>"fastai"</p></li>
    /// <li>
    /// <p>"lightgbm"</p></li>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"nn-torch"</p></li>
    /// <li>
    /// <p>"randomforest"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// <li>
    /// <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"mlp"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// <li>
    /// <p><b>For the time-series forecasting problem type <code>TimeSeriesForecastingJobConfig</code>:</b></p>
    /// <ul>
    /// <li>
    /// <p>Choose your algorithms from this list.</p>
    /// <ul>
    /// <li>
    /// <p>"cnn-qr"</p></li>
    /// <li>
    /// <p>"deepar"</p></li>
    /// <li>
    /// <p>"prophet"</p></li>
    /// <li>
    /// <p>"arima"</p></li>
    /// <li>
    /// <p>"npts"</p></li>
    /// <li>
    /// <p>"ets"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// </ul>
    pub auto_ml_algorithms: ::std::option::Option<::std::vec::Vec<crate::types::AutoMlAlgorithm>>,
}
impl AutoMlAlgorithmConfig {
    /// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
    /// <ul>
    /// <li>
    /// <p><b>For the tabular problem type <code>TabularJobConfig</code>:</b></p><note>
    /// <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm.</p>
    /// </note>
    /// <ul>
    /// <li>
    /// <p>In <code>ENSEMBLING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"catboost"</p></li>
    /// <li>
    /// <p>"extra-trees"</p></li>
    /// <li>
    /// <p>"fastai"</p></li>
    /// <li>
    /// <p>"lightgbm"</p></li>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"nn-torch"</p></li>
    /// <li>
    /// <p>"randomforest"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// <li>
    /// <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"mlp"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// <li>
    /// <p><b>For the time-series forecasting problem type <code>TimeSeriesForecastingJobConfig</code>:</b></p>
    /// <ul>
    /// <li>
    /// <p>Choose your algorithms from this list.</p>
    /// <ul>
    /// <li>
    /// <p>"cnn-qr"</p></li>
    /// <li>
    /// <p>"deepar"</p></li>
    /// <li>
    /// <p>"prophet"</p></li>
    /// <li>
    /// <p>"arima"</p></li>
    /// <li>
    /// <p>"npts"</p></li>
    /// <li>
    /// <p>"ets"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.auto_ml_algorithms.is_none()`.
    pub fn auto_ml_algorithms(&self) -> &[crate::types::AutoMlAlgorithm] {
        self.auto_ml_algorithms.as_deref().unwrap_or_default()
    }
}
impl AutoMlAlgorithmConfig {
    /// Creates a new builder-style object to manufacture [`AutoMlAlgorithmConfig`](crate::types::AutoMlAlgorithmConfig).
    pub fn builder() -> crate::types::builders::AutoMlAlgorithmConfigBuilder {
        crate::types::builders::AutoMlAlgorithmConfigBuilder::default()
    }
}

/// A builder for [`AutoMlAlgorithmConfig`](crate::types::AutoMlAlgorithmConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutoMlAlgorithmConfigBuilder {
    pub(crate) auto_ml_algorithms: ::std::option::Option<::std::vec::Vec<crate::types::AutoMlAlgorithm>>,
}
impl AutoMlAlgorithmConfigBuilder {
    /// Appends an item to `auto_ml_algorithms`.
    ///
    /// To override the contents of this collection use [`set_auto_ml_algorithms`](Self::set_auto_ml_algorithms).
    ///
    /// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
    /// <ul>
    /// <li>
    /// <p><b>For the tabular problem type <code>TabularJobConfig</code>:</b></p><note>
    /// <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm.</p>
    /// </note>
    /// <ul>
    /// <li>
    /// <p>In <code>ENSEMBLING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"catboost"</p></li>
    /// <li>
    /// <p>"extra-trees"</p></li>
    /// <li>
    /// <p>"fastai"</p></li>
    /// <li>
    /// <p>"lightgbm"</p></li>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"nn-torch"</p></li>
    /// <li>
    /// <p>"randomforest"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// <li>
    /// <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"mlp"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// <li>
    /// <p><b>For the time-series forecasting problem type <code>TimeSeriesForecastingJobConfig</code>:</b></p>
    /// <ul>
    /// <li>
    /// <p>Choose your algorithms from this list.</p>
    /// <ul>
    /// <li>
    /// <p>"cnn-qr"</p></li>
    /// <li>
    /// <p>"deepar"</p></li>
    /// <li>
    /// <p>"prophet"</p></li>
    /// <li>
    /// <p>"arima"</p></li>
    /// <li>
    /// <p>"npts"</p></li>
    /// <li>
    /// <p>"ets"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// </ul>
    pub fn auto_ml_algorithms(mut self, input: crate::types::AutoMlAlgorithm) -> Self {
        let mut v = self.auto_ml_algorithms.unwrap_or_default();
        v.push(input);
        self.auto_ml_algorithms = ::std::option::Option::Some(v);
        self
    }
    /// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
    /// <ul>
    /// <li>
    /// <p><b>For the tabular problem type <code>TabularJobConfig</code>:</b></p><note>
    /// <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm.</p>
    /// </note>
    /// <ul>
    /// <li>
    /// <p>In <code>ENSEMBLING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"catboost"</p></li>
    /// <li>
    /// <p>"extra-trees"</p></li>
    /// <li>
    /// <p>"fastai"</p></li>
    /// <li>
    /// <p>"lightgbm"</p></li>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"nn-torch"</p></li>
    /// <li>
    /// <p>"randomforest"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// <li>
    /// <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"mlp"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// <li>
    /// <p><b>For the time-series forecasting problem type <code>TimeSeriesForecastingJobConfig</code>:</b></p>
    /// <ul>
    /// <li>
    /// <p>Choose your algorithms from this list.</p>
    /// <ul>
    /// <li>
    /// <p>"cnn-qr"</p></li>
    /// <li>
    /// <p>"deepar"</p></li>
    /// <li>
    /// <p>"prophet"</p></li>
    /// <li>
    /// <p>"arima"</p></li>
    /// <li>
    /// <p>"npts"</p></li>
    /// <li>
    /// <p>"ets"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// </ul>
    pub fn set_auto_ml_algorithms(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutoMlAlgorithm>>) -> Self {
        self.auto_ml_algorithms = input;
        self
    }
    /// <p>The selection of algorithms trained on your dataset to generate the model candidates for an Autopilot job.</p>
    /// <ul>
    /// <li>
    /// <p><b>For the tabular problem type <code>TabularJobConfig</code>:</b></p><note>
    /// <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm.</p>
    /// </note>
    /// <ul>
    /// <li>
    /// <p>In <code>ENSEMBLING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"catboost"</p></li>
    /// <li>
    /// <p>"extra-trees"</p></li>
    /// <li>
    /// <p>"fastai"</p></li>
    /// <li>
    /// <p>"lightgbm"</p></li>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"nn-torch"</p></li>
    /// <li>
    /// <p>"randomforest"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// <li>
    /// <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p>
    /// <ul>
    /// <li>
    /// <p>"linear-learner"</p></li>
    /// <li>
    /// <p>"mlp"</p></li>
    /// <li>
    /// <p>"xgboost"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// <li>
    /// <p><b>For the time-series forecasting problem type <code>TimeSeriesForecastingJobConfig</code>:</b></p>
    /// <ul>
    /// <li>
    /// <p>Choose your algorithms from this list.</p>
    /// <ul>
    /// <li>
    /// <p>"cnn-qr"</p></li>
    /// <li>
    /// <p>"deepar"</p></li>
    /// <li>
    /// <p>"prophet"</p></li>
    /// <li>
    /// <p>"arima"</p></li>
    /// <li>
    /// <p>"npts"</p></li>
    /// <li>
    /// <p>"ets"</p></li>
    /// </ul></li>
    /// </ul></li>
    /// </ul>
    pub fn get_auto_ml_algorithms(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutoMlAlgorithm>> {
        &self.auto_ml_algorithms
    }
    /// Consumes the builder and constructs a [`AutoMlAlgorithmConfig`](crate::types::AutoMlAlgorithmConfig).
    pub fn build(self) -> crate::types::AutoMlAlgorithmConfig {
        crate::types::AutoMlAlgorithmConfig {
            auto_ml_algorithms: self.auto_ml_algorithms,
        }
    }
}
