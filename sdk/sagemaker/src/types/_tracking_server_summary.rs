// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the tracking server to list.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrackingServerSummary {
    /// <p>The ARN of a listed tracking server.</p>
    pub tracking_server_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of a listed tracking server.</p>
    pub tracking_server_name: ::std::option::Option<::std::string::String>,
    /// <p>The creation time of a listed tracking server.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The last modified time of a listed tracking server.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The creation status of a listed tracking server.</p>
    pub tracking_server_status: ::std::option::Option<crate::types::TrackingServerStatus>,
    /// <p>The activity status of a listed tracking server.</p>
    pub is_active: ::std::option::Option<crate::types::IsTrackingServerActive>,
    /// <p>The MLflow version used for a listed tracking server.</p>
    pub mlflow_version: ::std::option::Option<::std::string::String>,
}
impl TrackingServerSummary {
    /// <p>The ARN of a listed tracking server.</p>
    pub fn tracking_server_arn(&self) -> ::std::option::Option<&str> {
        self.tracking_server_arn.as_deref()
    }
    /// <p>The name of a listed tracking server.</p>
    pub fn tracking_server_name(&self) -> ::std::option::Option<&str> {
        self.tracking_server_name.as_deref()
    }
    /// <p>The creation time of a listed tracking server.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The last modified time of a listed tracking server.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The creation status of a listed tracking server.</p>
    pub fn tracking_server_status(&self) -> ::std::option::Option<&crate::types::TrackingServerStatus> {
        self.tracking_server_status.as_ref()
    }
    /// <p>The activity status of a listed tracking server.</p>
    pub fn is_active(&self) -> ::std::option::Option<&crate::types::IsTrackingServerActive> {
        self.is_active.as_ref()
    }
    /// <p>The MLflow version used for a listed tracking server.</p>
    pub fn mlflow_version(&self) -> ::std::option::Option<&str> {
        self.mlflow_version.as_deref()
    }
}
impl TrackingServerSummary {
    /// Creates a new builder-style object to manufacture [`TrackingServerSummary`](crate::types::TrackingServerSummary).
    pub fn builder() -> crate::types::builders::TrackingServerSummaryBuilder {
        crate::types::builders::TrackingServerSummaryBuilder::default()
    }
}

/// A builder for [`TrackingServerSummary`](crate::types::TrackingServerSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TrackingServerSummaryBuilder {
    pub(crate) tracking_server_arn: ::std::option::Option<::std::string::String>,
    pub(crate) tracking_server_name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) tracking_server_status: ::std::option::Option<crate::types::TrackingServerStatus>,
    pub(crate) is_active: ::std::option::Option<crate::types::IsTrackingServerActive>,
    pub(crate) mlflow_version: ::std::option::Option<::std::string::String>,
}
impl TrackingServerSummaryBuilder {
    /// <p>The ARN of a listed tracking server.</p>
    pub fn tracking_server_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tracking_server_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of a listed tracking server.</p>
    pub fn set_tracking_server_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tracking_server_arn = input;
        self
    }
    /// <p>The ARN of a listed tracking server.</p>
    pub fn get_tracking_server_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.tracking_server_arn
    }
    /// <p>The name of a listed tracking server.</p>
    pub fn tracking_server_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tracking_server_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a listed tracking server.</p>
    pub fn set_tracking_server_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tracking_server_name = input;
        self
    }
    /// <p>The name of a listed tracking server.</p>
    pub fn get_tracking_server_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.tracking_server_name
    }
    /// <p>The creation time of a listed tracking server.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation time of a listed tracking server.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The creation time of a listed tracking server.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The last modified time of a listed tracking server.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last modified time of a listed tracking server.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The last modified time of a listed tracking server.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The creation status of a listed tracking server.</p>
    pub fn tracking_server_status(mut self, input: crate::types::TrackingServerStatus) -> Self {
        self.tracking_server_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation status of a listed tracking server.</p>
    pub fn set_tracking_server_status(mut self, input: ::std::option::Option<crate::types::TrackingServerStatus>) -> Self {
        self.tracking_server_status = input;
        self
    }
    /// <p>The creation status of a listed tracking server.</p>
    pub fn get_tracking_server_status(&self) -> &::std::option::Option<crate::types::TrackingServerStatus> {
        &self.tracking_server_status
    }
    /// <p>The activity status of a listed tracking server.</p>
    pub fn is_active(mut self, input: crate::types::IsTrackingServerActive) -> Self {
        self.is_active = ::std::option::Option::Some(input);
        self
    }
    /// <p>The activity status of a listed tracking server.</p>
    pub fn set_is_active(mut self, input: ::std::option::Option<crate::types::IsTrackingServerActive>) -> Self {
        self.is_active = input;
        self
    }
    /// <p>The activity status of a listed tracking server.</p>
    pub fn get_is_active(&self) -> &::std::option::Option<crate::types::IsTrackingServerActive> {
        &self.is_active
    }
    /// <p>The MLflow version used for a listed tracking server.</p>
    pub fn mlflow_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mlflow_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The MLflow version used for a listed tracking server.</p>
    pub fn set_mlflow_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mlflow_version = input;
        self
    }
    /// <p>The MLflow version used for a listed tracking server.</p>
    pub fn get_mlflow_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.mlflow_version
    }
    /// Consumes the builder and constructs a [`TrackingServerSummary`](crate::types::TrackingServerSummary).
    pub fn build(self) -> crate::types::TrackingServerSummary {
        crate::types::TrackingServerSummary {
            tracking_server_arn: self.tracking_server_arn,
            tracking_server_name: self.tracking_server_name,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            tracking_server_status: self.tracking_server_status,
            is_active: self.is_active,
            mlflow_version: self.mlflow_version,
        }
    }
}
