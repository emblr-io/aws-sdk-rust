// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary of the cluster policy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterSchedulerConfigSummary {
    /// <p>ARN of the cluster policy.</p>
    pub cluster_scheduler_config_arn: ::std::option::Option<::std::string::String>,
    /// <p>ID of the cluster policy.</p>
    pub cluster_scheduler_config_id: ::std::option::Option<::std::string::String>,
    /// <p>Version of the cluster policy.</p>
    pub cluster_scheduler_config_version: ::std::option::Option<i32>,
    /// <p>Name of the cluster policy.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Creation time of the cluster policy.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Last modified time of the cluster policy.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Status of the cluster policy.</p>
    pub status: ::std::option::Option<crate::types::SchedulerResourceStatus>,
    /// <p>ARN of the cluster.</p>
    pub cluster_arn: ::std::option::Option<::std::string::String>,
}
impl ClusterSchedulerConfigSummary {
    /// <p>ARN of the cluster policy.</p>
    pub fn cluster_scheduler_config_arn(&self) -> ::std::option::Option<&str> {
        self.cluster_scheduler_config_arn.as_deref()
    }
    /// <p>ID of the cluster policy.</p>
    pub fn cluster_scheduler_config_id(&self) -> ::std::option::Option<&str> {
        self.cluster_scheduler_config_id.as_deref()
    }
    /// <p>Version of the cluster policy.</p>
    pub fn cluster_scheduler_config_version(&self) -> ::std::option::Option<i32> {
        self.cluster_scheduler_config_version
    }
    /// <p>Name of the cluster policy.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Creation time of the cluster policy.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Last modified time of the cluster policy.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>Status of the cluster policy.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::SchedulerResourceStatus> {
        self.status.as_ref()
    }
    /// <p>ARN of the cluster.</p>
    pub fn cluster_arn(&self) -> ::std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
}
impl ClusterSchedulerConfigSummary {
    /// Creates a new builder-style object to manufacture [`ClusterSchedulerConfigSummary`](crate::types::ClusterSchedulerConfigSummary).
    pub fn builder() -> crate::types::builders::ClusterSchedulerConfigSummaryBuilder {
        crate::types::builders::ClusterSchedulerConfigSummaryBuilder::default()
    }
}

/// A builder for [`ClusterSchedulerConfigSummary`](crate::types::ClusterSchedulerConfigSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClusterSchedulerConfigSummaryBuilder {
    pub(crate) cluster_scheduler_config_arn: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_scheduler_config_id: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_scheduler_config_version: ::std::option::Option<i32>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::SchedulerResourceStatus>,
    pub(crate) cluster_arn: ::std::option::Option<::std::string::String>,
}
impl ClusterSchedulerConfigSummaryBuilder {
    /// <p>ARN of the cluster policy.</p>
    /// This field is required.
    pub fn cluster_scheduler_config_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_scheduler_config_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN of the cluster policy.</p>
    pub fn set_cluster_scheduler_config_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_scheduler_config_arn = input;
        self
    }
    /// <p>ARN of the cluster policy.</p>
    pub fn get_cluster_scheduler_config_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_scheduler_config_arn
    }
    /// <p>ID of the cluster policy.</p>
    /// This field is required.
    pub fn cluster_scheduler_config_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_scheduler_config_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ID of the cluster policy.</p>
    pub fn set_cluster_scheduler_config_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_scheduler_config_id = input;
        self
    }
    /// <p>ID of the cluster policy.</p>
    pub fn get_cluster_scheduler_config_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_scheduler_config_id
    }
    /// <p>Version of the cluster policy.</p>
    pub fn cluster_scheduler_config_version(mut self, input: i32) -> Self {
        self.cluster_scheduler_config_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>Version of the cluster policy.</p>
    pub fn set_cluster_scheduler_config_version(mut self, input: ::std::option::Option<i32>) -> Self {
        self.cluster_scheduler_config_version = input;
        self
    }
    /// <p>Version of the cluster policy.</p>
    pub fn get_cluster_scheduler_config_version(&self) -> &::std::option::Option<i32> {
        &self.cluster_scheduler_config_version
    }
    /// <p>Name of the cluster policy.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the cluster policy.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Name of the cluster policy.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Creation time of the cluster policy.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Creation time of the cluster policy.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Creation time of the cluster policy.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Last modified time of the cluster policy.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Last modified time of the cluster policy.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>Last modified time of the cluster policy.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>Status of the cluster policy.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::SchedulerResourceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status of the cluster policy.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::SchedulerResourceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Status of the cluster policy.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::SchedulerResourceStatus> {
        &self.status
    }
    /// <p>ARN of the cluster.</p>
    pub fn cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN of the cluster.</p>
    pub fn set_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>ARN of the cluster.</p>
    pub fn get_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_arn
    }
    /// Consumes the builder and constructs a [`ClusterSchedulerConfigSummary`](crate::types::ClusterSchedulerConfigSummary).
    pub fn build(self) -> crate::types::ClusterSchedulerConfigSummary {
        crate::types::ClusterSchedulerConfigSummary {
            cluster_scheduler_config_arn: self.cluster_scheduler_config_arn,
            cluster_scheduler_config_id: self.cluster_scheduler_config_id,
            cluster_scheduler_config_version: self.cluster_scheduler_config_version,
            name: self.name,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            status: self.status,
            cluster_arn: self.cluster_arn,
        }
    }
}
