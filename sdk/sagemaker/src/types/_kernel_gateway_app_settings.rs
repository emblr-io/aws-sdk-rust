// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The KernelGateway app settings.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KernelGatewayAppSettings {
    /// <p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker AI image used by the KernelGateway app.</p><note>
    /// <p>The Amazon SageMaker AI Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the CLI or CloudFormation and the instance type parameter value is not passed.</p>
    /// </note>
    pub default_resource_spec: ::std::option::Option<crate::types::ResourceSpec>,
    /// <p>A list of custom SageMaker AI images that are configured to run as a KernelGateway app.</p>
    /// <p>The maximum number of custom images are as follows.</p>
    /// <ul>
    /// <li>
    /// <p>On a domain level: 200</p></li>
    /// <li>
    /// <p>On a space level: 5</p></li>
    /// <li>
    /// <p>On a user profile level: 5</p></li>
    /// </ul>
    pub custom_images: ::std::option::Option<::std::vec::Vec<crate::types::CustomImage>>,
    /// <p>The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p><note>
    /// <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p>
    /// </note>
    pub lifecycle_config_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl KernelGatewayAppSettings {
    /// <p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker AI image used by the KernelGateway app.</p><note>
    /// <p>The Amazon SageMaker AI Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the CLI or CloudFormation and the instance type parameter value is not passed.</p>
    /// </note>
    pub fn default_resource_spec(&self) -> ::std::option::Option<&crate::types::ResourceSpec> {
        self.default_resource_spec.as_ref()
    }
    /// <p>A list of custom SageMaker AI images that are configured to run as a KernelGateway app.</p>
    /// <p>The maximum number of custom images are as follows.</p>
    /// <ul>
    /// <li>
    /// <p>On a domain level: 200</p></li>
    /// <li>
    /// <p>On a space level: 5</p></li>
    /// <li>
    /// <p>On a user profile level: 5</p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.custom_images.is_none()`.
    pub fn custom_images(&self) -> &[crate::types::CustomImage] {
        self.custom_images.as_deref().unwrap_or_default()
    }
    /// <p>The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p><note>
    /// <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p>
    /// </note>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.lifecycle_config_arns.is_none()`.
    pub fn lifecycle_config_arns(&self) -> &[::std::string::String] {
        self.lifecycle_config_arns.as_deref().unwrap_or_default()
    }
}
impl KernelGatewayAppSettings {
    /// Creates a new builder-style object to manufacture [`KernelGatewayAppSettings`](crate::types::KernelGatewayAppSettings).
    pub fn builder() -> crate::types::builders::KernelGatewayAppSettingsBuilder {
        crate::types::builders::KernelGatewayAppSettingsBuilder::default()
    }
}

/// A builder for [`KernelGatewayAppSettings`](crate::types::KernelGatewayAppSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct KernelGatewayAppSettingsBuilder {
    pub(crate) default_resource_spec: ::std::option::Option<crate::types::ResourceSpec>,
    pub(crate) custom_images: ::std::option::Option<::std::vec::Vec<crate::types::CustomImage>>,
    pub(crate) lifecycle_config_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl KernelGatewayAppSettingsBuilder {
    /// <p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker AI image used by the KernelGateway app.</p><note>
    /// <p>The Amazon SageMaker AI Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the CLI or CloudFormation and the instance type parameter value is not passed.</p>
    /// </note>
    pub fn default_resource_spec(mut self, input: crate::types::ResourceSpec) -> Self {
        self.default_resource_spec = ::std::option::Option::Some(input);
        self
    }
    /// <p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker AI image used by the KernelGateway app.</p><note>
    /// <p>The Amazon SageMaker AI Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the CLI or CloudFormation and the instance type parameter value is not passed.</p>
    /// </note>
    pub fn set_default_resource_spec(mut self, input: ::std::option::Option<crate::types::ResourceSpec>) -> Self {
        self.default_resource_spec = input;
        self
    }
    /// <p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker AI image used by the KernelGateway app.</p><note>
    /// <p>The Amazon SageMaker AI Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the CLI or CloudFormation and the instance type parameter value is not passed.</p>
    /// </note>
    pub fn get_default_resource_spec(&self) -> &::std::option::Option<crate::types::ResourceSpec> {
        &self.default_resource_spec
    }
    /// Appends an item to `custom_images`.
    ///
    /// To override the contents of this collection use [`set_custom_images`](Self::set_custom_images).
    ///
    /// <p>A list of custom SageMaker AI images that are configured to run as a KernelGateway app.</p>
    /// <p>The maximum number of custom images are as follows.</p>
    /// <ul>
    /// <li>
    /// <p>On a domain level: 200</p></li>
    /// <li>
    /// <p>On a space level: 5</p></li>
    /// <li>
    /// <p>On a user profile level: 5</p></li>
    /// </ul>
    pub fn custom_images(mut self, input: crate::types::CustomImage) -> Self {
        let mut v = self.custom_images.unwrap_or_default();
        v.push(input);
        self.custom_images = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of custom SageMaker AI images that are configured to run as a KernelGateway app.</p>
    /// <p>The maximum number of custom images are as follows.</p>
    /// <ul>
    /// <li>
    /// <p>On a domain level: 200</p></li>
    /// <li>
    /// <p>On a space level: 5</p></li>
    /// <li>
    /// <p>On a user profile level: 5</p></li>
    /// </ul>
    pub fn set_custom_images(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CustomImage>>) -> Self {
        self.custom_images = input;
        self
    }
    /// <p>A list of custom SageMaker AI images that are configured to run as a KernelGateway app.</p>
    /// <p>The maximum number of custom images are as follows.</p>
    /// <ul>
    /// <li>
    /// <p>On a domain level: 200</p></li>
    /// <li>
    /// <p>On a space level: 5</p></li>
    /// <li>
    /// <p>On a user profile level: 5</p></li>
    /// </ul>
    pub fn get_custom_images(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CustomImage>> {
        &self.custom_images
    }
    /// Appends an item to `lifecycle_config_arns`.
    ///
    /// To override the contents of this collection use [`set_lifecycle_config_arns`](Self::set_lifecycle_config_arns).
    ///
    /// <p>The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p><note>
    /// <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p>
    /// </note>
    pub fn lifecycle_config_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.lifecycle_config_arns.unwrap_or_default();
        v.push(input.into());
        self.lifecycle_config_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p><note>
    /// <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p>
    /// </note>
    pub fn set_lifecycle_config_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.lifecycle_config_arns = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p><note>
    /// <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p>
    /// </note>
    pub fn get_lifecycle_config_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.lifecycle_config_arns
    }
    /// Consumes the builder and constructs a [`KernelGatewayAppSettings`](crate::types::KernelGatewayAppSettings).
    pub fn build(self) -> crate::types::KernelGatewayAppSettings {
        crate::types::KernelGatewayAppSettings {
            default_resource_spec: self.default_resource_spec,
            custom_images: self.custom_images,
            lifecycle_config_arns: self.lifecycle_config_arns,
        }
    }
}
