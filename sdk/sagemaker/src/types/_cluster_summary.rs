// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lists a summary of the properties of a SageMaker HyperPod cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterSummary {
    /// <p>The Amazon Resource Name (ARN) of the SageMaker HyperPod cluster.</p>
    pub cluster_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the SageMaker HyperPod cluster.</p>
    pub cluster_name: ::std::option::Option<::std::string::String>,
    /// <p>The time when the SageMaker HyperPod cluster is created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The status of the SageMaker HyperPod cluster.</p>
    pub cluster_status: ::std::option::Option<crate::types::ClusterStatus>,
    /// <p>A list of Amazon Resource Names (ARNs) of the training plans associated with this cluster.</p>
    /// <p>For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see <code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingPlan.html">CreateTrainingPlan</a> </code>.</p>
    pub training_plan_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ClusterSummary {
    /// <p>The Amazon Resource Name (ARN) of the SageMaker HyperPod cluster.</p>
    pub fn cluster_arn(&self) -> ::std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
    /// <p>The name of the SageMaker HyperPod cluster.</p>
    pub fn cluster_name(&self) -> ::std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>The time when the SageMaker HyperPod cluster is created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The status of the SageMaker HyperPod cluster.</p>
    pub fn cluster_status(&self) -> ::std::option::Option<&crate::types::ClusterStatus> {
        self.cluster_status.as_ref()
    }
    /// <p>A list of Amazon Resource Names (ARNs) of the training plans associated with this cluster.</p>
    /// <p>For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see <code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingPlan.html">CreateTrainingPlan</a> </code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.training_plan_arns.is_none()`.
    pub fn training_plan_arns(&self) -> &[::std::string::String] {
        self.training_plan_arns.as_deref().unwrap_or_default()
    }
}
impl ClusterSummary {
    /// Creates a new builder-style object to manufacture [`ClusterSummary`](crate::types::ClusterSummary).
    pub fn builder() -> crate::types::builders::ClusterSummaryBuilder {
        crate::types::builders::ClusterSummaryBuilder::default()
    }
}

/// A builder for [`ClusterSummary`](crate::types::ClusterSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClusterSummaryBuilder {
    pub(crate) cluster_arn: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) cluster_status: ::std::option::Option<crate::types::ClusterStatus>,
    pub(crate) training_plan_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ClusterSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the SageMaker HyperPod cluster.</p>
    /// This field is required.
    pub fn cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the SageMaker HyperPod cluster.</p>
    pub fn set_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the SageMaker HyperPod cluster.</p>
    pub fn get_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_arn
    }
    /// <p>The name of the SageMaker HyperPod cluster.</p>
    /// This field is required.
    pub fn cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the SageMaker HyperPod cluster.</p>
    pub fn set_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the SageMaker HyperPod cluster.</p>
    pub fn get_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_name
    }
    /// <p>The time when the SageMaker HyperPod cluster is created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the SageMaker HyperPod cluster is created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time when the SageMaker HyperPod cluster is created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The status of the SageMaker HyperPod cluster.</p>
    /// This field is required.
    pub fn cluster_status(mut self, input: crate::types::ClusterStatus) -> Self {
        self.cluster_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the SageMaker HyperPod cluster.</p>
    pub fn set_cluster_status(mut self, input: ::std::option::Option<crate::types::ClusterStatus>) -> Self {
        self.cluster_status = input;
        self
    }
    /// <p>The status of the SageMaker HyperPod cluster.</p>
    pub fn get_cluster_status(&self) -> &::std::option::Option<crate::types::ClusterStatus> {
        &self.cluster_status
    }
    /// Appends an item to `training_plan_arns`.
    ///
    /// To override the contents of this collection use [`set_training_plan_arns`](Self::set_training_plan_arns).
    ///
    /// <p>A list of Amazon Resource Names (ARNs) of the training plans associated with this cluster.</p>
    /// <p>For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see <code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingPlan.html">CreateTrainingPlan</a> </code>.</p>
    pub fn training_plan_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.training_plan_arns.unwrap_or_default();
        v.push(input.into());
        self.training_plan_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of Amazon Resource Names (ARNs) of the training plans associated with this cluster.</p>
    /// <p>For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see <code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingPlan.html">CreateTrainingPlan</a> </code>.</p>
    pub fn set_training_plan_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.training_plan_arns = input;
        self
    }
    /// <p>A list of Amazon Resource Names (ARNs) of the training plans associated with this cluster.</p>
    /// <p>For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see <code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingPlan.html">CreateTrainingPlan</a> </code>.</p>
    pub fn get_training_plan_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.training_plan_arns
    }
    /// Consumes the builder and constructs a [`ClusterSummary`](crate::types::ClusterSummary).
    pub fn build(self) -> crate::types::ClusterSummary {
        crate::types::ClusterSummary {
            cluster_arn: self.cluster_arn,
            cluster_name: self.cluster_name,
            creation_time: self.creation_time,
            cluster_status: self.cluster_status,
            training_plan_arns: self.training_plan_arns,
        }
    }
}
