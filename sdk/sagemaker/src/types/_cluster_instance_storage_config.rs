// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the configuration for attaching additional storage to the instances in the SageMaker HyperPod cluster instance group. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-release-notes.html#sagemaker-hyperpod-release-notes-20240620">SageMaker HyperPod release notes: June 20, 2024</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum ClusterInstanceStorageConfig {
    /// <p>Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to <code>/opt/sagemaker</code>.</p>
    EbsVolumeConfig(crate::types::ClusterEbsVolumeConfig),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl ClusterInstanceStorageConfig {
    #[allow(irrefutable_let_patterns)]
    /// Tries to convert the enum instance into [`EbsVolumeConfig`](crate::types::ClusterInstanceStorageConfig::EbsVolumeConfig), extracting the inner [`ClusterEbsVolumeConfig`](crate::types::ClusterEbsVolumeConfig).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_ebs_volume_config(&self) -> ::std::result::Result<&crate::types::ClusterEbsVolumeConfig, &Self> {
        if let ClusterInstanceStorageConfig::EbsVolumeConfig(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`EbsVolumeConfig`](crate::types::ClusterInstanceStorageConfig::EbsVolumeConfig).
    pub fn is_ebs_volume_config(&self) -> bool {
        self.as_ebs_volume_config().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
