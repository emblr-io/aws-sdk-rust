// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for running a SageMaker AI image as a KernelGateway app.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AppImageConfigDetails {
    /// <p>The ARN of the AppImageConfig.</p>
    pub app_image_config_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the AppImageConfig. Must be unique to your account.</p>
    pub app_image_config_name: ::std::option::Option<::std::string::String>,
    /// <p>When the AppImageConfig was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>When the AppImageConfig was last modified.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The configuration for the file system and kernels in the SageMaker AI image.</p>
    pub kernel_gateway_image_config: ::std::option::Option<crate::types::KernelGatewayImageConfig>,
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub jupyter_lab_app_image_config: ::std::option::Option<crate::types::JupyterLabAppImageConfig>,
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub code_editor_app_image_config: ::std::option::Option<crate::types::CodeEditorAppImageConfig>,
}
impl AppImageConfigDetails {
    /// <p>The ARN of the AppImageConfig.</p>
    pub fn app_image_config_arn(&self) -> ::std::option::Option<&str> {
        self.app_image_config_arn.as_deref()
    }
    /// <p>The name of the AppImageConfig. Must be unique to your account.</p>
    pub fn app_image_config_name(&self) -> ::std::option::Option<&str> {
        self.app_image_config_name.as_deref()
    }
    /// <p>When the AppImageConfig was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>When the AppImageConfig was last modified.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The configuration for the file system and kernels in the SageMaker AI image.</p>
    pub fn kernel_gateway_image_config(&self) -> ::std::option::Option<&crate::types::KernelGatewayImageConfig> {
        self.kernel_gateway_image_config.as_ref()
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn jupyter_lab_app_image_config(&self) -> ::std::option::Option<&crate::types::JupyterLabAppImageConfig> {
        self.jupyter_lab_app_image_config.as_ref()
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn code_editor_app_image_config(&self) -> ::std::option::Option<&crate::types::CodeEditorAppImageConfig> {
        self.code_editor_app_image_config.as_ref()
    }
}
impl AppImageConfigDetails {
    /// Creates a new builder-style object to manufacture [`AppImageConfigDetails`](crate::types::AppImageConfigDetails).
    pub fn builder() -> crate::types::builders::AppImageConfigDetailsBuilder {
        crate::types::builders::AppImageConfigDetailsBuilder::default()
    }
}

/// A builder for [`AppImageConfigDetails`](crate::types::AppImageConfigDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AppImageConfigDetailsBuilder {
    pub(crate) app_image_config_arn: ::std::option::Option<::std::string::String>,
    pub(crate) app_image_config_name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) kernel_gateway_image_config: ::std::option::Option<crate::types::KernelGatewayImageConfig>,
    pub(crate) jupyter_lab_app_image_config: ::std::option::Option<crate::types::JupyterLabAppImageConfig>,
    pub(crate) code_editor_app_image_config: ::std::option::Option<crate::types::CodeEditorAppImageConfig>,
}
impl AppImageConfigDetailsBuilder {
    /// <p>The ARN of the AppImageConfig.</p>
    pub fn app_image_config_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_image_config_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the AppImageConfig.</p>
    pub fn set_app_image_config_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_image_config_arn = input;
        self
    }
    /// <p>The ARN of the AppImageConfig.</p>
    pub fn get_app_image_config_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_image_config_arn
    }
    /// <p>The name of the AppImageConfig. Must be unique to your account.</p>
    pub fn app_image_config_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_image_config_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the AppImageConfig. Must be unique to your account.</p>
    pub fn set_app_image_config_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_image_config_name = input;
        self
    }
    /// <p>The name of the AppImageConfig. Must be unique to your account.</p>
    pub fn get_app_image_config_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_image_config_name
    }
    /// <p>When the AppImageConfig was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>When the AppImageConfig was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When the AppImageConfig was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>When the AppImageConfig was last modified.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>When the AppImageConfig was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>When the AppImageConfig was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The configuration for the file system and kernels in the SageMaker AI image.</p>
    pub fn kernel_gateway_image_config(mut self, input: crate::types::KernelGatewayImageConfig) -> Self {
        self.kernel_gateway_image_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the file system and kernels in the SageMaker AI image.</p>
    pub fn set_kernel_gateway_image_config(mut self, input: ::std::option::Option<crate::types::KernelGatewayImageConfig>) -> Self {
        self.kernel_gateway_image_config = input;
        self
    }
    /// <p>The configuration for the file system and kernels in the SageMaker AI image.</p>
    pub fn get_kernel_gateway_image_config(&self) -> &::std::option::Option<crate::types::KernelGatewayImageConfig> {
        &self.kernel_gateway_image_config
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn jupyter_lab_app_image_config(mut self, input: crate::types::JupyterLabAppImageConfig) -> Self {
        self.jupyter_lab_app_image_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn set_jupyter_lab_app_image_config(mut self, input: ::std::option::Option<crate::types::JupyterLabAppImageConfig>) -> Self {
        self.jupyter_lab_app_image_config = input;
        self
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn get_jupyter_lab_app_image_config(&self) -> &::std::option::Option<crate::types::JupyterLabAppImageConfig> {
        &self.jupyter_lab_app_image_config
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn code_editor_app_image_config(mut self, input: crate::types::CodeEditorAppImageConfig) -> Self {
        self.code_editor_app_image_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn set_code_editor_app_image_config(mut self, input: ::std::option::Option<crate::types::CodeEditorAppImageConfig>) -> Self {
        self.code_editor_app_image_config = input;
        self
    }
    /// <p>The configuration for the file system and the runtime, such as the environment variables and entry point.</p>
    pub fn get_code_editor_app_image_config(&self) -> &::std::option::Option<crate::types::CodeEditorAppImageConfig> {
        &self.code_editor_app_image_config
    }
    /// Consumes the builder and constructs a [`AppImageConfigDetails`](crate::types::AppImageConfigDetails).
    pub fn build(self) -> crate::types::AppImageConfigDetails {
        crate::types::AppImageConfigDetails {
            app_image_config_arn: self.app_image_config_arn,
            app_image_config_name: self.app_image_config_name,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            kernel_gateway_image_config: self.kernel_gateway_image_config,
            jupyter_lab_app_image_config: self.jupyter_lab_app_image_config,
            code_editor_app_image_config: self.code_editor_app_image_config,
        }
    }
}
