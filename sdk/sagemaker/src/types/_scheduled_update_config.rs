// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration object of the schedule that SageMaker follows when updating the AMI.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScheduledUpdateConfig {
    /// <p>A cron expression that specifies the schedule that SageMaker follows when updating the AMI.</p>
    pub schedule_expression: ::std::option::Option<::std::string::String>,
    /// <p>The configuration to use when updating the AMI versions.</p>
    pub deployment_config: ::std::option::Option<crate::types::DeploymentConfiguration>,
}
impl ScheduledUpdateConfig {
    /// <p>A cron expression that specifies the schedule that SageMaker follows when updating the AMI.</p>
    pub fn schedule_expression(&self) -> ::std::option::Option<&str> {
        self.schedule_expression.as_deref()
    }
    /// <p>The configuration to use when updating the AMI versions.</p>
    pub fn deployment_config(&self) -> ::std::option::Option<&crate::types::DeploymentConfiguration> {
        self.deployment_config.as_ref()
    }
}
impl ScheduledUpdateConfig {
    /// Creates a new builder-style object to manufacture [`ScheduledUpdateConfig`](crate::types::ScheduledUpdateConfig).
    pub fn builder() -> crate::types::builders::ScheduledUpdateConfigBuilder {
        crate::types::builders::ScheduledUpdateConfigBuilder::default()
    }
}

/// A builder for [`ScheduledUpdateConfig`](crate::types::ScheduledUpdateConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ScheduledUpdateConfigBuilder {
    pub(crate) schedule_expression: ::std::option::Option<::std::string::String>,
    pub(crate) deployment_config: ::std::option::Option<crate::types::DeploymentConfiguration>,
}
impl ScheduledUpdateConfigBuilder {
    /// <p>A cron expression that specifies the schedule that SageMaker follows when updating the AMI.</p>
    /// This field is required.
    pub fn schedule_expression(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.schedule_expression = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A cron expression that specifies the schedule that SageMaker follows when updating the AMI.</p>
    pub fn set_schedule_expression(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.schedule_expression = input;
        self
    }
    /// <p>A cron expression that specifies the schedule that SageMaker follows when updating the AMI.</p>
    pub fn get_schedule_expression(&self) -> &::std::option::Option<::std::string::String> {
        &self.schedule_expression
    }
    /// <p>The configuration to use when updating the AMI versions.</p>
    pub fn deployment_config(mut self, input: crate::types::DeploymentConfiguration) -> Self {
        self.deployment_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration to use when updating the AMI versions.</p>
    pub fn set_deployment_config(mut self, input: ::std::option::Option<crate::types::DeploymentConfiguration>) -> Self {
        self.deployment_config = input;
        self
    }
    /// <p>The configuration to use when updating the AMI versions.</p>
    pub fn get_deployment_config(&self) -> &::std::option::Option<crate::types::DeploymentConfiguration> {
        &self.deployment_config
    }
    /// Consumes the builder and constructs a [`ScheduledUpdateConfig`](crate::types::ScheduledUpdateConfig).
    pub fn build(self) -> crate::types::ScheduledUpdateConfig {
        crate::types::ScheduledUpdateConfig {
            schedule_expression: self.schedule_expression,
            deployment_config: self.deployment_config,
        }
    }
}
