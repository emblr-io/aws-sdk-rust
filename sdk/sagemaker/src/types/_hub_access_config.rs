// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for a private hub model reference that points to a public SageMaker JumpStart model.</p>
/// <p>For more information about private hubs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/jumpstart-curated-hubs.html">Private curated hubs for foundation model access control in JumpStart</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HubAccessConfig {
    /// <p>The ARN of your private model hub content. This should be a <code>ModelReference</code> resource type that points to a SageMaker JumpStart public hub model.</p>
    pub hub_content_arn: ::std::option::Option<::std::string::String>,
}
impl HubAccessConfig {
    /// <p>The ARN of your private model hub content. This should be a <code>ModelReference</code> resource type that points to a SageMaker JumpStart public hub model.</p>
    pub fn hub_content_arn(&self) -> ::std::option::Option<&str> {
        self.hub_content_arn.as_deref()
    }
}
impl HubAccessConfig {
    /// Creates a new builder-style object to manufacture [`HubAccessConfig`](crate::types::HubAccessConfig).
    pub fn builder() -> crate::types::builders::HubAccessConfigBuilder {
        crate::types::builders::HubAccessConfigBuilder::default()
    }
}

/// A builder for [`HubAccessConfig`](crate::types::HubAccessConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HubAccessConfigBuilder {
    pub(crate) hub_content_arn: ::std::option::Option<::std::string::String>,
}
impl HubAccessConfigBuilder {
    /// <p>The ARN of your private model hub content. This should be a <code>ModelReference</code> resource type that points to a SageMaker JumpStart public hub model.</p>
    /// This field is required.
    pub fn hub_content_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hub_content_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of your private model hub content. This should be a <code>ModelReference</code> resource type that points to a SageMaker JumpStart public hub model.</p>
    pub fn set_hub_content_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hub_content_arn = input;
        self
    }
    /// <p>The ARN of your private model hub content. This should be a <code>ModelReference</code> resource type that points to a SageMaker JumpStart public hub model.</p>
    pub fn get_hub_content_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.hub_content_arn
    }
    /// Consumes the builder and constructs a [`HubAccessConfig`](crate::types::HubAccessConfig).
    pub fn build(self) -> crate::types::HubAccessConfig {
        crate::types::HubAccessConfig {
            hub_content_arn: self.hub_content_arn,
        }
    }
}
