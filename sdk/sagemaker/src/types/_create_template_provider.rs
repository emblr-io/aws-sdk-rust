// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configuration details for a template provider. Only one type of template provider can be specified.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateTemplateProvider {
    /// <p>The CloudFormation template provider configuration for creating infrastructure resources.</p>
    pub cfn_template_provider: ::std::option::Option<crate::types::CfnCreateTemplateProvider>,
}
impl CreateTemplateProvider {
    /// <p>The CloudFormation template provider configuration for creating infrastructure resources.</p>
    pub fn cfn_template_provider(&self) -> ::std::option::Option<&crate::types::CfnCreateTemplateProvider> {
        self.cfn_template_provider.as_ref()
    }
}
impl CreateTemplateProvider {
    /// Creates a new builder-style object to manufacture [`CreateTemplateProvider`](crate::types::CreateTemplateProvider).
    pub fn builder() -> crate::types::builders::CreateTemplateProviderBuilder {
        crate::types::builders::CreateTemplateProviderBuilder::default()
    }
}

/// A builder for [`CreateTemplateProvider`](crate::types::CreateTemplateProvider).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateTemplateProviderBuilder {
    pub(crate) cfn_template_provider: ::std::option::Option<crate::types::CfnCreateTemplateProvider>,
}
impl CreateTemplateProviderBuilder {
    /// <p>The CloudFormation template provider configuration for creating infrastructure resources.</p>
    pub fn cfn_template_provider(mut self, input: crate::types::CfnCreateTemplateProvider) -> Self {
        self.cfn_template_provider = ::std::option::Option::Some(input);
        self
    }
    /// <p>The CloudFormation template provider configuration for creating infrastructure resources.</p>
    pub fn set_cfn_template_provider(mut self, input: ::std::option::Option<crate::types::CfnCreateTemplateProvider>) -> Self {
        self.cfn_template_provider = input;
        self
    }
    /// <p>The CloudFormation template provider configuration for creating infrastructure resources.</p>
    pub fn get_cfn_template_provider(&self) -> &::std::option::Option<crate::types::CfnCreateTemplateProvider> {
        &self.cfn_template_provider
    }
    /// Consumes the builder and constructs a [`CreateTemplateProvider`](crate::types::CreateTemplateProvider).
    pub fn build(self) -> crate::types::CreateTemplateProvider {
        crate::types::CreateTemplateProvider {
            cfn_template_provider: self.cfn_template_provider,
        }
    }
}
