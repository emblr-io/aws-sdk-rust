// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The model card associated with the model package. Since <code>ModelPackageModelCard</code> is tied to a model package, it is a specific usage of a model card and its schema is simplified compared to the schema of <code>ModelCard</code>. The <code>ModelPackageModelCard</code> schema does not include <code>model_package_details</code>, and <code>model_overview</code> is composed of the <code>model_creator</code> and <code>model_artifact</code> properties. For more information about the model package model card schema, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model package model card schema</a>. For more information about the model card associated with the model package, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html">View the Details of a Model Version</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ModelPackageModelCard {
    /// <p>The content of the model card. The content must follow the schema described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model Package Model Card Schema</a>.</p>
    pub model_card_content: ::std::option::Option<::std::string::String>,
    /// <p>The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.</p>
    /// <ul>
    /// <li>
    /// <p><code>Draft</code>: The model card is a work in progress.</p></li>
    /// <li>
    /// <p><code>PendingReview</code>: The model card is pending review.</p></li>
    /// <li>
    /// <p><code>Approved</code>: The model card is approved.</p></li>
    /// <li>
    /// <p><code>Archived</code>: The model card is archived. No more updates can be made to the model card content. If you try to update the model card content, you will receive the message <code>Model Card is in Archived state</code>.</p></li>
    /// </ul>
    pub model_card_status: ::std::option::Option<crate::types::ModelCardStatus>,
}
impl ModelPackageModelCard {
    /// <p>The content of the model card. The content must follow the schema described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model Package Model Card Schema</a>.</p>
    pub fn model_card_content(&self) -> ::std::option::Option<&str> {
        self.model_card_content.as_deref()
    }
    /// <p>The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.</p>
    /// <ul>
    /// <li>
    /// <p><code>Draft</code>: The model card is a work in progress.</p></li>
    /// <li>
    /// <p><code>PendingReview</code>: The model card is pending review.</p></li>
    /// <li>
    /// <p><code>Approved</code>: The model card is approved.</p></li>
    /// <li>
    /// <p><code>Archived</code>: The model card is archived. No more updates can be made to the model card content. If you try to update the model card content, you will receive the message <code>Model Card is in Archived state</code>.</p></li>
    /// </ul>
    pub fn model_card_status(&self) -> ::std::option::Option<&crate::types::ModelCardStatus> {
        self.model_card_status.as_ref()
    }
}
impl ::std::fmt::Debug for ModelPackageModelCard {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ModelPackageModelCard");
        formatter.field("model_card_content", &"*** Sensitive Data Redacted ***");
        formatter.field("model_card_status", &self.model_card_status);
        formatter.finish()
    }
}
impl ModelPackageModelCard {
    /// Creates a new builder-style object to manufacture [`ModelPackageModelCard`](crate::types::ModelPackageModelCard).
    pub fn builder() -> crate::types::builders::ModelPackageModelCardBuilder {
        crate::types::builders::ModelPackageModelCardBuilder::default()
    }
}

/// A builder for [`ModelPackageModelCard`](crate::types::ModelPackageModelCard).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct ModelPackageModelCardBuilder {
    pub(crate) model_card_content: ::std::option::Option<::std::string::String>,
    pub(crate) model_card_status: ::std::option::Option<crate::types::ModelCardStatus>,
}
impl ModelPackageModelCardBuilder {
    /// <p>The content of the model card. The content must follow the schema described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model Package Model Card Schema</a>.</p>
    pub fn model_card_content(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_card_content = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The content of the model card. The content must follow the schema described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model Package Model Card Schema</a>.</p>
    pub fn set_model_card_content(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_card_content = input;
        self
    }
    /// <p>The content of the model card. The content must follow the schema described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-registry-details.html#model-card-schema">Model Package Model Card Schema</a>.</p>
    pub fn get_model_card_content(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_card_content
    }
    /// <p>The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.</p>
    /// <ul>
    /// <li>
    /// <p><code>Draft</code>: The model card is a work in progress.</p></li>
    /// <li>
    /// <p><code>PendingReview</code>: The model card is pending review.</p></li>
    /// <li>
    /// <p><code>Approved</code>: The model card is approved.</p></li>
    /// <li>
    /// <p><code>Archived</code>: The model card is archived. No more updates can be made to the model card content. If you try to update the model card content, you will receive the message <code>Model Card is in Archived state</code>.</p></li>
    /// </ul>
    pub fn model_card_status(mut self, input: crate::types::ModelCardStatus) -> Self {
        self.model_card_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.</p>
    /// <ul>
    /// <li>
    /// <p><code>Draft</code>: The model card is a work in progress.</p></li>
    /// <li>
    /// <p><code>PendingReview</code>: The model card is pending review.</p></li>
    /// <li>
    /// <p><code>Approved</code>: The model card is approved.</p></li>
    /// <li>
    /// <p><code>Archived</code>: The model card is archived. No more updates can be made to the model card content. If you try to update the model card content, you will receive the message <code>Model Card is in Archived state</code>.</p></li>
    /// </ul>
    pub fn set_model_card_status(mut self, input: ::std::option::Option<crate::types::ModelCardStatus>) -> Self {
        self.model_card_status = input;
        self
    }
    /// <p>The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.</p>
    /// <ul>
    /// <li>
    /// <p><code>Draft</code>: The model card is a work in progress.</p></li>
    /// <li>
    /// <p><code>PendingReview</code>: The model card is pending review.</p></li>
    /// <li>
    /// <p><code>Approved</code>: The model card is approved.</p></li>
    /// <li>
    /// <p><code>Archived</code>: The model card is archived. No more updates can be made to the model card content. If you try to update the model card content, you will receive the message <code>Model Card is in Archived state</code>.</p></li>
    /// </ul>
    pub fn get_model_card_status(&self) -> &::std::option::Option<crate::types::ModelCardStatus> {
        &self.model_card_status
    }
    /// Consumes the builder and constructs a [`ModelPackageModelCard`](crate::types::ModelPackageModelCard).
    pub fn build(self) -> crate::types::ModelPackageModelCard {
        crate::types::ModelPackageModelCard {
            model_card_content: self.model_card_content,
            model_card_status: self.model_card_status,
        }
    }
}
impl ::std::fmt::Debug for ModelPackageModelCardBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ModelPackageModelCardBuilder");
        formatter.field("model_card_content", &"*** Sensitive Data Redacted ***");
        formatter.field("model_card_status", &self.model_card_status);
        formatter.finish()
    }
}
