// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateQAppFromUserInput {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the Q App to disassociate from the user.</p>
    pub app_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateQAppFromUserInput {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The unique identifier of the Q App to disassociate from the user.</p>
    pub fn app_id(&self) -> ::std::option::Option<&str> {
        self.app_id.as_deref()
    }
}
impl DisassociateQAppFromUserInput {
    /// Creates a new builder-style object to manufacture [`DisassociateQAppFromUserInput`](crate::operation::disassociate_q_app_from_user::DisassociateQAppFromUserInput).
    pub fn builder() -> crate::operation::disassociate_q_app_from_user::builders::DisassociateQAppFromUserInputBuilder {
        crate::operation::disassociate_q_app_from_user::builders::DisassociateQAppFromUserInputBuilder::default()
    }
}

/// A builder for [`DisassociateQAppFromUserInput`](crate::operation::disassociate_q_app_from_user::DisassociateQAppFromUserInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DisassociateQAppFromUserInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) app_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateQAppFromUserInputBuilder {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The unique identifier of the Q App to disassociate from the user.</p>
    /// This field is required.
    pub fn app_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Q App to disassociate from the user.</p>
    pub fn set_app_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_id = input;
        self
    }
    /// <p>The unique identifier of the Q App to disassociate from the user.</p>
    pub fn get_app_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_id
    }
    /// Consumes the builder and constructs a [`DisassociateQAppFromUserInput`](crate::operation::disassociate_q_app_from_user::DisassociateQAppFromUserInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_q_app_from_user::DisassociateQAppFromUserInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::disassociate_q_app_from_user::DisassociateQAppFromUserInput {
            instance_id: self.instance_id,
            app_id: self.app_id,
        })
    }
}
