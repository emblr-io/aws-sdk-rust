// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the current state of the canary.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CanaryStatus {
    /// <p>The current state of the canary.</p>
    pub state: ::std::option::Option<crate::types::CanaryState>,
    /// <p>If the canary creation or update failed, this field provides details on the failure.</p>
    pub state_reason: ::std::option::Option<::std::string::String>,
    /// <p>If the canary creation or update failed, this field displays the reason code.</p>
    pub state_reason_code: ::std::option::Option<crate::types::CanaryStateReasonCode>,
}
impl CanaryStatus {
    /// <p>The current state of the canary.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::CanaryState> {
        self.state.as_ref()
    }
    /// <p>If the canary creation or update failed, this field provides details on the failure.</p>
    pub fn state_reason(&self) -> ::std::option::Option<&str> {
        self.state_reason.as_deref()
    }
    /// <p>If the canary creation or update failed, this field displays the reason code.</p>
    pub fn state_reason_code(&self) -> ::std::option::Option<&crate::types::CanaryStateReasonCode> {
        self.state_reason_code.as_ref()
    }
}
impl CanaryStatus {
    /// Creates a new builder-style object to manufacture [`CanaryStatus`](crate::types::CanaryStatus).
    pub fn builder() -> crate::types::builders::CanaryStatusBuilder {
        crate::types::builders::CanaryStatusBuilder::default()
    }
}

/// A builder for [`CanaryStatus`](crate::types::CanaryStatus).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CanaryStatusBuilder {
    pub(crate) state: ::std::option::Option<crate::types::CanaryState>,
    pub(crate) state_reason: ::std::option::Option<::std::string::String>,
    pub(crate) state_reason_code: ::std::option::Option<crate::types::CanaryStateReasonCode>,
}
impl CanaryStatusBuilder {
    /// <p>The current state of the canary.</p>
    pub fn state(mut self, input: crate::types::CanaryState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current state of the canary.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::CanaryState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The current state of the canary.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::CanaryState> {
        &self.state
    }
    /// <p>If the canary creation or update failed, this field provides details on the failure.</p>
    pub fn state_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the canary creation or update failed, this field provides details on the failure.</p>
    pub fn set_state_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_reason = input;
        self
    }
    /// <p>If the canary creation or update failed, this field provides details on the failure.</p>
    pub fn get_state_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_reason
    }
    /// <p>If the canary creation or update failed, this field displays the reason code.</p>
    pub fn state_reason_code(mut self, input: crate::types::CanaryStateReasonCode) -> Self {
        self.state_reason_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>If the canary creation or update failed, this field displays the reason code.</p>
    pub fn set_state_reason_code(mut self, input: ::std::option::Option<crate::types::CanaryStateReasonCode>) -> Self {
        self.state_reason_code = input;
        self
    }
    /// <p>If the canary creation or update failed, this field displays the reason code.</p>
    pub fn get_state_reason_code(&self) -> &::std::option::Option<crate::types::CanaryStateReasonCode> {
        &self.state_reason_code
    }
    /// Consumes the builder and constructs a [`CanaryStatus`](crate::types::CanaryStatus).
    pub fn build(self) -> crate::types::CanaryStatus {
        crate::types::CanaryStatus {
            state: self.state,
            state_reason: self.state_reason,
            state_reason_code: self.state_reason_code,
        }
    }
}
