// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This structure contains the start and end times of a single canary run.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CanaryRunTimeline {
    /// <p>The start time of the run.</p>
    pub started: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The end time of the run.</p>
    pub completed: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time at which the metrics will be generated for this run or retries.</p>
    pub metric_timestamp_for_run_and_retries: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CanaryRunTimeline {
    /// <p>The start time of the run.</p>
    pub fn started(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.started.as_ref()
    }
    /// <p>The end time of the run.</p>
    pub fn completed(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.completed.as_ref()
    }
    /// <p>The time at which the metrics will be generated for this run or retries.</p>
    pub fn metric_timestamp_for_run_and_retries(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.metric_timestamp_for_run_and_retries.as_ref()
    }
}
impl CanaryRunTimeline {
    /// Creates a new builder-style object to manufacture [`CanaryRunTimeline`](crate::types::CanaryRunTimeline).
    pub fn builder() -> crate::types::builders::CanaryRunTimelineBuilder {
        crate::types::builders::CanaryRunTimelineBuilder::default()
    }
}

/// A builder for [`CanaryRunTimeline`](crate::types::CanaryRunTimeline).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CanaryRunTimelineBuilder {
    pub(crate) started: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completed: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) metric_timestamp_for_run_and_retries: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CanaryRunTimelineBuilder {
    /// <p>The start time of the run.</p>
    pub fn started(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.started = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start time of the run.</p>
    pub fn set_started(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.started = input;
        self
    }
    /// <p>The start time of the run.</p>
    pub fn get_started(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.started
    }
    /// <p>The end time of the run.</p>
    pub fn completed(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completed = ::std::option::Option::Some(input);
        self
    }
    /// <p>The end time of the run.</p>
    pub fn set_completed(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completed = input;
        self
    }
    /// <p>The end time of the run.</p>
    pub fn get_completed(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completed
    }
    /// <p>The time at which the metrics will be generated for this run or retries.</p>
    pub fn metric_timestamp_for_run_and_retries(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.metric_timestamp_for_run_and_retries = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the metrics will be generated for this run or retries.</p>
    pub fn set_metric_timestamp_for_run_and_retries(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.metric_timestamp_for_run_and_retries = input;
        self
    }
    /// <p>The time at which the metrics will be generated for this run or retries.</p>
    pub fn get_metric_timestamp_for_run_and_retries(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.metric_timestamp_for_run_and_retries
    }
    /// Consumes the builder and constructs a [`CanaryRunTimeline`](crate::types::CanaryRunTimeline).
    pub fn build(self) -> crate::types::CanaryRunTimeline {
        crate::types::CanaryRunTimeline {
            started: self.started,
            completed: self.completed,
            metric_timestamp_for_run_and_retries: self.metric_timestamp_for_run_and_retries,
        }
    }
}
