// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetIdentitySourceOutput {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub identity_source_type: ::std::option::Option<crate::types::IdentitySourceType>,
    /// <p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub identity_source_parameters: ::std::option::Option<crate::types::IdentitySourceParametersForGet>,
    /// <p>Amazon Resource Name (ARN) for the identity source.</p>
    pub identity_source_arn: ::std::option::Option<::std::string::String>,
    /// <p>Timestamp when the identity source was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Status for the identity source. For example, if the identity source is <code>ACTIVE</code>.</p>
    pub status: ::std::option::Option<crate::types::IdentitySourceStatus>,
    /// <p>Status code of the identity source.</p>
    pub status_code: ::std::option::Option<crate::types::IdentitySourceStatusCode>,
    /// <p>Message describing the status for the identity source.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetIdentitySourceOutput {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_type(&self) -> ::std::option::Option<&crate::types::IdentitySourceType> {
        self.identity_source_type.as_ref()
    }
    /// <p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_parameters(&self) -> ::std::option::Option<&crate::types::IdentitySourceParametersForGet> {
        self.identity_source_parameters.as_ref()
    }
    /// <p>Amazon Resource Name (ARN) for the identity source.</p>
    pub fn identity_source_arn(&self) -> ::std::option::Option<&str> {
        self.identity_source_arn.as_deref()
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Status for the identity source. For example, if the identity source is <code>ACTIVE</code>.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::IdentitySourceStatus> {
        self.status.as_ref()
    }
    /// <p>Status code of the identity source.</p>
    pub fn status_code(&self) -> ::std::option::Option<&crate::types::IdentitySourceStatusCode> {
        self.status_code.as_ref()
    }
    /// <p>Message describing the status for the identity source.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetIdentitySourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetIdentitySourceOutput {
    /// Creates a new builder-style object to manufacture [`GetIdentitySourceOutput`](crate::operation::get_identity_source::GetIdentitySourceOutput).
    pub fn builder() -> crate::operation::get_identity_source::builders::GetIdentitySourceOutputBuilder {
        crate::operation::get_identity_source::builders::GetIdentitySourceOutputBuilder::default()
    }
}

/// A builder for [`GetIdentitySourceOutput`](crate::operation::get_identity_source::GetIdentitySourceOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetIdentitySourceOutputBuilder {
    pub(crate) identity_source_type: ::std::option::Option<crate::types::IdentitySourceType>,
    pub(crate) identity_source_parameters: ::std::option::Option<crate::types::IdentitySourceParametersForGet>,
    pub(crate) identity_source_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::IdentitySourceStatus>,
    pub(crate) status_code: ::std::option::Option<crate::types::IdentitySourceStatusCode>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetIdentitySourceOutputBuilder {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_type(mut self, input: crate::types::IdentitySourceType) -> Self {
        self.identity_source_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn set_identity_source_type(mut self, input: ::std::option::Option<crate::types::IdentitySourceType>) -> Self {
        self.identity_source_type = input;
        self
    }
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn get_identity_source_type(&self) -> &::std::option::Option<crate::types::IdentitySourceType> {
        &self.identity_source_type
    }
    /// <p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_parameters(mut self, input: crate::types::IdentitySourceParametersForGet) -> Self {
        self.identity_source_parameters = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn set_identity_source_parameters(mut self, input: ::std::option::Option<crate::types::IdentitySourceParametersForGet>) -> Self {
        self.identity_source_parameters = input;
        self
    }
    /// <p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn get_identity_source_parameters(&self) -> &::std::option::Option<crate::types::IdentitySourceParametersForGet> {
        &self.identity_source_parameters
    }
    /// <p>Amazon Resource Name (ARN) for the identity source.</p>
    pub fn identity_source_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identity_source_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) for the identity source.</p>
    pub fn set_identity_source_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identity_source_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) for the identity source.</p>
    pub fn get_identity_source_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.identity_source_arn
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Status for the identity source. For example, if the identity source is <code>ACTIVE</code>.</p>
    pub fn status(mut self, input: crate::types::IdentitySourceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status for the identity source. For example, if the identity source is <code>ACTIVE</code>.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::IdentitySourceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Status for the identity source. For example, if the identity source is <code>ACTIVE</code>.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::IdentitySourceStatus> {
        &self.status
    }
    /// <p>Status code of the identity source.</p>
    pub fn status_code(mut self, input: crate::types::IdentitySourceStatusCode) -> Self {
        self.status_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status code of the identity source.</p>
    pub fn set_status_code(mut self, input: ::std::option::Option<crate::types::IdentitySourceStatusCode>) -> Self {
        self.status_code = input;
        self
    }
    /// <p>Status code of the identity source.</p>
    pub fn get_status_code(&self) -> &::std::option::Option<crate::types::IdentitySourceStatusCode> {
        &self.status_code
    }
    /// <p>Message describing the status for the identity source.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Message describing the status for the identity source.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>Message describing the status for the identity source.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetIdentitySourceOutput`](crate::operation::get_identity_source::GetIdentitySourceOutput).
    pub fn build(self) -> crate::operation::get_identity_source::GetIdentitySourceOutput {
        crate::operation::get_identity_source::GetIdentitySourceOutput {
            identity_source_type: self.identity_source_type,
            identity_source_parameters: self.identity_source_parameters,
            identity_source_arn: self.identity_source_arn,
            creation_time: self.creation_time,
            status: self.status,
            status_code: self.status_code,
            status_message: self.status_message,
            _request_id: self._request_id,
        }
    }
}
