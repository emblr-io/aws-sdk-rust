// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartActiveApprovalTeamDeletionOutput {
    /// <p>Timestamp when the deletion process is scheduled to complete.</p>
    pub deletion_completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Timestamp when the deletion process was initiated.</p>
    pub deletion_start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl StartActiveApprovalTeamDeletionOutput {
    /// <p>Timestamp when the deletion process is scheduled to complete.</p>
    pub fn deletion_completion_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.deletion_completion_time.as_ref()
    }
    /// <p>Timestamp when the deletion process was initiated.</p>
    pub fn deletion_start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.deletion_start_time.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for StartActiveApprovalTeamDeletionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartActiveApprovalTeamDeletionOutput {
    /// Creates a new builder-style object to manufacture [`StartActiveApprovalTeamDeletionOutput`](crate::operation::start_active_approval_team_deletion::StartActiveApprovalTeamDeletionOutput).
    pub fn builder() -> crate::operation::start_active_approval_team_deletion::builders::StartActiveApprovalTeamDeletionOutputBuilder {
        crate::operation::start_active_approval_team_deletion::builders::StartActiveApprovalTeamDeletionOutputBuilder::default()
    }
}

/// A builder for [`StartActiveApprovalTeamDeletionOutput`](crate::operation::start_active_approval_team_deletion::StartActiveApprovalTeamDeletionOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartActiveApprovalTeamDeletionOutputBuilder {
    pub(crate) deletion_completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) deletion_start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl StartActiveApprovalTeamDeletionOutputBuilder {
    /// <p>Timestamp when the deletion process is scheduled to complete.</p>
    pub fn deletion_completion_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.deletion_completion_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp when the deletion process is scheduled to complete.</p>
    pub fn set_deletion_completion_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.deletion_completion_time = input;
        self
    }
    /// <p>Timestamp when the deletion process is scheduled to complete.</p>
    pub fn get_deletion_completion_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.deletion_completion_time
    }
    /// <p>Timestamp when the deletion process was initiated.</p>
    pub fn deletion_start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.deletion_start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp when the deletion process was initiated.</p>
    pub fn set_deletion_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.deletion_start_time = input;
        self
    }
    /// <p>Timestamp when the deletion process was initiated.</p>
    pub fn get_deletion_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.deletion_start_time
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartActiveApprovalTeamDeletionOutput`](crate::operation::start_active_approval_team_deletion::StartActiveApprovalTeamDeletionOutput).
    pub fn build(self) -> crate::operation::start_active_approval_team_deletion::StartActiveApprovalTeamDeletionOutput {
        crate::operation::start_active_approval_team_deletion::StartActiveApprovalTeamDeletionOutput {
            deletion_completion_time: self.deletion_completion_time,
            deletion_start_time: self.deletion_start_time,
            _request_id: self._request_id,
        }
    }
}
