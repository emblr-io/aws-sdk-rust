// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateIdentitySourceOutput {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub identity_source_type: ::std::option::Option<crate::types::IdentitySourceType>,
    /// <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    pub identity_source_arn: ::std::option::Option<::std::string::String>,
    /// <p>Timestamp when the identity source was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateIdentitySourceOutput {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_type(&self) -> ::std::option::Option<&crate::types::IdentitySourceType> {
        self.identity_source_type.as_ref()
    }
    /// <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    pub fn identity_source_arn(&self) -> ::std::option::Option<&str> {
        self.identity_source_arn.as_deref()
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for CreateIdentitySourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateIdentitySourceOutput {
    /// Creates a new builder-style object to manufacture [`CreateIdentitySourceOutput`](crate::operation::create_identity_source::CreateIdentitySourceOutput).
    pub fn builder() -> crate::operation::create_identity_source::builders::CreateIdentitySourceOutputBuilder {
        crate::operation::create_identity_source::builders::CreateIdentitySourceOutputBuilder::default()
    }
}

/// A builder for [`CreateIdentitySourceOutput`](crate::operation::create_identity_source::CreateIdentitySourceOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateIdentitySourceOutputBuilder {
    pub(crate) identity_source_type: ::std::option::Option<crate::types::IdentitySourceType>,
    pub(crate) identity_source_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateIdentitySourceOutputBuilder {
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn identity_source_type(mut self, input: crate::types::IdentitySourceType) -> Self {
        self.identity_source_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn set_identity_source_type(mut self, input: ::std::option::Option<crate::types::IdentitySourceType>) -> Self {
        self.identity_source_type = input;
        self
    }
    /// <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    pub fn get_identity_source_type(&self) -> &::std::option::Option<crate::types::IdentitySourceType> {
        &self.identity_source_type
    }
    /// <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    pub fn identity_source_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identity_source_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    pub fn set_identity_source_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identity_source_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    pub fn get_identity_source_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.identity_source_arn
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Timestamp when the identity source was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateIdentitySourceOutput`](crate::operation::create_identity_source::CreateIdentitySourceOutput).
    pub fn build(self) -> crate::operation::create_identity_source::CreateIdentitySourceOutput {
        crate::operation::create_identity_source::CreateIdentitySourceOutput {
            identity_source_type: self.identity_source_type,
            identity_source_arn: self.identity_source_arn,
            creation_time: self.creation_time,
            _request_id: self._request_id,
        }
    }
}
