// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the Amazon Resource Name (ARN) for a policy. Policies define what operations a team that define the permissions for team resources.</p>
/// <p>The protected operation for a service integration might require specific permissions. For more information, see <a href="https://docs.aws.amazon.com/mpa/latest/userguide/mpa-integrations.html">How other services work with Multi-party approval</a> in the <i>Multi-party approval User Guide</i>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PolicyReference {
    /// <p>Amazon Resource Name (ARN) for the policy.</p>
    pub policy_arn: ::std::string::String,
}
impl PolicyReference {
    /// <p>Amazon Resource Name (ARN) for the policy.</p>
    pub fn policy_arn(&self) -> &str {
        use std::ops::Deref;
        self.policy_arn.deref()
    }
}
impl PolicyReference {
    /// Creates a new builder-style object to manufacture [`PolicyReference`](crate::types::PolicyReference).
    pub fn builder() -> crate::types::builders::PolicyReferenceBuilder {
        crate::types::builders::PolicyReferenceBuilder::default()
    }
}

/// A builder for [`PolicyReference`](crate::types::PolicyReference).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PolicyReferenceBuilder {
    pub(crate) policy_arn: ::std::option::Option<::std::string::String>,
}
impl PolicyReferenceBuilder {
    /// <p>Amazon Resource Name (ARN) for the policy.</p>
    /// This field is required.
    pub fn policy_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) for the policy.</p>
    pub fn set_policy_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) for the policy.</p>
    pub fn get_policy_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_arn
    }
    /// Consumes the builder and constructs a [`PolicyReference`](crate::types::PolicyReference).
    /// This method will fail if any of the following fields are not set:
    /// - [`policy_arn`](crate::types::builders::PolicyReferenceBuilder::policy_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::PolicyReference, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PolicyReference {
            policy_arn: self.policy_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "policy_arn",
                    "policy_arn was not specified but it is required when building PolicyReference",
                )
            })?,
        })
    }
}
