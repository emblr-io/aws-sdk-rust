// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about a policy for a resource.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListResourcePoliciesResponseResourcePolicy {
    /// <p>Amazon Resource Name (ARN) for policy.</p>
    pub policy_arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of policy.</p>
    pub policy_type: ::std::option::Option<crate::types::PolicyType>,
    /// <p>Name of the policy.</p>
    pub policy_name: ::std::option::Option<::std::string::String>,
}
impl ListResourcePoliciesResponseResourcePolicy {
    /// <p>Amazon Resource Name (ARN) for policy.</p>
    pub fn policy_arn(&self) -> ::std::option::Option<&str> {
        self.policy_arn.as_deref()
    }
    /// <p>The type of policy.</p>
    pub fn policy_type(&self) -> ::std::option::Option<&crate::types::PolicyType> {
        self.policy_type.as_ref()
    }
    /// <p>Name of the policy.</p>
    pub fn policy_name(&self) -> ::std::option::Option<&str> {
        self.policy_name.as_deref()
    }
}
impl ListResourcePoliciesResponseResourcePolicy {
    /// Creates a new builder-style object to manufacture [`ListResourcePoliciesResponseResourcePolicy`](crate::types::ListResourcePoliciesResponseResourcePolicy).
    pub fn builder() -> crate::types::builders::ListResourcePoliciesResponseResourcePolicyBuilder {
        crate::types::builders::ListResourcePoliciesResponseResourcePolicyBuilder::default()
    }
}

/// A builder for [`ListResourcePoliciesResponseResourcePolicy`](crate::types::ListResourcePoliciesResponseResourcePolicy).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListResourcePoliciesResponseResourcePolicyBuilder {
    pub(crate) policy_arn: ::std::option::Option<::std::string::String>,
    pub(crate) policy_type: ::std::option::Option<crate::types::PolicyType>,
    pub(crate) policy_name: ::std::option::Option<::std::string::String>,
}
impl ListResourcePoliciesResponseResourcePolicyBuilder {
    /// <p>Amazon Resource Name (ARN) for policy.</p>
    pub fn policy_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) for policy.</p>
    pub fn set_policy_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) for policy.</p>
    pub fn get_policy_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_arn
    }
    /// <p>The type of policy.</p>
    pub fn policy_type(mut self, input: crate::types::PolicyType) -> Self {
        self.policy_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of policy.</p>
    pub fn set_policy_type(mut self, input: ::std::option::Option<crate::types::PolicyType>) -> Self {
        self.policy_type = input;
        self
    }
    /// <p>The type of policy.</p>
    pub fn get_policy_type(&self) -> &::std::option::Option<crate::types::PolicyType> {
        &self.policy_type
    }
    /// <p>Name of the policy.</p>
    pub fn policy_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the policy.</p>
    pub fn set_policy_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_name = input;
        self
    }
    /// <p>Name of the policy.</p>
    pub fn get_policy_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_name
    }
    /// Consumes the builder and constructs a [`ListResourcePoliciesResponseResourcePolicy`](crate::types::ListResourcePoliciesResponseResourcePolicy).
    pub fn build(self) -> crate::types::ListResourcePoliciesResponseResourcePolicy {
        crate::types::ListResourcePoliciesResponseResourcePolicy {
            policy_arn: self.policy_arn,
            policy_type: self.policy_type,
            policy_name: self.policy_name,
        }
    }
}
