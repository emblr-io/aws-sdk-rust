// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Strategy for how an approval team grants approval.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MofNApprovalStrategy {
    /// <p>Minimum number of approvals (M) required for a total number of approvers (N).</p>
    pub min_approvals_required: i32,
}
impl MofNApprovalStrategy {
    /// <p>Minimum number of approvals (M) required for a total number of approvers (N).</p>
    pub fn min_approvals_required(&self) -> i32 {
        self.min_approvals_required
    }
}
impl MofNApprovalStrategy {
    /// Creates a new builder-style object to manufacture [`MofNApprovalStrategy`](crate::types::MofNApprovalStrategy).
    pub fn builder() -> crate::types::builders::MofNApprovalStrategyBuilder {
        crate::types::builders::MofNApprovalStrategyBuilder::default()
    }
}

/// A builder for [`MofNApprovalStrategy`](crate::types::MofNApprovalStrategy).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MofNApprovalStrategyBuilder {
    pub(crate) min_approvals_required: ::std::option::Option<i32>,
}
impl MofNApprovalStrategyBuilder {
    /// <p>Minimum number of approvals (M) required for a total number of approvers (N).</p>
    /// This field is required.
    pub fn min_approvals_required(mut self, input: i32) -> Self {
        self.min_approvals_required = ::std::option::Option::Some(input);
        self
    }
    /// <p>Minimum number of approvals (M) required for a total number of approvers (N).</p>
    pub fn set_min_approvals_required(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min_approvals_required = input;
        self
    }
    /// <p>Minimum number of approvals (M) required for a total number of approvers (N).</p>
    pub fn get_min_approvals_required(&self) -> &::std::option::Option<i32> {
        &self.min_approvals_required
    }
    /// Consumes the builder and constructs a [`MofNApprovalStrategy`](crate::types::MofNApprovalStrategy).
    /// This method will fail if any of the following fields are not set:
    /// - [`min_approvals_required`](crate::types::builders::MofNApprovalStrategyBuilder::min_approvals_required)
    pub fn build(self) -> ::std::result::Result<crate::types::MofNApprovalStrategy, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MofNApprovalStrategy {
            min_approvals_required: self.min_approvals_required.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "min_approvals_required",
                    "min_approvals_required was not specified but it is required when building MofNApprovalStrategy",
                )
            })?,
        })
    }
}
