// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the minimum amount of time that data will be kept.</p><important>
/// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
/// </important>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StorageMinimumTimeToLive {
    /// <p>The time increment type.</p>
    pub unit: crate::types::StorageMinimumTimeToLiveUnit,
    /// <p>The minimum amount of time to store the data.</p>
    pub value: i32,
}
impl StorageMinimumTimeToLive {
    /// <p>The time increment type.</p>
    pub fn unit(&self) -> &crate::types::StorageMinimumTimeToLiveUnit {
        &self.unit
    }
    /// <p>The minimum amount of time to store the data.</p>
    pub fn value(&self) -> i32 {
        self.value
    }
}
impl StorageMinimumTimeToLive {
    /// Creates a new builder-style object to manufacture [`StorageMinimumTimeToLive`](crate::types::StorageMinimumTimeToLive).
    pub fn builder() -> crate::types::builders::StorageMinimumTimeToLiveBuilder {
        crate::types::builders::StorageMinimumTimeToLiveBuilder::default()
    }
}

/// A builder for [`StorageMinimumTimeToLive`](crate::types::StorageMinimumTimeToLive).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StorageMinimumTimeToLiveBuilder {
    pub(crate) unit: ::std::option::Option<crate::types::StorageMinimumTimeToLiveUnit>,
    pub(crate) value: ::std::option::Option<i32>,
}
impl StorageMinimumTimeToLiveBuilder {
    /// <p>The time increment type.</p>
    /// This field is required.
    pub fn unit(mut self, input: crate::types::StorageMinimumTimeToLiveUnit) -> Self {
        self.unit = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time increment type.</p>
    pub fn set_unit(mut self, input: ::std::option::Option<crate::types::StorageMinimumTimeToLiveUnit>) -> Self {
        self.unit = input;
        self
    }
    /// <p>The time increment type.</p>
    pub fn get_unit(&self) -> &::std::option::Option<crate::types::StorageMinimumTimeToLiveUnit> {
        &self.unit
    }
    /// <p>The minimum amount of time to store the data.</p>
    /// This field is required.
    pub fn value(mut self, input: i32) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum amount of time to store the data.</p>
    pub fn set_value(mut self, input: ::std::option::Option<i32>) -> Self {
        self.value = input;
        self
    }
    /// <p>The minimum amount of time to store the data.</p>
    pub fn get_value(&self) -> &::std::option::Option<i32> {
        &self.value
    }
    /// Consumes the builder and constructs a [`StorageMinimumTimeToLive`](crate::types::StorageMinimumTimeToLive).
    /// This method will fail if any of the following fields are not set:
    /// - [`unit`](crate::types::builders::StorageMinimumTimeToLiveBuilder::unit)
    /// - [`value`](crate::types::builders::StorageMinimumTimeToLiveBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::StorageMinimumTimeToLive, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StorageMinimumTimeToLive {
            unit: self.unit.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "unit",
                    "unit was not specified but it is required when building StorageMinimumTimeToLive",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building StorageMinimumTimeToLive",
                )
            })?,
        })
    }
}
