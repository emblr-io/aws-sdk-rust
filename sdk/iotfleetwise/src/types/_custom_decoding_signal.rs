// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about signals using a custom decoding protocol as defined by the customer.</p><important>
/// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
/// </important>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomDecodingSignal {
    /// <p>The ID of the signal.</p>
    pub id: ::std::string::String,
}
impl CustomDecodingSignal {
    /// <p>The ID of the signal.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
}
impl CustomDecodingSignal {
    /// Creates a new builder-style object to manufacture [`CustomDecodingSignal`](crate::types::CustomDecodingSignal).
    pub fn builder() -> crate::types::builders::CustomDecodingSignalBuilder {
        crate::types::builders::CustomDecodingSignalBuilder::default()
    }
}

/// A builder for [`CustomDecodingSignal`](crate::types::CustomDecodingSignal).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomDecodingSignalBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl CustomDecodingSignalBuilder {
    /// <p>The ID of the signal.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the signal.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the signal.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`CustomDecodingSignal`](crate::types::CustomDecodingSignal).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::CustomDecodingSignalBuilder::id)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomDecodingSignal, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomDecodingSignal {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building CustomDecodingSignal",
                )
            })?,
        })
    }
}
