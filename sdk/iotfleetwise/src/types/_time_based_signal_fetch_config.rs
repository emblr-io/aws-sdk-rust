// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Used to configure a frequency-based vehicle signal fetch.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TimeBasedSignalFetchConfig {
    /// <p>The frequency with which the signal fetch will be executed.</p>
    pub execution_frequency_ms: i64,
}
impl TimeBasedSignalFetchConfig {
    /// <p>The frequency with which the signal fetch will be executed.</p>
    pub fn execution_frequency_ms(&self) -> i64 {
        self.execution_frequency_ms
    }
}
impl TimeBasedSignalFetchConfig {
    /// Creates a new builder-style object to manufacture [`TimeBasedSignalFetchConfig`](crate::types::TimeBasedSignalFetchConfig).
    pub fn builder() -> crate::types::builders::TimeBasedSignalFetchConfigBuilder {
        crate::types::builders::TimeBasedSignalFetchConfigBuilder::default()
    }
}

/// A builder for [`TimeBasedSignalFetchConfig`](crate::types::TimeBasedSignalFetchConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TimeBasedSignalFetchConfigBuilder {
    pub(crate) execution_frequency_ms: ::std::option::Option<i64>,
}
impl TimeBasedSignalFetchConfigBuilder {
    /// <p>The frequency with which the signal fetch will be executed.</p>
    /// This field is required.
    pub fn execution_frequency_ms(mut self, input: i64) -> Self {
        self.execution_frequency_ms = ::std::option::Option::Some(input);
        self
    }
    /// <p>The frequency with which the signal fetch will be executed.</p>
    pub fn set_execution_frequency_ms(mut self, input: ::std::option::Option<i64>) -> Self {
        self.execution_frequency_ms = input;
        self
    }
    /// <p>The frequency with which the signal fetch will be executed.</p>
    pub fn get_execution_frequency_ms(&self) -> &::std::option::Option<i64> {
        &self.execution_frequency_ms
    }
    /// Consumes the builder and constructs a [`TimeBasedSignalFetchConfig`](crate::types::TimeBasedSignalFetchConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`execution_frequency_ms`](crate::types::builders::TimeBasedSignalFetchConfigBuilder::execution_frequency_ms)
    pub fn build(self) -> ::std::result::Result<crate::types::TimeBasedSignalFetchConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TimeBasedSignalFetchConfig {
            execution_frequency_ms: self.execution_frequency_ms.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "execution_frequency_ms",
                    "execution_frequency_ms was not specified but it is required when building TimeBasedSignalFetchConfig",
                )
            })?,
        })
    }
}
