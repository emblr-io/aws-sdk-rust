// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The state template associated with a vehicle. State templates contain state properties, which are signals that belong to a signal catalog that is synchronized between the Amazon Web Services IoT FleetWise Edge and the Amazon Web Services Cloud.</p><important>
/// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
/// </important>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StateTemplateAssociation {
    /// <p>The unique ID of the state template.</p>
    pub identifier: ::std::string::String,
    /// <p>The update strategy for the state template. Vehicles associated with the state template can stream telemetry data with either an <code>onChange</code> or <code>periodic</code> update strategy.</p><important>
    /// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
    /// </important>
    pub state_template_update_strategy: ::std::option::Option<crate::types::StateTemplateUpdateStrategy>,
}
impl StateTemplateAssociation {
    /// <p>The unique ID of the state template.</p>
    pub fn identifier(&self) -> &str {
        use std::ops::Deref;
        self.identifier.deref()
    }
    /// <p>The update strategy for the state template. Vehicles associated with the state template can stream telemetry data with either an <code>onChange</code> or <code>periodic</code> update strategy.</p><important>
    /// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
    /// </important>
    pub fn state_template_update_strategy(&self) -> ::std::option::Option<&crate::types::StateTemplateUpdateStrategy> {
        self.state_template_update_strategy.as_ref()
    }
}
impl StateTemplateAssociation {
    /// Creates a new builder-style object to manufacture [`StateTemplateAssociation`](crate::types::StateTemplateAssociation).
    pub fn builder() -> crate::types::builders::StateTemplateAssociationBuilder {
        crate::types::builders::StateTemplateAssociationBuilder::default()
    }
}

/// A builder for [`StateTemplateAssociation`](crate::types::StateTemplateAssociation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StateTemplateAssociationBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
    pub(crate) state_template_update_strategy: ::std::option::Option<crate::types::StateTemplateUpdateStrategy>,
}
impl StateTemplateAssociationBuilder {
    /// <p>The unique ID of the state template.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID of the state template.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The unique ID of the state template.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// <p>The update strategy for the state template. Vehicles associated with the state template can stream telemetry data with either an <code>onChange</code> or <code>periodic</code> update strategy.</p><important>
    /// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
    /// </important>
    /// This field is required.
    pub fn state_template_update_strategy(mut self, input: crate::types::StateTemplateUpdateStrategy) -> Self {
        self.state_template_update_strategy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The update strategy for the state template. Vehicles associated with the state template can stream telemetry data with either an <code>onChange</code> or <code>periodic</code> update strategy.</p><important>
    /// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
    /// </important>
    pub fn set_state_template_update_strategy(mut self, input: ::std::option::Option<crate::types::StateTemplateUpdateStrategy>) -> Self {
        self.state_template_update_strategy = input;
        self
    }
    /// <p>The update strategy for the state template. Vehicles associated with the state template can stream telemetry data with either an <code>onChange</code> or <code>periodic</code> update strategy.</p><important>
    /// <p>Access to certain Amazon Web Services IoT FleetWise features is currently gated. For more information, see <a href="https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/fleetwise-regions.html">Amazon Web Services Region and feature availability</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>.</p>
    /// </important>
    pub fn get_state_template_update_strategy(&self) -> &::std::option::Option<crate::types::StateTemplateUpdateStrategy> {
        &self.state_template_update_strategy
    }
    /// Consumes the builder and constructs a [`StateTemplateAssociation`](crate::types::StateTemplateAssociation).
    /// This method will fail if any of the following fields are not set:
    /// - [`identifier`](crate::types::builders::StateTemplateAssociationBuilder::identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::StateTemplateAssociation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StateTemplateAssociation {
            identifier: self.identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "identifier",
                    "identifier was not specified but it is required when building StateTemplateAssociation",
                )
            })?,
            state_template_update_strategy: self.state_template_update_strategy,
        })
    }
}
