// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RollbackApplicationOutput {
    /// <p>Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.</p>
    pub application_detail: ::std::option::Option<crate::types::ApplicationDetail>,
    /// Operation ID for tracking RollbackApplication request
    pub operation_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl RollbackApplicationOutput {
    /// <p>Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.</p>
    pub fn application_detail(&self) -> ::std::option::Option<&crate::types::ApplicationDetail> {
        self.application_detail.as_ref()
    }
    /// Operation ID for tracking RollbackApplication request
    pub fn operation_id(&self) -> ::std::option::Option<&str> {
        self.operation_id.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for RollbackApplicationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RollbackApplicationOutput {
    /// Creates a new builder-style object to manufacture [`RollbackApplicationOutput`](crate::operation::rollback_application::RollbackApplicationOutput).
    pub fn builder() -> crate::operation::rollback_application::builders::RollbackApplicationOutputBuilder {
        crate::operation::rollback_application::builders::RollbackApplicationOutputBuilder::default()
    }
}

/// A builder for [`RollbackApplicationOutput`](crate::operation::rollback_application::RollbackApplicationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RollbackApplicationOutputBuilder {
    pub(crate) application_detail: ::std::option::Option<crate::types::ApplicationDetail>,
    pub(crate) operation_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl RollbackApplicationOutputBuilder {
    /// <p>Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.</p>
    /// This field is required.
    pub fn application_detail(mut self, input: crate::types::ApplicationDetail) -> Self {
        self.application_detail = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.</p>
    pub fn set_application_detail(mut self, input: ::std::option::Option<crate::types::ApplicationDetail>) -> Self {
        self.application_detail = input;
        self
    }
    /// <p>Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.</p>
    pub fn get_application_detail(&self) -> &::std::option::Option<crate::types::ApplicationDetail> {
        &self.application_detail
    }
    /// Operation ID for tracking RollbackApplication request
    pub fn operation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.operation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Operation ID for tracking RollbackApplication request
    pub fn set_operation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.operation_id = input;
        self
    }
    /// Operation ID for tracking RollbackApplication request
    pub fn get_operation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.operation_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RollbackApplicationOutput`](crate::operation::rollback_application::RollbackApplicationOutput).
    pub fn build(self) -> crate::operation::rollback_application::RollbackApplicationOutput {
        crate::operation::rollback_application::RollbackApplicationOutput {
            application_detail: self.application_detail,
            operation_id: self.operation_id,
            _request_id: self._request_id,
        }
    }
}
