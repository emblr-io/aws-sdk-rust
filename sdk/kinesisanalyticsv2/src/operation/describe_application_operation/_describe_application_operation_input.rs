// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request for information about a specific operation performed on a Managed Service for Apache Flink application
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeApplicationOperationInput {
    /// The name of the application
    pub application_name: ::std::option::Option<::std::string::String>,
    /// Identifier of the Operation
    pub operation_id: ::std::option::Option<::std::string::String>,
}
impl DescribeApplicationOperationInput {
    /// The name of the application
    pub fn application_name(&self) -> ::std::option::Option<&str> {
        self.application_name.as_deref()
    }
    /// Identifier of the Operation
    pub fn operation_id(&self) -> ::std::option::Option<&str> {
        self.operation_id.as_deref()
    }
}
impl DescribeApplicationOperationInput {
    /// Creates a new builder-style object to manufacture [`DescribeApplicationOperationInput`](crate::operation::describe_application_operation::DescribeApplicationOperationInput).
    pub fn builder() -> crate::operation::describe_application_operation::builders::DescribeApplicationOperationInputBuilder {
        crate::operation::describe_application_operation::builders::DescribeApplicationOperationInputBuilder::default()
    }
}

/// A builder for [`DescribeApplicationOperationInput`](crate::operation::describe_application_operation::DescribeApplicationOperationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeApplicationOperationInputBuilder {
    pub(crate) application_name: ::std::option::Option<::std::string::String>,
    pub(crate) operation_id: ::std::option::Option<::std::string::String>,
}
impl DescribeApplicationOperationInputBuilder {
    /// The name of the application
    /// This field is required.
    pub fn application_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_name = ::std::option::Option::Some(input.into());
        self
    }
    /// The name of the application
    pub fn set_application_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_name = input;
        self
    }
    /// The name of the application
    pub fn get_application_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_name
    }
    /// Identifier of the Operation
    /// This field is required.
    pub fn operation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.operation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier of the Operation
    pub fn set_operation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.operation_id = input;
        self
    }
    /// Identifier of the Operation
    pub fn get_operation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.operation_id
    }
    /// Consumes the builder and constructs a [`DescribeApplicationOperationInput`](crate::operation::describe_application_operation::DescribeApplicationOperationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_application_operation::DescribeApplicationOperationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_application_operation::DescribeApplicationOperationInput {
            application_name: self.application_name,
            operation_id: self.operation_id,
        })
    }
}
