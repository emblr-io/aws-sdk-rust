// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutAccountSettingsInput {
    /// <p>Desired notification subscription status.</p>
    pub notification_subscription_status: ::std::option::Option<crate::types::NotificationSubscriptionStatus>,
}
impl PutAccountSettingsInput {
    /// <p>Desired notification subscription status.</p>
    pub fn notification_subscription_status(&self) -> ::std::option::Option<&crate::types::NotificationSubscriptionStatus> {
        self.notification_subscription_status.as_ref()
    }
}
impl PutAccountSettingsInput {
    /// Creates a new builder-style object to manufacture [`PutAccountSettingsInput`](crate::operation::put_account_settings::PutAccountSettingsInput).
    pub fn builder() -> crate::operation::put_account_settings::builders::PutAccountSettingsInputBuilder {
        crate::operation::put_account_settings::builders::PutAccountSettingsInputBuilder::default()
    }
}

/// A builder for [`PutAccountSettingsInput`](crate::operation::put_account_settings::PutAccountSettingsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutAccountSettingsInputBuilder {
    pub(crate) notification_subscription_status: ::std::option::Option<crate::types::NotificationSubscriptionStatus>,
}
impl PutAccountSettingsInputBuilder {
    /// <p>Desired notification subscription status.</p>
    pub fn notification_subscription_status(mut self, input: crate::types::NotificationSubscriptionStatus) -> Self {
        self.notification_subscription_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Desired notification subscription status.</p>
    pub fn set_notification_subscription_status(mut self, input: ::std::option::Option<crate::types::NotificationSubscriptionStatus>) -> Self {
        self.notification_subscription_status = input;
        self
    }
    /// <p>Desired notification subscription status.</p>
    pub fn get_notification_subscription_status(&self) -> &::std::option::Option<crate::types::NotificationSubscriptionStatus> {
        &self.notification_subscription_status
    }
    /// Consumes the builder and constructs a [`PutAccountSettingsInput`](crate::operation::put_account_settings::PutAccountSettingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::put_account_settings::PutAccountSettingsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::put_account_settings::PutAccountSettingsInput {
            notification_subscription_status: self.notification_subscription_status,
        })
    }
}
