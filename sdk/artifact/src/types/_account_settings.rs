// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Account settings for the customer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccountSettings {
    /// <p>Notification subscription status of the customer.</p>
    pub notification_subscription_status: ::std::option::Option<crate::types::NotificationSubscriptionStatus>,
}
impl AccountSettings {
    /// <p>Notification subscription status of the customer.</p>
    pub fn notification_subscription_status(&self) -> ::std::option::Option<&crate::types::NotificationSubscriptionStatus> {
        self.notification_subscription_status.as_ref()
    }
}
impl AccountSettings {
    /// Creates a new builder-style object to manufacture [`AccountSettings`](crate::types::AccountSettings).
    pub fn builder() -> crate::types::builders::AccountSettingsBuilder {
        crate::types::builders::AccountSettingsBuilder::default()
    }
}

/// A builder for [`AccountSettings`](crate::types::AccountSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AccountSettingsBuilder {
    pub(crate) notification_subscription_status: ::std::option::Option<crate::types::NotificationSubscriptionStatus>,
}
impl AccountSettingsBuilder {
    /// <p>Notification subscription status of the customer.</p>
    pub fn notification_subscription_status(mut self, input: crate::types::NotificationSubscriptionStatus) -> Self {
        self.notification_subscription_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Notification subscription status of the customer.</p>
    pub fn set_notification_subscription_status(mut self, input: ::std::option::Option<crate::types::NotificationSubscriptionStatus>) -> Self {
        self.notification_subscription_status = input;
        self
    }
    /// <p>Notification subscription status of the customer.</p>
    pub fn get_notification_subscription_status(&self) -> &::std::option::Option<crate::types::NotificationSubscriptionStatus> {
        &self.notification_subscription_status
    }
    /// Consumes the builder and constructs a [`AccountSettings`](crate::types::AccountSettings).
    pub fn build(self) -> crate::types::AccountSettings {
        crate::types::AccountSettings {
            notification_subscription_status: self.notification_subscription_status,
        }
    }
}
