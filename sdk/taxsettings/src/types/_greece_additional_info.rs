// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information to specify for a TRN in Greece.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GreeceAdditionalInfo {
    /// <p>The code of contracting authority for e-invoicing.</p>
    pub contracting_authority_code: ::std::option::Option<::std::string::String>,
}
impl GreeceAdditionalInfo {
    /// <p>The code of contracting authority for e-invoicing.</p>
    pub fn contracting_authority_code(&self) -> ::std::option::Option<&str> {
        self.contracting_authority_code.as_deref()
    }
}
impl GreeceAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`GreeceAdditionalInfo`](crate::types::GreeceAdditionalInfo).
    pub fn builder() -> crate::types::builders::GreeceAdditionalInfoBuilder {
        crate::types::builders::GreeceAdditionalInfoBuilder::default()
    }
}

/// A builder for [`GreeceAdditionalInfo`](crate::types::GreeceAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GreeceAdditionalInfoBuilder {
    pub(crate) contracting_authority_code: ::std::option::Option<::std::string::String>,
}
impl GreeceAdditionalInfoBuilder {
    /// <p>The code of contracting authority for e-invoicing.</p>
    pub fn contracting_authority_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.contracting_authority_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The code of contracting authority for e-invoicing.</p>
    pub fn set_contracting_authority_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.contracting_authority_code = input;
        self
    }
    /// <p>The code of contracting authority for e-invoicing.</p>
    pub fn get_contracting_authority_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.contracting_authority_code
    }
    /// Consumes the builder and constructs a [`GreeceAdditionalInfo`](crate::types::GreeceAdditionalInfo).
    pub fn build(self) -> crate::types::GreeceAdditionalInfo {
        crate::types::GreeceAdditionalInfo {
            contracting_authority_code: self.contracting_authority_code,
        }
    }
}
