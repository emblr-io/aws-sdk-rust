// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your TRN in Ukraine.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UkraineAdditionalInfo {
    /// <p>The tax registration type.</p>
    pub ukraine_trn_type: crate::types::UkraineTrnType,
}
impl UkraineAdditionalInfo {
    /// <p>The tax registration type.</p>
    pub fn ukraine_trn_type(&self) -> &crate::types::UkraineTrnType {
        &self.ukraine_trn_type
    }
}
impl UkraineAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`UkraineAdditionalInfo`](crate::types::UkraineAdditionalInfo).
    pub fn builder() -> crate::types::builders::UkraineAdditionalInfoBuilder {
        crate::types::builders::UkraineAdditionalInfoBuilder::default()
    }
}

/// A builder for [`UkraineAdditionalInfo`](crate::types::UkraineAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UkraineAdditionalInfoBuilder {
    pub(crate) ukraine_trn_type: ::std::option::Option<crate::types::UkraineTrnType>,
}
impl UkraineAdditionalInfoBuilder {
    /// <p>The tax registration type.</p>
    /// This field is required.
    pub fn ukraine_trn_type(mut self, input: crate::types::UkraineTrnType) -> Self {
        self.ukraine_trn_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The tax registration type.</p>
    pub fn set_ukraine_trn_type(mut self, input: ::std::option::Option<crate::types::UkraineTrnType>) -> Self {
        self.ukraine_trn_type = input;
        self
    }
    /// <p>The tax registration type.</p>
    pub fn get_ukraine_trn_type(&self) -> &::std::option::Option<crate::types::UkraineTrnType> {
        &self.ukraine_trn_type
    }
    /// Consumes the builder and constructs a [`UkraineAdditionalInfo`](crate::types::UkraineAdditionalInfo).
    /// This method will fail if any of the following fields are not set:
    /// - [`ukraine_trn_type`](crate::types::builders::UkraineAdditionalInfoBuilder::ukraine_trn_type)
    pub fn build(self) -> ::std::result::Result<crate::types::UkraineAdditionalInfo, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UkraineAdditionalInfo {
            ukraine_trn_type: self.ukraine_trn_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "ukraine_trn_type",
                    "ukraine_trn_type was not specified but it is required when building UkraineAdditionalInfo",
                )
            })?,
        })
    }
}
