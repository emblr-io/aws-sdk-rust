// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your TRN in Indonesia.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IndonesiaAdditionalInfo {
    /// <p>The tax registration number type.</p>
    pub tax_registration_number_type: ::std::option::Option<crate::types::IndonesiaTaxRegistrationNumberType>,
    /// <p>Exception code if you are designated by Directorate General of Taxation (DGT) as a VAT collector, non-collected VAT, or VAT-exempt customer.</p>
    pub ppn_exception_designation_code: ::std::option::Option<::std::string::String>,
    /// <p>VAT-exempt customers have a Directorate General of Taxation (DGT) exemption letter or certificate (Surat Keterangan Bebas) decision number. Non-collected VAT have a DGT letter or certificate (Surat Keterangan Tidak Dipungut).</p>
    pub decision_number: ::std::option::Option<::std::string::String>,
}
impl IndonesiaAdditionalInfo {
    /// <p>The tax registration number type.</p>
    pub fn tax_registration_number_type(&self) -> ::std::option::Option<&crate::types::IndonesiaTaxRegistrationNumberType> {
        self.tax_registration_number_type.as_ref()
    }
    /// <p>Exception code if you are designated by Directorate General of Taxation (DGT) as a VAT collector, non-collected VAT, or VAT-exempt customer.</p>
    pub fn ppn_exception_designation_code(&self) -> ::std::option::Option<&str> {
        self.ppn_exception_designation_code.as_deref()
    }
    /// <p>VAT-exempt customers have a Directorate General of Taxation (DGT) exemption letter or certificate (Surat Keterangan Bebas) decision number. Non-collected VAT have a DGT letter or certificate (Surat Keterangan Tidak Dipungut).</p>
    pub fn decision_number(&self) -> ::std::option::Option<&str> {
        self.decision_number.as_deref()
    }
}
impl IndonesiaAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`IndonesiaAdditionalInfo`](crate::types::IndonesiaAdditionalInfo).
    pub fn builder() -> crate::types::builders::IndonesiaAdditionalInfoBuilder {
        crate::types::builders::IndonesiaAdditionalInfoBuilder::default()
    }
}

/// A builder for [`IndonesiaAdditionalInfo`](crate::types::IndonesiaAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IndonesiaAdditionalInfoBuilder {
    pub(crate) tax_registration_number_type: ::std::option::Option<crate::types::IndonesiaTaxRegistrationNumberType>,
    pub(crate) ppn_exception_designation_code: ::std::option::Option<::std::string::String>,
    pub(crate) decision_number: ::std::option::Option<::std::string::String>,
}
impl IndonesiaAdditionalInfoBuilder {
    /// <p>The tax registration number type.</p>
    pub fn tax_registration_number_type(mut self, input: crate::types::IndonesiaTaxRegistrationNumberType) -> Self {
        self.tax_registration_number_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The tax registration number type.</p>
    pub fn set_tax_registration_number_type(mut self, input: ::std::option::Option<crate::types::IndonesiaTaxRegistrationNumberType>) -> Self {
        self.tax_registration_number_type = input;
        self
    }
    /// <p>The tax registration number type.</p>
    pub fn get_tax_registration_number_type(&self) -> &::std::option::Option<crate::types::IndonesiaTaxRegistrationNumberType> {
        &self.tax_registration_number_type
    }
    /// <p>Exception code if you are designated by Directorate General of Taxation (DGT) as a VAT collector, non-collected VAT, or VAT-exempt customer.</p>
    pub fn ppn_exception_designation_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ppn_exception_designation_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Exception code if you are designated by Directorate General of Taxation (DGT) as a VAT collector, non-collected VAT, or VAT-exempt customer.</p>
    pub fn set_ppn_exception_designation_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ppn_exception_designation_code = input;
        self
    }
    /// <p>Exception code if you are designated by Directorate General of Taxation (DGT) as a VAT collector, non-collected VAT, or VAT-exempt customer.</p>
    pub fn get_ppn_exception_designation_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.ppn_exception_designation_code
    }
    /// <p>VAT-exempt customers have a Directorate General of Taxation (DGT) exemption letter or certificate (Surat Keterangan Bebas) decision number. Non-collected VAT have a DGT letter or certificate (Surat Keterangan Tidak Dipungut).</p>
    pub fn decision_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.decision_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>VAT-exempt customers have a Directorate General of Taxation (DGT) exemption letter or certificate (Surat Keterangan Bebas) decision number. Non-collected VAT have a DGT letter or certificate (Surat Keterangan Tidak Dipungut).</p>
    pub fn set_decision_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.decision_number = input;
        self
    }
    /// <p>VAT-exempt customers have a Directorate General of Taxation (DGT) exemption letter or certificate (Surat Keterangan Bebas) decision number. Non-collected VAT have a DGT letter or certificate (Surat Keterangan Tidak Dipungut).</p>
    pub fn get_decision_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.decision_number
    }
    /// Consumes the builder and constructs a [`IndonesiaAdditionalInfo`](crate::types::IndonesiaAdditionalInfo).
    pub fn build(self) -> crate::types::IndonesiaAdditionalInfo {
        crate::types::IndonesiaAdditionalInfo {
            tax_registration_number_type: self.tax_registration_number_type,
            ppn_exception_designation_code: self.ppn_exception_designation_code,
            decision_number: self.decision_number,
        }
    }
}
