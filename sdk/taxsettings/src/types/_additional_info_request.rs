// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your tax registration number (TRN). Depending on the TRN for a specific country, you might need to specify this information when you set your TRN.</p>
/// <p>You can only specify one of the following parameters and the value can't be empty.</p><note>
/// <p>The parameter that you specify must match the country for the TRN, if available. For example, if you set a TRN in Canada for specific provinces, you must also specify the <code>canadaAdditionalInfo</code> parameter.</p>
/// </note>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdditionalInfoRequest {
    /// <p>Additional tax information to specify for a TRN in Malaysia.</p>
    pub malaysia_additional_info: ::std::option::Option<crate::types::MalaysiaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Israel.</p>
    pub israel_additional_info: ::std::option::Option<crate::types::IsraelAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Estonia.</p>
    pub estonia_additional_info: ::std::option::Option<crate::types::EstoniaAdditionalInfo>,
    /// <p>Additional tax information associated with your TRN in Canada.</p>
    pub canada_additional_info: ::std::option::Option<crate::types::CanadaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Spain.</p>
    pub spain_additional_info: ::std::option::Option<crate::types::SpainAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Kenya.</p>
    pub kenya_additional_info: ::std::option::Option<crate::types::KenyaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in South Korea.</p>
    pub south_korea_additional_info: ::std::option::Option<crate::types::SouthKoreaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Turkey.</p>
    pub turkey_additional_info: ::std::option::Option<crate::types::TurkeyAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Georgia.</p>
    pub georgia_additional_info: ::std::option::Option<crate::types::GeorgiaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Italy.</p>
    pub italy_additional_info: ::std::option::Option<crate::types::ItalyAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Romania.</p>
    pub romania_additional_info: ::std::option::Option<crate::types::RomaniaAdditionalInfo>,
    /// <p>Additional tax information associated with your TRN in Ukraine.</p>
    pub ukraine_additional_info: ::std::option::Option<crate::types::UkraineAdditionalInfo>,
    /// <p>Additional tax information associated with your TRN in Poland.</p>
    pub poland_additional_info: ::std::option::Option<crate::types::PolandAdditionalInfo>,
    /// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
    pub saudi_arabia_additional_info: ::std::option::Option<crate::types::SaudiArabiaAdditionalInfo>,
    /// <p></p>
    pub indonesia_additional_info: ::std::option::Option<crate::types::IndonesiaAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Vietnam.</p>
    pub vietnam_additional_info: ::std::option::Option<crate::types::VietnamAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Egypt.</p>
    pub egypt_additional_info: ::std::option::Option<crate::types::EgyptAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Greece.</p>
    pub greece_additional_info: ::std::option::Option<crate::types::GreeceAdditionalInfo>,
    /// <p>Additional tax information to specify for a TRN in Uzbekistan.</p>
    pub uzbekistan_additional_info: ::std::option::Option<crate::types::UzbekistanAdditionalInfo>,
}
impl AdditionalInfoRequest {
    /// <p>Additional tax information to specify for a TRN in Malaysia.</p>
    pub fn malaysia_additional_info(&self) -> ::std::option::Option<&crate::types::MalaysiaAdditionalInfo> {
        self.malaysia_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Israel.</p>
    pub fn israel_additional_info(&self) -> ::std::option::Option<&crate::types::IsraelAdditionalInfo> {
        self.israel_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Estonia.</p>
    pub fn estonia_additional_info(&self) -> ::std::option::Option<&crate::types::EstoniaAdditionalInfo> {
        self.estonia_additional_info.as_ref()
    }
    /// <p>Additional tax information associated with your TRN in Canada.</p>
    pub fn canada_additional_info(&self) -> ::std::option::Option<&crate::types::CanadaAdditionalInfo> {
        self.canada_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Spain.</p>
    pub fn spain_additional_info(&self) -> ::std::option::Option<&crate::types::SpainAdditionalInfo> {
        self.spain_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Kenya.</p>
    pub fn kenya_additional_info(&self) -> ::std::option::Option<&crate::types::KenyaAdditionalInfo> {
        self.kenya_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in South Korea.</p>
    pub fn south_korea_additional_info(&self) -> ::std::option::Option<&crate::types::SouthKoreaAdditionalInfo> {
        self.south_korea_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Turkey.</p>
    pub fn turkey_additional_info(&self) -> ::std::option::Option<&crate::types::TurkeyAdditionalInfo> {
        self.turkey_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Georgia.</p>
    pub fn georgia_additional_info(&self) -> ::std::option::Option<&crate::types::GeorgiaAdditionalInfo> {
        self.georgia_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Italy.</p>
    pub fn italy_additional_info(&self) -> ::std::option::Option<&crate::types::ItalyAdditionalInfo> {
        self.italy_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Romania.</p>
    pub fn romania_additional_info(&self) -> ::std::option::Option<&crate::types::RomaniaAdditionalInfo> {
        self.romania_additional_info.as_ref()
    }
    /// <p>Additional tax information associated with your TRN in Ukraine.</p>
    pub fn ukraine_additional_info(&self) -> ::std::option::Option<&crate::types::UkraineAdditionalInfo> {
        self.ukraine_additional_info.as_ref()
    }
    /// <p>Additional tax information associated with your TRN in Poland.</p>
    pub fn poland_additional_info(&self) -> ::std::option::Option<&crate::types::PolandAdditionalInfo> {
        self.poland_additional_info.as_ref()
    }
    /// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
    pub fn saudi_arabia_additional_info(&self) -> ::std::option::Option<&crate::types::SaudiArabiaAdditionalInfo> {
        self.saudi_arabia_additional_info.as_ref()
    }
    /// <p></p>
    pub fn indonesia_additional_info(&self) -> ::std::option::Option<&crate::types::IndonesiaAdditionalInfo> {
        self.indonesia_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Vietnam.</p>
    pub fn vietnam_additional_info(&self) -> ::std::option::Option<&crate::types::VietnamAdditionalInfo> {
        self.vietnam_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Egypt.</p>
    pub fn egypt_additional_info(&self) -> ::std::option::Option<&crate::types::EgyptAdditionalInfo> {
        self.egypt_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Greece.</p>
    pub fn greece_additional_info(&self) -> ::std::option::Option<&crate::types::GreeceAdditionalInfo> {
        self.greece_additional_info.as_ref()
    }
    /// <p>Additional tax information to specify for a TRN in Uzbekistan.</p>
    pub fn uzbekistan_additional_info(&self) -> ::std::option::Option<&crate::types::UzbekistanAdditionalInfo> {
        self.uzbekistan_additional_info.as_ref()
    }
}
impl AdditionalInfoRequest {
    /// Creates a new builder-style object to manufacture [`AdditionalInfoRequest`](crate::types::AdditionalInfoRequest).
    pub fn builder() -> crate::types::builders::AdditionalInfoRequestBuilder {
        crate::types::builders::AdditionalInfoRequestBuilder::default()
    }
}

/// A builder for [`AdditionalInfoRequest`](crate::types::AdditionalInfoRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AdditionalInfoRequestBuilder {
    pub(crate) malaysia_additional_info: ::std::option::Option<crate::types::MalaysiaAdditionalInfo>,
    pub(crate) israel_additional_info: ::std::option::Option<crate::types::IsraelAdditionalInfo>,
    pub(crate) estonia_additional_info: ::std::option::Option<crate::types::EstoniaAdditionalInfo>,
    pub(crate) canada_additional_info: ::std::option::Option<crate::types::CanadaAdditionalInfo>,
    pub(crate) spain_additional_info: ::std::option::Option<crate::types::SpainAdditionalInfo>,
    pub(crate) kenya_additional_info: ::std::option::Option<crate::types::KenyaAdditionalInfo>,
    pub(crate) south_korea_additional_info: ::std::option::Option<crate::types::SouthKoreaAdditionalInfo>,
    pub(crate) turkey_additional_info: ::std::option::Option<crate::types::TurkeyAdditionalInfo>,
    pub(crate) georgia_additional_info: ::std::option::Option<crate::types::GeorgiaAdditionalInfo>,
    pub(crate) italy_additional_info: ::std::option::Option<crate::types::ItalyAdditionalInfo>,
    pub(crate) romania_additional_info: ::std::option::Option<crate::types::RomaniaAdditionalInfo>,
    pub(crate) ukraine_additional_info: ::std::option::Option<crate::types::UkraineAdditionalInfo>,
    pub(crate) poland_additional_info: ::std::option::Option<crate::types::PolandAdditionalInfo>,
    pub(crate) saudi_arabia_additional_info: ::std::option::Option<crate::types::SaudiArabiaAdditionalInfo>,
    pub(crate) indonesia_additional_info: ::std::option::Option<crate::types::IndonesiaAdditionalInfo>,
    pub(crate) vietnam_additional_info: ::std::option::Option<crate::types::VietnamAdditionalInfo>,
    pub(crate) egypt_additional_info: ::std::option::Option<crate::types::EgyptAdditionalInfo>,
    pub(crate) greece_additional_info: ::std::option::Option<crate::types::GreeceAdditionalInfo>,
    pub(crate) uzbekistan_additional_info: ::std::option::Option<crate::types::UzbekistanAdditionalInfo>,
}
impl AdditionalInfoRequestBuilder {
    /// <p>Additional tax information to specify for a TRN in Malaysia.</p>
    pub fn malaysia_additional_info(mut self, input: crate::types::MalaysiaAdditionalInfo) -> Self {
        self.malaysia_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Malaysia.</p>
    pub fn set_malaysia_additional_info(mut self, input: ::std::option::Option<crate::types::MalaysiaAdditionalInfo>) -> Self {
        self.malaysia_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Malaysia.</p>
    pub fn get_malaysia_additional_info(&self) -> &::std::option::Option<crate::types::MalaysiaAdditionalInfo> {
        &self.malaysia_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Israel.</p>
    pub fn israel_additional_info(mut self, input: crate::types::IsraelAdditionalInfo) -> Self {
        self.israel_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Israel.</p>
    pub fn set_israel_additional_info(mut self, input: ::std::option::Option<crate::types::IsraelAdditionalInfo>) -> Self {
        self.israel_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Israel.</p>
    pub fn get_israel_additional_info(&self) -> &::std::option::Option<crate::types::IsraelAdditionalInfo> {
        &self.israel_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Estonia.</p>
    pub fn estonia_additional_info(mut self, input: crate::types::EstoniaAdditionalInfo) -> Self {
        self.estonia_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Estonia.</p>
    pub fn set_estonia_additional_info(mut self, input: ::std::option::Option<crate::types::EstoniaAdditionalInfo>) -> Self {
        self.estonia_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Estonia.</p>
    pub fn get_estonia_additional_info(&self) -> &::std::option::Option<crate::types::EstoniaAdditionalInfo> {
        &self.estonia_additional_info
    }
    /// <p>Additional tax information associated with your TRN in Canada.</p>
    pub fn canada_additional_info(mut self, input: crate::types::CanadaAdditionalInfo) -> Self {
        self.canada_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information associated with your TRN in Canada.</p>
    pub fn set_canada_additional_info(mut self, input: ::std::option::Option<crate::types::CanadaAdditionalInfo>) -> Self {
        self.canada_additional_info = input;
        self
    }
    /// <p>Additional tax information associated with your TRN in Canada.</p>
    pub fn get_canada_additional_info(&self) -> &::std::option::Option<crate::types::CanadaAdditionalInfo> {
        &self.canada_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Spain.</p>
    pub fn spain_additional_info(mut self, input: crate::types::SpainAdditionalInfo) -> Self {
        self.spain_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Spain.</p>
    pub fn set_spain_additional_info(mut self, input: ::std::option::Option<crate::types::SpainAdditionalInfo>) -> Self {
        self.spain_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Spain.</p>
    pub fn get_spain_additional_info(&self) -> &::std::option::Option<crate::types::SpainAdditionalInfo> {
        &self.spain_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Kenya.</p>
    pub fn kenya_additional_info(mut self, input: crate::types::KenyaAdditionalInfo) -> Self {
        self.kenya_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Kenya.</p>
    pub fn set_kenya_additional_info(mut self, input: ::std::option::Option<crate::types::KenyaAdditionalInfo>) -> Self {
        self.kenya_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Kenya.</p>
    pub fn get_kenya_additional_info(&self) -> &::std::option::Option<crate::types::KenyaAdditionalInfo> {
        &self.kenya_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in South Korea.</p>
    pub fn south_korea_additional_info(mut self, input: crate::types::SouthKoreaAdditionalInfo) -> Self {
        self.south_korea_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in South Korea.</p>
    pub fn set_south_korea_additional_info(mut self, input: ::std::option::Option<crate::types::SouthKoreaAdditionalInfo>) -> Self {
        self.south_korea_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in South Korea.</p>
    pub fn get_south_korea_additional_info(&self) -> &::std::option::Option<crate::types::SouthKoreaAdditionalInfo> {
        &self.south_korea_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Turkey.</p>
    pub fn turkey_additional_info(mut self, input: crate::types::TurkeyAdditionalInfo) -> Self {
        self.turkey_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Turkey.</p>
    pub fn set_turkey_additional_info(mut self, input: ::std::option::Option<crate::types::TurkeyAdditionalInfo>) -> Self {
        self.turkey_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Turkey.</p>
    pub fn get_turkey_additional_info(&self) -> &::std::option::Option<crate::types::TurkeyAdditionalInfo> {
        &self.turkey_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Georgia.</p>
    pub fn georgia_additional_info(mut self, input: crate::types::GeorgiaAdditionalInfo) -> Self {
        self.georgia_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Georgia.</p>
    pub fn set_georgia_additional_info(mut self, input: ::std::option::Option<crate::types::GeorgiaAdditionalInfo>) -> Self {
        self.georgia_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Georgia.</p>
    pub fn get_georgia_additional_info(&self) -> &::std::option::Option<crate::types::GeorgiaAdditionalInfo> {
        &self.georgia_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Italy.</p>
    pub fn italy_additional_info(mut self, input: crate::types::ItalyAdditionalInfo) -> Self {
        self.italy_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Italy.</p>
    pub fn set_italy_additional_info(mut self, input: ::std::option::Option<crate::types::ItalyAdditionalInfo>) -> Self {
        self.italy_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Italy.</p>
    pub fn get_italy_additional_info(&self) -> &::std::option::Option<crate::types::ItalyAdditionalInfo> {
        &self.italy_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Romania.</p>
    pub fn romania_additional_info(mut self, input: crate::types::RomaniaAdditionalInfo) -> Self {
        self.romania_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Romania.</p>
    pub fn set_romania_additional_info(mut self, input: ::std::option::Option<crate::types::RomaniaAdditionalInfo>) -> Self {
        self.romania_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Romania.</p>
    pub fn get_romania_additional_info(&self) -> &::std::option::Option<crate::types::RomaniaAdditionalInfo> {
        &self.romania_additional_info
    }
    /// <p>Additional tax information associated with your TRN in Ukraine.</p>
    pub fn ukraine_additional_info(mut self, input: crate::types::UkraineAdditionalInfo) -> Self {
        self.ukraine_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information associated with your TRN in Ukraine.</p>
    pub fn set_ukraine_additional_info(mut self, input: ::std::option::Option<crate::types::UkraineAdditionalInfo>) -> Self {
        self.ukraine_additional_info = input;
        self
    }
    /// <p>Additional tax information associated with your TRN in Ukraine.</p>
    pub fn get_ukraine_additional_info(&self) -> &::std::option::Option<crate::types::UkraineAdditionalInfo> {
        &self.ukraine_additional_info
    }
    /// <p>Additional tax information associated with your TRN in Poland.</p>
    pub fn poland_additional_info(mut self, input: crate::types::PolandAdditionalInfo) -> Self {
        self.poland_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information associated with your TRN in Poland.</p>
    pub fn set_poland_additional_info(mut self, input: ::std::option::Option<crate::types::PolandAdditionalInfo>) -> Self {
        self.poland_additional_info = input;
        self
    }
    /// <p>Additional tax information associated with your TRN in Poland.</p>
    pub fn get_poland_additional_info(&self) -> &::std::option::Option<crate::types::PolandAdditionalInfo> {
        &self.poland_additional_info
    }
    /// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
    pub fn saudi_arabia_additional_info(mut self, input: crate::types::SaudiArabiaAdditionalInfo) -> Self {
        self.saudi_arabia_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
    pub fn set_saudi_arabia_additional_info(mut self, input: ::std::option::Option<crate::types::SaudiArabiaAdditionalInfo>) -> Self {
        self.saudi_arabia_additional_info = input;
        self
    }
    /// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
    pub fn get_saudi_arabia_additional_info(&self) -> &::std::option::Option<crate::types::SaudiArabiaAdditionalInfo> {
        &self.saudi_arabia_additional_info
    }
    /// <p></p>
    pub fn indonesia_additional_info(mut self, input: crate::types::IndonesiaAdditionalInfo) -> Self {
        self.indonesia_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_indonesia_additional_info(mut self, input: ::std::option::Option<crate::types::IndonesiaAdditionalInfo>) -> Self {
        self.indonesia_additional_info = input;
        self
    }
    /// <p></p>
    pub fn get_indonesia_additional_info(&self) -> &::std::option::Option<crate::types::IndonesiaAdditionalInfo> {
        &self.indonesia_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Vietnam.</p>
    pub fn vietnam_additional_info(mut self, input: crate::types::VietnamAdditionalInfo) -> Self {
        self.vietnam_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Vietnam.</p>
    pub fn set_vietnam_additional_info(mut self, input: ::std::option::Option<crate::types::VietnamAdditionalInfo>) -> Self {
        self.vietnam_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Vietnam.</p>
    pub fn get_vietnam_additional_info(&self) -> &::std::option::Option<crate::types::VietnamAdditionalInfo> {
        &self.vietnam_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Egypt.</p>
    pub fn egypt_additional_info(mut self, input: crate::types::EgyptAdditionalInfo) -> Self {
        self.egypt_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Egypt.</p>
    pub fn set_egypt_additional_info(mut self, input: ::std::option::Option<crate::types::EgyptAdditionalInfo>) -> Self {
        self.egypt_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Egypt.</p>
    pub fn get_egypt_additional_info(&self) -> &::std::option::Option<crate::types::EgyptAdditionalInfo> {
        &self.egypt_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Greece.</p>
    pub fn greece_additional_info(mut self, input: crate::types::GreeceAdditionalInfo) -> Self {
        self.greece_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Greece.</p>
    pub fn set_greece_additional_info(mut self, input: ::std::option::Option<crate::types::GreeceAdditionalInfo>) -> Self {
        self.greece_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Greece.</p>
    pub fn get_greece_additional_info(&self) -> &::std::option::Option<crate::types::GreeceAdditionalInfo> {
        &self.greece_additional_info
    }
    /// <p>Additional tax information to specify for a TRN in Uzbekistan.</p>
    pub fn uzbekistan_additional_info(mut self, input: crate::types::UzbekistanAdditionalInfo) -> Self {
        self.uzbekistan_additional_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional tax information to specify for a TRN in Uzbekistan.</p>
    pub fn set_uzbekistan_additional_info(mut self, input: ::std::option::Option<crate::types::UzbekistanAdditionalInfo>) -> Self {
        self.uzbekistan_additional_info = input;
        self
    }
    /// <p>Additional tax information to specify for a TRN in Uzbekistan.</p>
    pub fn get_uzbekistan_additional_info(&self) -> &::std::option::Option<crate::types::UzbekistanAdditionalInfo> {
        &self.uzbekistan_additional_info
    }
    /// Consumes the builder and constructs a [`AdditionalInfoRequest`](crate::types::AdditionalInfoRequest).
    pub fn build(self) -> crate::types::AdditionalInfoRequest {
        crate::types::AdditionalInfoRequest {
            malaysia_additional_info: self.malaysia_additional_info,
            israel_additional_info: self.israel_additional_info,
            estonia_additional_info: self.estonia_additional_info,
            canada_additional_info: self.canada_additional_info,
            spain_additional_info: self.spain_additional_info,
            kenya_additional_info: self.kenya_additional_info,
            south_korea_additional_info: self.south_korea_additional_info,
            turkey_additional_info: self.turkey_additional_info,
            georgia_additional_info: self.georgia_additional_info,
            italy_additional_info: self.italy_additional_info,
            romania_additional_info: self.romania_additional_info,
            ukraine_additional_info: self.ukraine_additional_info,
            poland_additional_info: self.poland_additional_info,
            saudi_arabia_additional_info: self.saudi_arabia_additional_info,
            indonesia_additional_info: self.indonesia_additional_info,
            vietnam_additional_info: self.vietnam_additional_info,
            egypt_additional_info: self.egypt_additional_info,
            greece_additional_info: self.greece_additional_info,
            uzbekistan_additional_info: self.uzbekistan_additional_info,
        }
    }
}
