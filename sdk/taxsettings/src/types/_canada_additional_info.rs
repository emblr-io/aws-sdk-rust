// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your TRN in Canada .</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CanadaAdditionalInfo {
    /// <p>The provincial sales tax ID for your TRN in Canada. This parameter can represent the following:</p>
    /// <ul>
    /// <li>
    /// <p>Provincial sales tax ID number for British Columbia and Saskatchewan provinces</p></li>
    /// <li>
    /// <p>Manitoba retail sales tax ID number for Manitoba province</p></li>
    /// <li>
    /// <p>Quebec sales tax ID number for Quebec province</p></li>
    /// </ul>
    /// <p>The Tax Setting API only accepts this parameter if the TRN is specified for the previous provinces. For other provinces, the Tax Settings API doesn't accept this parameter.</p>
    pub provincial_sales_tax_id: ::std::option::Option<::std::string::String>,
    /// <p>The Quebec Sales Tax ID number. Leave blank if you do not have a Quebec Sales Tax ID number.</p>
    pub canada_quebec_sales_tax_number: ::std::option::Option<::std::string::String>,
    /// <p>Manitoba Retail Sales Tax ID number. Customers purchasing Amazon Web Services services for resale in Manitoba must provide a valid Retail Sales Tax ID number for Manitoba. Leave this blank if you do not have a Retail Sales Tax ID number in Manitoba or are not purchasing Amazon Web Services services for resale.</p>
    pub canada_retail_sales_tax_number: ::std::option::Option<::std::string::String>,
    /// <p>The value for this parameter must be <code>true</code> if the <code>provincialSalesTaxId</code> value is provided for a TRN in British Columbia, Saskatchewan, or Manitoba provinces.</p>
    /// <p>To claim a provincial sales tax (PST) and retail sales tax (RST) reseller exemption, you must confirm that purchases from this account were made for resale. Otherwise, remove the PST or RST number from the <code>provincialSalesTaxId</code> parameter from your request.</p>
    pub is_reseller_account: ::std::option::Option<bool>,
}
impl CanadaAdditionalInfo {
    /// <p>The provincial sales tax ID for your TRN in Canada. This parameter can represent the following:</p>
    /// <ul>
    /// <li>
    /// <p>Provincial sales tax ID number for British Columbia and Saskatchewan provinces</p></li>
    /// <li>
    /// <p>Manitoba retail sales tax ID number for Manitoba province</p></li>
    /// <li>
    /// <p>Quebec sales tax ID number for Quebec province</p></li>
    /// </ul>
    /// <p>The Tax Setting API only accepts this parameter if the TRN is specified for the previous provinces. For other provinces, the Tax Settings API doesn't accept this parameter.</p>
    pub fn provincial_sales_tax_id(&self) -> ::std::option::Option<&str> {
        self.provincial_sales_tax_id.as_deref()
    }
    /// <p>The Quebec Sales Tax ID number. Leave blank if you do not have a Quebec Sales Tax ID number.</p>
    pub fn canada_quebec_sales_tax_number(&self) -> ::std::option::Option<&str> {
        self.canada_quebec_sales_tax_number.as_deref()
    }
    /// <p>Manitoba Retail Sales Tax ID number. Customers purchasing Amazon Web Services services for resale in Manitoba must provide a valid Retail Sales Tax ID number for Manitoba. Leave this blank if you do not have a Retail Sales Tax ID number in Manitoba or are not purchasing Amazon Web Services services for resale.</p>
    pub fn canada_retail_sales_tax_number(&self) -> ::std::option::Option<&str> {
        self.canada_retail_sales_tax_number.as_deref()
    }
    /// <p>The value for this parameter must be <code>true</code> if the <code>provincialSalesTaxId</code> value is provided for a TRN in British Columbia, Saskatchewan, or Manitoba provinces.</p>
    /// <p>To claim a provincial sales tax (PST) and retail sales tax (RST) reseller exemption, you must confirm that purchases from this account were made for resale. Otherwise, remove the PST or RST number from the <code>provincialSalesTaxId</code> parameter from your request.</p>
    pub fn is_reseller_account(&self) -> ::std::option::Option<bool> {
        self.is_reseller_account
    }
}
impl CanadaAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`CanadaAdditionalInfo`](crate::types::CanadaAdditionalInfo).
    pub fn builder() -> crate::types::builders::CanadaAdditionalInfoBuilder {
        crate::types::builders::CanadaAdditionalInfoBuilder::default()
    }
}

/// A builder for [`CanadaAdditionalInfo`](crate::types::CanadaAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CanadaAdditionalInfoBuilder {
    pub(crate) provincial_sales_tax_id: ::std::option::Option<::std::string::String>,
    pub(crate) canada_quebec_sales_tax_number: ::std::option::Option<::std::string::String>,
    pub(crate) canada_retail_sales_tax_number: ::std::option::Option<::std::string::String>,
    pub(crate) is_reseller_account: ::std::option::Option<bool>,
}
impl CanadaAdditionalInfoBuilder {
    /// <p>The provincial sales tax ID for your TRN in Canada. This parameter can represent the following:</p>
    /// <ul>
    /// <li>
    /// <p>Provincial sales tax ID number for British Columbia and Saskatchewan provinces</p></li>
    /// <li>
    /// <p>Manitoba retail sales tax ID number for Manitoba province</p></li>
    /// <li>
    /// <p>Quebec sales tax ID number for Quebec province</p></li>
    /// </ul>
    /// <p>The Tax Setting API only accepts this parameter if the TRN is specified for the previous provinces. For other provinces, the Tax Settings API doesn't accept this parameter.</p>
    pub fn provincial_sales_tax_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.provincial_sales_tax_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The provincial sales tax ID for your TRN in Canada. This parameter can represent the following:</p>
    /// <ul>
    /// <li>
    /// <p>Provincial sales tax ID number for British Columbia and Saskatchewan provinces</p></li>
    /// <li>
    /// <p>Manitoba retail sales tax ID number for Manitoba province</p></li>
    /// <li>
    /// <p>Quebec sales tax ID number for Quebec province</p></li>
    /// </ul>
    /// <p>The Tax Setting API only accepts this parameter if the TRN is specified for the previous provinces. For other provinces, the Tax Settings API doesn't accept this parameter.</p>
    pub fn set_provincial_sales_tax_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.provincial_sales_tax_id = input;
        self
    }
    /// <p>The provincial sales tax ID for your TRN in Canada. This parameter can represent the following:</p>
    /// <ul>
    /// <li>
    /// <p>Provincial sales tax ID number for British Columbia and Saskatchewan provinces</p></li>
    /// <li>
    /// <p>Manitoba retail sales tax ID number for Manitoba province</p></li>
    /// <li>
    /// <p>Quebec sales tax ID number for Quebec province</p></li>
    /// </ul>
    /// <p>The Tax Setting API only accepts this parameter if the TRN is specified for the previous provinces. For other provinces, the Tax Settings API doesn't accept this parameter.</p>
    pub fn get_provincial_sales_tax_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.provincial_sales_tax_id
    }
    /// <p>The Quebec Sales Tax ID number. Leave blank if you do not have a Quebec Sales Tax ID number.</p>
    pub fn canada_quebec_sales_tax_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.canada_quebec_sales_tax_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Quebec Sales Tax ID number. Leave blank if you do not have a Quebec Sales Tax ID number.</p>
    pub fn set_canada_quebec_sales_tax_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.canada_quebec_sales_tax_number = input;
        self
    }
    /// <p>The Quebec Sales Tax ID number. Leave blank if you do not have a Quebec Sales Tax ID number.</p>
    pub fn get_canada_quebec_sales_tax_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.canada_quebec_sales_tax_number
    }
    /// <p>Manitoba Retail Sales Tax ID number. Customers purchasing Amazon Web Services services for resale in Manitoba must provide a valid Retail Sales Tax ID number for Manitoba. Leave this blank if you do not have a Retail Sales Tax ID number in Manitoba or are not purchasing Amazon Web Services services for resale.</p>
    pub fn canada_retail_sales_tax_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.canada_retail_sales_tax_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Manitoba Retail Sales Tax ID number. Customers purchasing Amazon Web Services services for resale in Manitoba must provide a valid Retail Sales Tax ID number for Manitoba. Leave this blank if you do not have a Retail Sales Tax ID number in Manitoba or are not purchasing Amazon Web Services services for resale.</p>
    pub fn set_canada_retail_sales_tax_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.canada_retail_sales_tax_number = input;
        self
    }
    /// <p>Manitoba Retail Sales Tax ID number. Customers purchasing Amazon Web Services services for resale in Manitoba must provide a valid Retail Sales Tax ID number for Manitoba. Leave this blank if you do not have a Retail Sales Tax ID number in Manitoba or are not purchasing Amazon Web Services services for resale.</p>
    pub fn get_canada_retail_sales_tax_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.canada_retail_sales_tax_number
    }
    /// <p>The value for this parameter must be <code>true</code> if the <code>provincialSalesTaxId</code> value is provided for a TRN in British Columbia, Saskatchewan, or Manitoba provinces.</p>
    /// <p>To claim a provincial sales tax (PST) and retail sales tax (RST) reseller exemption, you must confirm that purchases from this account were made for resale. Otherwise, remove the PST or RST number from the <code>provincialSalesTaxId</code> parameter from your request.</p>
    pub fn is_reseller_account(mut self, input: bool) -> Self {
        self.is_reseller_account = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value for this parameter must be <code>true</code> if the <code>provincialSalesTaxId</code> value is provided for a TRN in British Columbia, Saskatchewan, or Manitoba provinces.</p>
    /// <p>To claim a provincial sales tax (PST) and retail sales tax (RST) reseller exemption, you must confirm that purchases from this account were made for resale. Otherwise, remove the PST or RST number from the <code>provincialSalesTaxId</code> parameter from your request.</p>
    pub fn set_is_reseller_account(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_reseller_account = input;
        self
    }
    /// <p>The value for this parameter must be <code>true</code> if the <code>provincialSalesTaxId</code> value is provided for a TRN in British Columbia, Saskatchewan, or Manitoba provinces.</p>
    /// <p>To claim a provincial sales tax (PST) and retail sales tax (RST) reseller exemption, you must confirm that purchases from this account were made for resale. Otherwise, remove the PST or RST number from the <code>provincialSalesTaxId</code> parameter from your request.</p>
    pub fn get_is_reseller_account(&self) -> &::std::option::Option<bool> {
        &self.is_reseller_account
    }
    /// Consumes the builder and constructs a [`CanadaAdditionalInfo`](crate::types::CanadaAdditionalInfo).
    pub fn build(self) -> crate::types::CanadaAdditionalInfo {
        crate::types::CanadaAdditionalInfo {
            provincial_sales_tax_id: self.provincial_sales_tax_id,
            canada_quebec_sales_tax_number: self.canada_quebec_sales_tax_number,
            canada_retail_sales_tax_number: self.canada_retail_sales_tax_number,
            is_reseller_account: self.is_reseller_account,
        }
    }
}
