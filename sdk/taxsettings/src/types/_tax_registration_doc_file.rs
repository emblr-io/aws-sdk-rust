// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The tax registration document.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaxRegistrationDocFile {
    /// <p>The tax registration document name.</p>
    pub file_name: ::std::string::String,
    /// <p>The tax registration document content.</p>
    pub file_content: ::aws_smithy_types::Blob,
}
impl TaxRegistrationDocFile {
    /// <p>The tax registration document name.</p>
    pub fn file_name(&self) -> &str {
        use std::ops::Deref;
        self.file_name.deref()
    }
    /// <p>The tax registration document content.</p>
    pub fn file_content(&self) -> &::aws_smithy_types::Blob {
        &self.file_content
    }
}
impl TaxRegistrationDocFile {
    /// Creates a new builder-style object to manufacture [`TaxRegistrationDocFile`](crate::types::TaxRegistrationDocFile).
    pub fn builder() -> crate::types::builders::TaxRegistrationDocFileBuilder {
        crate::types::builders::TaxRegistrationDocFileBuilder::default()
    }
}

/// A builder for [`TaxRegistrationDocFile`](crate::types::TaxRegistrationDocFile).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TaxRegistrationDocFileBuilder {
    pub(crate) file_name: ::std::option::Option<::std::string::String>,
    pub(crate) file_content: ::std::option::Option<::aws_smithy_types::Blob>,
}
impl TaxRegistrationDocFileBuilder {
    /// <p>The tax registration document name.</p>
    /// This field is required.
    pub fn file_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The tax registration document name.</p>
    pub fn set_file_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_name = input;
        self
    }
    /// <p>The tax registration document name.</p>
    pub fn get_file_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_name
    }
    /// <p>The tax registration document content.</p>
    /// This field is required.
    pub fn file_content(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.file_content = ::std::option::Option::Some(input);
        self
    }
    /// <p>The tax registration document content.</p>
    pub fn set_file_content(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.file_content = input;
        self
    }
    /// <p>The tax registration document content.</p>
    pub fn get_file_content(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.file_content
    }
    /// Consumes the builder and constructs a [`TaxRegistrationDocFile`](crate::types::TaxRegistrationDocFile).
    /// This method will fail if any of the following fields are not set:
    /// - [`file_name`](crate::types::builders::TaxRegistrationDocFileBuilder::file_name)
    /// - [`file_content`](crate::types::builders::TaxRegistrationDocFileBuilder::file_content)
    pub fn build(self) -> ::std::result::Result<crate::types::TaxRegistrationDocFile, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TaxRegistrationDocFile {
            file_name: self.file_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "file_name",
                    "file_name was not specified but it is required when building TaxRegistrationDocFile",
                )
            })?,
            file_content: self.file_content.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "file_content",
                    "file_content was not specified but it is required when building TaxRegistrationDocFile",
                )
            })?,
        })
    }
}
