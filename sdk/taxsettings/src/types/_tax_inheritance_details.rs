// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Tax inheritance information associated with the account.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaxInheritanceDetails {
    /// <p>Tax inheritance parent account information associated with the account.</p>
    pub parent_entity_id: ::std::option::Option<::std::string::String>,
    /// <p>Tax inheritance reason information associated with the account.</p>
    pub inheritance_obtained_reason: ::std::option::Option<::std::string::String>,
}
impl TaxInheritanceDetails {
    /// <p>Tax inheritance parent account information associated with the account.</p>
    pub fn parent_entity_id(&self) -> ::std::option::Option<&str> {
        self.parent_entity_id.as_deref()
    }
    /// <p>Tax inheritance reason information associated with the account.</p>
    pub fn inheritance_obtained_reason(&self) -> ::std::option::Option<&str> {
        self.inheritance_obtained_reason.as_deref()
    }
}
impl TaxInheritanceDetails {
    /// Creates a new builder-style object to manufacture [`TaxInheritanceDetails`](crate::types::TaxInheritanceDetails).
    pub fn builder() -> crate::types::builders::TaxInheritanceDetailsBuilder {
        crate::types::builders::TaxInheritanceDetailsBuilder::default()
    }
}

/// A builder for [`TaxInheritanceDetails`](crate::types::TaxInheritanceDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TaxInheritanceDetailsBuilder {
    pub(crate) parent_entity_id: ::std::option::Option<::std::string::String>,
    pub(crate) inheritance_obtained_reason: ::std::option::Option<::std::string::String>,
}
impl TaxInheritanceDetailsBuilder {
    /// <p>Tax inheritance parent account information associated with the account.</p>
    pub fn parent_entity_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.parent_entity_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Tax inheritance parent account information associated with the account.</p>
    pub fn set_parent_entity_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.parent_entity_id = input;
        self
    }
    /// <p>Tax inheritance parent account information associated with the account.</p>
    pub fn get_parent_entity_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.parent_entity_id
    }
    /// <p>Tax inheritance reason information associated with the account.</p>
    pub fn inheritance_obtained_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inheritance_obtained_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Tax inheritance reason information associated with the account.</p>
    pub fn set_inheritance_obtained_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inheritance_obtained_reason = input;
        self
    }
    /// <p>Tax inheritance reason information associated with the account.</p>
    pub fn get_inheritance_obtained_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.inheritance_obtained_reason
    }
    /// Consumes the builder and constructs a [`TaxInheritanceDetails`](crate::types::TaxInheritanceDetails).
    pub fn build(self) -> crate::types::TaxInheritanceDetails {
        crate::types::TaxInheritanceDetails {
            parent_entity_id: self.parent_entity_id,
            inheritance_obtained_reason: self.inheritance_obtained_reason,
        }
    }
}
