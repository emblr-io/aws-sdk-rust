// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your TRN in Saudi Arabia.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SaudiArabiaAdditionalInfo {
    /// <p>The tax registration number type.</p>
    pub tax_registration_number_type: ::std::option::Option<crate::types::SaudiArabiaTaxRegistrationNumberType>,
}
impl SaudiArabiaAdditionalInfo {
    /// <p>The tax registration number type.</p>
    pub fn tax_registration_number_type(&self) -> ::std::option::Option<&crate::types::SaudiArabiaTaxRegistrationNumberType> {
        self.tax_registration_number_type.as_ref()
    }
}
impl SaudiArabiaAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`SaudiArabiaAdditionalInfo`](crate::types::SaudiArabiaAdditionalInfo).
    pub fn builder() -> crate::types::builders::SaudiArabiaAdditionalInfoBuilder {
        crate::types::builders::SaudiArabiaAdditionalInfoBuilder::default()
    }
}

/// A builder for [`SaudiArabiaAdditionalInfo`](crate::types::SaudiArabiaAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SaudiArabiaAdditionalInfoBuilder {
    pub(crate) tax_registration_number_type: ::std::option::Option<crate::types::SaudiArabiaTaxRegistrationNumberType>,
}
impl SaudiArabiaAdditionalInfoBuilder {
    /// <p>The tax registration number type.</p>
    pub fn tax_registration_number_type(mut self, input: crate::types::SaudiArabiaTaxRegistrationNumberType) -> Self {
        self.tax_registration_number_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The tax registration number type.</p>
    pub fn set_tax_registration_number_type(mut self, input: ::std::option::Option<crate::types::SaudiArabiaTaxRegistrationNumberType>) -> Self {
        self.tax_registration_number_type = input;
        self
    }
    /// <p>The tax registration number type.</p>
    pub fn get_tax_registration_number_type(&self) -> &::std::option::Option<crate::types::SaudiArabiaTaxRegistrationNumberType> {
        &self.tax_registration_number_type
    }
    /// Consumes the builder and constructs a [`SaudiArabiaAdditionalInfo`](crate::types::SaudiArabiaAdditionalInfo).
    pub fn build(self) -> crate::types::SaudiArabiaAdditionalInfo {
        crate::types::SaudiArabiaAdditionalInfo {
            tax_registration_number_type: self.tax_registration_number_type,
        }
    }
}
