// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteSupplementalTaxRegistrationInput {
    /// <p>The unique authority Id for the supplemental TRN information that needs to be deleted.</p>
    pub authority_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSupplementalTaxRegistrationInput {
    /// <p>The unique authority Id for the supplemental TRN information that needs to be deleted.</p>
    pub fn authority_id(&self) -> ::std::option::Option<&str> {
        self.authority_id.as_deref()
    }
}
impl DeleteSupplementalTaxRegistrationInput {
    /// Creates a new builder-style object to manufacture [`DeleteSupplementalTaxRegistrationInput`](crate::operation::delete_supplemental_tax_registration::DeleteSupplementalTaxRegistrationInput).
    pub fn builder() -> crate::operation::delete_supplemental_tax_registration::builders::DeleteSupplementalTaxRegistrationInputBuilder {
        crate::operation::delete_supplemental_tax_registration::builders::DeleteSupplementalTaxRegistrationInputBuilder::default()
    }
}

/// A builder for [`DeleteSupplementalTaxRegistrationInput`](crate::operation::delete_supplemental_tax_registration::DeleteSupplementalTaxRegistrationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteSupplementalTaxRegistrationInputBuilder {
    pub(crate) authority_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSupplementalTaxRegistrationInputBuilder {
    /// <p>The unique authority Id for the supplemental TRN information that needs to be deleted.</p>
    /// This field is required.
    pub fn authority_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authority_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique authority Id for the supplemental TRN information that needs to be deleted.</p>
    pub fn set_authority_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authority_id = input;
        self
    }
    /// <p>The unique authority Id for the supplemental TRN information that needs to be deleted.</p>
    pub fn get_authority_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.authority_id
    }
    /// Consumes the builder and constructs a [`DeleteSupplementalTaxRegistrationInput`](crate::operation::delete_supplemental_tax_registration::DeleteSupplementalTaxRegistrationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_supplemental_tax_registration::DeleteSupplementalTaxRegistrationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_supplemental_tax_registration::DeleteSupplementalTaxRegistrationInput {
                authority_id: self.authority_id,
            },
        )
    }
}
