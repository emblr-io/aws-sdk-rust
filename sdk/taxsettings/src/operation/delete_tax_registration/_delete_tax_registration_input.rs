// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteTaxRegistrationInput {
    /// <p>Unique account identifier for the TRN information that needs to be deleted. If this isn't passed, the account ID corresponding to the credentials of the API caller will be used for this parameter.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
}
impl DeleteTaxRegistrationInput {
    /// <p>Unique account identifier for the TRN information that needs to be deleted. If this isn't passed, the account ID corresponding to the credentials of the API caller will be used for this parameter.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
}
impl DeleteTaxRegistrationInput {
    /// Creates a new builder-style object to manufacture [`DeleteTaxRegistrationInput`](crate::operation::delete_tax_registration::DeleteTaxRegistrationInput).
    pub fn builder() -> crate::operation::delete_tax_registration::builders::DeleteTaxRegistrationInputBuilder {
        crate::operation::delete_tax_registration::builders::DeleteTaxRegistrationInputBuilder::default()
    }
}

/// A builder for [`DeleteTaxRegistrationInput`](crate::operation::delete_tax_registration::DeleteTaxRegistrationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteTaxRegistrationInputBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
}
impl DeleteTaxRegistrationInputBuilder {
    /// <p>Unique account identifier for the TRN information that needs to be deleted. If this isn't passed, the account ID corresponding to the credentials of the API caller will be used for this parameter.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique account identifier for the TRN information that needs to be deleted. If this isn't passed, the account ID corresponding to the credentials of the API caller will be used for this parameter.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Unique account identifier for the TRN information that needs to be deleted. If this isn't passed, the account ID corresponding to the credentials of the API caller will be used for this parameter.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// Consumes the builder and constructs a [`DeleteTaxRegistrationInput`](crate::operation::delete_tax_registration::DeleteTaxRegistrationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_tax_registration::DeleteTaxRegistrationInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_tax_registration::DeleteTaxRegistrationInput { account_id: self.account_id })
    }
}
