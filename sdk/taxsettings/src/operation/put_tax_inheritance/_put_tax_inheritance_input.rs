// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutTaxInheritanceInput {
    /// <p>The tax inheritance status.</p>
    pub heritage_status: ::std::option::Option<crate::types::HeritageStatus>,
}
impl PutTaxInheritanceInput {
    /// <p>The tax inheritance status.</p>
    pub fn heritage_status(&self) -> ::std::option::Option<&crate::types::HeritageStatus> {
        self.heritage_status.as_ref()
    }
}
impl PutTaxInheritanceInput {
    /// Creates a new builder-style object to manufacture [`PutTaxInheritanceInput`](crate::operation::put_tax_inheritance::PutTaxInheritanceInput).
    pub fn builder() -> crate::operation::put_tax_inheritance::builders::PutTaxInheritanceInputBuilder {
        crate::operation::put_tax_inheritance::builders::PutTaxInheritanceInputBuilder::default()
    }
}

/// A builder for [`PutTaxInheritanceInput`](crate::operation::put_tax_inheritance::PutTaxInheritanceInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutTaxInheritanceInputBuilder {
    pub(crate) heritage_status: ::std::option::Option<crate::types::HeritageStatus>,
}
impl PutTaxInheritanceInputBuilder {
    /// <p>The tax inheritance status.</p>
    pub fn heritage_status(mut self, input: crate::types::HeritageStatus) -> Self {
        self.heritage_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The tax inheritance status.</p>
    pub fn set_heritage_status(mut self, input: ::std::option::Option<crate::types::HeritageStatus>) -> Self {
        self.heritage_status = input;
        self
    }
    /// <p>The tax inheritance status.</p>
    pub fn get_heritage_status(&self) -> &::std::option::Option<crate::types::HeritageStatus> {
        &self.heritage_status
    }
    /// Consumes the builder and constructs a [`PutTaxInheritanceInput`](crate::operation::put_tax_inheritance::PutTaxInheritanceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::put_tax_inheritance::PutTaxInheritanceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::put_tax_inheritance::PutTaxInheritanceInput {
            heritage_status: self.heritage_status,
        })
    }
}
