// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The violation details for a web ACL whose configuration is incompatible with the Firewall Manager policy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WebAclHasIncompatibleConfigurationViolation {
    /// <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    pub web_acl_arn: ::std::option::Option<::std::string::String>,
    /// <p>Information about the problems that Firewall Manager encountered with the web ACL configuration.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl WebAclHasIncompatibleConfigurationViolation {
    /// <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    pub fn web_acl_arn(&self) -> ::std::option::Option<&str> {
        self.web_acl_arn.as_deref()
    }
    /// <p>Information about the problems that Firewall Manager encountered with the web ACL configuration.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl WebAclHasIncompatibleConfigurationViolation {
    /// Creates a new builder-style object to manufacture [`WebAclHasIncompatibleConfigurationViolation`](crate::types::WebAclHasIncompatibleConfigurationViolation).
    pub fn builder() -> crate::types::builders::WebAclHasIncompatibleConfigurationViolationBuilder {
        crate::types::builders::WebAclHasIncompatibleConfigurationViolationBuilder::default()
    }
}

/// A builder for [`WebAclHasIncompatibleConfigurationViolation`](crate::types::WebAclHasIncompatibleConfigurationViolation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WebAclHasIncompatibleConfigurationViolationBuilder {
    pub(crate) web_acl_arn: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl WebAclHasIncompatibleConfigurationViolationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    pub fn web_acl_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.web_acl_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    pub fn set_web_acl_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.web_acl_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    pub fn get_web_acl_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.web_acl_arn
    }
    /// <p>Information about the problems that Firewall Manager encountered with the web ACL configuration.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Information about the problems that Firewall Manager encountered with the web ACL configuration.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>Information about the problems that Firewall Manager encountered with the web ACL configuration.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`WebAclHasIncompatibleConfigurationViolation`](crate::types::WebAclHasIncompatibleConfigurationViolation).
    pub fn build(self) -> crate::types::WebAclHasIncompatibleConfigurationViolation {
        crate::types::WebAclHasIncompatibleConfigurationViolation {
            web_acl_arn: self.web_acl_arn,
            description: self.description,
        }
    }
}
