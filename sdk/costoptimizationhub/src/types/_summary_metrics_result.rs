// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The results or descriptions for the additional metrics, based on whether the metrics were or were not requested.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SummaryMetricsResult {
    /// <p>The savings percentage based on your Amazon Web Services spend over the past 30 days.</p><note>
    /// <p>Savings percentage is only supported when filtering by Region, account ID, or tags.</p>
    /// </note>
    pub savings_percentage: ::std::option::Option<::std::string::String>,
}
impl SummaryMetricsResult {
    /// <p>The savings percentage based on your Amazon Web Services spend over the past 30 days.</p><note>
    /// <p>Savings percentage is only supported when filtering by Region, account ID, or tags.</p>
    /// </note>
    pub fn savings_percentage(&self) -> ::std::option::Option<&str> {
        self.savings_percentage.as_deref()
    }
}
impl SummaryMetricsResult {
    /// Creates a new builder-style object to manufacture [`SummaryMetricsResult`](crate::types::SummaryMetricsResult).
    pub fn builder() -> crate::types::builders::SummaryMetricsResultBuilder {
        crate::types::builders::SummaryMetricsResultBuilder::default()
    }
}

/// A builder for [`SummaryMetricsResult`](crate::types::SummaryMetricsResult).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SummaryMetricsResultBuilder {
    pub(crate) savings_percentage: ::std::option::Option<::std::string::String>,
}
impl SummaryMetricsResultBuilder {
    /// <p>The savings percentage based on your Amazon Web Services spend over the past 30 days.</p><note>
    /// <p>Savings percentage is only supported when filtering by Region, account ID, or tags.</p>
    /// </note>
    pub fn savings_percentage(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.savings_percentage = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The savings percentage based on your Amazon Web Services spend over the past 30 days.</p><note>
    /// <p>Savings percentage is only supported when filtering by Region, account ID, or tags.</p>
    /// </note>
    pub fn set_savings_percentage(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.savings_percentage = input;
        self
    }
    /// <p>The savings percentage based on your Amazon Web Services spend over the past 30 days.</p><note>
    /// <p>Savings percentage is only supported when filtering by Region, account ID, or tags.</p>
    /// </note>
    pub fn get_savings_percentage(&self) -> &::std::option::Option<::std::string::String> {
        &self.savings_percentage
    }
    /// Consumes the builder and constructs a [`SummaryMetricsResult`](crate::types::SummaryMetricsResult).
    pub fn build(self) -> crate::types::SummaryMetricsResult {
        crate::types::SummaryMetricsResult {
            savings_percentage: self.savings_percentage,
        }
    }
}
