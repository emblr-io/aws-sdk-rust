// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the details of an Amazon RDS DB instance.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RdsDbInstance {
    /// <p>The Amazon RDS DB instance configuration used for recommendations.</p>
    pub configuration: ::std::option::Option<crate::types::RdsDbInstanceConfiguration>,
    /// <p>Cost impact of the resource recommendation.</p>
    pub cost_calculation: ::std::option::Option<crate::types::ResourceCostCalculation>,
}
impl RdsDbInstance {
    /// <p>The Amazon RDS DB instance configuration used for recommendations.</p>
    pub fn configuration(&self) -> ::std::option::Option<&crate::types::RdsDbInstanceConfiguration> {
        self.configuration.as_ref()
    }
    /// <p>Cost impact of the resource recommendation.</p>
    pub fn cost_calculation(&self) -> ::std::option::Option<&crate::types::ResourceCostCalculation> {
        self.cost_calculation.as_ref()
    }
}
impl RdsDbInstance {
    /// Creates a new builder-style object to manufacture [`RdsDbInstance`](crate::types::RdsDbInstance).
    pub fn builder() -> crate::types::builders::RdsDbInstanceBuilder {
        crate::types::builders::RdsDbInstanceBuilder::default()
    }
}

/// A builder for [`RdsDbInstance`](crate::types::RdsDbInstance).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RdsDbInstanceBuilder {
    pub(crate) configuration: ::std::option::Option<crate::types::RdsDbInstanceConfiguration>,
    pub(crate) cost_calculation: ::std::option::Option<crate::types::ResourceCostCalculation>,
}
impl RdsDbInstanceBuilder {
    /// <p>The Amazon RDS DB instance configuration used for recommendations.</p>
    pub fn configuration(mut self, input: crate::types::RdsDbInstanceConfiguration) -> Self {
        self.configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon RDS DB instance configuration used for recommendations.</p>
    pub fn set_configuration(mut self, input: ::std::option::Option<crate::types::RdsDbInstanceConfiguration>) -> Self {
        self.configuration = input;
        self
    }
    /// <p>The Amazon RDS DB instance configuration used for recommendations.</p>
    pub fn get_configuration(&self) -> &::std::option::Option<crate::types::RdsDbInstanceConfiguration> {
        &self.configuration
    }
    /// <p>Cost impact of the resource recommendation.</p>
    pub fn cost_calculation(mut self, input: crate::types::ResourceCostCalculation) -> Self {
        self.cost_calculation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Cost impact of the resource recommendation.</p>
    pub fn set_cost_calculation(mut self, input: ::std::option::Option<crate::types::ResourceCostCalculation>) -> Self {
        self.cost_calculation = input;
        self
    }
    /// <p>Cost impact of the resource recommendation.</p>
    pub fn get_cost_calculation(&self) -> &::std::option::Option<crate::types::ResourceCostCalculation> {
        &self.cost_calculation
    }
    /// Consumes the builder and constructs a [`RdsDbInstance`](crate::types::RdsDbInstance).
    pub fn build(self) -> crate::types::RdsDbInstance {
        crate::types::RdsDbInstance {
            configuration: self.configuration,
            cost_calculation: self.cost_calculation,
        }
    }
}
