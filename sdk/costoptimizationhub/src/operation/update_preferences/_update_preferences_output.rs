// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdatePreferencesOutput {
    /// <p>Shows the status of the "savings estimation mode" preference.</p>
    pub savings_estimation_mode: ::std::option::Option<crate::types::SavingsEstimationMode>,
    /// <p>Shows the status of the "member account discount visibility" preference.</p>
    pub member_account_discount_visibility: ::std::option::Option<crate::types::MemberAccountDiscountVisibility>,
    /// <p>Shows the updated preferences for how Reserved Instances and Savings Plans cost-saving opportunities are prioritized in terms of payment option and term length.</p>
    pub preferred_commitment: ::std::option::Option<crate::types::PreferredCommitment>,
    _request_id: Option<String>,
}
impl UpdatePreferencesOutput {
    /// <p>Shows the status of the "savings estimation mode" preference.</p>
    pub fn savings_estimation_mode(&self) -> ::std::option::Option<&crate::types::SavingsEstimationMode> {
        self.savings_estimation_mode.as_ref()
    }
    /// <p>Shows the status of the "member account discount visibility" preference.</p>
    pub fn member_account_discount_visibility(&self) -> ::std::option::Option<&crate::types::MemberAccountDiscountVisibility> {
        self.member_account_discount_visibility.as_ref()
    }
    /// <p>Shows the updated preferences for how Reserved Instances and Savings Plans cost-saving opportunities are prioritized in terms of payment option and term length.</p>
    pub fn preferred_commitment(&self) -> ::std::option::Option<&crate::types::PreferredCommitment> {
        self.preferred_commitment.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for UpdatePreferencesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdatePreferencesOutput {
    /// Creates a new builder-style object to manufacture [`UpdatePreferencesOutput`](crate::operation::update_preferences::UpdatePreferencesOutput).
    pub fn builder() -> crate::operation::update_preferences::builders::UpdatePreferencesOutputBuilder {
        crate::operation::update_preferences::builders::UpdatePreferencesOutputBuilder::default()
    }
}

/// A builder for [`UpdatePreferencesOutput`](crate::operation::update_preferences::UpdatePreferencesOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdatePreferencesOutputBuilder {
    pub(crate) savings_estimation_mode: ::std::option::Option<crate::types::SavingsEstimationMode>,
    pub(crate) member_account_discount_visibility: ::std::option::Option<crate::types::MemberAccountDiscountVisibility>,
    pub(crate) preferred_commitment: ::std::option::Option<crate::types::PreferredCommitment>,
    _request_id: Option<String>,
}
impl UpdatePreferencesOutputBuilder {
    /// <p>Shows the status of the "savings estimation mode" preference.</p>
    pub fn savings_estimation_mode(mut self, input: crate::types::SavingsEstimationMode) -> Self {
        self.savings_estimation_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Shows the status of the "savings estimation mode" preference.</p>
    pub fn set_savings_estimation_mode(mut self, input: ::std::option::Option<crate::types::SavingsEstimationMode>) -> Self {
        self.savings_estimation_mode = input;
        self
    }
    /// <p>Shows the status of the "savings estimation mode" preference.</p>
    pub fn get_savings_estimation_mode(&self) -> &::std::option::Option<crate::types::SavingsEstimationMode> {
        &self.savings_estimation_mode
    }
    /// <p>Shows the status of the "member account discount visibility" preference.</p>
    pub fn member_account_discount_visibility(mut self, input: crate::types::MemberAccountDiscountVisibility) -> Self {
        self.member_account_discount_visibility = ::std::option::Option::Some(input);
        self
    }
    /// <p>Shows the status of the "member account discount visibility" preference.</p>
    pub fn set_member_account_discount_visibility(mut self, input: ::std::option::Option<crate::types::MemberAccountDiscountVisibility>) -> Self {
        self.member_account_discount_visibility = input;
        self
    }
    /// <p>Shows the status of the "member account discount visibility" preference.</p>
    pub fn get_member_account_discount_visibility(&self) -> &::std::option::Option<crate::types::MemberAccountDiscountVisibility> {
        &self.member_account_discount_visibility
    }
    /// <p>Shows the updated preferences for how Reserved Instances and Savings Plans cost-saving opportunities are prioritized in terms of payment option and term length.</p>
    pub fn preferred_commitment(mut self, input: crate::types::PreferredCommitment) -> Self {
        self.preferred_commitment = ::std::option::Option::Some(input);
        self
    }
    /// <p>Shows the updated preferences for how Reserved Instances and Savings Plans cost-saving opportunities are prioritized in terms of payment option and term length.</p>
    pub fn set_preferred_commitment(mut self, input: ::std::option::Option<crate::types::PreferredCommitment>) -> Self {
        self.preferred_commitment = input;
        self
    }
    /// <p>Shows the updated preferences for how Reserved Instances and Savings Plans cost-saving opportunities are prioritized in terms of payment option and term length.</p>
    pub fn get_preferred_commitment(&self) -> &::std::option::Option<crate::types::PreferredCommitment> {
        &self.preferred_commitment
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdatePreferencesOutput`](crate::operation::update_preferences::UpdatePreferencesOutput).
    pub fn build(self) -> crate::operation::update_preferences::UpdatePreferencesOutput {
        crate::operation::update_preferences::UpdatePreferencesOutput {
            savings_estimation_mode: self.savings_estimation_mode,
            member_account_discount_visibility: self.member_account_discount_visibility,
            preferred_commitment: self.preferred_commitment,
            _request_id: self._request_id,
        }
    }
}
