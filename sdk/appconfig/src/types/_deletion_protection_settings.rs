// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A parameter to configure deletion protection. Deletion protection prevents a user from deleting a configuration profile or an environment if AppConfig has called either <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for the configuration profile or from the environment during the specified interval.</p>
/// <p>The default interval specified by <code>ProtectionPeriodInMinutes</code> is 60. <code>DeletionProtectionCheck</code> skips configuration profiles and environments that were created in the past hour.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeletionProtectionSettings {
    /// <p>A parameter that indicates if deletion protection is enabled or not.</p>
    pub enabled: ::std::option::Option<bool>,
    /// <p>The time interval during which AppConfig monitors for calls to <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for a configuration profile or from an environment. AppConfig returns an error if a user calls or for the designated configuration profile or environment. To bypass the error and delete a configuration profile or an environment, specify <code>BYPASS</code> for the <code>DeletionProtectionCheck</code> parameter for either or .</p>
    pub protection_period_in_minutes: ::std::option::Option<i32>,
}
impl DeletionProtectionSettings {
    /// <p>A parameter that indicates if deletion protection is enabled or not.</p>
    pub fn enabled(&self) -> ::std::option::Option<bool> {
        self.enabled
    }
    /// <p>The time interval during which AppConfig monitors for calls to <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for a configuration profile or from an environment. AppConfig returns an error if a user calls or for the designated configuration profile or environment. To bypass the error and delete a configuration profile or an environment, specify <code>BYPASS</code> for the <code>DeletionProtectionCheck</code> parameter for either or .</p>
    pub fn protection_period_in_minutes(&self) -> ::std::option::Option<i32> {
        self.protection_period_in_minutes
    }
}
impl DeletionProtectionSettings {
    /// Creates a new builder-style object to manufacture [`DeletionProtectionSettings`](crate::types::DeletionProtectionSettings).
    pub fn builder() -> crate::types::builders::DeletionProtectionSettingsBuilder {
        crate::types::builders::DeletionProtectionSettingsBuilder::default()
    }
}

/// A builder for [`DeletionProtectionSettings`](crate::types::DeletionProtectionSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeletionProtectionSettingsBuilder {
    pub(crate) enabled: ::std::option::Option<bool>,
    pub(crate) protection_period_in_minutes: ::std::option::Option<i32>,
}
impl DeletionProtectionSettingsBuilder {
    /// <p>A parameter that indicates if deletion protection is enabled or not.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>A parameter that indicates if deletion protection is enabled or not.</p>
    pub fn set_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>A parameter that indicates if deletion protection is enabled or not.</p>
    pub fn get_enabled(&self) -> &::std::option::Option<bool> {
        &self.enabled
    }
    /// <p>The time interval during which AppConfig monitors for calls to <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for a configuration profile or from an environment. AppConfig returns an error if a user calls or for the designated configuration profile or environment. To bypass the error and delete a configuration profile or an environment, specify <code>BYPASS</code> for the <code>DeletionProtectionCheck</code> parameter for either or .</p>
    pub fn protection_period_in_minutes(mut self, input: i32) -> Self {
        self.protection_period_in_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time interval during which AppConfig monitors for calls to <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for a configuration profile or from an environment. AppConfig returns an error if a user calls or for the designated configuration profile or environment. To bypass the error and delete a configuration profile or an environment, specify <code>BYPASS</code> for the <code>DeletionProtectionCheck</code> parameter for either or .</p>
    pub fn set_protection_period_in_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.protection_period_in_minutes = input;
        self
    }
    /// <p>The time interval during which AppConfig monitors for calls to <a href="https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html">GetLatestConfiguration</a> or for a configuration profile or from an environment. AppConfig returns an error if a user calls or for the designated configuration profile or environment. To bypass the error and delete a configuration profile or an environment, specify <code>BYPASS</code> for the <code>DeletionProtectionCheck</code> parameter for either or .</p>
    pub fn get_protection_period_in_minutes(&self) -> &::std::option::Option<i32> {
        &self.protection_period_in_minutes
    }
    /// Consumes the builder and constructs a [`DeletionProtectionSettings`](crate::types::DeletionProtectionSettings).
    pub fn build(self) -> crate::types::DeletionProtectionSettings {
        crate::types::DeletionProtectionSettings {
            enabled: self.enabled,
            protection_period_in_minutes: self.protection_period_in_minutes,
        }
    }
}
