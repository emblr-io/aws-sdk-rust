// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetLinkInput {
    /// <p>The ARN of the link to retrieve information for.</p>
    pub identifier: ::std::option::Option<::std::string::String>,
    /// <p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p>
    /// <p>The default value is <code>false</code>.</p>
    pub include_tags: ::std::option::Option<bool>,
}
impl GetLinkInput {
    /// <p>The ARN of the link to retrieve information for.</p>
    pub fn identifier(&self) -> ::std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p>
    /// <p>The default value is <code>false</code>.</p>
    pub fn include_tags(&self) -> ::std::option::Option<bool> {
        self.include_tags
    }
}
impl GetLinkInput {
    /// Creates a new builder-style object to manufacture [`GetLinkInput`](crate::operation::get_link::GetLinkInput).
    pub fn builder() -> crate::operation::get_link::builders::GetLinkInputBuilder {
        crate::operation::get_link::builders::GetLinkInputBuilder::default()
    }
}

/// A builder for [`GetLinkInput`](crate::operation::get_link::GetLinkInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetLinkInputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
    pub(crate) include_tags: ::std::option::Option<bool>,
}
impl GetLinkInputBuilder {
    /// <p>The ARN of the link to retrieve information for.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the link to retrieve information for.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The ARN of the link to retrieve information for.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// <p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p>
    /// <p>The default value is <code>false</code>.</p>
    pub fn include_tags(mut self, input: bool) -> Self {
        self.include_tags = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p>
    /// <p>The default value is <code>false</code>.</p>
    pub fn set_include_tags(mut self, input: ::std::option::Option<bool>) -> Self {
        self.include_tags = input;
        self
    }
    /// <p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p>
    /// <p>The default value is <code>false</code>.</p>
    pub fn get_include_tags(&self) -> &::std::option::Option<bool> {
        &self.include_tags
    }
    /// Consumes the builder and constructs a [`GetLinkInput`](crate::operation::get_link::GetLinkInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_link::GetLinkInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_link::GetLinkInput {
            identifier: self.identifier,
            include_tags: self.include_tags,
        })
    }
}
