// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an authorization configuration. Use <code>AuthMode</code> to specify the publishing and subscription authorization configuration for an Event API.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AuthMode {
    /// <p>The authorization type.</p>
    pub auth_type: crate::types::AuthenticationType,
}
impl AuthMode {
    /// <p>The authorization type.</p>
    pub fn auth_type(&self) -> &crate::types::AuthenticationType {
        &self.auth_type
    }
}
impl AuthMode {
    /// Creates a new builder-style object to manufacture [`AuthMode`](crate::types::AuthMode).
    pub fn builder() -> crate::types::builders::AuthModeBuilder {
        crate::types::builders::AuthModeBuilder::default()
    }
}

/// A builder for [`AuthMode`](crate::types::AuthMode).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AuthModeBuilder {
    pub(crate) auth_type: ::std::option::Option<crate::types::AuthenticationType>,
}
impl AuthModeBuilder {
    /// <p>The authorization type.</p>
    /// This field is required.
    pub fn auth_type(mut self, input: crate::types::AuthenticationType) -> Self {
        self.auth_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The authorization type.</p>
    pub fn set_auth_type(mut self, input: ::std::option::Option<crate::types::AuthenticationType>) -> Self {
        self.auth_type = input;
        self
    }
    /// <p>The authorization type.</p>
    pub fn get_auth_type(&self) -> &::std::option::Option<crate::types::AuthenticationType> {
        &self.auth_type
    }
    /// Consumes the builder and constructs a [`AuthMode`](crate::types::AuthMode).
    /// This method will fail if any of the following fields are not set:
    /// - [`auth_type`](crate::types::builders::AuthModeBuilder::auth_type)
    pub fn build(self) -> ::std::result::Result<crate::types::AuthMode, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AuthMode {
            auth_type: self.auth_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "auth_type",
                    "auth_type was not specified but it is required when building AuthMode",
                )
            })?,
        })
    }
}
