// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateApiOutput {
    /// <p>The <code>Api</code> object.</p>
    pub api: ::std::option::Option<crate::types::Api>,
    _request_id: Option<String>,
}
impl UpdateApiOutput {
    /// <p>The <code>Api</code> object.</p>
    pub fn api(&self) -> ::std::option::Option<&crate::types::Api> {
        self.api.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for UpdateApiOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateApiOutput {
    /// Creates a new builder-style object to manufacture [`UpdateApiOutput`](crate::operation::update_api::UpdateApiOutput).
    pub fn builder() -> crate::operation::update_api::builders::UpdateApiOutputBuilder {
        crate::operation::update_api::builders::UpdateApiOutputBuilder::default()
    }
}

/// A builder for [`UpdateApiOutput`](crate::operation::update_api::UpdateApiOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateApiOutputBuilder {
    pub(crate) api: ::std::option::Option<crate::types::Api>,
    _request_id: Option<String>,
}
impl UpdateApiOutputBuilder {
    /// <p>The <code>Api</code> object.</p>
    pub fn api(mut self, input: crate::types::Api) -> Self {
        self.api = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>Api</code> object.</p>
    pub fn set_api(mut self, input: ::std::option::Option<crate::types::Api>) -> Self {
        self.api = input;
        self
    }
    /// <p>The <code>Api</code> object.</p>
    pub fn get_api(&self) -> &::std::option::Option<crate::types::Api> {
        &self.api
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateApiOutput`](crate::operation::update_api::UpdateApiOutput).
    pub fn build(self) -> crate::operation::update_api::UpdateApiOutput {
        crate::operation::update_api::UpdateApiOutput {
            api: self.api,
            _request_id: self._request_id,
        }
    }
}
