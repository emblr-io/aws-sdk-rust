// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImportKeyMaterialOutput {
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN">key ARN</a>) of the KMS key into which key material was imported.</p>
    pub key_id: ::std::option::Option<::std::string::String>,
    /// <p>Identifies the imported key material.</p>
    pub key_material_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ImportKeyMaterialOutput {
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN">key ARN</a>) of the KMS key into which key material was imported.</p>
    pub fn key_id(&self) -> ::std::option::Option<&str> {
        self.key_id.as_deref()
    }
    /// <p>Identifies the imported key material.</p>
    pub fn key_material_id(&self) -> ::std::option::Option<&str> {
        self.key_material_id.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ImportKeyMaterialOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ImportKeyMaterialOutput {
    /// Creates a new builder-style object to manufacture [`ImportKeyMaterialOutput`](crate::operation::import_key_material::ImportKeyMaterialOutput).
    pub fn builder() -> crate::operation::import_key_material::builders::ImportKeyMaterialOutputBuilder {
        crate::operation::import_key_material::builders::ImportKeyMaterialOutputBuilder::default()
    }
}

/// A builder for [`ImportKeyMaterialOutput`](crate::operation::import_key_material::ImportKeyMaterialOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImportKeyMaterialOutputBuilder {
    pub(crate) key_id: ::std::option::Option<::std::string::String>,
    pub(crate) key_material_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ImportKeyMaterialOutputBuilder {
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN">key ARN</a>) of the KMS key into which key material was imported.</p>
    pub fn key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN">key ARN</a>) of the KMS key into which key material was imported.</p>
    pub fn set_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key_id = input;
        self
    }
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN">key ARN</a>) of the KMS key into which key material was imported.</p>
    pub fn get_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.key_id
    }
    /// <p>Identifies the imported key material.</p>
    pub fn key_material_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key_material_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Identifies the imported key material.</p>
    pub fn set_key_material_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key_material_id = input;
        self
    }
    /// <p>Identifies the imported key material.</p>
    pub fn get_key_material_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.key_material_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ImportKeyMaterialOutput`](crate::operation::import_key_material::ImportKeyMaterialOutput).
    pub fn build(self) -> crate::operation::import_key_material::ImportKeyMaterialOutput {
        crate::operation::import_key_material::ImportKeyMaterialOutput {
            key_id: self.key_id,
            key_material_id: self.key_material_id,
            _request_id: self._request_id,
        }
    }
}
