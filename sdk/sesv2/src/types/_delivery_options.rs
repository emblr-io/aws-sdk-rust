// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Used to associate a configuration set with a dedicated IP pool.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeliveryOptions {
    /// <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    pub tls_policy: ::std::option::Option<crate::types::TlsPolicy>,
    /// <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    pub sending_pool_name: ::std::option::Option<::std::string::String>,
    /// <p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email. If specified, the value must greater than or equal to 300 seconds (5 minutes) and less than or equal to 50400 seconds (840 minutes).</p>
    pub max_delivery_seconds: ::std::option::Option<i64>,
}
impl DeliveryOptions {
    /// <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    pub fn tls_policy(&self) -> ::std::option::Option<&crate::types::TlsPolicy> {
        self.tls_policy.as_ref()
    }
    /// <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    pub fn sending_pool_name(&self) -> ::std::option::Option<&str> {
        self.sending_pool_name.as_deref()
    }
    /// <p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email. If specified, the value must greater than or equal to 300 seconds (5 minutes) and less than or equal to 50400 seconds (840 minutes).</p>
    pub fn max_delivery_seconds(&self) -> ::std::option::Option<i64> {
        self.max_delivery_seconds
    }
}
impl DeliveryOptions {
    /// Creates a new builder-style object to manufacture [`DeliveryOptions`](crate::types::DeliveryOptions).
    pub fn builder() -> crate::types::builders::DeliveryOptionsBuilder {
        crate::types::builders::DeliveryOptionsBuilder::default()
    }
}

/// A builder for [`DeliveryOptions`](crate::types::DeliveryOptions).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeliveryOptionsBuilder {
    pub(crate) tls_policy: ::std::option::Option<crate::types::TlsPolicy>,
    pub(crate) sending_pool_name: ::std::option::Option<::std::string::String>,
    pub(crate) max_delivery_seconds: ::std::option::Option<i64>,
}
impl DeliveryOptionsBuilder {
    /// <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    pub fn tls_policy(mut self, input: crate::types::TlsPolicy) -> Self {
        self.tls_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    pub fn set_tls_policy(mut self, input: ::std::option::Option<crate::types::TlsPolicy>) -> Self {
        self.tls_policy = input;
        self
    }
    /// <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    pub fn get_tls_policy(&self) -> &::std::option::Option<crate::types::TlsPolicy> {
        &self.tls_policy
    }
    /// <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    pub fn sending_pool_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sending_pool_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    pub fn set_sending_pool_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sending_pool_name = input;
        self
    }
    /// <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    pub fn get_sending_pool_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.sending_pool_name
    }
    /// <p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email. If specified, the value must greater than or equal to 300 seconds (5 minutes) and less than or equal to 50400 seconds (840 minutes).</p>
    pub fn max_delivery_seconds(mut self, input: i64) -> Self {
        self.max_delivery_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email. If specified, the value must greater than or equal to 300 seconds (5 minutes) and less than or equal to 50400 seconds (840 minutes).</p>
    pub fn set_max_delivery_seconds(mut self, input: ::std::option::Option<i64>) -> Self {
        self.max_delivery_seconds = input;
        self
    }
    /// <p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email. If specified, the value must greater than or equal to 300 seconds (5 minutes) and less than or equal to 50400 seconds (840 minutes).</p>
    pub fn get_max_delivery_seconds(&self) -> &::std::option::Option<i64> {
        &self.max_delivery_seconds
    }
    /// Consumes the builder and constructs a [`DeliveryOptions`](crate::types::DeliveryOptions).
    pub fn build(self) -> crate::types::DeliveryOptions {
        crate::types::DeliveryOptions {
            tls_policy: self.tls_policy,
            sending_pool_name: self.sending_pool_name,
            max_delivery_seconds: self.max_delivery_seconds,
        }
    }
}
