// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCallerAccessGrantsOutput {
    /// <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request.</p>
    pub caller_access_grants_list: ::std::option::Option<::std::vec::Vec<crate::types::ListCallerAccessGrantsEntry>>,
    _request_id: Option<String>,
}
impl ListCallerAccessGrantsOutput {
    /// <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.caller_access_grants_list.is_none()`.
    pub fn caller_access_grants_list(&self) -> &[crate::types::ListCallerAccessGrantsEntry] {
        self.caller_access_grants_list.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for ListCallerAccessGrantsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCallerAccessGrantsOutput {
    /// Creates a new builder-style object to manufacture [`ListCallerAccessGrantsOutput`](crate::operation::list_caller_access_grants::ListCallerAccessGrantsOutput).
    pub fn builder() -> crate::operation::list_caller_access_grants::builders::ListCallerAccessGrantsOutputBuilder {
        crate::operation::list_caller_access_grants::builders::ListCallerAccessGrantsOutputBuilder::default()
    }
}

/// A builder for [`ListCallerAccessGrantsOutput`](crate::operation::list_caller_access_grants::ListCallerAccessGrantsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListCallerAccessGrantsOutputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) caller_access_grants_list: ::std::option::Option<::std::vec::Vec<crate::types::ListCallerAccessGrantsEntry>>,
    _request_id: Option<String>,
}
impl ListCallerAccessGrantsOutputBuilder {
    /// <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A pagination token that you can use to request the next page of results. Pass this value into a subsequent <code>List Caller Access Grants</code> request in order to retrieve the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Appends an item to `caller_access_grants_list`.
    ///
    /// To override the contents of this collection use [`set_caller_access_grants_list`](Self::set_caller_access_grants_list).
    ///
    /// <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request.</p>
    pub fn caller_access_grants_list(mut self, input: crate::types::ListCallerAccessGrantsEntry) -> Self {
        let mut v = self.caller_access_grants_list.unwrap_or_default();
        v.push(input);
        self.caller_access_grants_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request.</p>
    pub fn set_caller_access_grants_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ListCallerAccessGrantsEntry>>) -> Self {
        self.caller_access_grants_list = input;
        self
    }
    /// <p>A list of the caller's access grants that were created using S3 Access Grants and that grant the caller access to the S3 data of the Amazon Web Services account ID that was specified in the request.</p>
    pub fn get_caller_access_grants_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ListCallerAccessGrantsEntry>> {
        &self.caller_access_grants_list
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCallerAccessGrantsOutput`](crate::operation::list_caller_access_grants::ListCallerAccessGrantsOutput).
    pub fn build(self) -> crate::operation::list_caller_access_grants::ListCallerAccessGrantsOutput {
        crate::operation::list_caller_access_grants::ListCallerAccessGrantsOutput {
            next_token: self.next_token,
            caller_access_grants_list: self.caller_access_grants_list,
            _request_id: self._request_id,
        }
    }
}
