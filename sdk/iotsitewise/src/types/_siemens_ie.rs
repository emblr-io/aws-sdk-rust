// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details for a SiteWise Edge gateway that runs on a Siemens Industrial Edge Device.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SiemensIe {
    /// <p>The name of the IoT Thing for your SiteWise Edge gateway.</p>
    pub iot_core_thing_name: ::std::string::String,
}
impl SiemensIe {
    /// <p>The name of the IoT Thing for your SiteWise Edge gateway.</p>
    pub fn iot_core_thing_name(&self) -> &str {
        use std::ops::Deref;
        self.iot_core_thing_name.deref()
    }
}
impl SiemensIe {
    /// Creates a new builder-style object to manufacture [`SiemensIe`](crate::types::SiemensIe).
    pub fn builder() -> crate::types::builders::SiemensIeBuilder {
        crate::types::builders::SiemensIeBuilder::default()
    }
}

/// A builder for [`SiemensIe`](crate::types::SiemensIe).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SiemensIeBuilder {
    pub(crate) iot_core_thing_name: ::std::option::Option<::std::string::String>,
}
impl SiemensIeBuilder {
    /// <p>The name of the IoT Thing for your SiteWise Edge gateway.</p>
    /// This field is required.
    pub fn iot_core_thing_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iot_core_thing_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the IoT Thing for your SiteWise Edge gateway.</p>
    pub fn set_iot_core_thing_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iot_core_thing_name = input;
        self
    }
    /// <p>The name of the IoT Thing for your SiteWise Edge gateway.</p>
    pub fn get_iot_core_thing_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.iot_core_thing_name
    }
    /// Consumes the builder and constructs a [`SiemensIe`](crate::types::SiemensIe).
    /// This method will fail if any of the following fields are not set:
    /// - [`iot_core_thing_name`](crate::types::builders::SiemensIeBuilder::iot_core_thing_name)
    pub fn build(self) -> ::std::result::Result<crate::types::SiemensIe, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SiemensIe {
            iot_core_thing_name: self.iot_core_thing_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "iot_core_thing_name",
                    "iot_core_thing_name was not specified but it is required when building SiemensIe",
                )
            })?,
        })
    }
}
