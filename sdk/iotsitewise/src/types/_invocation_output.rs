// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This contains the SiteWise Assistant's response and the corresponding citation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InvocationOutput {
    /// <p>The text message of the SiteWise Assistant's response.</p>
    pub message: ::std::option::Option<::std::string::String>,
    /// <p>A list of citations, and related information for the SiteWise Assistant's response.</p>
    pub citations: ::std::option::Option<::std::vec::Vec<crate::types::Citation>>,
}
impl InvocationOutput {
    /// <p>The text message of the SiteWise Assistant's response.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>A list of citations, and related information for the SiteWise Assistant's response.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.citations.is_none()`.
    pub fn citations(&self) -> &[crate::types::Citation] {
        self.citations.as_deref().unwrap_or_default()
    }
}
impl InvocationOutput {
    /// Creates a new builder-style object to manufacture [`InvocationOutput`](crate::types::InvocationOutput).
    pub fn builder() -> crate::types::builders::InvocationOutputBuilder {
        crate::types::builders::InvocationOutputBuilder::default()
    }
}

/// A builder for [`InvocationOutput`](crate::types::InvocationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InvocationOutputBuilder {
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) citations: ::std::option::Option<::std::vec::Vec<crate::types::Citation>>,
}
impl InvocationOutputBuilder {
    /// <p>The text message of the SiteWise Assistant's response.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The text message of the SiteWise Assistant's response.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The text message of the SiteWise Assistant's response.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Appends an item to `citations`.
    ///
    /// To override the contents of this collection use [`set_citations`](Self::set_citations).
    ///
    /// <p>A list of citations, and related information for the SiteWise Assistant's response.</p>
    pub fn citations(mut self, input: crate::types::Citation) -> Self {
        let mut v = self.citations.unwrap_or_default();
        v.push(input);
        self.citations = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of citations, and related information for the SiteWise Assistant's response.</p>
    pub fn set_citations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Citation>>) -> Self {
        self.citations = input;
        self
    }
    /// <p>A list of citations, and related information for the SiteWise Assistant's response.</p>
    pub fn get_citations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Citation>> {
        &self.citations
    }
    /// Consumes the builder and constructs a [`InvocationOutput`](crate::types::InvocationOutput).
    pub fn build(self) -> crate::types::InvocationOutput {
        crate::types::InvocationOutput {
            message: self.message,
            citations: self.citations,
        }
    }
}
