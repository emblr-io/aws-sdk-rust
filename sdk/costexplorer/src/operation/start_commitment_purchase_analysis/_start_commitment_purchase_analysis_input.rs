// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartCommitmentPurchaseAnalysisInput {
    /// <p>The configuration for the commitment purchase analysis.</p>
    pub commitment_purchase_analysis_configuration: ::std::option::Option<crate::types::CommitmentPurchaseAnalysisConfiguration>,
}
impl StartCommitmentPurchaseAnalysisInput {
    /// <p>The configuration for the commitment purchase analysis.</p>
    pub fn commitment_purchase_analysis_configuration(&self) -> ::std::option::Option<&crate::types::CommitmentPurchaseAnalysisConfiguration> {
        self.commitment_purchase_analysis_configuration.as_ref()
    }
}
impl StartCommitmentPurchaseAnalysisInput {
    /// Creates a new builder-style object to manufacture [`StartCommitmentPurchaseAnalysisInput`](crate::operation::start_commitment_purchase_analysis::StartCommitmentPurchaseAnalysisInput).
    pub fn builder() -> crate::operation::start_commitment_purchase_analysis::builders::StartCommitmentPurchaseAnalysisInputBuilder {
        crate::operation::start_commitment_purchase_analysis::builders::StartCommitmentPurchaseAnalysisInputBuilder::default()
    }
}

/// A builder for [`StartCommitmentPurchaseAnalysisInput`](crate::operation::start_commitment_purchase_analysis::StartCommitmentPurchaseAnalysisInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartCommitmentPurchaseAnalysisInputBuilder {
    pub(crate) commitment_purchase_analysis_configuration: ::std::option::Option<crate::types::CommitmentPurchaseAnalysisConfiguration>,
}
impl StartCommitmentPurchaseAnalysisInputBuilder {
    /// <p>The configuration for the commitment purchase analysis.</p>
    /// This field is required.
    pub fn commitment_purchase_analysis_configuration(mut self, input: crate::types::CommitmentPurchaseAnalysisConfiguration) -> Self {
        self.commitment_purchase_analysis_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the commitment purchase analysis.</p>
    pub fn set_commitment_purchase_analysis_configuration(
        mut self,
        input: ::std::option::Option<crate::types::CommitmentPurchaseAnalysisConfiguration>,
    ) -> Self {
        self.commitment_purchase_analysis_configuration = input;
        self
    }
    /// <p>The configuration for the commitment purchase analysis.</p>
    pub fn get_commitment_purchase_analysis_configuration(&self) -> &::std::option::Option<crate::types::CommitmentPurchaseAnalysisConfiguration> {
        &self.commitment_purchase_analysis_configuration
    }
    /// Consumes the builder and constructs a [`StartCommitmentPurchaseAnalysisInput`](crate::operation::start_commitment_purchase_analysis::StartCommitmentPurchaseAnalysisInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::start_commitment_purchase_analysis::StartCommitmentPurchaseAnalysisInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::start_commitment_purchase_analysis::StartCommitmentPurchaseAnalysisInput {
                commitment_purchase_analysis_configuration: self.commitment_purchase_analysis_configuration,
            },
        )
    }
}
