// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the commitment purchase analysis.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CommitmentPurchaseAnalysisConfiguration {
    /// <p>The configuration for the Savings Plans purchase analysis.</p>
    pub savings_plans_purchase_analysis_configuration: ::std::option::Option<crate::types::SavingsPlansPurchaseAnalysisConfiguration>,
}
impl CommitmentPurchaseAnalysisConfiguration {
    /// <p>The configuration for the Savings Plans purchase analysis.</p>
    pub fn savings_plans_purchase_analysis_configuration(&self) -> ::std::option::Option<&crate::types::SavingsPlansPurchaseAnalysisConfiguration> {
        self.savings_plans_purchase_analysis_configuration.as_ref()
    }
}
impl CommitmentPurchaseAnalysisConfiguration {
    /// Creates a new builder-style object to manufacture [`CommitmentPurchaseAnalysisConfiguration`](crate::types::CommitmentPurchaseAnalysisConfiguration).
    pub fn builder() -> crate::types::builders::CommitmentPurchaseAnalysisConfigurationBuilder {
        crate::types::builders::CommitmentPurchaseAnalysisConfigurationBuilder::default()
    }
}

/// A builder for [`CommitmentPurchaseAnalysisConfiguration`](crate::types::CommitmentPurchaseAnalysisConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CommitmentPurchaseAnalysisConfigurationBuilder {
    pub(crate) savings_plans_purchase_analysis_configuration: ::std::option::Option<crate::types::SavingsPlansPurchaseAnalysisConfiguration>,
}
impl CommitmentPurchaseAnalysisConfigurationBuilder {
    /// <p>The configuration for the Savings Plans purchase analysis.</p>
    pub fn savings_plans_purchase_analysis_configuration(mut self, input: crate::types::SavingsPlansPurchaseAnalysisConfiguration) -> Self {
        self.savings_plans_purchase_analysis_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the Savings Plans purchase analysis.</p>
    pub fn set_savings_plans_purchase_analysis_configuration(
        mut self,
        input: ::std::option::Option<crate::types::SavingsPlansPurchaseAnalysisConfiguration>,
    ) -> Self {
        self.savings_plans_purchase_analysis_configuration = input;
        self
    }
    /// <p>The configuration for the Savings Plans purchase analysis.</p>
    pub fn get_savings_plans_purchase_analysis_configuration(
        &self,
    ) -> &::std::option::Option<crate::types::SavingsPlansPurchaseAnalysisConfiguration> {
        &self.savings_plans_purchase_analysis_configuration
    }
    /// Consumes the builder and constructs a [`CommitmentPurchaseAnalysisConfiguration`](crate::types::CommitmentPurchaseAnalysisConfiguration).
    pub fn build(self) -> crate::types::CommitmentPurchaseAnalysisConfiguration {
        crate::types::CommitmentPurchaseAnalysisConfiguration {
            savings_plans_purchase_analysis_configuration: self.savings_plans_purchase_analysis_configuration,
        }
    }
}
