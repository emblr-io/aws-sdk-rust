// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for CdiInputSpecification
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CdiInputSpecification {
    /// Maximum CDI input resolution
    pub resolution: ::std::option::Option<crate::types::CdiInputResolution>,
}
impl CdiInputSpecification {
    /// Maximum CDI input resolution
    pub fn resolution(&self) -> ::std::option::Option<&crate::types::CdiInputResolution> {
        self.resolution.as_ref()
    }
}
impl CdiInputSpecification {
    /// Creates a new builder-style object to manufacture [`CdiInputSpecification`](crate::types::CdiInputSpecification).
    pub fn builder() -> crate::types::builders::CdiInputSpecificationBuilder {
        crate::types::builders::CdiInputSpecificationBuilder::default()
    }
}

/// A builder for [`CdiInputSpecification`](crate::types::CdiInputSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CdiInputSpecificationBuilder {
    pub(crate) resolution: ::std::option::Option<crate::types::CdiInputResolution>,
}
impl CdiInputSpecificationBuilder {
    /// Maximum CDI input resolution
    pub fn resolution(mut self, input: crate::types::CdiInputResolution) -> Self {
        self.resolution = ::std::option::Option::Some(input);
        self
    }
    /// Maximum CDI input resolution
    pub fn set_resolution(mut self, input: ::std::option::Option<crate::types::CdiInputResolution>) -> Self {
        self.resolution = input;
        self
    }
    /// Maximum CDI input resolution
    pub fn get_resolution(&self) -> &::std::option::Option<crate::types::CdiInputResolution> {
        &self.resolution
    }
    /// Consumes the builder and constructs a [`CdiInputSpecification`](crate::types::CdiInputSpecification).
    pub fn build(self) -> crate::types::CdiInputSpecification {
        crate::types::CdiInputSpecification { resolution: self.resolution }
    }
}
