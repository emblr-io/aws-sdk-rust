// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The configured sources for this SRT input.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SrtSettings {
    /// Placeholder documentation for __listOfSrtCallerSource
    pub srt_caller_sources: ::std::option::Option<::std::vec::Vec<crate::types::SrtCallerSource>>,
}
impl SrtSettings {
    /// Placeholder documentation for __listOfSrtCallerSource
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.srt_caller_sources.is_none()`.
    pub fn srt_caller_sources(&self) -> &[crate::types::SrtCallerSource] {
        self.srt_caller_sources.as_deref().unwrap_or_default()
    }
}
impl SrtSettings {
    /// Creates a new builder-style object to manufacture [`SrtSettings`](crate::types::SrtSettings).
    pub fn builder() -> crate::types::builders::SrtSettingsBuilder {
        crate::types::builders::SrtSettingsBuilder::default()
    }
}

/// A builder for [`SrtSettings`](crate::types::SrtSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SrtSettingsBuilder {
    pub(crate) srt_caller_sources: ::std::option::Option<::std::vec::Vec<crate::types::SrtCallerSource>>,
}
impl SrtSettingsBuilder {
    /// Appends an item to `srt_caller_sources`.
    ///
    /// To override the contents of this collection use [`set_srt_caller_sources`](Self::set_srt_caller_sources).
    ///
    /// Placeholder documentation for __listOfSrtCallerSource
    pub fn srt_caller_sources(mut self, input: crate::types::SrtCallerSource) -> Self {
        let mut v = self.srt_caller_sources.unwrap_or_default();
        v.push(input);
        self.srt_caller_sources = ::std::option::Option::Some(v);
        self
    }
    /// Placeholder documentation for __listOfSrtCallerSource
    pub fn set_srt_caller_sources(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SrtCallerSource>>) -> Self {
        self.srt_caller_sources = input;
        self
    }
    /// Placeholder documentation for __listOfSrtCallerSource
    pub fn get_srt_caller_sources(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SrtCallerSource>> {
        &self.srt_caller_sources
    }
    /// Consumes the builder and constructs a [`SrtSettings`](crate::types::SrtSettings).
    pub fn build(self) -> crate::types::SrtSettings {
        crate::types::SrtSettings {
            srt_caller_sources: self.srt_caller_sources,
        }
    }
}
