// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about the SDP files that describe the SMPTE 2110 streams that go into one SMPTE 2110 receiver group.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Smpte2110ReceiverGroupSdpSettings {
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one ancillary SMPTE 2110 stream. Each stream encapsulates one captions stream (out of any number you can include) or the single SCTE 35 stream that you can include.
    pub ancillary_sdps: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>,
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one audio SMPTE 2110 stream.
    pub audio_sdps: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>,
    /// The InputSdpLocation that specifies the SDP file and index for the single video SMPTE 2110 stream for this 2110 input.
    pub video_sdp: ::std::option::Option<crate::types::InputSdpLocation>,
}
impl Smpte2110ReceiverGroupSdpSettings {
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one ancillary SMPTE 2110 stream. Each stream encapsulates one captions stream (out of any number you can include) or the single SCTE 35 stream that you can include.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ancillary_sdps.is_none()`.
    pub fn ancillary_sdps(&self) -> &[crate::types::InputSdpLocation] {
        self.ancillary_sdps.as_deref().unwrap_or_default()
    }
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one audio SMPTE 2110 stream.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.audio_sdps.is_none()`.
    pub fn audio_sdps(&self) -> &[crate::types::InputSdpLocation] {
        self.audio_sdps.as_deref().unwrap_or_default()
    }
    /// The InputSdpLocation that specifies the SDP file and index for the single video SMPTE 2110 stream for this 2110 input.
    pub fn video_sdp(&self) -> ::std::option::Option<&crate::types::InputSdpLocation> {
        self.video_sdp.as_ref()
    }
}
impl Smpte2110ReceiverGroupSdpSettings {
    /// Creates a new builder-style object to manufacture [`Smpte2110ReceiverGroupSdpSettings`](crate::types::Smpte2110ReceiverGroupSdpSettings).
    pub fn builder() -> crate::types::builders::Smpte2110ReceiverGroupSdpSettingsBuilder {
        crate::types::builders::Smpte2110ReceiverGroupSdpSettingsBuilder::default()
    }
}

/// A builder for [`Smpte2110ReceiverGroupSdpSettings`](crate::types::Smpte2110ReceiverGroupSdpSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct Smpte2110ReceiverGroupSdpSettingsBuilder {
    pub(crate) ancillary_sdps: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>,
    pub(crate) audio_sdps: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>,
    pub(crate) video_sdp: ::std::option::Option<crate::types::InputSdpLocation>,
}
impl Smpte2110ReceiverGroupSdpSettingsBuilder {
    /// Appends an item to `ancillary_sdps`.
    ///
    /// To override the contents of this collection use [`set_ancillary_sdps`](Self::set_ancillary_sdps).
    ///
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one ancillary SMPTE 2110 stream. Each stream encapsulates one captions stream (out of any number you can include) or the single SCTE 35 stream that you can include.
    pub fn ancillary_sdps(mut self, input: crate::types::InputSdpLocation) -> Self {
        let mut v = self.ancillary_sdps.unwrap_or_default();
        v.push(input);
        self.ancillary_sdps = ::std::option::Option::Some(v);
        self
    }
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one ancillary SMPTE 2110 stream. Each stream encapsulates one captions stream (out of any number you can include) or the single SCTE 35 stream that you can include.
    pub fn set_ancillary_sdps(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>) -> Self {
        self.ancillary_sdps = input;
        self
    }
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one ancillary SMPTE 2110 stream. Each stream encapsulates one captions stream (out of any number you can include) or the single SCTE 35 stream that you can include.
    pub fn get_ancillary_sdps(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>> {
        &self.ancillary_sdps
    }
    /// Appends an item to `audio_sdps`.
    ///
    /// To override the contents of this collection use [`set_audio_sdps`](Self::set_audio_sdps).
    ///
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one audio SMPTE 2110 stream.
    pub fn audio_sdps(mut self, input: crate::types::InputSdpLocation) -> Self {
        let mut v = self.audio_sdps.unwrap_or_default();
        v.push(input);
        self.audio_sdps = ::std::option::Option::Some(v);
        self
    }
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one audio SMPTE 2110 stream.
    pub fn set_audio_sdps(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>>) -> Self {
        self.audio_sdps = input;
        self
    }
    /// A list of InputSdpLocations. Each item in the list specifies the SDP file and index for one audio SMPTE 2110 stream.
    pub fn get_audio_sdps(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::InputSdpLocation>> {
        &self.audio_sdps
    }
    /// The InputSdpLocation that specifies the SDP file and index for the single video SMPTE 2110 stream for this 2110 input.
    pub fn video_sdp(mut self, input: crate::types::InputSdpLocation) -> Self {
        self.video_sdp = ::std::option::Option::Some(input);
        self
    }
    /// The InputSdpLocation that specifies the SDP file and index for the single video SMPTE 2110 stream for this 2110 input.
    pub fn set_video_sdp(mut self, input: ::std::option::Option<crate::types::InputSdpLocation>) -> Self {
        self.video_sdp = input;
        self
    }
    /// The InputSdpLocation that specifies the SDP file and index for the single video SMPTE 2110 stream for this 2110 input.
    pub fn get_video_sdp(&self) -> &::std::option::Option<crate::types::InputSdpLocation> {
        &self.video_sdp
    }
    /// Consumes the builder and constructs a [`Smpte2110ReceiverGroupSdpSettings`](crate::types::Smpte2110ReceiverGroupSdpSettings).
    pub fn build(self) -> crate::types::Smpte2110ReceiverGroupSdpSettings {
        crate::types::Smpte2110ReceiverGroupSdpSettings {
            ancillary_sdps: self.ancillary_sdps,
            audio_sdps: self.audio_sdps,
            video_sdp: self.video_sdp,
        }
    }
}
