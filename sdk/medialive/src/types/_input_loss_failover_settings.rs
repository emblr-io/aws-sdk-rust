// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// MediaLive will perform a failover if content is not detected in this input for the specified period.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputLossFailoverSettings {
    /// The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.
    pub input_loss_threshold_msec: ::std::option::Option<i32>,
}
impl InputLossFailoverSettings {
    /// The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.
    pub fn input_loss_threshold_msec(&self) -> ::std::option::Option<i32> {
        self.input_loss_threshold_msec
    }
}
impl InputLossFailoverSettings {
    /// Creates a new builder-style object to manufacture [`InputLossFailoverSettings`](crate::types::InputLossFailoverSettings).
    pub fn builder() -> crate::types::builders::InputLossFailoverSettingsBuilder {
        crate::types::builders::InputLossFailoverSettingsBuilder::default()
    }
}

/// A builder for [`InputLossFailoverSettings`](crate::types::InputLossFailoverSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InputLossFailoverSettingsBuilder {
    pub(crate) input_loss_threshold_msec: ::std::option::Option<i32>,
}
impl InputLossFailoverSettingsBuilder {
    /// The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.
    pub fn input_loss_threshold_msec(mut self, input: i32) -> Self {
        self.input_loss_threshold_msec = ::std::option::Option::Some(input);
        self
    }
    /// The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.
    pub fn set_input_loss_threshold_msec(mut self, input: ::std::option::Option<i32>) -> Self {
        self.input_loss_threshold_msec = input;
        self
    }
    /// The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.
    pub fn get_input_loss_threshold_msec(&self) -> &::std::option::Option<i32> {
        &self.input_loss_threshold_msec
    }
    /// Consumes the builder and constructs a [`InputLossFailoverSettings`](crate::types::InputLossFailoverSettings).
    pub fn build(self) -> crate::types::InputLossFailoverSettings {
        crate::types::InputLossFailoverSettings {
            input_loss_threshold_msec: self.input_loss_threshold_msec,
        }
    }
}
