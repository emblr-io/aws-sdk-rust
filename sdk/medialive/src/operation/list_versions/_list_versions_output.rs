// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for ListVersionsResponse
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListVersionsOutput {
    /// List of engine versions that are available for this AWS account.
    pub versions: ::std::option::Option<::std::vec::Vec<crate::types::ChannelEngineVersionResponse>>,
    _request_id: Option<String>,
}
impl ListVersionsOutput {
    /// List of engine versions that are available for this AWS account.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.versions.is_none()`.
    pub fn versions(&self) -> &[crate::types::ChannelEngineVersionResponse] {
        self.versions.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for ListVersionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListVersionsOutput {
    /// Creates a new builder-style object to manufacture [`ListVersionsOutput`](crate::operation::list_versions::ListVersionsOutput).
    pub fn builder() -> crate::operation::list_versions::builders::ListVersionsOutputBuilder {
        crate::operation::list_versions::builders::ListVersionsOutputBuilder::default()
    }
}

/// A builder for [`ListVersionsOutput`](crate::operation::list_versions::ListVersionsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListVersionsOutputBuilder {
    pub(crate) versions: ::std::option::Option<::std::vec::Vec<crate::types::ChannelEngineVersionResponse>>,
    _request_id: Option<String>,
}
impl ListVersionsOutputBuilder {
    /// Appends an item to `versions`.
    ///
    /// To override the contents of this collection use [`set_versions`](Self::set_versions).
    ///
    /// List of engine versions that are available for this AWS account.
    pub fn versions(mut self, input: crate::types::ChannelEngineVersionResponse) -> Self {
        let mut v = self.versions.unwrap_or_default();
        v.push(input);
        self.versions = ::std::option::Option::Some(v);
        self
    }
    /// List of engine versions that are available for this AWS account.
    pub fn set_versions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ChannelEngineVersionResponse>>) -> Self {
        self.versions = input;
        self
    }
    /// List of engine versions that are available for this AWS account.
    pub fn get_versions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ChannelEngineVersionResponse>> {
        &self.versions
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListVersionsOutput`](crate::operation::list_versions::ListVersionsOutput).
    pub fn build(self) -> crate::operation::list_versions::ListVersionsOutput {
        crate::operation::list_versions::ListVersionsOutput {
            versions: self.versions,
            _request_id: self._request_id,
        }
    }
}
