// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the latest request to revoke access to a backup vault.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LatestRevokeRequest {
    /// <p>The ARN of the MPA session associated with this revoke request.</p>
    pub mpa_session_arn: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the revoke request.</p>
    pub status: ::std::option::Option<crate::types::MpaRevokeSessionStatus>,
    /// <p>A message describing the current status of the revoke request.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>The date and time when the revoke request was initiated.</p>
    pub initiation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time when the revoke request will expire.</p>
    pub expiry_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl LatestRevokeRequest {
    /// <p>The ARN of the MPA session associated with this revoke request.</p>
    pub fn mpa_session_arn(&self) -> ::std::option::Option<&str> {
        self.mpa_session_arn.as_deref()
    }
    /// <p>The current status of the revoke request.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::MpaRevokeSessionStatus> {
        self.status.as_ref()
    }
    /// <p>A message describing the current status of the revoke request.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The date and time when the revoke request was initiated.</p>
    pub fn initiation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.initiation_date.as_ref()
    }
    /// <p>The date and time when the revoke request will expire.</p>
    pub fn expiry_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expiry_date.as_ref()
    }
}
impl LatestRevokeRequest {
    /// Creates a new builder-style object to manufacture [`LatestRevokeRequest`](crate::types::LatestRevokeRequest).
    pub fn builder() -> crate::types::builders::LatestRevokeRequestBuilder {
        crate::types::builders::LatestRevokeRequestBuilder::default()
    }
}

/// A builder for [`LatestRevokeRequest`](crate::types::LatestRevokeRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LatestRevokeRequestBuilder {
    pub(crate) mpa_session_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::MpaRevokeSessionStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) initiation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) expiry_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl LatestRevokeRequestBuilder {
    /// <p>The ARN of the MPA session associated with this revoke request.</p>
    pub fn mpa_session_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mpa_session_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the MPA session associated with this revoke request.</p>
    pub fn set_mpa_session_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mpa_session_arn = input;
        self
    }
    /// <p>The ARN of the MPA session associated with this revoke request.</p>
    pub fn get_mpa_session_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.mpa_session_arn
    }
    /// <p>The current status of the revoke request.</p>
    pub fn status(mut self, input: crate::types::MpaRevokeSessionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the revoke request.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::MpaRevokeSessionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the revoke request.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::MpaRevokeSessionStatus> {
        &self.status
    }
    /// <p>A message describing the current status of the revoke request.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message describing the current status of the revoke request.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>A message describing the current status of the revoke request.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>The date and time when the revoke request was initiated.</p>
    pub fn initiation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.initiation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the revoke request was initiated.</p>
    pub fn set_initiation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.initiation_date = input;
        self
    }
    /// <p>The date and time when the revoke request was initiated.</p>
    pub fn get_initiation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.initiation_date
    }
    /// <p>The date and time when the revoke request will expire.</p>
    pub fn expiry_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiry_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the revoke request will expire.</p>
    pub fn set_expiry_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiry_date = input;
        self
    }
    /// <p>The date and time when the revoke request will expire.</p>
    pub fn get_expiry_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiry_date
    }
    /// Consumes the builder and constructs a [`LatestRevokeRequest`](crate::types::LatestRevokeRequest).
    pub fn build(self) -> crate::types::LatestRevokeRequest {
        crate::types::LatestRevokeRequest {
            mpa_session_arn: self.mpa_session_arn,
            status: self.status,
            status_message: self.status_message,
            initiation_date: self.initiation_date,
            expiry_date: self.expiry_date,
        }
    }
}
