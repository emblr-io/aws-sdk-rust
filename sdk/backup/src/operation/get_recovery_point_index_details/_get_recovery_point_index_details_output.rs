// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetRecoveryPointIndexDetailsOutput {
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub recovery_point_arn: ::std::option::Option<::std::string::String>,
    /// <p>An ARN that uniquely identifies the backup vault where the recovery point index is stored.</p>
    /// <p>For example, <code>arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault</code>.</p>
    pub backup_vault_arn: ::std::option::Option<::std::string::String>,
    /// <p>A string of the Amazon Resource Name (ARN) that uniquely identifies the source resource.</p>
    pub source_resource_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that a backup index was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub index_creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that a backup index was deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub index_deletion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that a backup index finished creation, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub index_completion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>This is the current status for the backup index associated with the specified recovery point.</p>
    /// <p>Statuses are: <code>PENDING</code> | <code>ACTIVE</code> | <code>FAILED</code> | <code>DELETING</code></p>
    /// <p>A recovery point with an index that has the status of <code>ACTIVE</code> can be included in a search.</p>
    pub index_status: ::std::option::Option<crate::types::IndexStatus>,
    /// <p>A detailed message explaining the status of a backup index associated with the recovery point.</p>
    pub index_status_message: ::std::option::Option<::std::string::String>,
    /// <p>Count of items within the backup index associated with the recovery point.</p>
    pub total_items_indexed: ::std::option::Option<i64>,
    _request_id: Option<String>,
}
impl GetRecoveryPointIndexDetailsOutput {
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn recovery_point_arn(&self) -> ::std::option::Option<&str> {
        self.recovery_point_arn.as_deref()
    }
    /// <p>An ARN that uniquely identifies the backup vault where the recovery point index is stored.</p>
    /// <p>For example, <code>arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault</code>.</p>
    pub fn backup_vault_arn(&self) -> ::std::option::Option<&str> {
        self.backup_vault_arn.as_deref()
    }
    /// <p>A string of the Amazon Resource Name (ARN) that uniquely identifies the source resource.</p>
    pub fn source_resource_arn(&self) -> ::std::option::Option<&str> {
        self.source_resource_arn.as_deref()
    }
    /// <p>The date and time that a backup index was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_creation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.index_creation_date.as_ref()
    }
    /// <p>The date and time that a backup index was deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_deletion_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.index_deletion_date.as_ref()
    }
    /// <p>The date and time that a backup index finished creation, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_completion_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.index_completion_date.as_ref()
    }
    /// <p>This is the current status for the backup index associated with the specified recovery point.</p>
    /// <p>Statuses are: <code>PENDING</code> | <code>ACTIVE</code> | <code>FAILED</code> | <code>DELETING</code></p>
    /// <p>A recovery point with an index that has the status of <code>ACTIVE</code> can be included in a search.</p>
    pub fn index_status(&self) -> ::std::option::Option<&crate::types::IndexStatus> {
        self.index_status.as_ref()
    }
    /// <p>A detailed message explaining the status of a backup index associated with the recovery point.</p>
    pub fn index_status_message(&self) -> ::std::option::Option<&str> {
        self.index_status_message.as_deref()
    }
    /// <p>Count of items within the backup index associated with the recovery point.</p>
    pub fn total_items_indexed(&self) -> ::std::option::Option<i64> {
        self.total_items_indexed
    }
}
impl ::aws_types::request_id::RequestId for GetRecoveryPointIndexDetailsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetRecoveryPointIndexDetailsOutput {
    /// Creates a new builder-style object to manufacture [`GetRecoveryPointIndexDetailsOutput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsOutput).
    pub fn builder() -> crate::operation::get_recovery_point_index_details::builders::GetRecoveryPointIndexDetailsOutputBuilder {
        crate::operation::get_recovery_point_index_details::builders::GetRecoveryPointIndexDetailsOutputBuilder::default()
    }
}

/// A builder for [`GetRecoveryPointIndexDetailsOutput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetRecoveryPointIndexDetailsOutputBuilder {
    pub(crate) recovery_point_arn: ::std::option::Option<::std::string::String>,
    pub(crate) backup_vault_arn: ::std::option::Option<::std::string::String>,
    pub(crate) source_resource_arn: ::std::option::Option<::std::string::String>,
    pub(crate) index_creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) index_deletion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) index_completion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) index_status: ::std::option::Option<crate::types::IndexStatus>,
    pub(crate) index_status_message: ::std::option::Option<::std::string::String>,
    pub(crate) total_items_indexed: ::std::option::Option<i64>,
    _request_id: Option<String>,
}
impl GetRecoveryPointIndexDetailsOutputBuilder {
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn recovery_point_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.recovery_point_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn set_recovery_point_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.recovery_point_arn = input;
        self
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn get_recovery_point_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.recovery_point_arn
    }
    /// <p>An ARN that uniquely identifies the backup vault where the recovery point index is stored.</p>
    /// <p>For example, <code>arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault</code>.</p>
    pub fn backup_vault_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.backup_vault_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An ARN that uniquely identifies the backup vault where the recovery point index is stored.</p>
    /// <p>For example, <code>arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault</code>.</p>
    pub fn set_backup_vault_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.backup_vault_arn = input;
        self
    }
    /// <p>An ARN that uniquely identifies the backup vault where the recovery point index is stored.</p>
    /// <p>For example, <code>arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault</code>.</p>
    pub fn get_backup_vault_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.backup_vault_arn
    }
    /// <p>A string of the Amazon Resource Name (ARN) that uniquely identifies the source resource.</p>
    pub fn source_resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string of the Amazon Resource Name (ARN) that uniquely identifies the source resource.</p>
    pub fn set_source_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_resource_arn = input;
        self
    }
    /// <p>A string of the Amazon Resource Name (ARN) that uniquely identifies the source resource.</p>
    pub fn get_source_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_resource_arn
    }
    /// <p>The date and time that a backup index was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.index_creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a backup index was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_index_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.index_creation_date = input;
        self
    }
    /// <p>The date and time that a backup index was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_index_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.index_creation_date
    }
    /// <p>The date and time that a backup index was deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_deletion_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.index_deletion_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a backup index was deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_index_deletion_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.index_deletion_date = input;
        self
    }
    /// <p>The date and time that a backup index was deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_index_deletion_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.index_deletion_date
    }
    /// <p>The date and time that a backup index finished creation, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn index_completion_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.index_completion_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a backup index finished creation, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_index_completion_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.index_completion_date = input;
        self
    }
    /// <p>The date and time that a backup index finished creation, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_index_completion_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.index_completion_date
    }
    /// <p>This is the current status for the backup index associated with the specified recovery point.</p>
    /// <p>Statuses are: <code>PENDING</code> | <code>ACTIVE</code> | <code>FAILED</code> | <code>DELETING</code></p>
    /// <p>A recovery point with an index that has the status of <code>ACTIVE</code> can be included in a search.</p>
    pub fn index_status(mut self, input: crate::types::IndexStatus) -> Self {
        self.index_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is the current status for the backup index associated with the specified recovery point.</p>
    /// <p>Statuses are: <code>PENDING</code> | <code>ACTIVE</code> | <code>FAILED</code> | <code>DELETING</code></p>
    /// <p>A recovery point with an index that has the status of <code>ACTIVE</code> can be included in a search.</p>
    pub fn set_index_status(mut self, input: ::std::option::Option<crate::types::IndexStatus>) -> Self {
        self.index_status = input;
        self
    }
    /// <p>This is the current status for the backup index associated with the specified recovery point.</p>
    /// <p>Statuses are: <code>PENDING</code> | <code>ACTIVE</code> | <code>FAILED</code> | <code>DELETING</code></p>
    /// <p>A recovery point with an index that has the status of <code>ACTIVE</code> can be included in a search.</p>
    pub fn get_index_status(&self) -> &::std::option::Option<crate::types::IndexStatus> {
        &self.index_status
    }
    /// <p>A detailed message explaining the status of a backup index associated with the recovery point.</p>
    pub fn index_status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.index_status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A detailed message explaining the status of a backup index associated with the recovery point.</p>
    pub fn set_index_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.index_status_message = input;
        self
    }
    /// <p>A detailed message explaining the status of a backup index associated with the recovery point.</p>
    pub fn get_index_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.index_status_message
    }
    /// <p>Count of items within the backup index associated with the recovery point.</p>
    pub fn total_items_indexed(mut self, input: i64) -> Self {
        self.total_items_indexed = ::std::option::Option::Some(input);
        self
    }
    /// <p>Count of items within the backup index associated with the recovery point.</p>
    pub fn set_total_items_indexed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.total_items_indexed = input;
        self
    }
    /// <p>Count of items within the backup index associated with the recovery point.</p>
    pub fn get_total_items_indexed(&self) -> &::std::option::Option<i64> {
        &self.total_items_indexed
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetRecoveryPointIndexDetailsOutput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsOutput).
    pub fn build(self) -> crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsOutput {
        crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsOutput {
            recovery_point_arn: self.recovery_point_arn,
            backup_vault_arn: self.backup_vault_arn,
            source_resource_arn: self.source_resource_arn,
            index_creation_date: self.index_creation_date,
            index_deletion_date: self.index_deletion_date,
            index_completion_date: self.index_completion_date,
            index_status: self.index_status,
            index_status_message: self.index_status_message,
            total_items_indexed: self.total_items_indexed,
            _request_id: self._request_id,
        }
    }
}
