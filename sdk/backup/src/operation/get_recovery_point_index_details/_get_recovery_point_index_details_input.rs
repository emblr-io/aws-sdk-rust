// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetRecoveryPointIndexDetailsInput {
    /// <p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.</p>
    /// <p>Accepted characters include lowercase letters, numbers, and hyphens.</p>
    pub backup_vault_name: ::std::option::Option<::std::string::String>,
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub recovery_point_arn: ::std::option::Option<::std::string::String>,
}
impl GetRecoveryPointIndexDetailsInput {
    /// <p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.</p>
    /// <p>Accepted characters include lowercase letters, numbers, and hyphens.</p>
    pub fn backup_vault_name(&self) -> ::std::option::Option<&str> {
        self.backup_vault_name.as_deref()
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn recovery_point_arn(&self) -> ::std::option::Option<&str> {
        self.recovery_point_arn.as_deref()
    }
}
impl GetRecoveryPointIndexDetailsInput {
    /// Creates a new builder-style object to manufacture [`GetRecoveryPointIndexDetailsInput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsInput).
    pub fn builder() -> crate::operation::get_recovery_point_index_details::builders::GetRecoveryPointIndexDetailsInputBuilder {
        crate::operation::get_recovery_point_index_details::builders::GetRecoveryPointIndexDetailsInputBuilder::default()
    }
}

/// A builder for [`GetRecoveryPointIndexDetailsInput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetRecoveryPointIndexDetailsInputBuilder {
    pub(crate) backup_vault_name: ::std::option::Option<::std::string::String>,
    pub(crate) recovery_point_arn: ::std::option::Option<::std::string::String>,
}
impl GetRecoveryPointIndexDetailsInputBuilder {
    /// <p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.</p>
    /// <p>Accepted characters include lowercase letters, numbers, and hyphens.</p>
    /// This field is required.
    pub fn backup_vault_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.backup_vault_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.</p>
    /// <p>Accepted characters include lowercase letters, numbers, and hyphens.</p>
    pub fn set_backup_vault_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.backup_vault_name = input;
        self
    }
    /// <p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.</p>
    /// <p>Accepted characters include lowercase letters, numbers, and hyphens.</p>
    pub fn get_backup_vault_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.backup_vault_name
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    /// This field is required.
    pub fn recovery_point_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.recovery_point_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn set_recovery_point_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.recovery_point_arn = input;
        self
    }
    /// <p>An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>
    pub fn get_recovery_point_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.recovery_point_arn
    }
    /// Consumes the builder and constructs a [`GetRecoveryPointIndexDetailsInput`](crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_recovery_point_index_details::GetRecoveryPointIndexDetailsInput {
            backup_vault_name: self.backup_vault_name,
            recovery_point_arn: self.recovery_point_arn,
        })
    }
}
