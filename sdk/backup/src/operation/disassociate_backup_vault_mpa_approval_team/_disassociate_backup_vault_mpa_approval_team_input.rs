// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct DisassociateBackupVaultMpaApprovalTeamInput {
    /// <p>The name of the backup vault from which to disassociate the MPA approval team.</p>
    pub backup_vault_name: ::std::option::Option<::std::string::String>,
    /// <p>An optional comment explaining the reason for disassociating the MPA approval team from the backup vault.</p>
    pub requester_comment: ::std::option::Option<::std::string::String>,
}
impl DisassociateBackupVaultMpaApprovalTeamInput {
    /// <p>The name of the backup vault from which to disassociate the MPA approval team.</p>
    pub fn backup_vault_name(&self) -> ::std::option::Option<&str> {
        self.backup_vault_name.as_deref()
    }
    /// <p>An optional comment explaining the reason for disassociating the MPA approval team from the backup vault.</p>
    pub fn requester_comment(&self) -> ::std::option::Option<&str> {
        self.requester_comment.as_deref()
    }
}
impl ::std::fmt::Debug for DisassociateBackupVaultMpaApprovalTeamInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DisassociateBackupVaultMpaApprovalTeamInput");
        formatter.field("backup_vault_name", &self.backup_vault_name);
        formatter.field("requester_comment", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl DisassociateBackupVaultMpaApprovalTeamInput {
    /// Creates a new builder-style object to manufacture [`DisassociateBackupVaultMpaApprovalTeamInput`](crate::operation::disassociate_backup_vault_mpa_approval_team::DisassociateBackupVaultMpaApprovalTeamInput).
    pub fn builder() -> crate::operation::disassociate_backup_vault_mpa_approval_team::builders::DisassociateBackupVaultMpaApprovalTeamInputBuilder {
        crate::operation::disassociate_backup_vault_mpa_approval_team::builders::DisassociateBackupVaultMpaApprovalTeamInputBuilder::default()
    }
}

/// A builder for [`DisassociateBackupVaultMpaApprovalTeamInput`](crate::operation::disassociate_backup_vault_mpa_approval_team::DisassociateBackupVaultMpaApprovalTeamInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct DisassociateBackupVaultMpaApprovalTeamInputBuilder {
    pub(crate) backup_vault_name: ::std::option::Option<::std::string::String>,
    pub(crate) requester_comment: ::std::option::Option<::std::string::String>,
}
impl DisassociateBackupVaultMpaApprovalTeamInputBuilder {
    /// <p>The name of the backup vault from which to disassociate the MPA approval team.</p>
    /// This field is required.
    pub fn backup_vault_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.backup_vault_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the backup vault from which to disassociate the MPA approval team.</p>
    pub fn set_backup_vault_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.backup_vault_name = input;
        self
    }
    /// <p>The name of the backup vault from which to disassociate the MPA approval team.</p>
    pub fn get_backup_vault_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.backup_vault_name
    }
    /// <p>An optional comment explaining the reason for disassociating the MPA approval team from the backup vault.</p>
    pub fn requester_comment(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.requester_comment = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An optional comment explaining the reason for disassociating the MPA approval team from the backup vault.</p>
    pub fn set_requester_comment(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.requester_comment = input;
        self
    }
    /// <p>An optional comment explaining the reason for disassociating the MPA approval team from the backup vault.</p>
    pub fn get_requester_comment(&self) -> &::std::option::Option<::std::string::String> {
        &self.requester_comment
    }
    /// Consumes the builder and constructs a [`DisassociateBackupVaultMpaApprovalTeamInput`](crate::operation::disassociate_backup_vault_mpa_approval_team::DisassociateBackupVaultMpaApprovalTeamInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_backup_vault_mpa_approval_team::DisassociateBackupVaultMpaApprovalTeamInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::disassociate_backup_vault_mpa_approval_team::DisassociateBackupVaultMpaApprovalTeamInput {
                backup_vault_name: self.backup_vault_name,
                requester_comment: self.requester_comment,
            },
        )
    }
}
impl ::std::fmt::Debug for DisassociateBackupVaultMpaApprovalTeamInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DisassociateBackupVaultMpaApprovalTeamInputBuilder");
        formatter.field("backup_vault_name", &self.backup_vault_name);
        formatter.field("requester_comment", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
