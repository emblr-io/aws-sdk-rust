// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::fmt::Debug)]
pub struct RetrieveAndGenerateStreamOutput {
    /// <p>A stream of events from the model.</p>
    #[cfg_attr(any(feature = "serde-serialize", feature = "serde-deserialize"), serde(skip))]
    pub stream: crate::event_receiver::EventReceiver<
        crate::types::RetrieveAndGenerateStreamResponseOutput,
        crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
    >,
    /// <p>The session ID.</p>
    pub session_id: ::std::string::String,
    _request_id: Option<String>,
}
impl RetrieveAndGenerateStreamOutput {
    /// <p>A stream of events from the model.</p>
    pub fn stream(
        &self,
    ) -> &crate::event_receiver::EventReceiver<
        crate::types::RetrieveAndGenerateStreamResponseOutput,
        crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
    > {
        &self.stream
    }
    /// <p>The session ID.</p>
    pub fn session_id(&self) -> &str {
        use std::ops::Deref;
        self.session_id.deref()
    }
}
impl ::aws_types::request_id::RequestId for RetrieveAndGenerateStreamOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RetrieveAndGenerateStreamOutput {
    /// Creates a new builder-style object to manufacture [`RetrieveAndGenerateStreamOutput`](crate::operation::retrieve_and_generate_stream::RetrieveAndGenerateStreamOutput).
    pub fn builder() -> crate::operation::retrieve_and_generate_stream::builders::RetrieveAndGenerateStreamOutputBuilder {
        crate::operation::retrieve_and_generate_stream::builders::RetrieveAndGenerateStreamOutputBuilder::default()
    }
}

/// A builder for [`RetrieveAndGenerateStreamOutput`](crate::operation::retrieve_and_generate_stream::RetrieveAndGenerateStreamOutput).
#[derive(::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetrieveAndGenerateStreamOutputBuilder {
    pub(crate) stream: ::std::option::Option<
        crate::event_receiver::EventReceiver<
            crate::types::RetrieveAndGenerateStreamResponseOutput,
            crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
        >,
    >,
    pub(crate) session_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl RetrieveAndGenerateStreamOutputBuilder {
    /// <p>A stream of events from the model.</p>
    /// This field is required.
    pub fn stream(
        mut self,
        input: crate::event_receiver::EventReceiver<
            crate::types::RetrieveAndGenerateStreamResponseOutput,
            crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
        >,
    ) -> Self {
        self.stream = ::std::option::Option::Some(input);
        self
    }
    /// <p>A stream of events from the model.</p>
    pub fn set_stream(
        mut self,
        input: ::std::option::Option<
            crate::event_receiver::EventReceiver<
                crate::types::RetrieveAndGenerateStreamResponseOutput,
                crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
            >,
        >,
    ) -> Self {
        self.stream = input;
        self
    }
    /// <p>A stream of events from the model.</p>
    pub fn get_stream(
        &self,
    ) -> &::std::option::Option<
        crate::event_receiver::EventReceiver<
            crate::types::RetrieveAndGenerateStreamResponseOutput,
            crate::types::error::RetrieveAndGenerateStreamResponseOutputError,
        >,
    > {
        &self.stream
    }
    /// <p>The session ID.</p>
    /// This field is required.
    pub fn session_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.session_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The session ID.</p>
    pub fn set_session_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.session_id = input;
        self
    }
    /// <p>The session ID.</p>
    pub fn get_session_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.session_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RetrieveAndGenerateStreamOutput`](crate::operation::retrieve_and_generate_stream::RetrieveAndGenerateStreamOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`stream`](crate::operation::retrieve_and_generate_stream::builders::RetrieveAndGenerateStreamOutputBuilder::stream)
    /// - [`session_id`](crate::operation::retrieve_and_generate_stream::builders::RetrieveAndGenerateStreamOutputBuilder::session_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::retrieve_and_generate_stream::RetrieveAndGenerateStreamOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::retrieve_and_generate_stream::RetrieveAndGenerateStreamOutput {
            stream: self.stream.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "stream",
                    "stream was not specified but it is required when building RetrieveAndGenerateStreamOutput",
                )
            })?,
            session_id: self.session_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "session_id",
                    "session_id was not specified but it is required when building RetrieveAndGenerateStreamOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
