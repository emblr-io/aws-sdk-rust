// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetExecutionFlowSnapshotOutput {
    /// <p>The unique identifier of the flow.</p>
    pub flow_identifier: ::std::string::String,
    /// <p>The unique identifier of the flow alias used for the flow execution.</p>
    pub flow_alias_identifier: ::std::string::String,
    /// <p>The version of the flow used for the flow execution.</p>
    pub flow_version: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that's used by the flow execution.</p>
    pub execution_role_arn: ::std::string::String,
    /// <p>The flow definition used for the flow execution, including the nodes, connections, and configuration at the time when the execution started.</p>
    /// <p>The definition returns as a string that follows the structure of a <a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_FlowDefinition.html">FlowDefinition</a> object.</p>
    pub definition: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key that's used to encrypt the flow snapshot.</p>
    pub customer_encryption_key_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetExecutionFlowSnapshotOutput {
    /// <p>The unique identifier of the flow.</p>
    pub fn flow_identifier(&self) -> &str {
        use std::ops::Deref;
        self.flow_identifier.deref()
    }
    /// <p>The unique identifier of the flow alias used for the flow execution.</p>
    pub fn flow_alias_identifier(&self) -> &str {
        use std::ops::Deref;
        self.flow_alias_identifier.deref()
    }
    /// <p>The version of the flow used for the flow execution.</p>
    pub fn flow_version(&self) -> &str {
        use std::ops::Deref;
        self.flow_version.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that's used by the flow execution.</p>
    pub fn execution_role_arn(&self) -> &str {
        use std::ops::Deref;
        self.execution_role_arn.deref()
    }
    /// <p>The flow definition used for the flow execution, including the nodes, connections, and configuration at the time when the execution started.</p>
    /// <p>The definition returns as a string that follows the structure of a <a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_FlowDefinition.html">FlowDefinition</a> object.</p>
    pub fn definition(&self) -> &str {
        use std::ops::Deref;
        self.definition.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key that's used to encrypt the flow snapshot.</p>
    pub fn customer_encryption_key_arn(&self) -> ::std::option::Option<&str> {
        self.customer_encryption_key_arn.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetExecutionFlowSnapshotOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetExecutionFlowSnapshotOutput {
    /// Creates a new builder-style object to manufacture [`GetExecutionFlowSnapshotOutput`](crate::operation::get_execution_flow_snapshot::GetExecutionFlowSnapshotOutput).
    pub fn builder() -> crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder {
        crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::default()
    }
}

/// A builder for [`GetExecutionFlowSnapshotOutput`](crate::operation::get_execution_flow_snapshot::GetExecutionFlowSnapshotOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetExecutionFlowSnapshotOutputBuilder {
    pub(crate) flow_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) flow_alias_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) flow_version: ::std::option::Option<::std::string::String>,
    pub(crate) execution_role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) definition: ::std::option::Option<::std::string::String>,
    pub(crate) customer_encryption_key_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetExecutionFlowSnapshotOutputBuilder {
    /// <p>The unique identifier of the flow.</p>
    /// This field is required.
    pub fn flow_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn set_flow_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_identifier = input;
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn get_flow_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_identifier
    }
    /// <p>The unique identifier of the flow alias used for the flow execution.</p>
    /// This field is required.
    pub fn flow_alias_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_alias_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the flow alias used for the flow execution.</p>
    pub fn set_flow_alias_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_alias_identifier = input;
        self
    }
    /// <p>The unique identifier of the flow alias used for the flow execution.</p>
    pub fn get_flow_alias_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_alias_identifier
    }
    /// <p>The version of the flow used for the flow execution.</p>
    /// This field is required.
    pub fn flow_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the flow used for the flow execution.</p>
    pub fn set_flow_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_version = input;
        self
    }
    /// <p>The version of the flow used for the flow execution.</p>
    pub fn get_flow_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_version
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that's used by the flow execution.</p>
    /// This field is required.
    pub fn execution_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that's used by the flow execution.</p>
    pub fn set_execution_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that's used by the flow execution.</p>
    pub fn get_execution_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_role_arn
    }
    /// <p>The flow definition used for the flow execution, including the nodes, connections, and configuration at the time when the execution started.</p>
    /// <p>The definition returns as a string that follows the structure of a <a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_FlowDefinition.html">FlowDefinition</a> object.</p>
    /// This field is required.
    pub fn definition(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.definition = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The flow definition used for the flow execution, including the nodes, connections, and configuration at the time when the execution started.</p>
    /// <p>The definition returns as a string that follows the structure of a <a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_FlowDefinition.html">FlowDefinition</a> object.</p>
    pub fn set_definition(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.definition = input;
        self
    }
    /// <p>The flow definition used for the flow execution, including the nodes, connections, and configuration at the time when the execution started.</p>
    /// <p>The definition returns as a string that follows the structure of a <a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_FlowDefinition.html">FlowDefinition</a> object.</p>
    pub fn get_definition(&self) -> &::std::option::Option<::std::string::String> {
        &self.definition
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key that's used to encrypt the flow snapshot.</p>
    pub fn customer_encryption_key_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.customer_encryption_key_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key that's used to encrypt the flow snapshot.</p>
    pub fn set_customer_encryption_key_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.customer_encryption_key_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key that's used to encrypt the flow snapshot.</p>
    pub fn get_customer_encryption_key_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.customer_encryption_key_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetExecutionFlowSnapshotOutput`](crate::operation::get_execution_flow_snapshot::GetExecutionFlowSnapshotOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`flow_identifier`](crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::flow_identifier)
    /// - [`flow_alias_identifier`](crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::flow_alias_identifier)
    /// - [`flow_version`](crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::flow_version)
    /// - [`execution_role_arn`](crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::execution_role_arn)
    /// - [`definition`](crate::operation::get_execution_flow_snapshot::builders::GetExecutionFlowSnapshotOutputBuilder::definition)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_execution_flow_snapshot::GetExecutionFlowSnapshotOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_execution_flow_snapshot::GetExecutionFlowSnapshotOutput {
            flow_identifier: self.flow_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_identifier",
                    "flow_identifier was not specified but it is required when building GetExecutionFlowSnapshotOutput",
                )
            })?,
            flow_alias_identifier: self.flow_alias_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_alias_identifier",
                    "flow_alias_identifier was not specified but it is required when building GetExecutionFlowSnapshotOutput",
                )
            })?,
            flow_version: self.flow_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_version",
                    "flow_version was not specified but it is required when building GetExecutionFlowSnapshotOutput",
                )
            })?,
            execution_role_arn: self.execution_role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "execution_role_arn",
                    "execution_role_arn was not specified but it is required when building GetExecutionFlowSnapshotOutput",
                )
            })?,
            definition: self.definition.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "definition",
                    "definition was not specified but it is required when building GetExecutionFlowSnapshotOutput",
                )
            })?,
            customer_encryption_key_arn: self.customer_encryption_key_arn,
            _request_id: self._request_id,
        })
    }
}
