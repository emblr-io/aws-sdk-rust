// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for transforming text to SQL.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextToSqlConfiguration {
    /// <p>The type of resource to use in transformation.</p>
    pub r#type: crate::types::TextToSqlConfigurationType,
    /// <p>Specifies configurations for a knowledge base to use in transformation.</p>
    pub knowledge_base_configuration: ::std::option::Option<crate::types::TextToSqlKnowledgeBaseConfiguration>,
}
impl TextToSqlConfiguration {
    /// <p>The type of resource to use in transformation.</p>
    pub fn r#type(&self) -> &crate::types::TextToSqlConfigurationType {
        &self.r#type
    }
    /// <p>Specifies configurations for a knowledge base to use in transformation.</p>
    pub fn knowledge_base_configuration(&self) -> ::std::option::Option<&crate::types::TextToSqlKnowledgeBaseConfiguration> {
        self.knowledge_base_configuration.as_ref()
    }
}
impl TextToSqlConfiguration {
    /// Creates a new builder-style object to manufacture [`TextToSqlConfiguration`](crate::types::TextToSqlConfiguration).
    pub fn builder() -> crate::types::builders::TextToSqlConfigurationBuilder {
        crate::types::builders::TextToSqlConfigurationBuilder::default()
    }
}

/// A builder for [`TextToSqlConfiguration`](crate::types::TextToSqlConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TextToSqlConfigurationBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::TextToSqlConfigurationType>,
    pub(crate) knowledge_base_configuration: ::std::option::Option<crate::types::TextToSqlKnowledgeBaseConfiguration>,
}
impl TextToSqlConfigurationBuilder {
    /// <p>The type of resource to use in transformation.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::TextToSqlConfigurationType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource to use in transformation.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::TextToSqlConfigurationType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of resource to use in transformation.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::TextToSqlConfigurationType> {
        &self.r#type
    }
    /// <p>Specifies configurations for a knowledge base to use in transformation.</p>
    pub fn knowledge_base_configuration(mut self, input: crate::types::TextToSqlKnowledgeBaseConfiguration) -> Self {
        self.knowledge_base_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies configurations for a knowledge base to use in transformation.</p>
    pub fn set_knowledge_base_configuration(mut self, input: ::std::option::Option<crate::types::TextToSqlKnowledgeBaseConfiguration>) -> Self {
        self.knowledge_base_configuration = input;
        self
    }
    /// <p>Specifies configurations for a knowledge base to use in transformation.</p>
    pub fn get_knowledge_base_configuration(&self) -> &::std::option::Option<crate::types::TextToSqlKnowledgeBaseConfiguration> {
        &self.knowledge_base_configuration
    }
    /// Consumes the builder and constructs a [`TextToSqlConfiguration`](crate::types::TextToSqlConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::TextToSqlConfigurationBuilder::type)
    pub fn build(self) -> ::std::result::Result<crate::types::TextToSqlConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TextToSqlConfiguration {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building TextToSqlConfiguration",
                )
            })?,
            knowledge_base_configuration: self.knowledge_base_configuration,
        })
    }
}
