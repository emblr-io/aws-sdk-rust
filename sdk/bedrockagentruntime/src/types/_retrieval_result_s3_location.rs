// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The S3 data source location.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax">Retrieve response</a> – in the <code>s3Location</code> field</p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax">RetrieveAndGenerate response</a> – in the <code>s3Location</code> field</p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax">InvokeAgent response</a> – in the <code>s3Location</code> field</p></li>
/// </ul>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetrievalResultS3Location {
    /// <p>The S3 URI for the data source location.</p>
    pub uri: ::std::option::Option<::std::string::String>,
}
impl RetrievalResultS3Location {
    /// <p>The S3 URI for the data source location.</p>
    pub fn uri(&self) -> ::std::option::Option<&str> {
        self.uri.as_deref()
    }
}
impl RetrievalResultS3Location {
    /// Creates a new builder-style object to manufacture [`RetrievalResultS3Location`](crate::types::RetrievalResultS3Location).
    pub fn builder() -> crate::types::builders::RetrievalResultS3LocationBuilder {
        crate::types::builders::RetrievalResultS3LocationBuilder::default()
    }
}

/// A builder for [`RetrievalResultS3Location`](crate::types::RetrievalResultS3Location).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetrievalResultS3LocationBuilder {
    pub(crate) uri: ::std::option::Option<::std::string::String>,
}
impl RetrievalResultS3LocationBuilder {
    /// <p>The S3 URI for the data source location.</p>
    pub fn uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 URI for the data source location.</p>
    pub fn set_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.uri = input;
        self
    }
    /// <p>The S3 URI for the data source location.</p>
    pub fn get_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.uri
    }
    /// Consumes the builder and constructs a [`RetrievalResultS3Location`](crate::types::RetrievalResultS3Location).
    pub fn build(self) -> crate::types::RetrievalResultS3Location {
        crate::types::RetrievalResultS3Location { uri: self.uri }
    }
}
