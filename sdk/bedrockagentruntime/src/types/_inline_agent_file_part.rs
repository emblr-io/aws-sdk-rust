// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains intermediate response for code interpreter if any files have been generated.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InlineAgentFilePart {
    /// <p>Files containing intermediate response for the user.</p>
    pub files: ::std::option::Option<::std::vec::Vec<crate::types::OutputFile>>,
}
impl InlineAgentFilePart {
    /// <p>Files containing intermediate response for the user.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.files.is_none()`.
    pub fn files(&self) -> &[crate::types::OutputFile] {
        self.files.as_deref().unwrap_or_default()
    }
}
impl InlineAgentFilePart {
    /// Creates a new builder-style object to manufacture [`InlineAgentFilePart`](crate::types::InlineAgentFilePart).
    pub fn builder() -> crate::types::builders::InlineAgentFilePartBuilder {
        crate::types::builders::InlineAgentFilePartBuilder::default()
    }
}

/// A builder for [`InlineAgentFilePart`](crate::types::InlineAgentFilePart).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InlineAgentFilePartBuilder {
    pub(crate) files: ::std::option::Option<::std::vec::Vec<crate::types::OutputFile>>,
}
impl InlineAgentFilePartBuilder {
    /// Appends an item to `files`.
    ///
    /// To override the contents of this collection use [`set_files`](Self::set_files).
    ///
    /// <p>Files containing intermediate response for the user.</p>
    pub fn files(mut self, input: crate::types::OutputFile) -> Self {
        let mut v = self.files.unwrap_or_default();
        v.push(input);
        self.files = ::std::option::Option::Some(v);
        self
    }
    /// <p>Files containing intermediate response for the user.</p>
    pub fn set_files(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::OutputFile>>) -> Self {
        self.files = input;
        self
    }
    /// <p>Files containing intermediate response for the user.</p>
    pub fn get_files(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::OutputFile>> {
        &self.files
    }
    /// Consumes the builder and constructs a [`InlineAgentFilePart`](crate::types::InlineAgentFilePart).
    pub fn build(self) -> crate::types::InlineAgentFilePart {
        crate::types::InlineAgentFilePart { files: self.files }
    }
}
