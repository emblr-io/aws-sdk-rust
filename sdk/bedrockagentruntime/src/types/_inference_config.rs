// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for inference settings when generating responses using RetrieveAndGenerate.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InferenceConfig {
    /// <p>Configuration settings specific to text generation while generating responses using RetrieveAndGenerate.</p>
    pub text_inference_config: ::std::option::Option<crate::types::TextInferenceConfig>,
}
impl InferenceConfig {
    /// <p>Configuration settings specific to text generation while generating responses using RetrieveAndGenerate.</p>
    pub fn text_inference_config(&self) -> ::std::option::Option<&crate::types::TextInferenceConfig> {
        self.text_inference_config.as_ref()
    }
}
impl InferenceConfig {
    /// Creates a new builder-style object to manufacture [`InferenceConfig`](crate::types::InferenceConfig).
    pub fn builder() -> crate::types::builders::InferenceConfigBuilder {
        crate::types::builders::InferenceConfigBuilder::default()
    }
}

/// A builder for [`InferenceConfig`](crate::types::InferenceConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InferenceConfigBuilder {
    pub(crate) text_inference_config: ::std::option::Option<crate::types::TextInferenceConfig>,
}
impl InferenceConfigBuilder {
    /// <p>Configuration settings specific to text generation while generating responses using RetrieveAndGenerate.</p>
    pub fn text_inference_config(mut self, input: crate::types::TextInferenceConfig) -> Self {
        self.text_inference_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings specific to text generation while generating responses using RetrieveAndGenerate.</p>
    pub fn set_text_inference_config(mut self, input: ::std::option::Option<crate::types::TextInferenceConfig>) -> Self {
        self.text_inference_config = input;
        self
    }
    /// <p>Configuration settings specific to text generation while generating responses using RetrieveAndGenerate.</p>
    pub fn get_text_inference_config(&self) -> &::std::option::Option<crate::types::TextInferenceConfig> {
        &self.text_inference_config
    }
    /// Consumes the builder and constructs a [`InferenceConfig`](crate::types::InferenceConfig).
    pub fn build(self) -> crate::types::InferenceConfig {
        crate::types::InferenceConfig {
            text_inference_config: self.text_inference_config,
        }
    }
}
