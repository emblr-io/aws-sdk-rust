// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for an Amazon Bedrock reranker model.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VectorSearchBedrockRerankingModelConfiguration {
    /// <p>The ARN of the reranker model to use.</p>
    pub model_arn: ::std::string::String,
    /// <p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>
    pub additional_model_request_fields: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::aws_smithy_types::Document>>,
}
impl VectorSearchBedrockRerankingModelConfiguration {
    /// <p>The ARN of the reranker model to use.</p>
    pub fn model_arn(&self) -> &str {
        use std::ops::Deref;
        self.model_arn.deref()
    }
    /// <p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>
    pub fn additional_model_request_fields(
        &self,
    ) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::aws_smithy_types::Document>> {
        self.additional_model_request_fields.as_ref()
    }
}
impl VectorSearchBedrockRerankingModelConfiguration {
    /// Creates a new builder-style object to manufacture [`VectorSearchBedrockRerankingModelConfiguration`](crate::types::VectorSearchBedrockRerankingModelConfiguration).
    pub fn builder() -> crate::types::builders::VectorSearchBedrockRerankingModelConfigurationBuilder {
        crate::types::builders::VectorSearchBedrockRerankingModelConfigurationBuilder::default()
    }
}

/// A builder for [`VectorSearchBedrockRerankingModelConfiguration`](crate::types::VectorSearchBedrockRerankingModelConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VectorSearchBedrockRerankingModelConfigurationBuilder {
    pub(crate) model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) additional_model_request_fields:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, ::aws_smithy_types::Document>>,
}
impl VectorSearchBedrockRerankingModelConfigurationBuilder {
    /// <p>The ARN of the reranker model to use.</p>
    /// This field is required.
    pub fn model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the reranker model to use.</p>
    pub fn set_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_arn = input;
        self
    }
    /// <p>The ARN of the reranker model to use.</p>
    pub fn get_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_arn
    }
    /// Adds a key-value pair to `additional_model_request_fields`.
    ///
    /// To override the contents of this collection use [`set_additional_model_request_fields`](Self::set_additional_model_request_fields).
    ///
    /// <p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>
    pub fn additional_model_request_fields(mut self, k: impl ::std::convert::Into<::std::string::String>, v: ::aws_smithy_types::Document) -> Self {
        let mut hash_map = self.additional_model_request_fields.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.additional_model_request_fields = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>
    pub fn set_additional_model_request_fields(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::aws_smithy_types::Document>>,
    ) -> Self {
        self.additional_model_request_fields = input;
        self
    }
    /// <p>A JSON object whose keys are request fields for the model and whose values are values for those fields.</p>
    pub fn get_additional_model_request_fields(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::aws_smithy_types::Document>> {
        &self.additional_model_request_fields
    }
    /// Consumes the builder and constructs a [`VectorSearchBedrockRerankingModelConfiguration`](crate::types::VectorSearchBedrockRerankingModelConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`model_arn`](crate::types::builders::VectorSearchBedrockRerankingModelConfigurationBuilder::model_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::VectorSearchBedrockRerankingModelConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VectorSearchBedrockRerankingModelConfiguration {
            model_arn: self.model_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "model_arn",
                    "model_arn was not specified but it is required when building VectorSearchBedrockRerankingModelConfiguration",
                )
            })?,
            additional_model_request_fields: self.additional_model_request_fields,
        })
    }
}
