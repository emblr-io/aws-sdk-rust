// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a field in the output from a node. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct FlowTraceNodeOutputField {
    /// <p>The name of the node output.</p>
    pub node_output_name: ::std::string::String,
    /// <p>The content of the node output.</p>
    pub content: ::std::option::Option<crate::types::FlowTraceNodeOutputContent>,
}
impl FlowTraceNodeOutputField {
    /// <p>The name of the node output.</p>
    pub fn node_output_name(&self) -> &str {
        use std::ops::Deref;
        self.node_output_name.deref()
    }
    /// <p>The content of the node output.</p>
    pub fn content(&self) -> ::std::option::Option<&crate::types::FlowTraceNodeOutputContent> {
        self.content.as_ref()
    }
}
impl ::std::fmt::Debug for FlowTraceNodeOutputField {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("FlowTraceNodeOutputField");
        formatter.field("node_output_name", &"*** Sensitive Data Redacted ***");
        formatter.field("content", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl FlowTraceNodeOutputField {
    /// Creates a new builder-style object to manufacture [`FlowTraceNodeOutputField`](crate::types::FlowTraceNodeOutputField).
    pub fn builder() -> crate::types::builders::FlowTraceNodeOutputFieldBuilder {
        crate::types::builders::FlowTraceNodeOutputFieldBuilder::default()
    }
}

/// A builder for [`FlowTraceNodeOutputField`](crate::types::FlowTraceNodeOutputField).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct FlowTraceNodeOutputFieldBuilder {
    pub(crate) node_output_name: ::std::option::Option<::std::string::String>,
    pub(crate) content: ::std::option::Option<crate::types::FlowTraceNodeOutputContent>,
}
impl FlowTraceNodeOutputFieldBuilder {
    /// <p>The name of the node output.</p>
    /// This field is required.
    pub fn node_output_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.node_output_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the node output.</p>
    pub fn set_node_output_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.node_output_name = input;
        self
    }
    /// <p>The name of the node output.</p>
    pub fn get_node_output_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.node_output_name
    }
    /// <p>The content of the node output.</p>
    /// This field is required.
    pub fn content(mut self, input: crate::types::FlowTraceNodeOutputContent) -> Self {
        self.content = ::std::option::Option::Some(input);
        self
    }
    /// <p>The content of the node output.</p>
    pub fn set_content(mut self, input: ::std::option::Option<crate::types::FlowTraceNodeOutputContent>) -> Self {
        self.content = input;
        self
    }
    /// <p>The content of the node output.</p>
    pub fn get_content(&self) -> &::std::option::Option<crate::types::FlowTraceNodeOutputContent> {
        &self.content
    }
    /// Consumes the builder and constructs a [`FlowTraceNodeOutputField`](crate::types::FlowTraceNodeOutputField).
    /// This method will fail if any of the following fields are not set:
    /// - [`node_output_name`](crate::types::builders::FlowTraceNodeOutputFieldBuilder::node_output_name)
    pub fn build(self) -> ::std::result::Result<crate::types::FlowTraceNodeOutputField, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FlowTraceNodeOutputField {
            node_output_name: self.node_output_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "node_output_name",
                    "node_output_name was not specified but it is required when building FlowTraceNodeOutputField",
                )
            })?,
            content: self.content,
        })
    }
}
impl ::std::fmt::Debug for FlowTraceNodeOutputFieldBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("FlowTraceNodeOutputFieldBuilder");
        formatter.field("node_output_name", &"*** Sensitive Data Redacted ***");
        formatter.field("content", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
