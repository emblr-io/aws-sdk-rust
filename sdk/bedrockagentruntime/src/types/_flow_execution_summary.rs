// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about a flow execution, including its status, timestamps, and identifiers.</p><note>
/// <p>Flow executions is in preview release for Amazon Bedrock and is subject to change.</p>
/// </note>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowExecutionSummary {
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the flow execution.</p>
    pub execution_arn: ::std::string::String,
    /// <p>The unique identifier of the flow alias used for the execution.</p>
    pub flow_alias_identifier: ::std::string::String,
    /// <p>The unique identifier of the flow.</p>
    pub flow_identifier: ::std::string::String,
    /// <p>The version of the flow used for the execution.</p>
    pub flow_version: ::std::string::String,
    /// <p>The current status of the flow execution.</p>
    /// <p>Flow executions time out after 24 hours.</p>
    pub status: crate::types::FlowExecutionStatus,
    /// <p>The timestamp when the flow execution was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp when the flow execution ended. This field is only populated when the execution has completed, failed, timed out, or been aborted.</p>
    pub ended_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl FlowExecutionSummary {
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the flow execution.</p>
    pub fn execution_arn(&self) -> &str {
        use std::ops::Deref;
        self.execution_arn.deref()
    }
    /// <p>The unique identifier of the flow alias used for the execution.</p>
    pub fn flow_alias_identifier(&self) -> &str {
        use std::ops::Deref;
        self.flow_alias_identifier.deref()
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn flow_identifier(&self) -> &str {
        use std::ops::Deref;
        self.flow_identifier.deref()
    }
    /// <p>The version of the flow used for the execution.</p>
    pub fn flow_version(&self) -> &str {
        use std::ops::Deref;
        self.flow_version.deref()
    }
    /// <p>The current status of the flow execution.</p>
    /// <p>Flow executions time out after 24 hours.</p>
    pub fn status(&self) -> &crate::types::FlowExecutionStatus {
        &self.status
    }
    /// <p>The timestamp when the flow execution was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp when the flow execution ended. This field is only populated when the execution has completed, failed, timed out, or been aborted.</p>
    pub fn ended_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.ended_at.as_ref()
    }
}
impl FlowExecutionSummary {
    /// Creates a new builder-style object to manufacture [`FlowExecutionSummary`](crate::types::FlowExecutionSummary).
    pub fn builder() -> crate::types::builders::FlowExecutionSummaryBuilder {
        crate::types::builders::FlowExecutionSummaryBuilder::default()
    }
}

/// A builder for [`FlowExecutionSummary`](crate::types::FlowExecutionSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FlowExecutionSummaryBuilder {
    pub(crate) execution_arn: ::std::option::Option<::std::string::String>,
    pub(crate) flow_alias_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) flow_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) flow_version: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::FlowExecutionStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) ended_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl FlowExecutionSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the flow execution.</p>
    /// This field is required.
    pub fn execution_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the flow execution.</p>
    pub fn set_execution_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the flow execution.</p>
    pub fn get_execution_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_arn
    }
    /// <p>The unique identifier of the flow alias used for the execution.</p>
    /// This field is required.
    pub fn flow_alias_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_alias_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the flow alias used for the execution.</p>
    pub fn set_flow_alias_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_alias_identifier = input;
        self
    }
    /// <p>The unique identifier of the flow alias used for the execution.</p>
    pub fn get_flow_alias_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_alias_identifier
    }
    /// <p>The unique identifier of the flow.</p>
    /// This field is required.
    pub fn flow_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn set_flow_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_identifier = input;
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn get_flow_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_identifier
    }
    /// <p>The version of the flow used for the execution.</p>
    /// This field is required.
    pub fn flow_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the flow used for the execution.</p>
    pub fn set_flow_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_version = input;
        self
    }
    /// <p>The version of the flow used for the execution.</p>
    pub fn get_flow_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_version
    }
    /// <p>The current status of the flow execution.</p>
    /// <p>Flow executions time out after 24 hours.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::FlowExecutionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the flow execution.</p>
    /// <p>Flow executions time out after 24 hours.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FlowExecutionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the flow execution.</p>
    /// <p>Flow executions time out after 24 hours.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FlowExecutionStatus> {
        &self.status
    }
    /// <p>The timestamp when the flow execution was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the flow execution was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the flow execution was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the flow execution ended. This field is only populated when the execution has completed, failed, timed out, or been aborted.</p>
    pub fn ended_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.ended_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the flow execution ended. This field is only populated when the execution has completed, failed, timed out, or been aborted.</p>
    pub fn set_ended_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.ended_at = input;
        self
    }
    /// <p>The timestamp when the flow execution ended. This field is only populated when the execution has completed, failed, timed out, or been aborted.</p>
    pub fn get_ended_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.ended_at
    }
    /// Consumes the builder and constructs a [`FlowExecutionSummary`](crate::types::FlowExecutionSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`execution_arn`](crate::types::builders::FlowExecutionSummaryBuilder::execution_arn)
    /// - [`flow_alias_identifier`](crate::types::builders::FlowExecutionSummaryBuilder::flow_alias_identifier)
    /// - [`flow_identifier`](crate::types::builders::FlowExecutionSummaryBuilder::flow_identifier)
    /// - [`flow_version`](crate::types::builders::FlowExecutionSummaryBuilder::flow_version)
    /// - [`status`](crate::types::builders::FlowExecutionSummaryBuilder::status)
    /// - [`created_at`](crate::types::builders::FlowExecutionSummaryBuilder::created_at)
    pub fn build(self) -> ::std::result::Result<crate::types::FlowExecutionSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FlowExecutionSummary {
            execution_arn: self.execution_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "execution_arn",
                    "execution_arn was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            flow_alias_identifier: self.flow_alias_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_alias_identifier",
                    "flow_alias_identifier was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            flow_identifier: self.flow_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_identifier",
                    "flow_identifier was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            flow_version: self.flow_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_version",
                    "flow_version was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building FlowExecutionSummary",
                )
            })?,
            ended_at: self.ended_at,
        })
    }
}
