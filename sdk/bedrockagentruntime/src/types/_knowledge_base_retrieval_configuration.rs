// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for knowledge base query. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax">Retrieve request</a> – in the <code>retrievalConfiguration</code> field</p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax">RetrieveAndGenerate request</a> – in the <code>retrievalConfiguration</code> field</p></li>
/// </ul>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KnowledgeBaseRetrievalConfiguration {
    /// <p>Contains details about how the results from the vector search should be returned. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
    pub vector_search_configuration: ::std::option::Option<crate::types::KnowledgeBaseVectorSearchConfiguration>,
}
impl KnowledgeBaseRetrievalConfiguration {
    /// <p>Contains details about how the results from the vector search should be returned. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
    pub fn vector_search_configuration(&self) -> ::std::option::Option<&crate::types::KnowledgeBaseVectorSearchConfiguration> {
        self.vector_search_configuration.as_ref()
    }
}
impl KnowledgeBaseRetrievalConfiguration {
    /// Creates a new builder-style object to manufacture [`KnowledgeBaseRetrievalConfiguration`](crate::types::KnowledgeBaseRetrievalConfiguration).
    pub fn builder() -> crate::types::builders::KnowledgeBaseRetrievalConfigurationBuilder {
        crate::types::builders::KnowledgeBaseRetrievalConfigurationBuilder::default()
    }
}

/// A builder for [`KnowledgeBaseRetrievalConfiguration`](crate::types::KnowledgeBaseRetrievalConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct KnowledgeBaseRetrievalConfigurationBuilder {
    pub(crate) vector_search_configuration: ::std::option::Option<crate::types::KnowledgeBaseVectorSearchConfiguration>,
}
impl KnowledgeBaseRetrievalConfigurationBuilder {
    /// <p>Contains details about how the results from the vector search should be returned. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
    /// This field is required.
    pub fn vector_search_configuration(mut self, input: crate::types::KnowledgeBaseVectorSearchConfiguration) -> Self {
        self.vector_search_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about how the results from the vector search should be returned. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
    pub fn set_vector_search_configuration(mut self, input: ::std::option::Option<crate::types::KnowledgeBaseVectorSearchConfiguration>) -> Self {
        self.vector_search_configuration = input;
        self
    }
    /// <p>Contains details about how the results from the vector search should be returned. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html">Query configurations</a>.</p>
    pub fn get_vector_search_configuration(&self) -> &::std::option::Option<crate::types::KnowledgeBaseVectorSearchConfiguration> {
        &self.vector_search_configuration
    }
    /// Consumes the builder and constructs a [`KnowledgeBaseRetrievalConfiguration`](crate::types::KnowledgeBaseRetrievalConfiguration).
    pub fn build(self) -> crate::types::KnowledgeBaseRetrievalConfiguration {
        crate::types::KnowledgeBaseRetrievalConfiguration {
            vector_search_configuration: self.vector_search_configuration,
        }
    }
}
