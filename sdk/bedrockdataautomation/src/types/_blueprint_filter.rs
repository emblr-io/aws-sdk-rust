// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Blueprint Filter
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BlueprintFilter {
    /// ARN of a Blueprint
    pub blueprint_arn: ::std::string::String,
    /// Blueprint Version
    pub blueprint_version: ::std::option::Option<::std::string::String>,
    /// Stage of the Blueprint
    pub blueprint_stage: ::std::option::Option<crate::types::BlueprintStage>,
}
impl BlueprintFilter {
    /// ARN of a Blueprint
    pub fn blueprint_arn(&self) -> &str {
        use std::ops::Deref;
        self.blueprint_arn.deref()
    }
    /// Blueprint Version
    pub fn blueprint_version(&self) -> ::std::option::Option<&str> {
        self.blueprint_version.as_deref()
    }
    /// Stage of the Blueprint
    pub fn blueprint_stage(&self) -> ::std::option::Option<&crate::types::BlueprintStage> {
        self.blueprint_stage.as_ref()
    }
}
impl BlueprintFilter {
    /// Creates a new builder-style object to manufacture [`BlueprintFilter`](crate::types::BlueprintFilter).
    pub fn builder() -> crate::types::builders::BlueprintFilterBuilder {
        crate::types::builders::BlueprintFilterBuilder::default()
    }
}

/// A builder for [`BlueprintFilter`](crate::types::BlueprintFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BlueprintFilterBuilder {
    pub(crate) blueprint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) blueprint_version: ::std::option::Option<::std::string::String>,
    pub(crate) blueprint_stage: ::std::option::Option<crate::types::BlueprintStage>,
}
impl BlueprintFilterBuilder {
    /// ARN of a Blueprint
    /// This field is required.
    pub fn blueprint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// ARN of a Blueprint
    pub fn set_blueprint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_arn = input;
        self
    }
    /// ARN of a Blueprint
    pub fn get_blueprint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_arn
    }
    /// Blueprint Version
    pub fn blueprint_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_version = ::std::option::Option::Some(input.into());
        self
    }
    /// Blueprint Version
    pub fn set_blueprint_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_version = input;
        self
    }
    /// Blueprint Version
    pub fn get_blueprint_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_version
    }
    /// Stage of the Blueprint
    pub fn blueprint_stage(mut self, input: crate::types::BlueprintStage) -> Self {
        self.blueprint_stage = ::std::option::Option::Some(input);
        self
    }
    /// Stage of the Blueprint
    pub fn set_blueprint_stage(mut self, input: ::std::option::Option<crate::types::BlueprintStage>) -> Self {
        self.blueprint_stage = input;
        self
    }
    /// Stage of the Blueprint
    pub fn get_blueprint_stage(&self) -> &::std::option::Option<crate::types::BlueprintStage> {
        &self.blueprint_stage
    }
    /// Consumes the builder and constructs a [`BlueprintFilter`](crate::types::BlueprintFilter).
    /// This method will fail if any of the following fields are not set:
    /// - [`blueprint_arn`](crate::types::builders::BlueprintFilterBuilder::blueprint_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::BlueprintFilter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BlueprintFilter {
            blueprint_arn: self.blueprint_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "blueprint_arn",
                    "blueprint_arn was not specified but it is required when building BlueprintFilter",
                )
            })?,
            blueprint_version: self.blueprint_version,
            blueprint_stage: self.blueprint_stage,
        })
    }
}
