// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Custom output configuration
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomOutputConfiguration {
    /// List of Blueprint Item
    pub blueprints: ::std::option::Option<::std::vec::Vec<crate::types::BlueprintItem>>,
}
impl CustomOutputConfiguration {
    /// List of Blueprint Item
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.blueprints.is_none()`.
    pub fn blueprints(&self) -> &[crate::types::BlueprintItem] {
        self.blueprints.as_deref().unwrap_or_default()
    }
}
impl CustomOutputConfiguration {
    /// Creates a new builder-style object to manufacture [`CustomOutputConfiguration`](crate::types::CustomOutputConfiguration).
    pub fn builder() -> crate::types::builders::CustomOutputConfigurationBuilder {
        crate::types::builders::CustomOutputConfigurationBuilder::default()
    }
}

/// A builder for [`CustomOutputConfiguration`](crate::types::CustomOutputConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomOutputConfigurationBuilder {
    pub(crate) blueprints: ::std::option::Option<::std::vec::Vec<crate::types::BlueprintItem>>,
}
impl CustomOutputConfigurationBuilder {
    /// Appends an item to `blueprints`.
    ///
    /// To override the contents of this collection use [`set_blueprints`](Self::set_blueprints).
    ///
    /// List of Blueprint Item
    pub fn blueprints(mut self, input: crate::types::BlueprintItem) -> Self {
        let mut v = self.blueprints.unwrap_or_default();
        v.push(input);
        self.blueprints = ::std::option::Option::Some(v);
        self
    }
    /// List of Blueprint Item
    pub fn set_blueprints(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BlueprintItem>>) -> Self {
        self.blueprints = input;
        self
    }
    /// List of Blueprint Item
    pub fn get_blueprints(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BlueprintItem>> {
        &self.blueprints
    }
    /// Consumes the builder and constructs a [`CustomOutputConfiguration`](crate::types::CustomOutputConfiguration).
    pub fn build(self) -> crate::types::CustomOutputConfiguration {
        crate::types::CustomOutputConfiguration { blueprints: self.blueprints }
    }
}
