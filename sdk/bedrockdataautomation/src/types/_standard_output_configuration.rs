// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Standard output configuration
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StandardOutputConfiguration {
    /// Standard Output Configuration of Document
    pub document: ::std::option::Option<crate::types::DocumentStandardOutputConfiguration>,
    /// Standard Output Configuration of Image
    pub image: ::std::option::Option<crate::types::ImageStandardOutputConfiguration>,
    /// Standard Output Configuration of Video
    pub video: ::std::option::Option<crate::types::VideoStandardOutputConfiguration>,
    /// Standard Output Configuration of Audio
    pub audio: ::std::option::Option<crate::types::AudioStandardOutputConfiguration>,
}
impl StandardOutputConfiguration {
    /// Standard Output Configuration of Document
    pub fn document(&self) -> ::std::option::Option<&crate::types::DocumentStandardOutputConfiguration> {
        self.document.as_ref()
    }
    /// Standard Output Configuration of Image
    pub fn image(&self) -> ::std::option::Option<&crate::types::ImageStandardOutputConfiguration> {
        self.image.as_ref()
    }
    /// Standard Output Configuration of Video
    pub fn video(&self) -> ::std::option::Option<&crate::types::VideoStandardOutputConfiguration> {
        self.video.as_ref()
    }
    /// Standard Output Configuration of Audio
    pub fn audio(&self) -> ::std::option::Option<&crate::types::AudioStandardOutputConfiguration> {
        self.audio.as_ref()
    }
}
impl StandardOutputConfiguration {
    /// Creates a new builder-style object to manufacture [`StandardOutputConfiguration`](crate::types::StandardOutputConfiguration).
    pub fn builder() -> crate::types::builders::StandardOutputConfigurationBuilder {
        crate::types::builders::StandardOutputConfigurationBuilder::default()
    }
}

/// A builder for [`StandardOutputConfiguration`](crate::types::StandardOutputConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StandardOutputConfigurationBuilder {
    pub(crate) document: ::std::option::Option<crate::types::DocumentStandardOutputConfiguration>,
    pub(crate) image: ::std::option::Option<crate::types::ImageStandardOutputConfiguration>,
    pub(crate) video: ::std::option::Option<crate::types::VideoStandardOutputConfiguration>,
    pub(crate) audio: ::std::option::Option<crate::types::AudioStandardOutputConfiguration>,
}
impl StandardOutputConfigurationBuilder {
    /// Standard Output Configuration of Document
    pub fn document(mut self, input: crate::types::DocumentStandardOutputConfiguration) -> Self {
        self.document = ::std::option::Option::Some(input);
        self
    }
    /// Standard Output Configuration of Document
    pub fn set_document(mut self, input: ::std::option::Option<crate::types::DocumentStandardOutputConfiguration>) -> Self {
        self.document = input;
        self
    }
    /// Standard Output Configuration of Document
    pub fn get_document(&self) -> &::std::option::Option<crate::types::DocumentStandardOutputConfiguration> {
        &self.document
    }
    /// Standard Output Configuration of Image
    pub fn image(mut self, input: crate::types::ImageStandardOutputConfiguration) -> Self {
        self.image = ::std::option::Option::Some(input);
        self
    }
    /// Standard Output Configuration of Image
    pub fn set_image(mut self, input: ::std::option::Option<crate::types::ImageStandardOutputConfiguration>) -> Self {
        self.image = input;
        self
    }
    /// Standard Output Configuration of Image
    pub fn get_image(&self) -> &::std::option::Option<crate::types::ImageStandardOutputConfiguration> {
        &self.image
    }
    /// Standard Output Configuration of Video
    pub fn video(mut self, input: crate::types::VideoStandardOutputConfiguration) -> Self {
        self.video = ::std::option::Option::Some(input);
        self
    }
    /// Standard Output Configuration of Video
    pub fn set_video(mut self, input: ::std::option::Option<crate::types::VideoStandardOutputConfiguration>) -> Self {
        self.video = input;
        self
    }
    /// Standard Output Configuration of Video
    pub fn get_video(&self) -> &::std::option::Option<crate::types::VideoStandardOutputConfiguration> {
        &self.video
    }
    /// Standard Output Configuration of Audio
    pub fn audio(mut self, input: crate::types::AudioStandardOutputConfiguration) -> Self {
        self.audio = ::std::option::Option::Some(input);
        self
    }
    /// Standard Output Configuration of Audio
    pub fn set_audio(mut self, input: ::std::option::Option<crate::types::AudioStandardOutputConfiguration>) -> Self {
        self.audio = input;
        self
    }
    /// Standard Output Configuration of Audio
    pub fn get_audio(&self) -> &::std::option::Option<crate::types::AudioStandardOutputConfiguration> {
        &self.audio
    }
    /// Consumes the builder and constructs a [`StandardOutputConfiguration`](crate::types::StandardOutputConfiguration).
    pub fn build(self) -> crate::types::StandardOutputConfiguration {
        crate::types::StandardOutputConfiguration {
            document: self.document,
            image: self.image,
            video: self.video,
            audio: self.audio,
        }
    }
}
