// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Standard Extraction Configuration of Image
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageStandardExtraction {
    /// Category of Image Extraction
    pub category: ::std::option::Option<crate::types::ImageExtractionCategory>,
    /// Bounding Box Configuration of Image Extraction
    pub bounding_box: ::std::option::Option<crate::types::ImageBoundingBox>,
}
impl ImageStandardExtraction {
    /// Category of Image Extraction
    pub fn category(&self) -> ::std::option::Option<&crate::types::ImageExtractionCategory> {
        self.category.as_ref()
    }
    /// Bounding Box Configuration of Image Extraction
    pub fn bounding_box(&self) -> ::std::option::Option<&crate::types::ImageBoundingBox> {
        self.bounding_box.as_ref()
    }
}
impl ImageStandardExtraction {
    /// Creates a new builder-style object to manufacture [`ImageStandardExtraction`](crate::types::ImageStandardExtraction).
    pub fn builder() -> crate::types::builders::ImageStandardExtractionBuilder {
        crate::types::builders::ImageStandardExtractionBuilder::default()
    }
}

/// A builder for [`ImageStandardExtraction`](crate::types::ImageStandardExtraction).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImageStandardExtractionBuilder {
    pub(crate) category: ::std::option::Option<crate::types::ImageExtractionCategory>,
    pub(crate) bounding_box: ::std::option::Option<crate::types::ImageBoundingBox>,
}
impl ImageStandardExtractionBuilder {
    /// Category of Image Extraction
    /// This field is required.
    pub fn category(mut self, input: crate::types::ImageExtractionCategory) -> Self {
        self.category = ::std::option::Option::Some(input);
        self
    }
    /// Category of Image Extraction
    pub fn set_category(mut self, input: ::std::option::Option<crate::types::ImageExtractionCategory>) -> Self {
        self.category = input;
        self
    }
    /// Category of Image Extraction
    pub fn get_category(&self) -> &::std::option::Option<crate::types::ImageExtractionCategory> {
        &self.category
    }
    /// Bounding Box Configuration of Image Extraction
    /// This field is required.
    pub fn bounding_box(mut self, input: crate::types::ImageBoundingBox) -> Self {
        self.bounding_box = ::std::option::Option::Some(input);
        self
    }
    /// Bounding Box Configuration of Image Extraction
    pub fn set_bounding_box(mut self, input: ::std::option::Option<crate::types::ImageBoundingBox>) -> Self {
        self.bounding_box = input;
        self
    }
    /// Bounding Box Configuration of Image Extraction
    pub fn get_bounding_box(&self) -> &::std::option::Option<crate::types::ImageBoundingBox> {
        &self.bounding_box
    }
    /// Consumes the builder and constructs a [`ImageStandardExtraction`](crate::types::ImageStandardExtraction).
    pub fn build(self) -> crate::types::ImageStandardExtraction {
        crate::types::ImageStandardExtraction {
            category: self.category,
            bounding_box: self.bounding_box,
        }
    }
}
