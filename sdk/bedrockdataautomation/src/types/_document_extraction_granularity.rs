// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Granularity of Document Extraction
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DocumentExtractionGranularity {
    /// List of Document Extraction Granularity Type
    pub types: ::std::option::Option<::std::vec::Vec<crate::types::DocumentExtractionGranularityType>>,
}
impl DocumentExtractionGranularity {
    /// List of Document Extraction Granularity Type
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.types.is_none()`.
    pub fn types(&self) -> &[crate::types::DocumentExtractionGranularityType] {
        self.types.as_deref().unwrap_or_default()
    }
}
impl DocumentExtractionGranularity {
    /// Creates a new builder-style object to manufacture [`DocumentExtractionGranularity`](crate::types::DocumentExtractionGranularity).
    pub fn builder() -> crate::types::builders::DocumentExtractionGranularityBuilder {
        crate::types::builders::DocumentExtractionGranularityBuilder::default()
    }
}

/// A builder for [`DocumentExtractionGranularity`](crate::types::DocumentExtractionGranularity).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DocumentExtractionGranularityBuilder {
    pub(crate) types: ::std::option::Option<::std::vec::Vec<crate::types::DocumentExtractionGranularityType>>,
}
impl DocumentExtractionGranularityBuilder {
    /// Appends an item to `types`.
    ///
    /// To override the contents of this collection use [`set_types`](Self::set_types).
    ///
    /// List of Document Extraction Granularity Type
    pub fn types(mut self, input: crate::types::DocumentExtractionGranularityType) -> Self {
        let mut v = self.types.unwrap_or_default();
        v.push(input);
        self.types = ::std::option::Option::Some(v);
        self
    }
    /// List of Document Extraction Granularity Type
    pub fn set_types(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DocumentExtractionGranularityType>>) -> Self {
        self.types = input;
        self
    }
    /// List of Document Extraction Granularity Type
    pub fn get_types(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DocumentExtractionGranularityType>> {
        &self.types
    }
    /// Consumes the builder and constructs a [`DocumentExtractionGranularity`](crate::types::DocumentExtractionGranularity).
    pub fn build(self) -> crate::types::DocumentExtractionGranularity {
        crate::types::DocumentExtractionGranularity { types: self.types }
    }
}
