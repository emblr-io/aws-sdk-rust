// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Update DataAutomationProject Request
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateDataAutomationProjectInput {
    /// ARN generated at the server side when a DataAutomationProject is created
    pub project_arn: ::std::option::Option<::std::string::String>,
    /// Stage of the Project
    pub project_stage: ::std::option::Option<crate::types::DataAutomationProjectStage>,
    /// Description of the DataAutomationProject
    pub project_description: ::std::option::Option<::std::string::String>,
    /// Standard output configuration
    pub standard_output_configuration: ::std::option::Option<crate::types::StandardOutputConfiguration>,
    /// Custom output configuration
    pub custom_output_configuration: ::std::option::Option<crate::types::CustomOutputConfiguration>,
    /// Override configuration
    pub override_configuration: ::std::option::Option<crate::types::OverrideConfiguration>,
    /// KMS Encryption Configuration
    pub encryption_configuration: ::std::option::Option<crate::types::EncryptionConfiguration>,
}
impl UpdateDataAutomationProjectInput {
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn project_arn(&self) -> ::std::option::Option<&str> {
        self.project_arn.as_deref()
    }
    /// Stage of the Project
    pub fn project_stage(&self) -> ::std::option::Option<&crate::types::DataAutomationProjectStage> {
        self.project_stage.as_ref()
    }
    /// Description of the DataAutomationProject
    pub fn project_description(&self) -> ::std::option::Option<&str> {
        self.project_description.as_deref()
    }
    /// Standard output configuration
    pub fn standard_output_configuration(&self) -> ::std::option::Option<&crate::types::StandardOutputConfiguration> {
        self.standard_output_configuration.as_ref()
    }
    /// Custom output configuration
    pub fn custom_output_configuration(&self) -> ::std::option::Option<&crate::types::CustomOutputConfiguration> {
        self.custom_output_configuration.as_ref()
    }
    /// Override configuration
    pub fn override_configuration(&self) -> ::std::option::Option<&crate::types::OverrideConfiguration> {
        self.override_configuration.as_ref()
    }
    /// KMS Encryption Configuration
    pub fn encryption_configuration(&self) -> ::std::option::Option<&crate::types::EncryptionConfiguration> {
        self.encryption_configuration.as_ref()
    }
}
impl ::std::fmt::Debug for UpdateDataAutomationProjectInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateDataAutomationProjectInput");
        formatter.field("project_arn", &self.project_arn);
        formatter.field("project_stage", &self.project_stage);
        formatter.field("project_description", &"*** Sensitive Data Redacted ***");
        formatter.field("standard_output_configuration", &self.standard_output_configuration);
        formatter.field("custom_output_configuration", &self.custom_output_configuration);
        formatter.field("override_configuration", &self.override_configuration);
        formatter.field("encryption_configuration", &self.encryption_configuration);
        formatter.finish()
    }
}
impl UpdateDataAutomationProjectInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataAutomationProjectInput`](crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput).
    pub fn builder() -> crate::operation::update_data_automation_project::builders::UpdateDataAutomationProjectInputBuilder {
        crate::operation::update_data_automation_project::builders::UpdateDataAutomationProjectInputBuilder::default()
    }
}

/// A builder for [`UpdateDataAutomationProjectInput`](crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UpdateDataAutomationProjectInputBuilder {
    pub(crate) project_arn: ::std::option::Option<::std::string::String>,
    pub(crate) project_stage: ::std::option::Option<crate::types::DataAutomationProjectStage>,
    pub(crate) project_description: ::std::option::Option<::std::string::String>,
    pub(crate) standard_output_configuration: ::std::option::Option<crate::types::StandardOutputConfiguration>,
    pub(crate) custom_output_configuration: ::std::option::Option<crate::types::CustomOutputConfiguration>,
    pub(crate) override_configuration: ::std::option::Option<crate::types::OverrideConfiguration>,
    pub(crate) encryption_configuration: ::std::option::Option<crate::types::EncryptionConfiguration>,
}
impl UpdateDataAutomationProjectInputBuilder {
    /// ARN generated at the server side when a DataAutomationProject is created
    /// This field is required.
    pub fn project_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn set_project_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_arn = input;
        self
    }
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn get_project_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_arn
    }
    /// Stage of the Project
    pub fn project_stage(mut self, input: crate::types::DataAutomationProjectStage) -> Self {
        self.project_stage = ::std::option::Option::Some(input);
        self
    }
    /// Stage of the Project
    pub fn set_project_stage(mut self, input: ::std::option::Option<crate::types::DataAutomationProjectStage>) -> Self {
        self.project_stage = input;
        self
    }
    /// Stage of the Project
    pub fn get_project_stage(&self) -> &::std::option::Option<crate::types::DataAutomationProjectStage> {
        &self.project_stage
    }
    /// Description of the DataAutomationProject
    pub fn project_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_description = ::std::option::Option::Some(input.into());
        self
    }
    /// Description of the DataAutomationProject
    pub fn set_project_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_description = input;
        self
    }
    /// Description of the DataAutomationProject
    pub fn get_project_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_description
    }
    /// Standard output configuration
    /// This field is required.
    pub fn standard_output_configuration(mut self, input: crate::types::StandardOutputConfiguration) -> Self {
        self.standard_output_configuration = ::std::option::Option::Some(input);
        self
    }
    /// Standard output configuration
    pub fn set_standard_output_configuration(mut self, input: ::std::option::Option<crate::types::StandardOutputConfiguration>) -> Self {
        self.standard_output_configuration = input;
        self
    }
    /// Standard output configuration
    pub fn get_standard_output_configuration(&self) -> &::std::option::Option<crate::types::StandardOutputConfiguration> {
        &self.standard_output_configuration
    }
    /// Custom output configuration
    pub fn custom_output_configuration(mut self, input: crate::types::CustomOutputConfiguration) -> Self {
        self.custom_output_configuration = ::std::option::Option::Some(input);
        self
    }
    /// Custom output configuration
    pub fn set_custom_output_configuration(mut self, input: ::std::option::Option<crate::types::CustomOutputConfiguration>) -> Self {
        self.custom_output_configuration = input;
        self
    }
    /// Custom output configuration
    pub fn get_custom_output_configuration(&self) -> &::std::option::Option<crate::types::CustomOutputConfiguration> {
        &self.custom_output_configuration
    }
    /// Override configuration
    pub fn override_configuration(mut self, input: crate::types::OverrideConfiguration) -> Self {
        self.override_configuration = ::std::option::Option::Some(input);
        self
    }
    /// Override configuration
    pub fn set_override_configuration(mut self, input: ::std::option::Option<crate::types::OverrideConfiguration>) -> Self {
        self.override_configuration = input;
        self
    }
    /// Override configuration
    pub fn get_override_configuration(&self) -> &::std::option::Option<crate::types::OverrideConfiguration> {
        &self.override_configuration
    }
    /// KMS Encryption Configuration
    pub fn encryption_configuration(mut self, input: crate::types::EncryptionConfiguration) -> Self {
        self.encryption_configuration = ::std::option::Option::Some(input);
        self
    }
    /// KMS Encryption Configuration
    pub fn set_encryption_configuration(mut self, input: ::std::option::Option<crate::types::EncryptionConfiguration>) -> Self {
        self.encryption_configuration = input;
        self
    }
    /// KMS Encryption Configuration
    pub fn get_encryption_configuration(&self) -> &::std::option::Option<crate::types::EncryptionConfiguration> {
        &self.encryption_configuration
    }
    /// Consumes the builder and constructs a [`UpdateDataAutomationProjectInput`](crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput {
            project_arn: self.project_arn,
            project_stage: self.project_stage,
            project_description: self.project_description,
            standard_output_configuration: self.standard_output_configuration,
            custom_output_configuration: self.custom_output_configuration,
            override_configuration: self.override_configuration,
            encryption_configuration: self.encryption_configuration,
        })
    }
}
impl ::std::fmt::Debug for UpdateDataAutomationProjectInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateDataAutomationProjectInputBuilder");
        formatter.field("project_arn", &self.project_arn);
        formatter.field("project_stage", &self.project_stage);
        formatter.field("project_description", &"*** Sensitive Data Redacted ***");
        formatter.field("standard_output_configuration", &self.standard_output_configuration);
        formatter.field("custom_output_configuration", &self.custom_output_configuration);
        formatter.field("override_configuration", &self.override_configuration);
        formatter.field("encryption_configuration", &self.encryption_configuration);
        formatter.finish()
    }
}
