// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Delete Blueprint Request
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteBlueprintInput {
    /// ARN generated at the server side when a Blueprint is created
    pub blueprint_arn: ::std::option::Option<::std::string::String>,
    /// Optional field to delete a specific Blueprint version
    pub blueprint_version: ::std::option::Option<::std::string::String>,
}
impl DeleteBlueprintInput {
    /// ARN generated at the server side when a Blueprint is created
    pub fn blueprint_arn(&self) -> ::std::option::Option<&str> {
        self.blueprint_arn.as_deref()
    }
    /// Optional field to delete a specific Blueprint version
    pub fn blueprint_version(&self) -> ::std::option::Option<&str> {
        self.blueprint_version.as_deref()
    }
}
impl DeleteBlueprintInput {
    /// Creates a new builder-style object to manufacture [`DeleteBlueprintInput`](crate::operation::delete_blueprint::DeleteBlueprintInput).
    pub fn builder() -> crate::operation::delete_blueprint::builders::DeleteBlueprintInputBuilder {
        crate::operation::delete_blueprint::builders::DeleteBlueprintInputBuilder::default()
    }
}

/// A builder for [`DeleteBlueprintInput`](crate::operation::delete_blueprint::DeleteBlueprintInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteBlueprintInputBuilder {
    pub(crate) blueprint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) blueprint_version: ::std::option::Option<::std::string::String>,
}
impl DeleteBlueprintInputBuilder {
    /// ARN generated at the server side when a Blueprint is created
    /// This field is required.
    pub fn blueprint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// ARN generated at the server side when a Blueprint is created
    pub fn set_blueprint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_arn = input;
        self
    }
    /// ARN generated at the server side when a Blueprint is created
    pub fn get_blueprint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_arn
    }
    /// Optional field to delete a specific Blueprint version
    pub fn blueprint_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_version = ::std::option::Option::Some(input.into());
        self
    }
    /// Optional field to delete a specific Blueprint version
    pub fn set_blueprint_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_version = input;
        self
    }
    /// Optional field to delete a specific Blueprint version
    pub fn get_blueprint_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_version
    }
    /// Consumes the builder and constructs a [`DeleteBlueprintInput`](crate::operation::delete_blueprint::DeleteBlueprintInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_blueprint::DeleteBlueprintInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_blueprint::DeleteBlueprintInput {
            blueprint_arn: self.blueprint_arn,
            blueprint_version: self.blueprint_version,
        })
    }
}
