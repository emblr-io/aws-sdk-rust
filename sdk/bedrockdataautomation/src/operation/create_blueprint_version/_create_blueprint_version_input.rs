// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Create Blueprint Version Request
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateBlueprintVersionInput {
    /// ARN generated at the server side when a Blueprint is created
    pub blueprint_arn: ::std::option::Option<::std::string::String>,
    /// Client specified token used for idempotency checks
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl CreateBlueprintVersionInput {
    /// ARN generated at the server side when a Blueprint is created
    pub fn blueprint_arn(&self) -> ::std::option::Option<&str> {
        self.blueprint_arn.as_deref()
    }
    /// Client specified token used for idempotency checks
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl CreateBlueprintVersionInput {
    /// Creates a new builder-style object to manufacture [`CreateBlueprintVersionInput`](crate::operation::create_blueprint_version::CreateBlueprintVersionInput).
    pub fn builder() -> crate::operation::create_blueprint_version::builders::CreateBlueprintVersionInputBuilder {
        crate::operation::create_blueprint_version::builders::CreateBlueprintVersionInputBuilder::default()
    }
}

/// A builder for [`CreateBlueprintVersionInput`](crate::operation::create_blueprint_version::CreateBlueprintVersionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateBlueprintVersionInputBuilder {
    pub(crate) blueprint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl CreateBlueprintVersionInputBuilder {
    /// ARN generated at the server side when a Blueprint is created
    /// This field is required.
    pub fn blueprint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// ARN generated at the server side when a Blueprint is created
    pub fn set_blueprint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_arn = input;
        self
    }
    /// ARN generated at the server side when a Blueprint is created
    pub fn get_blueprint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_arn
    }
    /// Client specified token used for idempotency checks
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// Client specified token used for idempotency checks
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Client specified token used for idempotency checks
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`CreateBlueprintVersionInput`](crate::operation::create_blueprint_version::CreateBlueprintVersionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_blueprint_version::CreateBlueprintVersionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_blueprint_version::CreateBlueprintVersionInput {
            blueprint_arn: self.blueprint_arn,
            client_token: self.client_token,
        })
    }
}
