// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Get DataAutomationProject Request
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDataAutomationProjectInput {
    /// ARN generated at the server side when a DataAutomationProject is created
    pub project_arn: ::std::option::Option<::std::string::String>,
    /// Optional field to delete a specific DataAutomationProject stage
    pub project_stage: ::std::option::Option<crate::types::DataAutomationProjectStage>,
}
impl GetDataAutomationProjectInput {
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn project_arn(&self) -> ::std::option::Option<&str> {
        self.project_arn.as_deref()
    }
    /// Optional field to delete a specific DataAutomationProject stage
    pub fn project_stage(&self) -> ::std::option::Option<&crate::types::DataAutomationProjectStage> {
        self.project_stage.as_ref()
    }
}
impl GetDataAutomationProjectInput {
    /// Creates a new builder-style object to manufacture [`GetDataAutomationProjectInput`](crate::operation::get_data_automation_project::GetDataAutomationProjectInput).
    pub fn builder() -> crate::operation::get_data_automation_project::builders::GetDataAutomationProjectInputBuilder {
        crate::operation::get_data_automation_project::builders::GetDataAutomationProjectInputBuilder::default()
    }
}

/// A builder for [`GetDataAutomationProjectInput`](crate::operation::get_data_automation_project::GetDataAutomationProjectInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetDataAutomationProjectInputBuilder {
    pub(crate) project_arn: ::std::option::Option<::std::string::String>,
    pub(crate) project_stage: ::std::option::Option<crate::types::DataAutomationProjectStage>,
}
impl GetDataAutomationProjectInputBuilder {
    /// ARN generated at the server side when a DataAutomationProject is created
    /// This field is required.
    pub fn project_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn set_project_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_arn = input;
        self
    }
    /// ARN generated at the server side when a DataAutomationProject is created
    pub fn get_project_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_arn
    }
    /// Optional field to delete a specific DataAutomationProject stage
    pub fn project_stage(mut self, input: crate::types::DataAutomationProjectStage) -> Self {
        self.project_stage = ::std::option::Option::Some(input);
        self
    }
    /// Optional field to delete a specific DataAutomationProject stage
    pub fn set_project_stage(mut self, input: ::std::option::Option<crate::types::DataAutomationProjectStage>) -> Self {
        self.project_stage = input;
        self
    }
    /// Optional field to delete a specific DataAutomationProject stage
    pub fn get_project_stage(&self) -> &::std::option::Option<crate::types::DataAutomationProjectStage> {
        &self.project_stage
    }
    /// Consumes the builder and constructs a [`GetDataAutomationProjectInput`](crate::operation::get_data_automation_project::GetDataAutomationProjectInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_data_automation_project::GetDataAutomationProjectInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_data_automation_project::GetDataAutomationProjectInput {
            project_arn: self.project_arn,
            project_stage: self.project_stage,
        })
    }
}
