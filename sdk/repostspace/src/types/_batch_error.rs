// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error that occurred during a batch operation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchError {
    /// <p>The accessor identifier that's related to the error.</p>
    pub accessor_id: ::std::string::String,
    /// <p>The error code.</p>
    pub error: i32,
    /// <p>Description of the error.</p>
    pub message: ::std::string::String,
}
impl BatchError {
    /// <p>The accessor identifier that's related to the error.</p>
    pub fn accessor_id(&self) -> &str {
        use std::ops::Deref;
        self.accessor_id.deref()
    }
    /// <p>The error code.</p>
    pub fn error(&self) -> i32 {
        self.error
    }
    /// <p>Description of the error.</p>
    pub fn message(&self) -> &str {
        use std::ops::Deref;
        self.message.deref()
    }
}
impl BatchError {
    /// Creates a new builder-style object to manufacture [`BatchError`](crate::types::BatchError).
    pub fn builder() -> crate::types::builders::BatchErrorBuilder {
        crate::types::builders::BatchErrorBuilder::default()
    }
}

/// A builder for [`BatchError`](crate::types::BatchError).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchErrorBuilder {
    pub(crate) accessor_id: ::std::option::Option<::std::string::String>,
    pub(crate) error: ::std::option::Option<i32>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl BatchErrorBuilder {
    /// <p>The accessor identifier that's related to the error.</p>
    /// This field is required.
    pub fn accessor_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.accessor_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The accessor identifier that's related to the error.</p>
    pub fn set_accessor_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.accessor_id = input;
        self
    }
    /// <p>The accessor identifier that's related to the error.</p>
    pub fn get_accessor_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.accessor_id
    }
    /// <p>The error code.</p>
    /// This field is required.
    pub fn error(mut self, input: i32) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>The error code.</p>
    pub fn set_error(mut self, input: ::std::option::Option<i32>) -> Self {
        self.error = input;
        self
    }
    /// <p>The error code.</p>
    pub fn get_error(&self) -> &::std::option::Option<i32> {
        &self.error
    }
    /// <p>Description of the error.</p>
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Description of the error.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>Description of the error.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`BatchError`](crate::types::BatchError).
    /// This method will fail if any of the following fields are not set:
    /// - [`accessor_id`](crate::types::builders::BatchErrorBuilder::accessor_id)
    /// - [`error`](crate::types::builders::BatchErrorBuilder::error)
    /// - [`message`](crate::types::builders::BatchErrorBuilder::message)
    pub fn build(self) -> ::std::result::Result<crate::types::BatchError, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchError {
            accessor_id: self.accessor_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "accessor_id",
                    "accessor_id was not specified but it is required when building BatchError",
                )
            })?,
            error: self.error.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error",
                    "error was not specified but it is required when building BatchError",
                )
            })?,
            message: self.message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message",
                    "message was not specified but it is required when building BatchError",
                )
            })?,
        })
    }
}
