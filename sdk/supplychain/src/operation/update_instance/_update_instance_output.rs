// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response parameters for UpdateInstance.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateInstanceOutput {
    /// <p>The instance resource data details.</p>
    pub instance: ::std::option::Option<crate::types::Instance>,
    _request_id: Option<String>,
}
impl UpdateInstanceOutput {
    /// <p>The instance resource data details.</p>
    pub fn instance(&self) -> ::std::option::Option<&crate::types::Instance> {
        self.instance.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for UpdateInstanceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateInstanceOutput {
    /// Creates a new builder-style object to manufacture [`UpdateInstanceOutput`](crate::operation::update_instance::UpdateInstanceOutput).
    pub fn builder() -> crate::operation::update_instance::builders::UpdateInstanceOutputBuilder {
        crate::operation::update_instance::builders::UpdateInstanceOutputBuilder::default()
    }
}

/// A builder for [`UpdateInstanceOutput`](crate::operation::update_instance::UpdateInstanceOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateInstanceOutputBuilder {
    pub(crate) instance: ::std::option::Option<crate::types::Instance>,
    _request_id: Option<String>,
}
impl UpdateInstanceOutputBuilder {
    /// <p>The instance resource data details.</p>
    /// This field is required.
    pub fn instance(mut self, input: crate::types::Instance) -> Self {
        self.instance = ::std::option::Option::Some(input);
        self
    }
    /// <p>The instance resource data details.</p>
    pub fn set_instance(mut self, input: ::std::option::Option<crate::types::Instance>) -> Self {
        self.instance = input;
        self
    }
    /// <p>The instance resource data details.</p>
    pub fn get_instance(&self) -> &::std::option::Option<crate::types::Instance> {
        &self.instance
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateInstanceOutput`](crate::operation::update_instance::UpdateInstanceOutput).
    pub fn build(self) -> crate::operation::update_instance::UpdateInstanceOutput {
        crate::operation::update_instance::UpdateInstanceOutput {
            instance: self.instance,
            _request_id: self._request_id,
        }
    }
}
