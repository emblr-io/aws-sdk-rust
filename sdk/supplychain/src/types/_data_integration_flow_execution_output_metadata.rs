// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output metadata of the flow execution.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataIntegrationFlowExecutionOutputMetadata {
    /// <p>The S3 URI under which all diagnostic files (such as deduped records if any) are stored.</p>
    pub diagnostic_reports_root_s3_uri: ::std::option::Option<::std::string::String>,
}
impl DataIntegrationFlowExecutionOutputMetadata {
    /// <p>The S3 URI under which all diagnostic files (such as deduped records if any) are stored.</p>
    pub fn diagnostic_reports_root_s3_uri(&self) -> ::std::option::Option<&str> {
        self.diagnostic_reports_root_s3_uri.as_deref()
    }
}
impl DataIntegrationFlowExecutionOutputMetadata {
    /// Creates a new builder-style object to manufacture [`DataIntegrationFlowExecutionOutputMetadata`](crate::types::DataIntegrationFlowExecutionOutputMetadata).
    pub fn builder() -> crate::types::builders::DataIntegrationFlowExecutionOutputMetadataBuilder {
        crate::types::builders::DataIntegrationFlowExecutionOutputMetadataBuilder::default()
    }
}

/// A builder for [`DataIntegrationFlowExecutionOutputMetadata`](crate::types::DataIntegrationFlowExecutionOutputMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataIntegrationFlowExecutionOutputMetadataBuilder {
    pub(crate) diagnostic_reports_root_s3_uri: ::std::option::Option<::std::string::String>,
}
impl DataIntegrationFlowExecutionOutputMetadataBuilder {
    /// <p>The S3 URI under which all diagnostic files (such as deduped records if any) are stored.</p>
    pub fn diagnostic_reports_root_s3_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.diagnostic_reports_root_s3_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 URI under which all diagnostic files (such as deduped records if any) are stored.</p>
    pub fn set_diagnostic_reports_root_s3_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.diagnostic_reports_root_s3_uri = input;
        self
    }
    /// <p>The S3 URI under which all diagnostic files (such as deduped records if any) are stored.</p>
    pub fn get_diagnostic_reports_root_s3_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.diagnostic_reports_root_s3_uri
    }
    /// Consumes the builder and constructs a [`DataIntegrationFlowExecutionOutputMetadata`](crate::types::DataIntegrationFlowExecutionOutputMetadata).
    pub fn build(self) -> crate::types::DataIntegrationFlowExecutionOutputMetadata {
        crate::types::DataIntegrationFlowExecutionOutputMetadata {
            diagnostic_reports_root_s3_uri: self.diagnostic_reports_root_s3_uri,
        }
    }
}
