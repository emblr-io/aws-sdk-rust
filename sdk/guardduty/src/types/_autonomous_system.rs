// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the Autonomous System (AS) associated with the network endpoints involved in an attack sequence.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutonomousSystem {
    /// <p>Name associated with the Autonomous System (AS).</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The unique number that identifies the Autonomous System (AS).</p>
    pub number: ::std::option::Option<i32>,
}
impl AutonomousSystem {
    /// <p>Name associated with the Autonomous System (AS).</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The unique number that identifies the Autonomous System (AS).</p>
    pub fn number(&self) -> ::std::option::Option<i32> {
        self.number
    }
}
impl AutonomousSystem {
    /// Creates a new builder-style object to manufacture [`AutonomousSystem`](crate::types::AutonomousSystem).
    pub fn builder() -> crate::types::builders::AutonomousSystemBuilder {
        crate::types::builders::AutonomousSystemBuilder::default()
    }
}

/// A builder for [`AutonomousSystem`](crate::types::AutonomousSystem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutonomousSystemBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) number: ::std::option::Option<i32>,
}
impl AutonomousSystemBuilder {
    /// <p>Name associated with the Autonomous System (AS).</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name associated with the Autonomous System (AS).</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Name associated with the Autonomous System (AS).</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The unique number that identifies the Autonomous System (AS).</p>
    /// This field is required.
    pub fn number(mut self, input: i32) -> Self {
        self.number = ::std::option::Option::Some(input);
        self
    }
    /// <p>The unique number that identifies the Autonomous System (AS).</p>
    pub fn set_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.number = input;
        self
    }
    /// <p>The unique number that identifies the Autonomous System (AS).</p>
    pub fn get_number(&self) -> &::std::option::Option<i32> {
        &self.number
    }
    /// Consumes the builder and constructs a [`AutonomousSystem`](crate::types::AutonomousSystem).
    pub fn build(self) -> crate::types::AutonomousSystem {
        crate::types::AutonomousSystem {
            name: self.name,
            number: self.number,
        }
    }
}
