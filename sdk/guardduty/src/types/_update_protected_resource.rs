// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the protected resource that is associated with the created Malware Protection plan. Presently, <code>S3Bucket</code> is the only supported protected resource.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateProtectedResource {
    /// <p>Information about the protected S3 bucket resource.</p>
    pub s3_bucket: ::std::option::Option<crate::types::UpdateS3BucketResource>,
}
impl UpdateProtectedResource {
    /// <p>Information about the protected S3 bucket resource.</p>
    pub fn s3_bucket(&self) -> ::std::option::Option<&crate::types::UpdateS3BucketResource> {
        self.s3_bucket.as_ref()
    }
}
impl UpdateProtectedResource {
    /// Creates a new builder-style object to manufacture [`UpdateProtectedResource`](crate::types::UpdateProtectedResource).
    pub fn builder() -> crate::types::builders::UpdateProtectedResourceBuilder {
        crate::types::builders::UpdateProtectedResourceBuilder::default()
    }
}

/// A builder for [`UpdateProtectedResource`](crate::types::UpdateProtectedResource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateProtectedResourceBuilder {
    pub(crate) s3_bucket: ::std::option::Option<crate::types::UpdateS3BucketResource>,
}
impl UpdateProtectedResourceBuilder {
    /// <p>Information about the protected S3 bucket resource.</p>
    pub fn s3_bucket(mut self, input: crate::types::UpdateS3BucketResource) -> Self {
        self.s3_bucket = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the protected S3 bucket resource.</p>
    pub fn set_s3_bucket(mut self, input: ::std::option::Option<crate::types::UpdateS3BucketResource>) -> Self {
        self.s3_bucket = input;
        self
    }
    /// <p>Information about the protected S3 bucket resource.</p>
    pub fn get_s3_bucket(&self) -> &::std::option::Option<crate::types::UpdateS3BucketResource> {
        &self.s3_bucket
    }
    /// Consumes the builder and constructs a [`UpdateProtectedResource`](crate::types::UpdateProtectedResource).
    pub fn build(self) -> crate::types::UpdateProtectedResource {
        crate::types::UpdateProtectedResource { s3_bucket: self.s3_bucket }
    }
}
