// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines settings for a source data provider for a data migration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SourceDataSetting {
    /// <p>The change data capture (CDC) start position for the source data provider.</p>
    pub cdc_start_position: ::std::option::Option<::std::string::String>,
    /// <p>The change data capture (CDC) start time for the source data provider.</p>
    pub cdc_start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The change data capture (CDC) stop time for the source data provider.</p>
    pub cdc_stop_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The name of the replication slot on the source data provider. This attribute is only valid for a PostgreSQL or Aurora PostgreSQL source.</p>
    pub slot_name: ::std::option::Option<::std::string::String>,
}
impl SourceDataSetting {
    /// <p>The change data capture (CDC) start position for the source data provider.</p>
    pub fn cdc_start_position(&self) -> ::std::option::Option<&str> {
        self.cdc_start_position.as_deref()
    }
    /// <p>The change data capture (CDC) start time for the source data provider.</p>
    pub fn cdc_start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.cdc_start_time.as_ref()
    }
    /// <p>The change data capture (CDC) stop time for the source data provider.</p>
    pub fn cdc_stop_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.cdc_stop_time.as_ref()
    }
    /// <p>The name of the replication slot on the source data provider. This attribute is only valid for a PostgreSQL or Aurora PostgreSQL source.</p>
    pub fn slot_name(&self) -> ::std::option::Option<&str> {
        self.slot_name.as_deref()
    }
}
impl SourceDataSetting {
    /// Creates a new builder-style object to manufacture [`SourceDataSetting`](crate::types::SourceDataSetting).
    pub fn builder() -> crate::types::builders::SourceDataSettingBuilder {
        crate::types::builders::SourceDataSettingBuilder::default()
    }
}

/// A builder for [`SourceDataSetting`](crate::types::SourceDataSetting).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SourceDataSettingBuilder {
    pub(crate) cdc_start_position: ::std::option::Option<::std::string::String>,
    pub(crate) cdc_start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) cdc_stop_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) slot_name: ::std::option::Option<::std::string::String>,
}
impl SourceDataSettingBuilder {
    /// <p>The change data capture (CDC) start position for the source data provider.</p>
    pub fn cdc_start_position(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cdc_start_position = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The change data capture (CDC) start position for the source data provider.</p>
    pub fn set_cdc_start_position(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cdc_start_position = input;
        self
    }
    /// <p>The change data capture (CDC) start position for the source data provider.</p>
    pub fn get_cdc_start_position(&self) -> &::std::option::Option<::std::string::String> {
        &self.cdc_start_position
    }
    /// <p>The change data capture (CDC) start time for the source data provider.</p>
    pub fn cdc_start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.cdc_start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The change data capture (CDC) start time for the source data provider.</p>
    pub fn set_cdc_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.cdc_start_time = input;
        self
    }
    /// <p>The change data capture (CDC) start time for the source data provider.</p>
    pub fn get_cdc_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.cdc_start_time
    }
    /// <p>The change data capture (CDC) stop time for the source data provider.</p>
    pub fn cdc_stop_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.cdc_stop_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The change data capture (CDC) stop time for the source data provider.</p>
    pub fn set_cdc_stop_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.cdc_stop_time = input;
        self
    }
    /// <p>The change data capture (CDC) stop time for the source data provider.</p>
    pub fn get_cdc_stop_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.cdc_stop_time
    }
    /// <p>The name of the replication slot on the source data provider. This attribute is only valid for a PostgreSQL or Aurora PostgreSQL source.</p>
    pub fn slot_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slot_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the replication slot on the source data provider. This attribute is only valid for a PostgreSQL or Aurora PostgreSQL source.</p>
    pub fn set_slot_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slot_name = input;
        self
    }
    /// <p>The name of the replication slot on the source data provider. This attribute is only valid for a PostgreSQL or Aurora PostgreSQL source.</p>
    pub fn get_slot_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.slot_name
    }
    /// Consumes the builder and constructs a [`SourceDataSetting`](crate::types::SourceDataSetting).
    pub fn build(self) -> crate::types::SourceDataSetting {
        crate::types::SourceDataSetting {
            cdc_start_position: self.cdc_start_position,
            cdc_start_time: self.cdc_start_time,
            cdc_stop_time: self.cdc_stop_time,
            slot_name: self.slot_name,
        }
    }
}
