// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Displays a list of the destination segments. Used only when the service insertion action is <code>send-to</code>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WhenSentTo {
    /// <p>The list of destination segments when the service insertion action is <code>send-to</code>.</p>
    pub when_sent_to_segments_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl WhenSentTo {
    /// <p>The list of destination segments when the service insertion action is <code>send-to</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.when_sent_to_segments_list.is_none()`.
    pub fn when_sent_to_segments_list(&self) -> &[::std::string::String] {
        self.when_sent_to_segments_list.as_deref().unwrap_or_default()
    }
}
impl WhenSentTo {
    /// Creates a new builder-style object to manufacture [`WhenSentTo`](crate::types::WhenSentTo).
    pub fn builder() -> crate::types::builders::WhenSentToBuilder {
        crate::types::builders::WhenSentToBuilder::default()
    }
}

/// A builder for [`WhenSentTo`](crate::types::WhenSentTo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WhenSentToBuilder {
    pub(crate) when_sent_to_segments_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl WhenSentToBuilder {
    /// Appends an item to `when_sent_to_segments_list`.
    ///
    /// To override the contents of this collection use [`set_when_sent_to_segments_list`](Self::set_when_sent_to_segments_list).
    ///
    /// <p>The list of destination segments when the service insertion action is <code>send-to</code>.</p>
    pub fn when_sent_to_segments_list(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.when_sent_to_segments_list.unwrap_or_default();
        v.push(input.into());
        self.when_sent_to_segments_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of destination segments when the service insertion action is <code>send-to</code>.</p>
    pub fn set_when_sent_to_segments_list(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.when_sent_to_segments_list = input;
        self
    }
    /// <p>The list of destination segments when the service insertion action is <code>send-to</code>.</p>
    pub fn get_when_sent_to_segments_list(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.when_sent_to_segments_list
    }
    /// Consumes the builder and constructs a [`WhenSentTo`](crate::types::WhenSentTo).
    pub fn build(self) -> crate::types::WhenSentTo {
        crate::types::WhenSentTo {
            when_sent_to_segments_list: self.when_sent_to_segments_list,
        }
    }
}
