// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a core network</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CoreNetworkNetworkFunctionGroupIdentifier {
    /// <p>The ID of the core network.</p>
    pub core_network_id: ::std::option::Option<::std::string::String>,
    /// <p>The network function group name.</p>
    pub network_function_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The location for the core network edge.</p>
    pub edge_location: ::std::option::Option<::std::string::String>,
}
impl CoreNetworkNetworkFunctionGroupIdentifier {
    /// <p>The ID of the core network.</p>
    pub fn core_network_id(&self) -> ::std::option::Option<&str> {
        self.core_network_id.as_deref()
    }
    /// <p>The network function group name.</p>
    pub fn network_function_group_name(&self) -> ::std::option::Option<&str> {
        self.network_function_group_name.as_deref()
    }
    /// <p>The location for the core network edge.</p>
    pub fn edge_location(&self) -> ::std::option::Option<&str> {
        self.edge_location.as_deref()
    }
}
impl CoreNetworkNetworkFunctionGroupIdentifier {
    /// Creates a new builder-style object to manufacture [`CoreNetworkNetworkFunctionGroupIdentifier`](crate::types::CoreNetworkNetworkFunctionGroupIdentifier).
    pub fn builder() -> crate::types::builders::CoreNetworkNetworkFunctionGroupIdentifierBuilder {
        crate::types::builders::CoreNetworkNetworkFunctionGroupIdentifierBuilder::default()
    }
}

/// A builder for [`CoreNetworkNetworkFunctionGroupIdentifier`](crate::types::CoreNetworkNetworkFunctionGroupIdentifier).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CoreNetworkNetworkFunctionGroupIdentifierBuilder {
    pub(crate) core_network_id: ::std::option::Option<::std::string::String>,
    pub(crate) network_function_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) edge_location: ::std::option::Option<::std::string::String>,
}
impl CoreNetworkNetworkFunctionGroupIdentifierBuilder {
    /// <p>The ID of the core network.</p>
    pub fn core_network_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.core_network_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the core network.</p>
    pub fn set_core_network_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.core_network_id = input;
        self
    }
    /// <p>The ID of the core network.</p>
    pub fn get_core_network_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.core_network_id
    }
    /// <p>The network function group name.</p>
    pub fn network_function_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.network_function_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The network function group name.</p>
    pub fn set_network_function_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.network_function_group_name = input;
        self
    }
    /// <p>The network function group name.</p>
    pub fn get_network_function_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.network_function_group_name
    }
    /// <p>The location for the core network edge.</p>
    pub fn edge_location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.edge_location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The location for the core network edge.</p>
    pub fn set_edge_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.edge_location = input;
        self
    }
    /// <p>The location for the core network edge.</p>
    pub fn get_edge_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.edge_location
    }
    /// Consumes the builder and constructs a [`CoreNetworkNetworkFunctionGroupIdentifier`](crate::types::CoreNetworkNetworkFunctionGroupIdentifier).
    pub fn build(self) -> crate::types::CoreNetworkNetworkFunctionGroupIdentifier {
        crate::types::CoreNetworkNetworkFunctionGroupIdentifier {
            core_network_id: self.core_network_id,
            network_function_group_name: self.network_function_group_name,
            edge_location: self.edge_location,
        }
    }
}
