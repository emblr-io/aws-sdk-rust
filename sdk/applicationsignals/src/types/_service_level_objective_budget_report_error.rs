// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing information about one error that occurred during a <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_BatchGetServiceLevelObjectiveBudgetReport.html">BatchGetServiceLevelObjectiveBudgetReport</a> operation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceLevelObjectiveBudgetReportError {
    /// <p>The name of the SLO that this error is related to.</p>
    pub name: ::std::string::String,
    /// <p>The ARN of the SLO that this error is related to.</p>
    pub arn: ::std::string::String,
    /// <p>The error code for this error.</p>
    pub error_code: ::std::string::String,
    /// <p>The message for this error.</p>
    pub error_message: ::std::string::String,
}
impl ServiceLevelObjectiveBudgetReportError {
    /// <p>The name of the SLO that this error is related to.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The ARN of the SLO that this error is related to.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The error code for this error.</p>
    pub fn error_code(&self) -> &str {
        use std::ops::Deref;
        self.error_code.deref()
    }
    /// <p>The message for this error.</p>
    pub fn error_message(&self) -> &str {
        use std::ops::Deref;
        self.error_message.deref()
    }
}
impl ServiceLevelObjectiveBudgetReportError {
    /// Creates a new builder-style object to manufacture [`ServiceLevelObjectiveBudgetReportError`](crate::types::ServiceLevelObjectiveBudgetReportError).
    pub fn builder() -> crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder {
        crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder::default()
    }
}

/// A builder for [`ServiceLevelObjectiveBudgetReportError`](crate::types::ServiceLevelObjectiveBudgetReportError).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceLevelObjectiveBudgetReportErrorBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) error_code: ::std::option::Option<::std::string::String>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
}
impl ServiceLevelObjectiveBudgetReportErrorBuilder {
    /// <p>The name of the SLO that this error is related to.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the SLO that this error is related to.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the SLO that this error is related to.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ARN of the SLO that this error is related to.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the SLO that this error is related to.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the SLO that this error is related to.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The error code for this error.</p>
    /// This field is required.
    pub fn error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code for this error.</p>
    pub fn set_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The error code for this error.</p>
    pub fn get_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_code
    }
    /// <p>The message for this error.</p>
    /// This field is required.
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The message for this error.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The message for this error.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// Consumes the builder and constructs a [`ServiceLevelObjectiveBudgetReportError`](crate::types::ServiceLevelObjectiveBudgetReportError).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder::name)
    /// - [`arn`](crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder::arn)
    /// - [`error_code`](crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder::error_code)
    /// - [`error_message`](crate::types::builders::ServiceLevelObjectiveBudgetReportErrorBuilder::error_message)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::ServiceLevelObjectiveBudgetReportError, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ServiceLevelObjectiveBudgetReportError {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building ServiceLevelObjectiveBudgetReportError",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building ServiceLevelObjectiveBudgetReportError",
                )
            })?,
            error_code: self.error_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_code",
                    "error_code was not specified but it is required when building ServiceLevelObjectiveBudgetReportError",
                )
            })?,
            error_message: self.error_message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_message",
                    "error_message was not specified but it is required when building ServiceLevelObjectiveBudgetReportError",
                )
            })?,
        })
    }
}
