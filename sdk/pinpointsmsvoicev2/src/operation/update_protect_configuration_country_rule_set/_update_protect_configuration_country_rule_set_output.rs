// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateProtectConfigurationCountryRuleSetOutput {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub protect_configuration_arn: ::std::string::String,
    /// <p>The unique identifier for the protect configuration.</p>
    pub protect_configuration_id: ::std::string::String,
    /// <p>The number capability that was updated</p>
    pub number_capability: crate::types::NumberCapability,
    /// <p>An array of ProtectConfigurationCountryRuleSetInformation containing the rules for the NumberCapability.</p>
    pub country_rule_set: ::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>,
    _request_id: Option<String>,
}
impl UpdateProtectConfigurationCountryRuleSetOutput {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn protect_configuration_arn(&self) -> &str {
        use std::ops::Deref;
        self.protect_configuration_arn.deref()
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn protect_configuration_id(&self) -> &str {
        use std::ops::Deref;
        self.protect_configuration_id.deref()
    }
    /// <p>The number capability that was updated</p>
    pub fn number_capability(&self) -> &crate::types::NumberCapability {
        &self.number_capability
    }
    /// <p>An array of ProtectConfigurationCountryRuleSetInformation containing the rules for the NumberCapability.</p>
    pub fn country_rule_set(
        &self,
    ) -> &::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation> {
        &self.country_rule_set
    }
}
impl ::aws_types::request_id::RequestId for UpdateProtectConfigurationCountryRuleSetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateProtectConfigurationCountryRuleSetOutput {
    /// Creates a new builder-style object to manufacture [`UpdateProtectConfigurationCountryRuleSetOutput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetOutput).
    pub fn builder(
    ) -> crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder {
        crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder::default()
    }
}

/// A builder for [`UpdateProtectConfigurationCountryRuleSetOutput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateProtectConfigurationCountryRuleSetOutputBuilder {
    pub(crate) protect_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) protect_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) number_capability: ::std::option::Option<crate::types::NumberCapability>,
    pub(crate) country_rule_set:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>>,
    _request_id: Option<String>,
}
impl UpdateProtectConfigurationCountryRuleSetOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn set_protect_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn get_protect_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_arn
    }
    /// <p>The unique identifier for the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn set_protect_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_id = input;
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn get_protect_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_id
    }
    /// <p>The number capability that was updated</p>
    /// This field is required.
    pub fn number_capability(mut self, input: crate::types::NumberCapability) -> Self {
        self.number_capability = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number capability that was updated</p>
    pub fn set_number_capability(mut self, input: ::std::option::Option<crate::types::NumberCapability>) -> Self {
        self.number_capability = input;
        self
    }
    /// <p>The number capability that was updated</p>
    pub fn get_number_capability(&self) -> &::std::option::Option<crate::types::NumberCapability> {
        &self.number_capability
    }
    /// Adds a key-value pair to `country_rule_set`.
    ///
    /// To override the contents of this collection use [`set_country_rule_set`](Self::set_country_rule_set).
    ///
    /// <p>An array of ProtectConfigurationCountryRuleSetInformation containing the rules for the NumberCapability.</p>
    pub fn country_rule_set(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: crate::types::ProtectConfigurationCountryRuleSetInformation,
    ) -> Self {
        let mut hash_map = self.country_rule_set.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.country_rule_set = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>An array of ProtectConfigurationCountryRuleSetInformation containing the rules for the NumberCapability.</p>
    pub fn set_country_rule_set(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>>,
    ) -> Self {
        self.country_rule_set = input;
        self
    }
    /// <p>An array of ProtectConfigurationCountryRuleSetInformation containing the rules for the NumberCapability.</p>
    pub fn get_country_rule_set(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>> {
        &self.country_rule_set
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateProtectConfigurationCountryRuleSetOutput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`protect_configuration_arn`](crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder::protect_configuration_arn)
    /// - [`protect_configuration_id`](crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder::protect_configuration_id)
    /// - [`number_capability`](crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder::number_capability)
    /// - [`country_rule_set`](crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetOutputBuilder::country_rule_set)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetOutput {
                protect_configuration_arn: self.protect_configuration_arn.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "protect_configuration_arn",
                        "protect_configuration_arn was not specified but it is required when building UpdateProtectConfigurationCountryRuleSetOutput",
                    )
                })?,
                protect_configuration_id: self.protect_configuration_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "protect_configuration_id",
                        "protect_configuration_id was not specified but it is required when building UpdateProtectConfigurationCountryRuleSetOutput",
                    )
                })?,
                number_capability: self.number_capability.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "number_capability",
                        "number_capability was not specified but it is required when building UpdateProtectConfigurationCountryRuleSetOutput",
                    )
                })?,
                country_rule_set: self.country_rule_set.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "country_rule_set",
                        "country_rule_set was not specified but it is required when building UpdateProtectConfigurationCountryRuleSetOutput",
                    )
                })?,
                _request_id: self._request_id,
            },
        )
    }
}
