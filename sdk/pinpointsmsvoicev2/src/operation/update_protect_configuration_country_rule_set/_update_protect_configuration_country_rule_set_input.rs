// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateProtectConfigurationCountryRuleSetInput {
    /// <p>The unique identifier for the protect configuration.</p>
    pub protect_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The number capability to apply the CountryRuleSetUpdates updates to.</p>
    pub number_capability: ::std::option::Option<crate::types::NumberCapability>,
    /// <p>A map of ProtectConfigurationCountryRuleSetInformation objects that contain the details for the requested NumberCapability. The Key is the two-letter ISO country code. For a list of supported ISO country codes, see <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/phone-numbers-sms-by-country.html">Supported countries and regions (SMS channel)</a> in the AWS End User Messaging SMS User Guide.</p>
    /// <p>For example, to set the United States as allowed and Canada as blocked, the <code>CountryRuleSetUpdates</code> would be formatted as: <code>"CountryRuleSetUpdates": { "US" : { "ProtectStatus": "ALLOW" } "CA" : { "ProtectStatus": "BLOCK" } }</code></p>
    pub country_rule_set_updates:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>>,
}
impl UpdateProtectConfigurationCountryRuleSetInput {
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn protect_configuration_id(&self) -> ::std::option::Option<&str> {
        self.protect_configuration_id.as_deref()
    }
    /// <p>The number capability to apply the CountryRuleSetUpdates updates to.</p>
    pub fn number_capability(&self) -> ::std::option::Option<&crate::types::NumberCapability> {
        self.number_capability.as_ref()
    }
    /// <p>A map of ProtectConfigurationCountryRuleSetInformation objects that contain the details for the requested NumberCapability. The Key is the two-letter ISO country code. For a list of supported ISO country codes, see <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/phone-numbers-sms-by-country.html">Supported countries and regions (SMS channel)</a> in the AWS End User Messaging SMS User Guide.</p>
    /// <p>For example, to set the United States as allowed and Canada as blocked, the <code>CountryRuleSetUpdates</code> would be formatted as: <code>"CountryRuleSetUpdates": { "US" : { "ProtectStatus": "ALLOW" } "CA" : { "ProtectStatus": "BLOCK" } }</code></p>
    pub fn country_rule_set_updates(
        &self,
    ) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>> {
        self.country_rule_set_updates.as_ref()
    }
}
impl UpdateProtectConfigurationCountryRuleSetInput {
    /// Creates a new builder-style object to manufacture [`UpdateProtectConfigurationCountryRuleSetInput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetInput).
    pub fn builder() -> crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetInputBuilder
    {
        crate::operation::update_protect_configuration_country_rule_set::builders::UpdateProtectConfigurationCountryRuleSetInputBuilder::default()
    }
}

/// A builder for [`UpdateProtectConfigurationCountryRuleSetInput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateProtectConfigurationCountryRuleSetInputBuilder {
    pub(crate) protect_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) number_capability: ::std::option::Option<crate::types::NumberCapability>,
    pub(crate) country_rule_set_updates:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>>,
}
impl UpdateProtectConfigurationCountryRuleSetInputBuilder {
    /// <p>The unique identifier for the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn set_protect_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_id = input;
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn get_protect_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_id
    }
    /// <p>The number capability to apply the CountryRuleSetUpdates updates to.</p>
    /// This field is required.
    pub fn number_capability(mut self, input: crate::types::NumberCapability) -> Self {
        self.number_capability = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number capability to apply the CountryRuleSetUpdates updates to.</p>
    pub fn set_number_capability(mut self, input: ::std::option::Option<crate::types::NumberCapability>) -> Self {
        self.number_capability = input;
        self
    }
    /// <p>The number capability to apply the CountryRuleSetUpdates updates to.</p>
    pub fn get_number_capability(&self) -> &::std::option::Option<crate::types::NumberCapability> {
        &self.number_capability
    }
    /// Adds a key-value pair to `country_rule_set_updates`.
    ///
    /// To override the contents of this collection use [`set_country_rule_set_updates`](Self::set_country_rule_set_updates).
    ///
    /// <p>A map of ProtectConfigurationCountryRuleSetInformation objects that contain the details for the requested NumberCapability. The Key is the two-letter ISO country code. For a list of supported ISO country codes, see <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/phone-numbers-sms-by-country.html">Supported countries and regions (SMS channel)</a> in the AWS End User Messaging SMS User Guide.</p>
    /// <p>For example, to set the United States as allowed and Canada as blocked, the <code>CountryRuleSetUpdates</code> would be formatted as: <code>"CountryRuleSetUpdates": { "US" : { "ProtectStatus": "ALLOW" } "CA" : { "ProtectStatus": "BLOCK" } }</code></p>
    pub fn country_rule_set_updates(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: crate::types::ProtectConfigurationCountryRuleSetInformation,
    ) -> Self {
        let mut hash_map = self.country_rule_set_updates.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.country_rule_set_updates = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of ProtectConfigurationCountryRuleSetInformation objects that contain the details for the requested NumberCapability. The Key is the two-letter ISO country code. For a list of supported ISO country codes, see <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/phone-numbers-sms-by-country.html">Supported countries and regions (SMS channel)</a> in the AWS End User Messaging SMS User Guide.</p>
    /// <p>For example, to set the United States as allowed and Canada as blocked, the <code>CountryRuleSetUpdates</code> would be formatted as: <code>"CountryRuleSetUpdates": { "US" : { "ProtectStatus": "ALLOW" } "CA" : { "ProtectStatus": "BLOCK" } }</code></p>
    pub fn set_country_rule_set_updates(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>>,
    ) -> Self {
        self.country_rule_set_updates = input;
        self
    }
    /// <p>A map of ProtectConfigurationCountryRuleSetInformation objects that contain the details for the requested NumberCapability. The Key is the two-letter ISO country code. For a list of supported ISO country codes, see <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/phone-numbers-sms-by-country.html">Supported countries and regions (SMS channel)</a> in the AWS End User Messaging SMS User Guide.</p>
    /// <p>For example, to set the United States as allowed and Canada as blocked, the <code>CountryRuleSetUpdates</code> would be formatted as: <code>"CountryRuleSetUpdates": { "US" : { "ProtectStatus": "ALLOW" } "CA" : { "ProtectStatus": "BLOCK" } }</code></p>
    pub fn get_country_rule_set_updates(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ProtectConfigurationCountryRuleSetInformation>> {
        &self.country_rule_set_updates
    }
    /// Consumes the builder and constructs a [`UpdateProtectConfigurationCountryRuleSetInput`](crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_protect_configuration_country_rule_set::UpdateProtectConfigurationCountryRuleSetInput {
                protect_configuration_id: self.protect_configuration_id,
                number_capability: self.number_capability,
                country_rule_set_updates: self.country_rule_set_updates,
            },
        )
    }
}
