// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SetDefaultMessageFeedbackEnabledInput {
    /// <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    pub configuration_set_name: ::std::option::Option<::std::string::String>,
    /// <p>Set to true to enable message feedback.</p>
    pub message_feedback_enabled: ::std::option::Option<bool>,
}
impl SetDefaultMessageFeedbackEnabledInput {
    /// <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    pub fn configuration_set_name(&self) -> ::std::option::Option<&str> {
        self.configuration_set_name.as_deref()
    }
    /// <p>Set to true to enable message feedback.</p>
    pub fn message_feedback_enabled(&self) -> ::std::option::Option<bool> {
        self.message_feedback_enabled
    }
}
impl SetDefaultMessageFeedbackEnabledInput {
    /// Creates a new builder-style object to manufacture [`SetDefaultMessageFeedbackEnabledInput`](crate::operation::set_default_message_feedback_enabled::SetDefaultMessageFeedbackEnabledInput).
    pub fn builder() -> crate::operation::set_default_message_feedback_enabled::builders::SetDefaultMessageFeedbackEnabledInputBuilder {
        crate::operation::set_default_message_feedback_enabled::builders::SetDefaultMessageFeedbackEnabledInputBuilder::default()
    }
}

/// A builder for [`SetDefaultMessageFeedbackEnabledInput`](crate::operation::set_default_message_feedback_enabled::SetDefaultMessageFeedbackEnabledInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SetDefaultMessageFeedbackEnabledInputBuilder {
    pub(crate) configuration_set_name: ::std::option::Option<::std::string::String>,
    pub(crate) message_feedback_enabled: ::std::option::Option<bool>,
}
impl SetDefaultMessageFeedbackEnabledInputBuilder {
    /// <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    /// This field is required.
    pub fn configuration_set_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configuration_set_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    pub fn set_configuration_set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configuration_set_name = input;
        self
    }
    /// <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    pub fn get_configuration_set_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.configuration_set_name
    }
    /// <p>Set to true to enable message feedback.</p>
    /// This field is required.
    pub fn message_feedback_enabled(mut self, input: bool) -> Self {
        self.message_feedback_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Set to true to enable message feedback.</p>
    pub fn set_message_feedback_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.message_feedback_enabled = input;
        self
    }
    /// <p>Set to true to enable message feedback.</p>
    pub fn get_message_feedback_enabled(&self) -> &::std::option::Option<bool> {
        &self.message_feedback_enabled
    }
    /// Consumes the builder and constructs a [`SetDefaultMessageFeedbackEnabledInput`](crate::operation::set_default_message_feedback_enabled::SetDefaultMessageFeedbackEnabledInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::set_default_message_feedback_enabled::SetDefaultMessageFeedbackEnabledInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::set_default_message_feedback_enabled::SetDefaultMessageFeedbackEnabledInput {
                configuration_set_name: self.configuration_set_name,
                message_feedback_enabled: self.message_feedback_enabled,
            },
        )
    }
}
