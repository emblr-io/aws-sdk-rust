// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetProtectConfigurationCountryRuleSetInput {
    /// <p>The unique identifier for the protect configuration.</p>
    pub protect_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The capability type to return the CountryRuleSet for. Valid values are <code>SMS</code>, <code>VOICE</code>, or <code>MMS</code>.</p>
    pub number_capability: ::std::option::Option<crate::types::NumberCapability>,
}
impl GetProtectConfigurationCountryRuleSetInput {
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn protect_configuration_id(&self) -> ::std::option::Option<&str> {
        self.protect_configuration_id.as_deref()
    }
    /// <p>The capability type to return the CountryRuleSet for. Valid values are <code>SMS</code>, <code>VOICE</code>, or <code>MMS</code>.</p>
    pub fn number_capability(&self) -> ::std::option::Option<&crate::types::NumberCapability> {
        self.number_capability.as_ref()
    }
}
impl GetProtectConfigurationCountryRuleSetInput {
    /// Creates a new builder-style object to manufacture [`GetProtectConfigurationCountryRuleSetInput`](crate::operation::get_protect_configuration_country_rule_set::GetProtectConfigurationCountryRuleSetInput).
    pub fn builder() -> crate::operation::get_protect_configuration_country_rule_set::builders::GetProtectConfigurationCountryRuleSetInputBuilder {
        crate::operation::get_protect_configuration_country_rule_set::builders::GetProtectConfigurationCountryRuleSetInputBuilder::default()
    }
}

/// A builder for [`GetProtectConfigurationCountryRuleSetInput`](crate::operation::get_protect_configuration_country_rule_set::GetProtectConfigurationCountryRuleSetInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetProtectConfigurationCountryRuleSetInputBuilder {
    pub(crate) protect_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) number_capability: ::std::option::Option<crate::types::NumberCapability>,
}
impl GetProtectConfigurationCountryRuleSetInputBuilder {
    /// <p>The unique identifier for the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn set_protect_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_id = input;
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn get_protect_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_id
    }
    /// <p>The capability type to return the CountryRuleSet for. Valid values are <code>SMS</code>, <code>VOICE</code>, or <code>MMS</code>.</p>
    /// This field is required.
    pub fn number_capability(mut self, input: crate::types::NumberCapability) -> Self {
        self.number_capability = ::std::option::Option::Some(input);
        self
    }
    /// <p>The capability type to return the CountryRuleSet for. Valid values are <code>SMS</code>, <code>VOICE</code>, or <code>MMS</code>.</p>
    pub fn set_number_capability(mut self, input: ::std::option::Option<crate::types::NumberCapability>) -> Self {
        self.number_capability = input;
        self
    }
    /// <p>The capability type to return the CountryRuleSet for. Valid values are <code>SMS</code>, <code>VOICE</code>, or <code>MMS</code>.</p>
    pub fn get_number_capability(&self) -> &::std::option::Option<crate::types::NumberCapability> {
        &self.number_capability
    }
    /// Consumes the builder and constructs a [`GetProtectConfigurationCountryRuleSetInput`](crate::operation::get_protect_configuration_country_rule_set::GetProtectConfigurationCountryRuleSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_protect_configuration_country_rule_set::GetProtectConfigurationCountryRuleSetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_protect_configuration_country_rule_set::GetProtectConfigurationCountryRuleSetInput {
                protect_configuration_id: self.protect_configuration_id,
                number_capability: self.number_capability,
            },
        )
    }
}
