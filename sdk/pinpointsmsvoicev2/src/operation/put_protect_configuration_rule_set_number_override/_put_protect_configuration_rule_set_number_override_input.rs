// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutProtectConfigurationRuleSetNumberOverrideInput {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier for the protect configuration.</p>
    pub protect_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The destination phone number in E.164 format.</p>
    pub destination_phone_number: ::std::option::Option<::std::string::String>,
    /// <p>The action for the rule to either block or allow messages to the destination phone number.</p>
    pub action: ::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction>,
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule does not expire.</p>
    pub expiration_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PutProtectConfigurationRuleSetNumberOverrideInput {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn protect_configuration_id(&self) -> ::std::option::Option<&str> {
        self.protect_configuration_id.as_deref()
    }
    /// <p>The destination phone number in E.164 format.</p>
    pub fn destination_phone_number(&self) -> ::std::option::Option<&str> {
        self.destination_phone_number.as_deref()
    }
    /// <p>The action for the rule to either block or allow messages to the destination phone number.</p>
    pub fn action(&self) -> ::std::option::Option<&crate::types::ProtectConfigurationRuleOverrideAction> {
        self.action.as_ref()
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule does not expire.</p>
    pub fn expiration_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expiration_timestamp.as_ref()
    }
}
impl PutProtectConfigurationRuleSetNumberOverrideInput {
    /// Creates a new builder-style object to manufacture [`PutProtectConfigurationRuleSetNumberOverrideInput`](crate::operation::put_protect_configuration_rule_set_number_override::PutProtectConfigurationRuleSetNumberOverrideInput).
    pub fn builder(
    ) -> crate::operation::put_protect_configuration_rule_set_number_override::builders::PutProtectConfigurationRuleSetNumberOverrideInputBuilder
    {
        crate::operation::put_protect_configuration_rule_set_number_override::builders::PutProtectConfigurationRuleSetNumberOverrideInputBuilder::default()
    }
}

/// A builder for [`PutProtectConfigurationRuleSetNumberOverrideInput`](crate::operation::put_protect_configuration_rule_set_number_override::PutProtectConfigurationRuleSetNumberOverrideInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutProtectConfigurationRuleSetNumberOverrideInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) protect_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) destination_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction>,
    pub(crate) expiration_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PutProtectConfigurationRuleSetNumberOverrideInputBuilder {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>The unique identifier for the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn set_protect_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_id = input;
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn get_protect_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_id
    }
    /// <p>The destination phone number in E.164 format.</p>
    /// This field is required.
    pub fn destination_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The destination phone number in E.164 format.</p>
    pub fn set_destination_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_phone_number = input;
        self
    }
    /// <p>The destination phone number in E.164 format.</p>
    pub fn get_destination_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_phone_number
    }
    /// <p>The action for the rule to either block or allow messages to the destination phone number.</p>
    /// This field is required.
    pub fn action(mut self, input: crate::types::ProtectConfigurationRuleOverrideAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>The action for the rule to either block or allow messages to the destination phone number.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The action for the rule to either block or allow messages to the destination phone number.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction> {
        &self.action
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule does not expire.</p>
    pub fn expiration_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiration_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule does not expire.</p>
    pub fn set_expiration_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiration_timestamp = input;
        self
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule does not expire.</p>
    pub fn get_expiration_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiration_timestamp
    }
    /// Consumes the builder and constructs a [`PutProtectConfigurationRuleSetNumberOverrideInput`](crate::operation::put_protect_configuration_rule_set_number_override::PutProtectConfigurationRuleSetNumberOverrideInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_protect_configuration_rule_set_number_override::PutProtectConfigurationRuleSetNumberOverrideInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_protect_configuration_rule_set_number_override::PutProtectConfigurationRuleSetNumberOverrideInput {
                client_token: self.client_token,
                protect_configuration_id: self.protect_configuration_id,
                destination_phone_number: self.destination_phone_number,
                action: self.action,
                expiration_timestamp: self.expiration_timestamp,
            },
        )
    }
}
