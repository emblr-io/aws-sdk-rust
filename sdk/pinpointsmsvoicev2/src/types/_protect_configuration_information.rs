// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information on the specified protect configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProtectConfigurationInformation {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub protect_configuration_arn: ::std::string::String,
    /// <p>The unique identifier for the protect configuration.</p>
    pub protect_configuration_id: ::std::string::String,
    /// <p>The time when the protect configuration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub created_timestamp: ::aws_smithy_types::DateTime,
    /// <p>This is true if the protect configuration is set as your account default protect configuration.</p>
    pub account_default: bool,
    /// <p>The status of deletion protection for the protect configuration. When set to true deletion protection is enabled. By default this is set to false.</p>
    pub deletion_protection_enabled: bool,
}
impl ProtectConfigurationInformation {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn protect_configuration_arn(&self) -> &str {
        use std::ops::Deref;
        self.protect_configuration_arn.deref()
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn protect_configuration_id(&self) -> &str {
        use std::ops::Deref;
        self.protect_configuration_id.deref()
    }
    /// <p>The time when the protect configuration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn created_timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.created_timestamp
    }
    /// <p>This is true if the protect configuration is set as your account default protect configuration.</p>
    pub fn account_default(&self) -> bool {
        self.account_default
    }
    /// <p>The status of deletion protection for the protect configuration. When set to true deletion protection is enabled. By default this is set to false.</p>
    pub fn deletion_protection_enabled(&self) -> bool {
        self.deletion_protection_enabled
    }
}
impl ProtectConfigurationInformation {
    /// Creates a new builder-style object to manufacture [`ProtectConfigurationInformation`](crate::types::ProtectConfigurationInformation).
    pub fn builder() -> crate::types::builders::ProtectConfigurationInformationBuilder {
        crate::types::builders::ProtectConfigurationInformationBuilder::default()
    }
}

/// A builder for [`ProtectConfigurationInformation`](crate::types::ProtectConfigurationInformation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProtectConfigurationInformationBuilder {
    pub(crate) protect_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) protect_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) account_default: ::std::option::Option<bool>,
    pub(crate) deletion_protection_enabled: ::std::option::Option<bool>,
}
impl ProtectConfigurationInformationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn set_protect_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the protect configuration.</p>
    pub fn get_protect_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_arn
    }
    /// <p>The unique identifier for the protect configuration.</p>
    /// This field is required.
    pub fn protect_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.protect_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn set_protect_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.protect_configuration_id = input;
        self
    }
    /// <p>The unique identifier for the protect configuration.</p>
    pub fn get_protect_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.protect_configuration_id
    }
    /// <p>The time when the protect configuration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// This field is required.
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the protect configuration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The time when the protect configuration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// <p>This is true if the protect configuration is set as your account default protect configuration.</p>
    /// This field is required.
    pub fn account_default(mut self, input: bool) -> Self {
        self.account_default = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is true if the protect configuration is set as your account default protect configuration.</p>
    pub fn set_account_default(mut self, input: ::std::option::Option<bool>) -> Self {
        self.account_default = input;
        self
    }
    /// <p>This is true if the protect configuration is set as your account default protect configuration.</p>
    pub fn get_account_default(&self) -> &::std::option::Option<bool> {
        &self.account_default
    }
    /// <p>The status of deletion protection for the protect configuration. When set to true deletion protection is enabled. By default this is set to false.</p>
    /// This field is required.
    pub fn deletion_protection_enabled(mut self, input: bool) -> Self {
        self.deletion_protection_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of deletion protection for the protect configuration. When set to true deletion protection is enabled. By default this is set to false.</p>
    pub fn set_deletion_protection_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.deletion_protection_enabled = input;
        self
    }
    /// <p>The status of deletion protection for the protect configuration. When set to true deletion protection is enabled. By default this is set to false.</p>
    pub fn get_deletion_protection_enabled(&self) -> &::std::option::Option<bool> {
        &self.deletion_protection_enabled
    }
    /// Consumes the builder and constructs a [`ProtectConfigurationInformation`](crate::types::ProtectConfigurationInformation).
    /// This method will fail if any of the following fields are not set:
    /// - [`protect_configuration_arn`](crate::types::builders::ProtectConfigurationInformationBuilder::protect_configuration_arn)
    /// - [`protect_configuration_id`](crate::types::builders::ProtectConfigurationInformationBuilder::protect_configuration_id)
    /// - [`created_timestamp`](crate::types::builders::ProtectConfigurationInformationBuilder::created_timestamp)
    pub fn build(self) -> ::std::result::Result<crate::types::ProtectConfigurationInformation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ProtectConfigurationInformation {
            protect_configuration_arn: self.protect_configuration_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "protect_configuration_arn",
                    "protect_configuration_arn was not specified but it is required when building ProtectConfigurationInformation",
                )
            })?,
            protect_configuration_id: self.protect_configuration_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "protect_configuration_id",
                    "protect_configuration_id was not specified but it is required when building ProtectConfigurationInformation",
                )
            })?,
            created_timestamp: self.created_timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_timestamp",
                    "created_timestamp was not specified but it is required when building ProtectConfigurationInformation",
                )
            })?,
            account_default: self.account_default.unwrap_or_default(),
            deletion_protection_enabled: self.deletion_protection_enabled.unwrap_or_default(),
        })
    }
}
