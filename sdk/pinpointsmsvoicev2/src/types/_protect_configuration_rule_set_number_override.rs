// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides details on phone number rule overrides for a protect configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProtectConfigurationRuleSetNumberOverride {
    /// <p>The destination phone number in E.164 format.</p>
    pub destination_phone_number: ::std::string::String,
    /// <p>The time when the rule was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub created_timestamp: ::aws_smithy_types::DateTime,
    /// <p>The action for the rule to perform of either blocking or allowing messages to the destination phone number.</p>
    pub action: crate::types::ProtectConfigurationRuleOverrideAction,
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub iso_country_code: ::std::option::Option<::std::string::String>,
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule will not expire.</p>
    pub expiration_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ProtectConfigurationRuleSetNumberOverride {
    /// <p>The destination phone number in E.164 format.</p>
    pub fn destination_phone_number(&self) -> &str {
        use std::ops::Deref;
        self.destination_phone_number.deref()
    }
    /// <p>The time when the rule was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn created_timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.created_timestamp
    }
    /// <p>The action for the rule to perform of either blocking or allowing messages to the destination phone number.</p>
    pub fn action(&self) -> &crate::types::ProtectConfigurationRuleOverrideAction {
        &self.action
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn iso_country_code(&self) -> ::std::option::Option<&str> {
        self.iso_country_code.as_deref()
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule will not expire.</p>
    pub fn expiration_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expiration_timestamp.as_ref()
    }
}
impl ProtectConfigurationRuleSetNumberOverride {
    /// Creates a new builder-style object to manufacture [`ProtectConfigurationRuleSetNumberOverride`](crate::types::ProtectConfigurationRuleSetNumberOverride).
    pub fn builder() -> crate::types::builders::ProtectConfigurationRuleSetNumberOverrideBuilder {
        crate::types::builders::ProtectConfigurationRuleSetNumberOverrideBuilder::default()
    }
}

/// A builder for [`ProtectConfigurationRuleSetNumberOverride`](crate::types::ProtectConfigurationRuleSetNumberOverride).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProtectConfigurationRuleSetNumberOverrideBuilder {
    pub(crate) destination_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) action: ::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction>,
    pub(crate) iso_country_code: ::std::option::Option<::std::string::String>,
    pub(crate) expiration_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ProtectConfigurationRuleSetNumberOverrideBuilder {
    /// <p>The destination phone number in E.164 format.</p>
    /// This field is required.
    pub fn destination_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The destination phone number in E.164 format.</p>
    pub fn set_destination_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_phone_number = input;
        self
    }
    /// <p>The destination phone number in E.164 format.</p>
    pub fn get_destination_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_phone_number
    }
    /// <p>The time when the rule was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// This field is required.
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the rule was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The time when the rule was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// <p>The action for the rule to perform of either blocking or allowing messages to the destination phone number.</p>
    /// This field is required.
    pub fn action(mut self, input: crate::types::ProtectConfigurationRuleOverrideAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>The action for the rule to perform of either blocking or allowing messages to the destination phone number.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The action for the rule to perform of either blocking or allowing messages to the destination phone number.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::ProtectConfigurationRuleOverrideAction> {
        &self.action
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn iso_country_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iso_country_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn set_iso_country_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iso_country_code = input;
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn get_iso_country_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.iso_country_code
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule will not expire.</p>
    pub fn expiration_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiration_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule will not expire.</p>
    pub fn set_expiration_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiration_timestamp = input;
        self
    }
    /// <p>The time the rule will expire at. If <code>ExpirationTimestamp</code> is not set then the rule will not expire.</p>
    pub fn get_expiration_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiration_timestamp
    }
    /// Consumes the builder and constructs a [`ProtectConfigurationRuleSetNumberOverride`](crate::types::ProtectConfigurationRuleSetNumberOverride).
    /// This method will fail if any of the following fields are not set:
    /// - [`destination_phone_number`](crate::types::builders::ProtectConfigurationRuleSetNumberOverrideBuilder::destination_phone_number)
    /// - [`created_timestamp`](crate::types::builders::ProtectConfigurationRuleSetNumberOverrideBuilder::created_timestamp)
    /// - [`action`](crate::types::builders::ProtectConfigurationRuleSetNumberOverrideBuilder::action)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::ProtectConfigurationRuleSetNumberOverride, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ProtectConfigurationRuleSetNumberOverride {
            destination_phone_number: self.destination_phone_number.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "destination_phone_number",
                    "destination_phone_number was not specified but it is required when building ProtectConfigurationRuleSetNumberOverride",
                )
            })?,
            created_timestamp: self.created_timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_timestamp",
                    "created_timestamp was not specified but it is required when building ProtectConfigurationRuleSetNumberOverride",
                )
            })?,
            action: self.action.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action",
                    "action was not specified but it is required when building ProtectConfigurationRuleSetNumberOverride",
                )
            })?,
            iso_country_code: self.iso_country_code,
            expiration_timestamp: self.expiration_timestamp,
        })
    }
}
