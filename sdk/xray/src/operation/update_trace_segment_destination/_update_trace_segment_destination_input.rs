// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateTraceSegmentDestinationInput {
    /// <p>The configured destination of trace segments.</p>
    pub destination: ::std::option::Option<crate::types::TraceSegmentDestination>,
}
impl UpdateTraceSegmentDestinationInput {
    /// <p>The configured destination of trace segments.</p>
    pub fn destination(&self) -> ::std::option::Option<&crate::types::TraceSegmentDestination> {
        self.destination.as_ref()
    }
}
impl UpdateTraceSegmentDestinationInput {
    /// Creates a new builder-style object to manufacture [`UpdateTraceSegmentDestinationInput`](crate::operation::update_trace_segment_destination::UpdateTraceSegmentDestinationInput).
    pub fn builder() -> crate::operation::update_trace_segment_destination::builders::UpdateTraceSegmentDestinationInputBuilder {
        crate::operation::update_trace_segment_destination::builders::UpdateTraceSegmentDestinationInputBuilder::default()
    }
}

/// A builder for [`UpdateTraceSegmentDestinationInput`](crate::operation::update_trace_segment_destination::UpdateTraceSegmentDestinationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateTraceSegmentDestinationInputBuilder {
    pub(crate) destination: ::std::option::Option<crate::types::TraceSegmentDestination>,
}
impl UpdateTraceSegmentDestinationInputBuilder {
    /// <p>The configured destination of trace segments.</p>
    pub fn destination(mut self, input: crate::types::TraceSegmentDestination) -> Self {
        self.destination = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configured destination of trace segments.</p>
    pub fn set_destination(mut self, input: ::std::option::Option<crate::types::TraceSegmentDestination>) -> Self {
        self.destination = input;
        self
    }
    /// <p>The configured destination of trace segments.</p>
    pub fn get_destination(&self) -> &::std::option::Option<crate::types::TraceSegmentDestination> {
        &self.destination
    }
    /// Consumes the builder and constructs a [`UpdateTraceSegmentDestinationInput`](crate::operation::update_trace_segment_destination::UpdateTraceSegmentDestinationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_trace_segment_destination::UpdateTraceSegmentDestinationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_trace_segment_destination::UpdateTraceSegmentDestinationInput {
            destination: self.destination,
        })
    }
}
