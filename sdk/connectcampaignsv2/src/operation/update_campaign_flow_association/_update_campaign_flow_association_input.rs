// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The request for UpdateCampaignFlowAssociation API.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCampaignFlowAssociationInput {
    /// Identifier representing a Campaign
    pub id: ::std::option::Option<::std::string::String>,
    /// Amazon Resource Names(ARN)
    pub connect_campaign_flow_arn: ::std::option::Option<::std::string::String>,
}
impl UpdateCampaignFlowAssociationInput {
    /// Identifier representing a Campaign
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Amazon Resource Names(ARN)
    pub fn connect_campaign_flow_arn(&self) -> ::std::option::Option<&str> {
        self.connect_campaign_flow_arn.as_deref()
    }
}
impl UpdateCampaignFlowAssociationInput {
    /// Creates a new builder-style object to manufacture [`UpdateCampaignFlowAssociationInput`](crate::operation::update_campaign_flow_association::UpdateCampaignFlowAssociationInput).
    pub fn builder() -> crate::operation::update_campaign_flow_association::builders::UpdateCampaignFlowAssociationInputBuilder {
        crate::operation::update_campaign_flow_association::builders::UpdateCampaignFlowAssociationInputBuilder::default()
    }
}

/// A builder for [`UpdateCampaignFlowAssociationInput`](crate::operation::update_campaign_flow_association::UpdateCampaignFlowAssociationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateCampaignFlowAssociationInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) connect_campaign_flow_arn: ::std::option::Option<::std::string::String>,
}
impl UpdateCampaignFlowAssociationInputBuilder {
    /// Identifier representing a Campaign
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier representing a Campaign
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Identifier representing a Campaign
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Amazon Resource Names(ARN)
    /// This field is required.
    pub fn connect_campaign_flow_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_campaign_flow_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// Amazon Resource Names(ARN)
    pub fn set_connect_campaign_flow_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_campaign_flow_arn = input;
        self
    }
    /// Amazon Resource Names(ARN)
    pub fn get_connect_campaign_flow_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_campaign_flow_arn
    }
    /// Consumes the builder and constructs a [`UpdateCampaignFlowAssociationInput`](crate::operation::update_campaign_flow_association::UpdateCampaignFlowAssociationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_campaign_flow_association::UpdateCampaignFlowAssociationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_campaign_flow_association::UpdateCampaignFlowAssociationInput {
            id: self.id,
            connect_campaign_flow_arn: self.connect_campaign_flow_arn,
        })
    }
}
