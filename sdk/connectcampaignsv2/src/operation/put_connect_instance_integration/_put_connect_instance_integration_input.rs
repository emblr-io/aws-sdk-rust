// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The request for PutConnectInstanceIntegration API.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutConnectInstanceIntegrationInput {
    /// Amazon Connect Instance Id
    pub connect_instance_id: ::std::option::Option<::std::string::String>,
    /// Integration config for Connect Instance
    pub integration_config: ::std::option::Option<crate::types::IntegrationConfig>,
}
impl PutConnectInstanceIntegrationInput {
    /// Amazon Connect Instance Id
    pub fn connect_instance_id(&self) -> ::std::option::Option<&str> {
        self.connect_instance_id.as_deref()
    }
    /// Integration config for Connect Instance
    pub fn integration_config(&self) -> ::std::option::Option<&crate::types::IntegrationConfig> {
        self.integration_config.as_ref()
    }
}
impl PutConnectInstanceIntegrationInput {
    /// Creates a new builder-style object to manufacture [`PutConnectInstanceIntegrationInput`](crate::operation::put_connect_instance_integration::PutConnectInstanceIntegrationInput).
    pub fn builder() -> crate::operation::put_connect_instance_integration::builders::PutConnectInstanceIntegrationInputBuilder {
        crate::operation::put_connect_instance_integration::builders::PutConnectInstanceIntegrationInputBuilder::default()
    }
}

/// A builder for [`PutConnectInstanceIntegrationInput`](crate::operation::put_connect_instance_integration::PutConnectInstanceIntegrationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutConnectInstanceIntegrationInputBuilder {
    pub(crate) connect_instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) integration_config: ::std::option::Option<crate::types::IntegrationConfig>,
}
impl PutConnectInstanceIntegrationInputBuilder {
    /// Amazon Connect Instance Id
    /// This field is required.
    pub fn connect_instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Amazon Connect Instance Id
    pub fn set_connect_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_instance_id = input;
        self
    }
    /// Amazon Connect Instance Id
    pub fn get_connect_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_instance_id
    }
    /// Integration config for Connect Instance
    /// This field is required.
    pub fn integration_config(mut self, input: crate::types::IntegrationConfig) -> Self {
        self.integration_config = ::std::option::Option::Some(input);
        self
    }
    /// Integration config for Connect Instance
    pub fn set_integration_config(mut self, input: ::std::option::Option<crate::types::IntegrationConfig>) -> Self {
        self.integration_config = input;
        self
    }
    /// Integration config for Connect Instance
    pub fn get_integration_config(&self) -> &::std::option::Option<crate::types::IntegrationConfig> {
        &self.integration_config
    }
    /// Consumes the builder and constructs a [`PutConnectInstanceIntegrationInput`](crate::operation::put_connect_instance_integration::PutConnectInstanceIntegrationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_connect_instance_integration::PutConnectInstanceIntegrationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_connect_instance_integration::PutConnectInstanceIntegrationInput {
            connect_instance_id: self.connect_instance_id,
            integration_config: self.integration_config,
        })
    }
}
