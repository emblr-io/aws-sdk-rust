// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Customer Profiles integration summary
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomerProfilesIntegrationSummary {
    /// Amazon Resource Names(ARN)
    pub domain_arn: ::std::string::String,
    /// Object type names map.
    pub object_type_names: ::std::collections::HashMap<crate::types::EventType, ::std::string::String>,
}
impl CustomerProfilesIntegrationSummary {
    /// Amazon Resource Names(ARN)
    pub fn domain_arn(&self) -> &str {
        use std::ops::Deref;
        self.domain_arn.deref()
    }
    /// Object type names map.
    pub fn object_type_names(&self) -> &::std::collections::HashMap<crate::types::EventType, ::std::string::String> {
        &self.object_type_names
    }
}
impl CustomerProfilesIntegrationSummary {
    /// Creates a new builder-style object to manufacture [`CustomerProfilesIntegrationSummary`](crate::types::CustomerProfilesIntegrationSummary).
    pub fn builder() -> crate::types::builders::CustomerProfilesIntegrationSummaryBuilder {
        crate::types::builders::CustomerProfilesIntegrationSummaryBuilder::default()
    }
}

/// A builder for [`CustomerProfilesIntegrationSummary`](crate::types::CustomerProfilesIntegrationSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomerProfilesIntegrationSummaryBuilder {
    pub(crate) domain_arn: ::std::option::Option<::std::string::String>,
    pub(crate) object_type_names: ::std::option::Option<::std::collections::HashMap<crate::types::EventType, ::std::string::String>>,
}
impl CustomerProfilesIntegrationSummaryBuilder {
    /// Amazon Resource Names(ARN)
    /// This field is required.
    pub fn domain_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// Amazon Resource Names(ARN)
    pub fn set_domain_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_arn = input;
        self
    }
    /// Amazon Resource Names(ARN)
    pub fn get_domain_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_arn
    }
    /// Adds a key-value pair to `object_type_names`.
    ///
    /// To override the contents of this collection use [`set_object_type_names`](Self::set_object_type_names).
    ///
    /// Object type names map.
    pub fn object_type_names(mut self, k: crate::types::EventType, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.object_type_names.unwrap_or_default();
        hash_map.insert(k, v.into());
        self.object_type_names = ::std::option::Option::Some(hash_map);
        self
    }
    /// Object type names map.
    pub fn set_object_type_names(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<crate::types::EventType, ::std::string::String>>,
    ) -> Self {
        self.object_type_names = input;
        self
    }
    /// Object type names map.
    pub fn get_object_type_names(&self) -> &::std::option::Option<::std::collections::HashMap<crate::types::EventType, ::std::string::String>> {
        &self.object_type_names
    }
    /// Consumes the builder and constructs a [`CustomerProfilesIntegrationSummary`](crate::types::CustomerProfilesIntegrationSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`domain_arn`](crate::types::builders::CustomerProfilesIntegrationSummaryBuilder::domain_arn)
    /// - [`object_type_names`](crate::types::builders::CustomerProfilesIntegrationSummaryBuilder::object_type_names)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomerProfilesIntegrationSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomerProfilesIntegrationSummary {
            domain_arn: self.domain_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "domain_arn",
                    "domain_arn was not specified but it is required when building CustomerProfilesIntegrationSummary",
                )
            })?,
            object_type_names: self.object_type_names.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "object_type_names",
                    "object_type_names was not specified but it is required when building CustomerProfilesIntegrationSummary",
                )
            })?,
        })
    }
}
