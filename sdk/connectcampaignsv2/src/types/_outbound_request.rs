// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// An outbound request for a campaign.
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutboundRequest {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub client_token: ::std::string::String,
    /// Timestamp with no UTC offset or timezone
    pub expiration_time: ::aws_smithy_types::DateTime,
    /// ChannelSubtypeParameters for an outbound request
    pub channel_subtype_parameters: ::std::option::Option<crate::types::ChannelSubtypeParameters>,
}
impl OutboundRequest {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn client_token(&self) -> &str {
        use std::ops::Deref;
        self.client_token.deref()
    }
    /// Timestamp with no UTC offset or timezone
    pub fn expiration_time(&self) -> &::aws_smithy_types::DateTime {
        &self.expiration_time
    }
    /// ChannelSubtypeParameters for an outbound request
    pub fn channel_subtype_parameters(&self) -> ::std::option::Option<&crate::types::ChannelSubtypeParameters> {
        self.channel_subtype_parameters.as_ref()
    }
}
impl OutboundRequest {
    /// Creates a new builder-style object to manufacture [`OutboundRequest`](crate::types::OutboundRequest).
    pub fn builder() -> crate::types::builders::OutboundRequestBuilder {
        crate::types::builders::OutboundRequestBuilder::default()
    }
}

/// A builder for [`OutboundRequest`](crate::types::OutboundRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OutboundRequestBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) expiration_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) channel_subtype_parameters: ::std::option::Option<crate::types::ChannelSubtypeParameters>,
}
impl OutboundRequestBuilder {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    /// This field is required.
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Timestamp with no UTC offset or timezone
    /// This field is required.
    pub fn expiration_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiration_time = ::std::option::Option::Some(input);
        self
    }
    /// Timestamp with no UTC offset or timezone
    pub fn set_expiration_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiration_time = input;
        self
    }
    /// Timestamp with no UTC offset or timezone
    pub fn get_expiration_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiration_time
    }
    /// ChannelSubtypeParameters for an outbound request
    /// This field is required.
    pub fn channel_subtype_parameters(mut self, input: crate::types::ChannelSubtypeParameters) -> Self {
        self.channel_subtype_parameters = ::std::option::Option::Some(input);
        self
    }
    /// ChannelSubtypeParameters for an outbound request
    pub fn set_channel_subtype_parameters(mut self, input: ::std::option::Option<crate::types::ChannelSubtypeParameters>) -> Self {
        self.channel_subtype_parameters = input;
        self
    }
    /// ChannelSubtypeParameters for an outbound request
    pub fn get_channel_subtype_parameters(&self) -> &::std::option::Option<crate::types::ChannelSubtypeParameters> {
        &self.channel_subtype_parameters
    }
    /// Consumes the builder and constructs a [`OutboundRequest`](crate::types::OutboundRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`client_token`](crate::types::builders::OutboundRequestBuilder::client_token)
    /// - [`expiration_time`](crate::types::builders::OutboundRequestBuilder::expiration_time)
    pub fn build(self) -> ::std::result::Result<crate::types::OutboundRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OutboundRequest {
            client_token: self.client_token.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "client_token",
                    "client_token was not specified but it is required when building OutboundRequest",
                )
            })?,
            expiration_time: self.expiration_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "expiration_time",
                    "expiration_time was not specified but it is required when building OutboundRequest",
                )
            })?,
            channel_subtype_parameters: self.channel_subtype_parameters,
        })
    }
}
