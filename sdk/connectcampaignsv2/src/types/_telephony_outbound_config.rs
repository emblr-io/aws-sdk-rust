// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Default Telephony Outbound config
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TelephonyOutboundConfig {
    /// The identifier of the contact flow for the outbound call.
    pub connect_contact_flow_id: ::std::string::String,
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub connect_source_phone_number: ::std::option::Option<::std::string::String>,
    /// Answering Machine Detection config
    pub answer_machine_detection_config: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>,
}
impl TelephonyOutboundConfig {
    /// The identifier of the contact flow for the outbound call.
    pub fn connect_contact_flow_id(&self) -> &str {
        use std::ops::Deref;
        self.connect_contact_flow_id.deref()
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn connect_source_phone_number(&self) -> ::std::option::Option<&str> {
        self.connect_source_phone_number.as_deref()
    }
    /// Answering Machine Detection config
    pub fn answer_machine_detection_config(&self) -> ::std::option::Option<&crate::types::AnswerMachineDetectionConfig> {
        self.answer_machine_detection_config.as_ref()
    }
}
impl TelephonyOutboundConfig {
    /// Creates a new builder-style object to manufacture [`TelephonyOutboundConfig`](crate::types::TelephonyOutboundConfig).
    pub fn builder() -> crate::types::builders::TelephonyOutboundConfigBuilder {
        crate::types::builders::TelephonyOutboundConfigBuilder::default()
    }
}

/// A builder for [`TelephonyOutboundConfig`](crate::types::TelephonyOutboundConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TelephonyOutboundConfigBuilder {
    pub(crate) connect_contact_flow_id: ::std::option::Option<::std::string::String>,
    pub(crate) connect_source_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) answer_machine_detection_config: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>,
}
impl TelephonyOutboundConfigBuilder {
    /// The identifier of the contact flow for the outbound call.
    /// This field is required.
    pub fn connect_contact_flow_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_contact_flow_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn set_connect_contact_flow_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_contact_flow_id = input;
        self
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn get_connect_contact_flow_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_contact_flow_id
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn connect_source_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_source_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn set_connect_source_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_source_phone_number = input;
        self
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn get_connect_source_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_source_phone_number
    }
    /// Answering Machine Detection config
    pub fn answer_machine_detection_config(mut self, input: crate::types::AnswerMachineDetectionConfig) -> Self {
        self.answer_machine_detection_config = ::std::option::Option::Some(input);
        self
    }
    /// Answering Machine Detection config
    pub fn set_answer_machine_detection_config(mut self, input: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>) -> Self {
        self.answer_machine_detection_config = input;
        self
    }
    /// Answering Machine Detection config
    pub fn get_answer_machine_detection_config(&self) -> &::std::option::Option<crate::types::AnswerMachineDetectionConfig> {
        &self.answer_machine_detection_config
    }
    /// Consumes the builder and constructs a [`TelephonyOutboundConfig`](crate::types::TelephonyOutboundConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`connect_contact_flow_id`](crate::types::builders::TelephonyOutboundConfigBuilder::connect_contact_flow_id)
    pub fn build(self) -> ::std::result::Result<crate::types::TelephonyOutboundConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TelephonyOutboundConfig {
            connect_contact_flow_id: self.connect_contact_flow_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "connect_contact_flow_id",
                    "connect_contact_flow_id was not specified but it is required when building TelephonyOutboundConfig",
                )
            })?,
            connect_source_phone_number: self.connect_source_phone_number,
            answer_machine_detection_config: self.answer_machine_detection_config,
        })
    }
}
