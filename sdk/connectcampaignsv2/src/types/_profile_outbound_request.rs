// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a profile outbound request
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProfileOutboundRequest {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub client_token: ::std::string::String,
    /// Identifier of the customer profile
    pub profile_id: ::std::string::String,
    /// Timestamp with no UTC offset or timezone
    pub expiration_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ProfileOutboundRequest {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn client_token(&self) -> &str {
        use std::ops::Deref;
        self.client_token.deref()
    }
    /// Identifier of the customer profile
    pub fn profile_id(&self) -> &str {
        use std::ops::Deref;
        self.profile_id.deref()
    }
    /// Timestamp with no UTC offset or timezone
    pub fn expiration_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expiration_time.as_ref()
    }
}
impl ProfileOutboundRequest {
    /// Creates a new builder-style object to manufacture [`ProfileOutboundRequest`](crate::types::ProfileOutboundRequest).
    pub fn builder() -> crate::types::builders::ProfileOutboundRequestBuilder {
        crate::types::builders::ProfileOutboundRequestBuilder::default()
    }
}

/// A builder for [`ProfileOutboundRequest`](crate::types::ProfileOutboundRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProfileOutboundRequestBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) profile_id: ::std::option::Option<::std::string::String>,
    pub(crate) expiration_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ProfileOutboundRequestBuilder {
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    /// This field is required.
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Client provided parameter used for idempotency. Its value must be unique for each request.
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Identifier of the customer profile
    /// This field is required.
    pub fn profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier of the customer profile
    pub fn set_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile_id = input;
        self
    }
    /// Identifier of the customer profile
    pub fn get_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile_id
    }
    /// Timestamp with no UTC offset or timezone
    pub fn expiration_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiration_time = ::std::option::Option::Some(input);
        self
    }
    /// Timestamp with no UTC offset or timezone
    pub fn set_expiration_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiration_time = input;
        self
    }
    /// Timestamp with no UTC offset or timezone
    pub fn get_expiration_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiration_time
    }
    /// Consumes the builder and constructs a [`ProfileOutboundRequest`](crate::types::ProfileOutboundRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`client_token`](crate::types::builders::ProfileOutboundRequestBuilder::client_token)
    /// - [`profile_id`](crate::types::builders::ProfileOutboundRequestBuilder::profile_id)
    pub fn build(self) -> ::std::result::Result<crate::types::ProfileOutboundRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ProfileOutboundRequest {
            client_token: self.client_token.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "client_token",
                    "client_token was not specified but it is required when building ProfileOutboundRequest",
                )
            })?,
            profile_id: self.profile_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "profile_id",
                    "profile_id was not specified but it is required when building ProfileOutboundRequest",
                )
            })?,
            expiration_time: self.expiration_time,
        })
    }
}
