// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetQueryStatusMonitorTopContributorsInput {
    /// <p>The name of the monitor.</p>
    pub monitor_name: ::std::option::Option<::std::string::String>,
    /// <p>The identifier for the query. A query ID is an internally-generated identifier for a specific query returned from an API call to start a query.</p>
    pub query_id: ::std::option::Option<::std::string::String>,
}
impl GetQueryStatusMonitorTopContributorsInput {
    /// <p>The name of the monitor.</p>
    pub fn monitor_name(&self) -> ::std::option::Option<&str> {
        self.monitor_name.as_deref()
    }
    /// <p>The identifier for the query. A query ID is an internally-generated identifier for a specific query returned from an API call to start a query.</p>
    pub fn query_id(&self) -> ::std::option::Option<&str> {
        self.query_id.as_deref()
    }
}
impl GetQueryStatusMonitorTopContributorsInput {
    /// Creates a new builder-style object to manufacture [`GetQueryStatusMonitorTopContributorsInput`](crate::operation::get_query_status_monitor_top_contributors::GetQueryStatusMonitorTopContributorsInput).
    pub fn builder() -> crate::operation::get_query_status_monitor_top_contributors::builders::GetQueryStatusMonitorTopContributorsInputBuilder {
        crate::operation::get_query_status_monitor_top_contributors::builders::GetQueryStatusMonitorTopContributorsInputBuilder::default()
    }
}

/// A builder for [`GetQueryStatusMonitorTopContributorsInput`](crate::operation::get_query_status_monitor_top_contributors::GetQueryStatusMonitorTopContributorsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetQueryStatusMonitorTopContributorsInputBuilder {
    pub(crate) monitor_name: ::std::option::Option<::std::string::String>,
    pub(crate) query_id: ::std::option::Option<::std::string::String>,
}
impl GetQueryStatusMonitorTopContributorsInputBuilder {
    /// <p>The name of the monitor.</p>
    /// This field is required.
    pub fn monitor_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.monitor_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the monitor.</p>
    pub fn set_monitor_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.monitor_name = input;
        self
    }
    /// <p>The name of the monitor.</p>
    pub fn get_monitor_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.monitor_name
    }
    /// <p>The identifier for the query. A query ID is an internally-generated identifier for a specific query returned from an API call to start a query.</p>
    /// This field is required.
    pub fn query_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.query_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the query. A query ID is an internally-generated identifier for a specific query returned from an API call to start a query.</p>
    pub fn set_query_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.query_id = input;
        self
    }
    /// <p>The identifier for the query. A query ID is an internally-generated identifier for a specific query returned from an API call to start a query.</p>
    pub fn get_query_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.query_id
    }
    /// Consumes the builder and constructs a [`GetQueryStatusMonitorTopContributorsInput`](crate::operation::get_query_status_monitor_top_contributors::GetQueryStatusMonitorTopContributorsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_query_status_monitor_top_contributors::GetQueryStatusMonitorTopContributorsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_query_status_monitor_top_contributors::GetQueryStatusMonitorTopContributorsInput {
                monitor_name: self.monitor_name,
                query_id: self.query_id,
            },
        )
    }
}
