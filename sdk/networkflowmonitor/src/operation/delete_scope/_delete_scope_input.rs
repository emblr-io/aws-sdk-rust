// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteScopeInput {
    /// <p>The identifier for the scope that includes the resources you want to get data results for. A scope ID is an internally-generated identifier that includes all the resources for a specific root account.</p>
    pub scope_id: ::std::option::Option<::std::string::String>,
}
impl DeleteScopeInput {
    /// <p>The identifier for the scope that includes the resources you want to get data results for. A scope ID is an internally-generated identifier that includes all the resources for a specific root account.</p>
    pub fn scope_id(&self) -> ::std::option::Option<&str> {
        self.scope_id.as_deref()
    }
}
impl DeleteScopeInput {
    /// Creates a new builder-style object to manufacture [`DeleteScopeInput`](crate::operation::delete_scope::DeleteScopeInput).
    pub fn builder() -> crate::operation::delete_scope::builders::DeleteScopeInputBuilder {
        crate::operation::delete_scope::builders::DeleteScopeInputBuilder::default()
    }
}

/// A builder for [`DeleteScopeInput`](crate::operation::delete_scope::DeleteScopeInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteScopeInputBuilder {
    pub(crate) scope_id: ::std::option::Option<::std::string::String>,
}
impl DeleteScopeInputBuilder {
    /// <p>The identifier for the scope that includes the resources you want to get data results for. A scope ID is an internally-generated identifier that includes all the resources for a specific root account.</p>
    /// This field is required.
    pub fn scope_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scope_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the scope that includes the resources you want to get data results for. A scope ID is an internally-generated identifier that includes all the resources for a specific root account.</p>
    pub fn set_scope_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scope_id = input;
        self
    }
    /// <p>The identifier for the scope that includes the resources you want to get data results for. A scope ID is an internally-generated identifier that includes all the resources for a specific root account.</p>
    pub fn get_scope_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.scope_id
    }
    /// Consumes the builder and constructs a [`DeleteScopeInput`](crate::operation::delete_scope::DeleteScopeInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_scope::DeleteScopeInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_scope::DeleteScopeInput { scope_id: self.scope_id })
    }
}
