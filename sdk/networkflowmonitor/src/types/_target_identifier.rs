// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A target identifier is a pair of identifying information for a resource that is included in a target. A target identifier includes the target ID and the target type.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TargetIdentifier {
    /// <p>The identifier for a target.</p>
    pub target_id: ::std::option::Option<crate::types::TargetId>,
    /// <p>The type of a target. A target type is currently always <code>ACCOUNT</code> because a target is currently a single Amazon Web Services account.</p>
    pub target_type: crate::types::TargetType,
}
impl TargetIdentifier {
    /// <p>The identifier for a target.</p>
    pub fn target_id(&self) -> ::std::option::Option<&crate::types::TargetId> {
        self.target_id.as_ref()
    }
    /// <p>The type of a target. A target type is currently always <code>ACCOUNT</code> because a target is currently a single Amazon Web Services account.</p>
    pub fn target_type(&self) -> &crate::types::TargetType {
        &self.target_type
    }
}
impl TargetIdentifier {
    /// Creates a new builder-style object to manufacture [`TargetIdentifier`](crate::types::TargetIdentifier).
    pub fn builder() -> crate::types::builders::TargetIdentifierBuilder {
        crate::types::builders::TargetIdentifierBuilder::default()
    }
}

/// A builder for [`TargetIdentifier`](crate::types::TargetIdentifier).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TargetIdentifierBuilder {
    pub(crate) target_id: ::std::option::Option<crate::types::TargetId>,
    pub(crate) target_type: ::std::option::Option<crate::types::TargetType>,
}
impl TargetIdentifierBuilder {
    /// <p>The identifier for a target.</p>
    /// This field is required.
    pub fn target_id(mut self, input: crate::types::TargetId) -> Self {
        self.target_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The identifier for a target.</p>
    pub fn set_target_id(mut self, input: ::std::option::Option<crate::types::TargetId>) -> Self {
        self.target_id = input;
        self
    }
    /// <p>The identifier for a target.</p>
    pub fn get_target_id(&self) -> &::std::option::Option<crate::types::TargetId> {
        &self.target_id
    }
    /// <p>The type of a target. A target type is currently always <code>ACCOUNT</code> because a target is currently a single Amazon Web Services account.</p>
    /// This field is required.
    pub fn target_type(mut self, input: crate::types::TargetType) -> Self {
        self.target_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of a target. A target type is currently always <code>ACCOUNT</code> because a target is currently a single Amazon Web Services account.</p>
    pub fn set_target_type(mut self, input: ::std::option::Option<crate::types::TargetType>) -> Self {
        self.target_type = input;
        self
    }
    /// <p>The type of a target. A target type is currently always <code>ACCOUNT</code> because a target is currently a single Amazon Web Services account.</p>
    pub fn get_target_type(&self) -> &::std::option::Option<crate::types::TargetType> {
        &self.target_type
    }
    /// Consumes the builder and constructs a [`TargetIdentifier`](crate::types::TargetIdentifier).
    /// This method will fail if any of the following fields are not set:
    /// - [`target_type`](crate::types::builders::TargetIdentifierBuilder::target_type)
    pub fn build(self) -> ::std::result::Result<crate::types::TargetIdentifier, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TargetIdentifier {
            target_id: self.target_id,
            target_type: self.target_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "target_type",
                    "target_type was not specified but it is required when building TargetIdentifier",
                )
            })?,
        })
    }
}
