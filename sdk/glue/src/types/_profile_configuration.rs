// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the job and session values that an admin configures in an Glue usage profile.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProfileConfiguration {
    /// <p>A key-value map of configuration parameters for Glue sessions.</p>
    pub session_configuration: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
    /// <p>A key-value map of configuration parameters for Glue jobs.</p>
    pub job_configuration: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
}
impl ProfileConfiguration {
    /// <p>A key-value map of configuration parameters for Glue sessions.</p>
    pub fn session_configuration(
        &self,
    ) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>> {
        self.session_configuration.as_ref()
    }
    /// <p>A key-value map of configuration parameters for Glue jobs.</p>
    pub fn job_configuration(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>> {
        self.job_configuration.as_ref()
    }
}
impl ProfileConfiguration {
    /// Creates a new builder-style object to manufacture [`ProfileConfiguration`](crate::types::ProfileConfiguration).
    pub fn builder() -> crate::types::builders::ProfileConfigurationBuilder {
        crate::types::builders::ProfileConfigurationBuilder::default()
    }
}

/// A builder for [`ProfileConfiguration`](crate::types::ProfileConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProfileConfigurationBuilder {
    pub(crate) session_configuration: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
    pub(crate) job_configuration: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
}
impl ProfileConfigurationBuilder {
    /// Adds a key-value pair to `session_configuration`.
    ///
    /// To override the contents of this collection use [`set_session_configuration`](Self::set_session_configuration).
    ///
    /// <p>A key-value map of configuration parameters for Glue sessions.</p>
    pub fn session_configuration(mut self, k: impl ::std::convert::Into<::std::string::String>, v: crate::types::ConfigurationObject) -> Self {
        let mut hash_map = self.session_configuration.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.session_configuration = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A key-value map of configuration parameters for Glue sessions.</p>
    pub fn set_session_configuration(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
    ) -> Self {
        self.session_configuration = input;
        self
    }
    /// <p>A key-value map of configuration parameters for Glue sessions.</p>
    pub fn get_session_configuration(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>> {
        &self.session_configuration
    }
    /// Adds a key-value pair to `job_configuration`.
    ///
    /// To override the contents of this collection use [`set_job_configuration`](Self::set_job_configuration).
    ///
    /// <p>A key-value map of configuration parameters for Glue jobs.</p>
    pub fn job_configuration(mut self, k: impl ::std::convert::Into<::std::string::String>, v: crate::types::ConfigurationObject) -> Self {
        let mut hash_map = self.job_configuration.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.job_configuration = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A key-value map of configuration parameters for Glue jobs.</p>
    pub fn set_job_configuration(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>>,
    ) -> Self {
        self.job_configuration = input;
        self
    }
    /// <p>A key-value map of configuration parameters for Glue jobs.</p>
    pub fn get_job_configuration(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ConfigurationObject>> {
        &self.job_configuration
    }
    /// Consumes the builder and constructs a [`ProfileConfiguration`](crate::types::ProfileConfiguration).
    pub fn build(self) -> crate::types::ProfileConfiguration {
        crate::types::ProfileConfiguration {
            session_configuration: self.session_configuration,
            job_configuration: self.job_configuration,
        }
    }
}
