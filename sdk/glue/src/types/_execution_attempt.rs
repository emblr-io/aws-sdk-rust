// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A run attempt for a column statistics task run.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExecutionAttempt {
    /// <p>The status of the last column statistics task run.</p>
    pub status: ::std::option::Option<crate::types::ExecutionStatus>,
    /// <p>A task run ID for the last column statistics task run.</p>
    pub column_statistics_task_run_id: ::std::option::Option<::std::string::String>,
    /// <p>A timestamp when the last column statistics task run occurred.</p>
    pub execution_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>An error message associated with the last column statistics task run.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
}
impl ExecutionAttempt {
    /// <p>The status of the last column statistics task run.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ExecutionStatus> {
        self.status.as_ref()
    }
    /// <p>A task run ID for the last column statistics task run.</p>
    pub fn column_statistics_task_run_id(&self) -> ::std::option::Option<&str> {
        self.column_statistics_task_run_id.as_deref()
    }
    /// <p>A timestamp when the last column statistics task run occurred.</p>
    pub fn execution_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.execution_timestamp.as_ref()
    }
    /// <p>An error message associated with the last column statistics task run.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl ExecutionAttempt {
    /// Creates a new builder-style object to manufacture [`ExecutionAttempt`](crate::types::ExecutionAttempt).
    pub fn builder() -> crate::types::builders::ExecutionAttemptBuilder {
        crate::types::builders::ExecutionAttemptBuilder::default()
    }
}

/// A builder for [`ExecutionAttempt`](crate::types::ExecutionAttempt).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExecutionAttemptBuilder {
    pub(crate) status: ::std::option::Option<crate::types::ExecutionStatus>,
    pub(crate) column_statistics_task_run_id: ::std::option::Option<::std::string::String>,
    pub(crate) execution_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
}
impl ExecutionAttemptBuilder {
    /// <p>The status of the last column statistics task run.</p>
    pub fn status(mut self, input: crate::types::ExecutionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the last column statistics task run.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ExecutionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the last column statistics task run.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ExecutionStatus> {
        &self.status
    }
    /// <p>A task run ID for the last column statistics task run.</p>
    pub fn column_statistics_task_run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.column_statistics_task_run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A task run ID for the last column statistics task run.</p>
    pub fn set_column_statistics_task_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.column_statistics_task_run_id = input;
        self
    }
    /// <p>A task run ID for the last column statistics task run.</p>
    pub fn get_column_statistics_task_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.column_statistics_task_run_id
    }
    /// <p>A timestamp when the last column statistics task run occurred.</p>
    pub fn execution_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.execution_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>A timestamp when the last column statistics task run occurred.</p>
    pub fn set_execution_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.execution_timestamp = input;
        self
    }
    /// <p>A timestamp when the last column statistics task run occurred.</p>
    pub fn get_execution_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.execution_timestamp
    }
    /// <p>An error message associated with the last column statistics task run.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An error message associated with the last column statistics task run.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>An error message associated with the last column statistics task run.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// Consumes the builder and constructs a [`ExecutionAttempt`](crate::types::ExecutionAttempt).
    pub fn build(self) -> crate::types::ExecutionAttempt {
        crate::types::ExecutionAttempt {
            status: self.status,
            column_statistics_task_run_id: self.column_statistics_task_run_id,
            execution_timestamp: self.execution_timestamp,
            error_message: self.error_message,
        }
    }
}
