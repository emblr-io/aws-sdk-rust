// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A run identifier.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RunIdentifier {
    /// <p>The Run ID.</p>
    pub run_id: ::std::option::Option<::std::string::String>,
    /// <p>The Job Run ID.</p>
    pub job_run_id: ::std::option::Option<::std::string::String>,
}
impl RunIdentifier {
    /// <p>The Run ID.</p>
    pub fn run_id(&self) -> ::std::option::Option<&str> {
        self.run_id.as_deref()
    }
    /// <p>The Job Run ID.</p>
    pub fn job_run_id(&self) -> ::std::option::Option<&str> {
        self.job_run_id.as_deref()
    }
}
impl RunIdentifier {
    /// Creates a new builder-style object to manufacture [`RunIdentifier`](crate::types::RunIdentifier).
    pub fn builder() -> crate::types::builders::RunIdentifierBuilder {
        crate::types::builders::RunIdentifierBuilder::default()
    }
}

/// A builder for [`RunIdentifier`](crate::types::RunIdentifier).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RunIdentifierBuilder {
    pub(crate) run_id: ::std::option::Option<::std::string::String>,
    pub(crate) job_run_id: ::std::option::Option<::std::string::String>,
}
impl RunIdentifierBuilder {
    /// <p>The Run ID.</p>
    pub fn run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Run ID.</p>
    pub fn set_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.run_id = input;
        self
    }
    /// <p>The Run ID.</p>
    pub fn get_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.run_id
    }
    /// <p>The Job Run ID.</p>
    pub fn job_run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Job Run ID.</p>
    pub fn set_job_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_run_id = input;
        self
    }
    /// <p>The Job Run ID.</p>
    pub fn get_job_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_run_id
    }
    /// Consumes the builder and constructs a [`RunIdentifier`](crate::types::RunIdentifier).
    pub fn build(self) -> crate::types::RunIdentifier {
        crate::types::RunIdentifier {
            run_id: self.run_id,
            job_run_id: self.job_run_id,
        }
    }
}
