// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetUsageProfileOutput {
    /// <p>The name of the usage profile.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>A description of the usage profile.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A <code>ProfileConfiguration</code> object specifying the job and session values for the profile.</p>
    pub configuration: ::std::option::Option<crate::types::ProfileConfiguration>,
    /// <p>The date and time when the usage profile was created.</p>
    pub created_on: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time when the usage profile was last modified.</p>
    pub last_modified_on: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetUsageProfileOutput {
    /// <p>The name of the usage profile.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the usage profile.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A <code>ProfileConfiguration</code> object specifying the job and session values for the profile.</p>
    pub fn configuration(&self) -> ::std::option::Option<&crate::types::ProfileConfiguration> {
        self.configuration.as_ref()
    }
    /// <p>The date and time when the usage profile was created.</p>
    pub fn created_on(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_on.as_ref()
    }
    /// <p>The date and time when the usage profile was last modified.</p>
    pub fn last_modified_on(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_on.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetUsageProfileOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetUsageProfileOutput {
    /// Creates a new builder-style object to manufacture [`GetUsageProfileOutput`](crate::operation::get_usage_profile::GetUsageProfileOutput).
    pub fn builder() -> crate::operation::get_usage_profile::builders::GetUsageProfileOutputBuilder {
        crate::operation::get_usage_profile::builders::GetUsageProfileOutputBuilder::default()
    }
}

/// A builder for [`GetUsageProfileOutput`](crate::operation::get_usage_profile::GetUsageProfileOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetUsageProfileOutputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) configuration: ::std::option::Option<crate::types::ProfileConfiguration>,
    pub(crate) created_on: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_on: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetUsageProfileOutputBuilder {
    /// <p>The name of the usage profile.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the usage profile.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the usage profile.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A description of the usage profile.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the usage profile.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the usage profile.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A <code>ProfileConfiguration</code> object specifying the job and session values for the profile.</p>
    pub fn configuration(mut self, input: crate::types::ProfileConfiguration) -> Self {
        self.configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code>ProfileConfiguration</code> object specifying the job and session values for the profile.</p>
    pub fn set_configuration(mut self, input: ::std::option::Option<crate::types::ProfileConfiguration>) -> Self {
        self.configuration = input;
        self
    }
    /// <p>A <code>ProfileConfiguration</code> object specifying the job and session values for the profile.</p>
    pub fn get_configuration(&self) -> &::std::option::Option<crate::types::ProfileConfiguration> {
        &self.configuration
    }
    /// <p>The date and time when the usage profile was created.</p>
    pub fn created_on(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_on = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the usage profile was created.</p>
    pub fn set_created_on(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_on = input;
        self
    }
    /// <p>The date and time when the usage profile was created.</p>
    pub fn get_created_on(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_on
    }
    /// <p>The date and time when the usage profile was last modified.</p>
    pub fn last_modified_on(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_on = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the usage profile was last modified.</p>
    pub fn set_last_modified_on(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_on = input;
        self
    }
    /// <p>The date and time when the usage profile was last modified.</p>
    pub fn get_last_modified_on(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_on
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetUsageProfileOutput`](crate::operation::get_usage_profile::GetUsageProfileOutput).
    pub fn build(self) -> crate::operation::get_usage_profile::GetUsageProfileOutput {
        crate::operation::get_usage_profile::GetUsageProfileOutput {
            name: self.name,
            description: self.description,
            configuration: self.configuration,
            created_on: self.created_on,
            last_modified_on: self.last_modified_on,
            _request_id: self._request_id,
        }
    }
}
