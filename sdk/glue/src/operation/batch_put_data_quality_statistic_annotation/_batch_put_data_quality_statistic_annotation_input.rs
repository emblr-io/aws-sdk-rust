// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchPutDataQualityStatisticAnnotationInput {
    /// <p>A list of <code>DatapointInclusionAnnotation</code>'s.</p>
    pub inclusion_annotations: ::std::option::Option<::std::vec::Vec<crate::types::DatapointInclusionAnnotation>>,
    /// <p>Client Token.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl BatchPutDataQualityStatisticAnnotationInput {
    /// <p>A list of <code>DatapointInclusionAnnotation</code>'s.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.inclusion_annotations.is_none()`.
    pub fn inclusion_annotations(&self) -> &[crate::types::DatapointInclusionAnnotation] {
        self.inclusion_annotations.as_deref().unwrap_or_default()
    }
    /// <p>Client Token.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl BatchPutDataQualityStatisticAnnotationInput {
    /// Creates a new builder-style object to manufacture [`BatchPutDataQualityStatisticAnnotationInput`](crate::operation::batch_put_data_quality_statistic_annotation::BatchPutDataQualityStatisticAnnotationInput).
    pub fn builder() -> crate::operation::batch_put_data_quality_statistic_annotation::builders::BatchPutDataQualityStatisticAnnotationInputBuilder {
        crate::operation::batch_put_data_quality_statistic_annotation::builders::BatchPutDataQualityStatisticAnnotationInputBuilder::default()
    }
}

/// A builder for [`BatchPutDataQualityStatisticAnnotationInput`](crate::operation::batch_put_data_quality_statistic_annotation::BatchPutDataQualityStatisticAnnotationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchPutDataQualityStatisticAnnotationInputBuilder {
    pub(crate) inclusion_annotations: ::std::option::Option<::std::vec::Vec<crate::types::DatapointInclusionAnnotation>>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl BatchPutDataQualityStatisticAnnotationInputBuilder {
    /// Appends an item to `inclusion_annotations`.
    ///
    /// To override the contents of this collection use [`set_inclusion_annotations`](Self::set_inclusion_annotations).
    ///
    /// <p>A list of <code>DatapointInclusionAnnotation</code>'s.</p>
    pub fn inclusion_annotations(mut self, input: crate::types::DatapointInclusionAnnotation) -> Self {
        let mut v = self.inclusion_annotations.unwrap_or_default();
        v.push(input);
        self.inclusion_annotations = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>DatapointInclusionAnnotation</code>'s.</p>
    pub fn set_inclusion_annotations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DatapointInclusionAnnotation>>) -> Self {
        self.inclusion_annotations = input;
        self
    }
    /// <p>A list of <code>DatapointInclusionAnnotation</code>'s.</p>
    pub fn get_inclusion_annotations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DatapointInclusionAnnotation>> {
        &self.inclusion_annotations
    }
    /// <p>Client Token.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Client Token.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Client Token.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`BatchPutDataQualityStatisticAnnotationInput`](crate::operation::batch_put_data_quality_statistic_annotation::BatchPutDataQualityStatisticAnnotationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_put_data_quality_statistic_annotation::BatchPutDataQualityStatisticAnnotationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::batch_put_data_quality_statistic_annotation::BatchPutDataQualityStatisticAnnotationInput {
                inclusion_annotations: self.inclusion_annotations,
                client_token: self.client_token,
            },
        )
    }
}
