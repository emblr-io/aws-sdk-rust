// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchUpdateAutomatedDiscoveryAccountsOutput {
    /// <p>An array of objects, one for each account whose status wasn’t changed. Each object identifies the account and explains why the status of automated sensitive data discovery wasn’t changed for the account. This value is null if the request succeeded for all specified accounts.</p>
    pub errors: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedDiscoveryAccountUpdateError>>,
    _request_id: Option<String>,
}
impl BatchUpdateAutomatedDiscoveryAccountsOutput {
    /// <p>An array of objects, one for each account whose status wasn’t changed. Each object identifies the account and explains why the status of automated sensitive data discovery wasn’t changed for the account. This value is null if the request succeeded for all specified accounts.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.errors.is_none()`.
    pub fn errors(&self) -> &[crate::types::AutomatedDiscoveryAccountUpdateError] {
        self.errors.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for BatchUpdateAutomatedDiscoveryAccountsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchUpdateAutomatedDiscoveryAccountsOutput {
    /// Creates a new builder-style object to manufacture [`BatchUpdateAutomatedDiscoveryAccountsOutput`](crate::operation::batch_update_automated_discovery_accounts::BatchUpdateAutomatedDiscoveryAccountsOutput).
    pub fn builder() -> crate::operation::batch_update_automated_discovery_accounts::builders::BatchUpdateAutomatedDiscoveryAccountsOutputBuilder {
        crate::operation::batch_update_automated_discovery_accounts::builders::BatchUpdateAutomatedDiscoveryAccountsOutputBuilder::default()
    }
}

/// A builder for [`BatchUpdateAutomatedDiscoveryAccountsOutput`](crate::operation::batch_update_automated_discovery_accounts::BatchUpdateAutomatedDiscoveryAccountsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchUpdateAutomatedDiscoveryAccountsOutputBuilder {
    pub(crate) errors: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedDiscoveryAccountUpdateError>>,
    _request_id: Option<String>,
}
impl BatchUpdateAutomatedDiscoveryAccountsOutputBuilder {
    /// Appends an item to `errors`.
    ///
    /// To override the contents of this collection use [`set_errors`](Self::set_errors).
    ///
    /// <p>An array of objects, one for each account whose status wasn’t changed. Each object identifies the account and explains why the status of automated sensitive data discovery wasn’t changed for the account. This value is null if the request succeeded for all specified accounts.</p>
    pub fn errors(mut self, input: crate::types::AutomatedDiscoveryAccountUpdateError) -> Self {
        let mut v = self.errors.unwrap_or_default();
        v.push(input);
        self.errors = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of objects, one for each account whose status wasn’t changed. Each object identifies the account and explains why the status of automated sensitive data discovery wasn’t changed for the account. This value is null if the request succeeded for all specified accounts.</p>
    pub fn set_errors(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedDiscoveryAccountUpdateError>>) -> Self {
        self.errors = input;
        self
    }
    /// <p>An array of objects, one for each account whose status wasn’t changed. Each object identifies the account and explains why the status of automated sensitive data discovery wasn’t changed for the account. This value is null if the request succeeded for all specified accounts.</p>
    pub fn get_errors(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutomatedDiscoveryAccountUpdateError>> {
        &self.errors
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchUpdateAutomatedDiscoveryAccountsOutput`](crate::operation::batch_update_automated_discovery_accounts::BatchUpdateAutomatedDiscoveryAccountsOutput).
    pub fn build(self) -> crate::operation::batch_update_automated_discovery_accounts::BatchUpdateAutomatedDiscoveryAccountsOutput {
        crate::operation::batch_update_automated_discovery_accounts::BatchUpdateAutomatedDiscoveryAccountsOutput {
            errors: self.errors,
            _request_id: self._request_id,
        }
    }
}
