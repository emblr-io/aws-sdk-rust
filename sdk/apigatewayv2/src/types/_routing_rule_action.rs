// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The routing rule action.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RoutingRuleAction {
    /// <p>Represents an InvokeApi action.</p>
    pub invoke_api: ::std::option::Option<crate::types::RoutingRuleActionInvokeApi>,
}
impl RoutingRuleAction {
    /// <p>Represents an InvokeApi action.</p>
    pub fn invoke_api(&self) -> ::std::option::Option<&crate::types::RoutingRuleActionInvokeApi> {
        self.invoke_api.as_ref()
    }
}
impl RoutingRuleAction {
    /// Creates a new builder-style object to manufacture [`RoutingRuleAction`](crate::types::RoutingRuleAction).
    pub fn builder() -> crate::types::builders::RoutingRuleActionBuilder {
        crate::types::builders::RoutingRuleActionBuilder::default()
    }
}

/// A builder for [`RoutingRuleAction`](crate::types::RoutingRuleAction).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RoutingRuleActionBuilder {
    pub(crate) invoke_api: ::std::option::Option<crate::types::RoutingRuleActionInvokeApi>,
}
impl RoutingRuleActionBuilder {
    /// <p>Represents an InvokeApi action.</p>
    /// This field is required.
    pub fn invoke_api(mut self, input: crate::types::RoutingRuleActionInvokeApi) -> Self {
        self.invoke_api = ::std::option::Option::Some(input);
        self
    }
    /// <p>Represents an InvokeApi action.</p>
    pub fn set_invoke_api(mut self, input: ::std::option::Option<crate::types::RoutingRuleActionInvokeApi>) -> Self {
        self.invoke_api = input;
        self
    }
    /// <p>Represents an InvokeApi action.</p>
    pub fn get_invoke_api(&self) -> &::std::option::Option<crate::types::RoutingRuleActionInvokeApi> {
        &self.invoke_api
    }
    /// Consumes the builder and constructs a [`RoutingRuleAction`](crate::types::RoutingRuleAction).
    pub fn build(self) -> crate::types::RoutingRuleAction {
        crate::types::RoutingRuleAction { invoke_api: self.invoke_api }
    }
}
