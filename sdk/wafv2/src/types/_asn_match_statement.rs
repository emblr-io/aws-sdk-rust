// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A rule statement that inspects web traffic based on the Autonomous System Number (ASN) associated with the request's IP address.</p>
/// <p>For additional details, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-asn-match.html">ASN match rule statement</a> in the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">WAF Developer Guide</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AsnMatchStatement {
    /// <p>Contains one or more Autonomous System Numbers (ASNs). ASNs are unique identifiers assigned to large internet networks managed by organizations such as internet service providers, enterprises, universities, or government agencies.</p>
    pub asn_list: ::std::vec::Vec<i64>,
    /// <p>The configuration for inspecting IP addresses to match against an ASN in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.</p>
    pub forwarded_ip_config: ::std::option::Option<crate::types::ForwardedIpConfig>,
}
impl AsnMatchStatement {
    /// <p>Contains one or more Autonomous System Numbers (ASNs). ASNs are unique identifiers assigned to large internet networks managed by organizations such as internet service providers, enterprises, universities, or government agencies.</p>
    pub fn asn_list(&self) -> &[i64] {
        use std::ops::Deref;
        self.asn_list.deref()
    }
    /// <p>The configuration for inspecting IP addresses to match against an ASN in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.</p>
    pub fn forwarded_ip_config(&self) -> ::std::option::Option<&crate::types::ForwardedIpConfig> {
        self.forwarded_ip_config.as_ref()
    }
}
impl AsnMatchStatement {
    /// Creates a new builder-style object to manufacture [`AsnMatchStatement`](crate::types::AsnMatchStatement).
    pub fn builder() -> crate::types::builders::AsnMatchStatementBuilder {
        crate::types::builders::AsnMatchStatementBuilder::default()
    }
}

/// A builder for [`AsnMatchStatement`](crate::types::AsnMatchStatement).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AsnMatchStatementBuilder {
    pub(crate) asn_list: ::std::option::Option<::std::vec::Vec<i64>>,
    pub(crate) forwarded_ip_config: ::std::option::Option<crate::types::ForwardedIpConfig>,
}
impl AsnMatchStatementBuilder {
    /// Appends an item to `asn_list`.
    ///
    /// To override the contents of this collection use [`set_asn_list`](Self::set_asn_list).
    ///
    /// <p>Contains one or more Autonomous System Numbers (ASNs). ASNs are unique identifiers assigned to large internet networks managed by organizations such as internet service providers, enterprises, universities, or government agencies.</p>
    pub fn asn_list(mut self, input: i64) -> Self {
        let mut v = self.asn_list.unwrap_or_default();
        v.push(input);
        self.asn_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>Contains one or more Autonomous System Numbers (ASNs). ASNs are unique identifiers assigned to large internet networks managed by organizations such as internet service providers, enterprises, universities, or government agencies.</p>
    pub fn set_asn_list(mut self, input: ::std::option::Option<::std::vec::Vec<i64>>) -> Self {
        self.asn_list = input;
        self
    }
    /// <p>Contains one or more Autonomous System Numbers (ASNs). ASNs are unique identifiers assigned to large internet networks managed by organizations such as internet service providers, enterprises, universities, or government agencies.</p>
    pub fn get_asn_list(&self) -> &::std::option::Option<::std::vec::Vec<i64>> {
        &self.asn_list
    }
    /// <p>The configuration for inspecting IP addresses to match against an ASN in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.</p>
    pub fn forwarded_ip_config(mut self, input: crate::types::ForwardedIpConfig) -> Self {
        self.forwarded_ip_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for inspecting IP addresses to match against an ASN in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.</p>
    pub fn set_forwarded_ip_config(mut self, input: ::std::option::Option<crate::types::ForwardedIpConfig>) -> Self {
        self.forwarded_ip_config = input;
        self
    }
    /// <p>The configuration for inspecting IP addresses to match against an ASN in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name.</p>
    pub fn get_forwarded_ip_config(&self) -> &::std::option::Option<crate::types::ForwardedIpConfig> {
        &self.forwarded_ip_config
    }
    /// Consumes the builder and constructs a [`AsnMatchStatement`](crate::types::AsnMatchStatement).
    /// This method will fail if any of the following fields are not set:
    /// - [`asn_list`](crate::types::builders::AsnMatchStatementBuilder::asn_list)
    pub fn build(self) -> ::std::result::Result<crate::types::AsnMatchStatement, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AsnMatchStatement {
            asn_list: self.asn_list.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "asn_list",
                    "asn_list was not specified but it is required when building AsnMatchStatement",
                )
            })?,
            forwarded_ip_config: self.forwarded_ip_config,
        })
    }
}
