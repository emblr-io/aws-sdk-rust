// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the protection behavior for a field type. This is part of the data protection configuration for a web ACL.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataProtection {
    /// <p>Specifies the field type and optional keys to apply the protection behavior to.</p>
    pub field: ::std::option::Option<crate::types::FieldToProtect>,
    /// <p>Specifies how to protect the field. WAF can apply a one-way hash to the field or hard code a string substitution.</p>
    /// <ul>
    /// <li>
    /// <p>One-way hash example: <code>ade099751dEXAMPLEHASH2ea9f3393f80dd5d3bEXAMPLEHASH966ae0d3cd5a1e</code></p></li>
    /// <li>
    /// <p>Substitution example: <code>REDACTED</code></p></li>
    /// </ul>
    pub action: crate::types::DataProtectionAction,
    /// <p>Specifies whether to also exclude any rule match details from the data protection you have enabled for a given field. WAF logs these details for non-terminating matching rules and for the terminating matching rule. For additional information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub exclude_rule_match_details: bool,
    /// <p>Specifies whether to also exclude any rate-based rule details from the data protection you have enabled for a given field. If you specify this exception, RateBasedDetails will show the value of the field. For additional information, see the log field <code>rateBasedRuleList</code> at <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub exclude_rate_based_details: bool,
}
impl DataProtection {
    /// <p>Specifies the field type and optional keys to apply the protection behavior to.</p>
    pub fn field(&self) -> ::std::option::Option<&crate::types::FieldToProtect> {
        self.field.as_ref()
    }
    /// <p>Specifies how to protect the field. WAF can apply a one-way hash to the field or hard code a string substitution.</p>
    /// <ul>
    /// <li>
    /// <p>One-way hash example: <code>ade099751dEXAMPLEHASH2ea9f3393f80dd5d3bEXAMPLEHASH966ae0d3cd5a1e</code></p></li>
    /// <li>
    /// <p>Substitution example: <code>REDACTED</code></p></li>
    /// </ul>
    pub fn action(&self) -> &crate::types::DataProtectionAction {
        &self.action
    }
    /// <p>Specifies whether to also exclude any rule match details from the data protection you have enabled for a given field. WAF logs these details for non-terminating matching rules and for the terminating matching rule. For additional information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn exclude_rule_match_details(&self) -> bool {
        self.exclude_rule_match_details
    }
    /// <p>Specifies whether to also exclude any rate-based rule details from the data protection you have enabled for a given field. If you specify this exception, RateBasedDetails will show the value of the field. For additional information, see the log field <code>rateBasedRuleList</code> at <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn exclude_rate_based_details(&self) -> bool {
        self.exclude_rate_based_details
    }
}
impl DataProtection {
    /// Creates a new builder-style object to manufacture [`DataProtection`](crate::types::DataProtection).
    pub fn builder() -> crate::types::builders::DataProtectionBuilder {
        crate::types::builders::DataProtectionBuilder::default()
    }
}

/// A builder for [`DataProtection`](crate::types::DataProtection).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataProtectionBuilder {
    pub(crate) field: ::std::option::Option<crate::types::FieldToProtect>,
    pub(crate) action: ::std::option::Option<crate::types::DataProtectionAction>,
    pub(crate) exclude_rule_match_details: ::std::option::Option<bool>,
    pub(crate) exclude_rate_based_details: ::std::option::Option<bool>,
}
impl DataProtectionBuilder {
    /// <p>Specifies the field type and optional keys to apply the protection behavior to.</p>
    /// This field is required.
    pub fn field(mut self, input: crate::types::FieldToProtect) -> Self {
        self.field = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the field type and optional keys to apply the protection behavior to.</p>
    pub fn set_field(mut self, input: ::std::option::Option<crate::types::FieldToProtect>) -> Self {
        self.field = input;
        self
    }
    /// <p>Specifies the field type and optional keys to apply the protection behavior to.</p>
    pub fn get_field(&self) -> &::std::option::Option<crate::types::FieldToProtect> {
        &self.field
    }
    /// <p>Specifies how to protect the field. WAF can apply a one-way hash to the field or hard code a string substitution.</p>
    /// <ul>
    /// <li>
    /// <p>One-way hash example: <code>ade099751dEXAMPLEHASH2ea9f3393f80dd5d3bEXAMPLEHASH966ae0d3cd5a1e</code></p></li>
    /// <li>
    /// <p>Substitution example: <code>REDACTED</code></p></li>
    /// </ul>
    /// This field is required.
    pub fn action(mut self, input: crate::types::DataProtectionAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies how to protect the field. WAF can apply a one-way hash to the field or hard code a string substitution.</p>
    /// <ul>
    /// <li>
    /// <p>One-way hash example: <code>ade099751dEXAMPLEHASH2ea9f3393f80dd5d3bEXAMPLEHASH966ae0d3cd5a1e</code></p></li>
    /// <li>
    /// <p>Substitution example: <code>REDACTED</code></p></li>
    /// </ul>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::DataProtectionAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>Specifies how to protect the field. WAF can apply a one-way hash to the field or hard code a string substitution.</p>
    /// <ul>
    /// <li>
    /// <p>One-way hash example: <code>ade099751dEXAMPLEHASH2ea9f3393f80dd5d3bEXAMPLEHASH966ae0d3cd5a1e</code></p></li>
    /// <li>
    /// <p>Substitution example: <code>REDACTED</code></p></li>
    /// </ul>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::DataProtectionAction> {
        &self.action
    }
    /// <p>Specifies whether to also exclude any rule match details from the data protection you have enabled for a given field. WAF logs these details for non-terminating matching rules and for the terminating matching rule. For additional information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn exclude_rule_match_details(mut self, input: bool) -> Self {
        self.exclude_rule_match_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to also exclude any rule match details from the data protection you have enabled for a given field. WAF logs these details for non-terminating matching rules and for the terminating matching rule. For additional information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn set_exclude_rule_match_details(mut self, input: ::std::option::Option<bool>) -> Self {
        self.exclude_rule_match_details = input;
        self
    }
    /// <p>Specifies whether to also exclude any rule match details from the data protection you have enabled for a given field. WAF logs these details for non-terminating matching rules and for the terminating matching rule. For additional information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn get_exclude_rule_match_details(&self) -> &::std::option::Option<bool> {
        &self.exclude_rule_match_details
    }
    /// <p>Specifies whether to also exclude any rate-based rule details from the data protection you have enabled for a given field. If you specify this exception, RateBasedDetails will show the value of the field. For additional information, see the log field <code>rateBasedRuleList</code> at <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn exclude_rate_based_details(mut self, input: bool) -> Self {
        self.exclude_rate_based_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to also exclude any rate-based rule details from the data protection you have enabled for a given field. If you specify this exception, RateBasedDetails will show the value of the field. For additional information, see the log field <code>rateBasedRuleList</code> at <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn set_exclude_rate_based_details(mut self, input: ::std::option::Option<bool>) -> Self {
        self.exclude_rate_based_details = input;
        self
    }
    /// <p>Specifies whether to also exclude any rate-based rule details from the data protection you have enabled for a given field. If you specify this exception, RateBasedDetails will show the value of the field. For additional information, see the log field <code>rateBasedRuleList</code> at <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging-fields.html">Log fields for web ACL traffic</a> in the <i>WAF Developer Guide</i>.</p>
    /// <p>Default: <code>FALSE</code></p>
    pub fn get_exclude_rate_based_details(&self) -> &::std::option::Option<bool> {
        &self.exclude_rate_based_details
    }
    /// Consumes the builder and constructs a [`DataProtection`](crate::types::DataProtection).
    /// This method will fail if any of the following fields are not set:
    /// - [`action`](crate::types::builders::DataProtectionBuilder::action)
    pub fn build(self) -> ::std::result::Result<crate::types::DataProtection, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DataProtection {
            field: self.field,
            action: self.action.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action",
                    "action was not specified but it is required when building DataProtection",
                )
            })?,
            exclude_rule_match_details: self.exclude_rule_match_details.unwrap_or_default(),
            exclude_rate_based_details: self.exclude_rate_based_details.unwrap_or_default(),
        })
    }
}
