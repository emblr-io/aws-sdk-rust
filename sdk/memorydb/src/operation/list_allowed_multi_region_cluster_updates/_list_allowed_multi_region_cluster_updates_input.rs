// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAllowedMultiRegionClusterUpdatesInput {
    /// <p>The name of the multi-Region cluster.</p>
    pub multi_region_cluster_name: ::std::option::Option<::std::string::String>,
}
impl ListAllowedMultiRegionClusterUpdatesInput {
    /// <p>The name of the multi-Region cluster.</p>
    pub fn multi_region_cluster_name(&self) -> ::std::option::Option<&str> {
        self.multi_region_cluster_name.as_deref()
    }
}
impl ListAllowedMultiRegionClusterUpdatesInput {
    /// Creates a new builder-style object to manufacture [`ListAllowedMultiRegionClusterUpdatesInput`](crate::operation::list_allowed_multi_region_cluster_updates::ListAllowedMultiRegionClusterUpdatesInput).
    pub fn builder() -> crate::operation::list_allowed_multi_region_cluster_updates::builders::ListAllowedMultiRegionClusterUpdatesInputBuilder {
        crate::operation::list_allowed_multi_region_cluster_updates::builders::ListAllowedMultiRegionClusterUpdatesInputBuilder::default()
    }
}

/// A builder for [`ListAllowedMultiRegionClusterUpdatesInput`](crate::operation::list_allowed_multi_region_cluster_updates::ListAllowedMultiRegionClusterUpdatesInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListAllowedMultiRegionClusterUpdatesInputBuilder {
    pub(crate) multi_region_cluster_name: ::std::option::Option<::std::string::String>,
}
impl ListAllowedMultiRegionClusterUpdatesInputBuilder {
    /// <p>The name of the multi-Region cluster.</p>
    /// This field is required.
    pub fn multi_region_cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.multi_region_cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the multi-Region cluster.</p>
    pub fn set_multi_region_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.multi_region_cluster_name = input;
        self
    }
    /// <p>The name of the multi-Region cluster.</p>
    pub fn get_multi_region_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.multi_region_cluster_name
    }
    /// Consumes the builder and constructs a [`ListAllowedMultiRegionClusterUpdatesInput`](crate::operation::list_allowed_multi_region_cluster_updates::ListAllowedMultiRegionClusterUpdatesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_allowed_multi_region_cluster_updates::ListAllowedMultiRegionClusterUpdatesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_allowed_multi_region_cluster_updates::ListAllowedMultiRegionClusterUpdatesInput {
                multi_region_cluster_name: self.multi_region_cluster_name,
            },
        )
    }
}
