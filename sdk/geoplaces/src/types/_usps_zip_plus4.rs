// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The USPS zip+4 code.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UspsZipPlus4 {
    /// <p>The USPS ZIP+4 Record Type Code.</p>
    pub record_type_code: ::std::option::Option<crate::types::RecordTypeCode>,
}
impl UspsZipPlus4 {
    /// <p>The USPS ZIP+4 Record Type Code.</p>
    pub fn record_type_code(&self) -> ::std::option::Option<&crate::types::RecordTypeCode> {
        self.record_type_code.as_ref()
    }
}
impl ::std::fmt::Debug for UspsZipPlus4 {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UspsZipPlus4");
        formatter.field("record_type_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl UspsZipPlus4 {
    /// Creates a new builder-style object to manufacture [`UspsZipPlus4`](crate::types::UspsZipPlus4).
    pub fn builder() -> crate::types::builders::UspsZipPlus4Builder {
        crate::types::builders::UspsZipPlus4Builder::default()
    }
}

/// A builder for [`UspsZipPlus4`](crate::types::UspsZipPlus4).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UspsZipPlus4Builder {
    pub(crate) record_type_code: ::std::option::Option<crate::types::RecordTypeCode>,
}
impl UspsZipPlus4Builder {
    /// <p>The USPS ZIP+4 Record Type Code.</p>
    pub fn record_type_code(mut self, input: crate::types::RecordTypeCode) -> Self {
        self.record_type_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The USPS ZIP+4 Record Type Code.</p>
    pub fn set_record_type_code(mut self, input: ::std::option::Option<crate::types::RecordTypeCode>) -> Self {
        self.record_type_code = input;
        self
    }
    /// <p>The USPS ZIP+4 Record Type Code.</p>
    pub fn get_record_type_code(&self) -> &::std::option::Option<crate::types::RecordTypeCode> {
        &self.record_type_code
    }
    /// Consumes the builder and constructs a [`UspsZipPlus4`](crate::types::UspsZipPlus4).
    pub fn build(self) -> crate::types::UspsZipPlus4 {
        crate::types::UspsZipPlus4 {
            record_type_code: self.record_type_code,
        }
    }
}
impl ::std::fmt::Debug for UspsZipPlus4Builder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UspsZipPlus4Builder");
        formatter.field("record_type_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
