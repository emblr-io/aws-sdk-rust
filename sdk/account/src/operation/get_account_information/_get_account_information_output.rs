// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GetAccountInformationOutput {
    /// <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account. The specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin">delegated admin</a> account assigned.</p>
    /// <p>This operation can only be called from the management account or the delegated administrator account of an organization for a member account.</p><note>
    /// <p>The management account can't specify its own <code>AccountId</code>.</p>
    /// </note>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the account.</p>
    pub account_name: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the account was created.</p>
    pub account_created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetAccountInformationOutput {
    /// <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account. The specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin">delegated admin</a> account assigned.</p>
    /// <p>This operation can only be called from the management account or the delegated administrator account of an organization for a member account.</p><note>
    /// <p>The management account can't specify its own <code>AccountId</code>.</p>
    /// </note>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The name of the account.</p>
    pub fn account_name(&self) -> ::std::option::Option<&str> {
        self.account_name.as_deref()
    }
    /// <p>The date and time the account was created.</p>
    pub fn account_created_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.account_created_date.as_ref()
    }
}
impl ::std::fmt::Debug for GetAccountInformationOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetAccountInformationOutput");
        formatter.field("account_id", &self.account_id);
        formatter.field("account_name", &"*** Sensitive Data Redacted ***");
        formatter.field("account_created_date", &self.account_created_date);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_types::request_id::RequestId for GetAccountInformationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAccountInformationOutput {
    /// Creates a new builder-style object to manufacture [`GetAccountInformationOutput`](crate::operation::get_account_information::GetAccountInformationOutput).
    pub fn builder() -> crate::operation::get_account_information::builders::GetAccountInformationOutputBuilder {
        crate::operation::get_account_information::builders::GetAccountInformationOutputBuilder::default()
    }
}

/// A builder for [`GetAccountInformationOutput`](crate::operation::get_account_information::GetAccountInformationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GetAccountInformationOutputBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) account_name: ::std::option::Option<::std::string::String>,
    pub(crate) account_created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetAccountInformationOutputBuilder {
    /// <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account. The specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin">delegated admin</a> account assigned.</p>
    /// <p>This operation can only be called from the management account or the delegated administrator account of an organization for a member account.</p><note>
    /// <p>The management account can't specify its own <code>AccountId</code>.</p>
    /// </note>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account. The specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin">delegated admin</a> account assigned.</p>
    /// <p>This operation can only be called from the management account or the delegated administrator account of an organization for a member account.</p><note>
    /// <p>The management account can't specify its own <code>AccountId</code>.</p>
    /// </note>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account. The specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin">delegated admin</a> account assigned.</p>
    /// <p>This operation can only be called from the management account or the delegated administrator account of an organization for a member account.</p><note>
    /// <p>The management account can't specify its own <code>AccountId</code>.</p>
    /// </note>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>The name of the account.</p>
    pub fn account_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the account.</p>
    pub fn set_account_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_name = input;
        self
    }
    /// <p>The name of the account.</p>
    pub fn get_account_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_name
    }
    /// <p>The date and time the account was created.</p>
    pub fn account_created_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.account_created_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the account was created.</p>
    pub fn set_account_created_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.account_created_date = input;
        self
    }
    /// <p>The date and time the account was created.</p>
    pub fn get_account_created_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.account_created_date
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAccountInformationOutput`](crate::operation::get_account_information::GetAccountInformationOutput).
    pub fn build(self) -> crate::operation::get_account_information::GetAccountInformationOutput {
        crate::operation::get_account_information::GetAccountInformationOutput {
            account_id: self.account_id,
            account_name: self.account_name,
            account_created_date: self.account_created_date,
            _request_id: self._request_id,
        }
    }
}
impl ::std::fmt::Debug for GetAccountInformationOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetAccountInformationOutputBuilder");
        formatter.field("account_id", &self.account_id);
        formatter.field("account_name", &"*** Sensitive Data Redacted ***");
        formatter.field("account_created_date", &self.account_created_date);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
