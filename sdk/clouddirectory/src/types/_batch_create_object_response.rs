// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>CreateObject</code> response operation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchCreateObjectResponse {
    /// <p>The ID that is associated with the object.</p>
    pub object_identifier: ::std::option::Option<::std::string::String>,
}
impl BatchCreateObjectResponse {
    /// <p>The ID that is associated with the object.</p>
    pub fn object_identifier(&self) -> ::std::option::Option<&str> {
        self.object_identifier.as_deref()
    }
}
impl BatchCreateObjectResponse {
    /// Creates a new builder-style object to manufacture [`BatchCreateObjectResponse`](crate::types::BatchCreateObjectResponse).
    pub fn builder() -> crate::types::builders::BatchCreateObjectResponseBuilder {
        crate::types::builders::BatchCreateObjectResponseBuilder::default()
    }
}

/// A builder for [`BatchCreateObjectResponse`](crate::types::BatchCreateObjectResponse).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchCreateObjectResponseBuilder {
    pub(crate) object_identifier: ::std::option::Option<::std::string::String>,
}
impl BatchCreateObjectResponseBuilder {
    /// <p>The ID that is associated with the object.</p>
    pub fn object_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID that is associated with the object.</p>
    pub fn set_object_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_identifier = input;
        self
    }
    /// <p>The ID that is associated with the object.</p>
    pub fn get_object_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_identifier
    }
    /// Consumes the builder and constructs a [`BatchCreateObjectResponse`](crate::types::BatchCreateObjectResponse).
    pub fn build(self) -> crate::types::BatchCreateObjectResponse {
        crate::types::BatchCreateObjectResponse {
            object_identifier: self.object_identifier,
        }
    }
}
