// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the results of the execution preview.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomationExecutionPreview {
    /// <p>Information about the type of impact a runbook step would have on a resource.</p>
    /// <ul>
    /// <li>
    /// <p><code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p></li>
    /// <li>
    /// <p><code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p></li>
    /// <li>
    /// <p><code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p></li>
    /// </ul>
    pub step_previews: ::std::option::Option<::std::collections::HashMap<crate::types::ImpactType, i32>>,
    /// <p>Information about the Amazon Web Services Regions targeted by the execution preview.</p>
    pub regions: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>Information that provides a preview of what the impact of running the specified Automation runbook would be.</p>
    pub target_previews: ::std::option::Option<::std::vec::Vec<crate::types::TargetPreview>>,
    /// <p>Information about the Amazon Web Services accounts that were included in the execution preview.</p>
    pub total_accounts: i32,
}
impl AutomationExecutionPreview {
    /// <p>Information about the type of impact a runbook step would have on a resource.</p>
    /// <ul>
    /// <li>
    /// <p><code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p></li>
    /// <li>
    /// <p><code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p></li>
    /// <li>
    /// <p><code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p></li>
    /// </ul>
    pub fn step_previews(&self) -> ::std::option::Option<&::std::collections::HashMap<crate::types::ImpactType, i32>> {
        self.step_previews.as_ref()
    }
    /// <p>Information about the Amazon Web Services Regions targeted by the execution preview.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.regions.is_none()`.
    pub fn regions(&self) -> &[::std::string::String] {
        self.regions.as_deref().unwrap_or_default()
    }
    /// <p>Information that provides a preview of what the impact of running the specified Automation runbook would be.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.target_previews.is_none()`.
    pub fn target_previews(&self) -> &[crate::types::TargetPreview] {
        self.target_previews.as_deref().unwrap_or_default()
    }
    /// <p>Information about the Amazon Web Services accounts that were included in the execution preview.</p>
    pub fn total_accounts(&self) -> i32 {
        self.total_accounts
    }
}
impl AutomationExecutionPreview {
    /// Creates a new builder-style object to manufacture [`AutomationExecutionPreview`](crate::types::AutomationExecutionPreview).
    pub fn builder() -> crate::types::builders::AutomationExecutionPreviewBuilder {
        crate::types::builders::AutomationExecutionPreviewBuilder::default()
    }
}

/// A builder for [`AutomationExecutionPreview`](crate::types::AutomationExecutionPreview).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomationExecutionPreviewBuilder {
    pub(crate) step_previews: ::std::option::Option<::std::collections::HashMap<crate::types::ImpactType, i32>>,
    pub(crate) regions: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) target_previews: ::std::option::Option<::std::vec::Vec<crate::types::TargetPreview>>,
    pub(crate) total_accounts: ::std::option::Option<i32>,
}
impl AutomationExecutionPreviewBuilder {
    /// Adds a key-value pair to `step_previews`.
    ///
    /// To override the contents of this collection use [`set_step_previews`](Self::set_step_previews).
    ///
    /// <p>Information about the type of impact a runbook step would have on a resource.</p>
    /// <ul>
    /// <li>
    /// <p><code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p></li>
    /// <li>
    /// <p><code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p></li>
    /// <li>
    /// <p><code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p></li>
    /// </ul>
    pub fn step_previews(mut self, k: crate::types::ImpactType, v: i32) -> Self {
        let mut hash_map = self.step_previews.unwrap_or_default();
        hash_map.insert(k, v);
        self.step_previews = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>Information about the type of impact a runbook step would have on a resource.</p>
    /// <ul>
    /// <li>
    /// <p><code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p></li>
    /// <li>
    /// <p><code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p></li>
    /// <li>
    /// <p><code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p></li>
    /// </ul>
    pub fn set_step_previews(mut self, input: ::std::option::Option<::std::collections::HashMap<crate::types::ImpactType, i32>>) -> Self {
        self.step_previews = input;
        self
    }
    /// <p>Information about the type of impact a runbook step would have on a resource.</p>
    /// <ul>
    /// <li>
    /// <p><code>Mutating</code>: The runbook step would make changes to the targets through actions that create, modify, or delete resources.</p></li>
    /// <li>
    /// <p><code>Non_Mutating</code>: The runbook step would retrieve data about resources but not make changes to them. This category generally includes <code>Describe*</code>, <code>List*</code>, <code>Get*</code>, and similar read-only API actions.</p></li>
    /// <li>
    /// <p><code>Undetermined</code>: An undetermined step invokes executions performed by another orchestration service like Lambda, Step Functions, or Amazon Web Services Systems Manager Run Command. An undetermined step might also call a third-party API. Systems Manager Automation doesn't know the outcome of the orchestration processes or third-party API executions, so the results of the steps are undetermined.</p></li>
    /// </ul>
    pub fn get_step_previews(&self) -> &::std::option::Option<::std::collections::HashMap<crate::types::ImpactType, i32>> {
        &self.step_previews
    }
    /// Appends an item to `regions`.
    ///
    /// To override the contents of this collection use [`set_regions`](Self::set_regions).
    ///
    /// <p>Information about the Amazon Web Services Regions targeted by the execution preview.</p>
    pub fn regions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.regions.unwrap_or_default();
        v.push(input.into());
        self.regions = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the Amazon Web Services Regions targeted by the execution preview.</p>
    pub fn set_regions(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.regions = input;
        self
    }
    /// <p>Information about the Amazon Web Services Regions targeted by the execution preview.</p>
    pub fn get_regions(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.regions
    }
    /// Appends an item to `target_previews`.
    ///
    /// To override the contents of this collection use [`set_target_previews`](Self::set_target_previews).
    ///
    /// <p>Information that provides a preview of what the impact of running the specified Automation runbook would be.</p>
    pub fn target_previews(mut self, input: crate::types::TargetPreview) -> Self {
        let mut v = self.target_previews.unwrap_or_default();
        v.push(input);
        self.target_previews = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information that provides a preview of what the impact of running the specified Automation runbook would be.</p>
    pub fn set_target_previews(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TargetPreview>>) -> Self {
        self.target_previews = input;
        self
    }
    /// <p>Information that provides a preview of what the impact of running the specified Automation runbook would be.</p>
    pub fn get_target_previews(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TargetPreview>> {
        &self.target_previews
    }
    /// <p>Information about the Amazon Web Services accounts that were included in the execution preview.</p>
    pub fn total_accounts(mut self, input: i32) -> Self {
        self.total_accounts = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the Amazon Web Services accounts that were included in the execution preview.</p>
    pub fn set_total_accounts(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_accounts = input;
        self
    }
    /// <p>Information about the Amazon Web Services accounts that were included in the execution preview.</p>
    pub fn get_total_accounts(&self) -> &::std::option::Option<i32> {
        &self.total_accounts
    }
    /// Consumes the builder and constructs a [`AutomationExecutionPreview`](crate::types::AutomationExecutionPreview).
    pub fn build(self) -> crate::types::AutomationExecutionPreview {
        crate::types::AutomationExecutionPreview {
            step_previews: self.step_previews,
            regions: self.regions,
            target_previews: self.target_previews,
            total_accounts: self.total_accounts.unwrap_or_default(),
        }
    }
}
