// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JoinStorageSessionAsViewerInput {
    /// <p>The Amazon Resource Name (ARN) of the signaling channel.</p>
    pub channel_arn: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier for the sender client.</p>
    pub client_id: ::std::option::Option<::std::string::String>,
}
impl JoinStorageSessionAsViewerInput {
    /// <p>The Amazon Resource Name (ARN) of the signaling channel.</p>
    pub fn channel_arn(&self) -> ::std::option::Option<&str> {
        self.channel_arn.as_deref()
    }
    /// <p>The unique identifier for the sender client.</p>
    pub fn client_id(&self) -> ::std::option::Option<&str> {
        self.client_id.as_deref()
    }
}
impl JoinStorageSessionAsViewerInput {
    /// Creates a new builder-style object to manufacture [`JoinStorageSessionAsViewerInput`](crate::operation::join_storage_session_as_viewer::JoinStorageSessionAsViewerInput).
    pub fn builder() -> crate::operation::join_storage_session_as_viewer::builders::JoinStorageSessionAsViewerInputBuilder {
        crate::operation::join_storage_session_as_viewer::builders::JoinStorageSessionAsViewerInputBuilder::default()
    }
}

/// A builder for [`JoinStorageSessionAsViewerInput`](crate::operation::join_storage_session_as_viewer::JoinStorageSessionAsViewerInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct JoinStorageSessionAsViewerInputBuilder {
    pub(crate) channel_arn: ::std::option::Option<::std::string::String>,
    pub(crate) client_id: ::std::option::Option<::std::string::String>,
}
impl JoinStorageSessionAsViewerInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the signaling channel.</p>
    /// This field is required.
    pub fn channel_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the signaling channel.</p>
    pub fn set_channel_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the signaling channel.</p>
    pub fn get_channel_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_arn
    }
    /// <p>The unique identifier for the sender client.</p>
    /// This field is required.
    pub fn client_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the sender client.</p>
    pub fn set_client_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The unique identifier for the sender client.</p>
    pub fn get_client_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_id
    }
    /// Consumes the builder and constructs a [`JoinStorageSessionAsViewerInput`](crate::operation::join_storage_session_as_viewer::JoinStorageSessionAsViewerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::join_storage_session_as_viewer::JoinStorageSessionAsViewerInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::join_storage_session_as_viewer::JoinStorageSessionAsViewerInput {
            channel_arn: self.channel_arn,
            client_id: self.client_id,
        })
    }
}
