// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of Amazon DocumentDB elastic clusters.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterInList {
    /// <p>The name of the elastic cluster.</p>
    pub cluster_name: ::std::string::String,
    /// <p>The ARN identifier of the elastic cluster.</p>
    pub cluster_arn: ::std::string::String,
    /// <p>The status of the elastic cluster.</p>
    pub status: crate::types::Status,
}
impl ClusterInList {
    /// <p>The name of the elastic cluster.</p>
    pub fn cluster_name(&self) -> &str {
        use std::ops::Deref;
        self.cluster_name.deref()
    }
    /// <p>The ARN identifier of the elastic cluster.</p>
    pub fn cluster_arn(&self) -> &str {
        use std::ops::Deref;
        self.cluster_arn.deref()
    }
    /// <p>The status of the elastic cluster.</p>
    pub fn status(&self) -> &crate::types::Status {
        &self.status
    }
}
impl ClusterInList {
    /// Creates a new builder-style object to manufacture [`ClusterInList`](crate::types::ClusterInList).
    pub fn builder() -> crate::types::builders::ClusterInListBuilder {
        crate::types::builders::ClusterInListBuilder::default()
    }
}

/// A builder for [`ClusterInList`](crate::types::ClusterInList).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClusterInListBuilder {
    pub(crate) cluster_name: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::Status>,
}
impl ClusterInListBuilder {
    /// <p>The name of the elastic cluster.</p>
    /// This field is required.
    pub fn cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the elastic cluster.</p>
    pub fn set_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the elastic cluster.</p>
    pub fn get_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_name
    }
    /// <p>The ARN identifier of the elastic cluster.</p>
    /// This field is required.
    pub fn cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN identifier of the elastic cluster.</p>
    pub fn set_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>The ARN identifier of the elastic cluster.</p>
    pub fn get_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_arn
    }
    /// <p>The status of the elastic cluster.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::Status) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the elastic cluster.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::Status>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the elastic cluster.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::Status> {
        &self.status
    }
    /// Consumes the builder and constructs a [`ClusterInList`](crate::types::ClusterInList).
    /// This method will fail if any of the following fields are not set:
    /// - [`cluster_name`](crate::types::builders::ClusterInListBuilder::cluster_name)
    /// - [`cluster_arn`](crate::types::builders::ClusterInListBuilder::cluster_arn)
    /// - [`status`](crate::types::builders::ClusterInListBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::ClusterInList, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ClusterInList {
            cluster_name: self.cluster_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cluster_name",
                    "cluster_name was not specified but it is required when building ClusterInList",
                )
            })?,
            cluster_arn: self.cluster_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cluster_arn",
                    "cluster_arn was not specified but it is required when building ClusterInList",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building ClusterInList",
                )
            })?,
        })
    }
}
