// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MskSourceConfiguration {
    /// <p>The ARN of the Amazon MSK cluster.</p>
    pub msk_cluster_arn: ::std::string::String,
    /// <p>The topic name within the Amazon MSK cluster.</p>
    pub topic_name: ::std::string::String,
    /// <p>The authentication configuration of the Amazon MSK cluster.</p>
    pub authentication_configuration: ::std::option::Option<crate::types::AuthenticationConfiguration>,
    /// <p>The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active.</p>
    /// <p>If you want to create a Firehose stream with Earliest start position from SDK or CLI, you need to set the <code>ReadFromTimestamp</code> parameter to Epoch (1970-01-01T00:00:00Z).</p>
    pub read_from_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MskSourceConfiguration {
    /// <p>The ARN of the Amazon MSK cluster.</p>
    pub fn msk_cluster_arn(&self) -> &str {
        use std::ops::Deref;
        self.msk_cluster_arn.deref()
    }
    /// <p>The topic name within the Amazon MSK cluster.</p>
    pub fn topic_name(&self) -> &str {
        use std::ops::Deref;
        self.topic_name.deref()
    }
    /// <p>The authentication configuration of the Amazon MSK cluster.</p>
    pub fn authentication_configuration(&self) -> ::std::option::Option<&crate::types::AuthenticationConfiguration> {
        self.authentication_configuration.as_ref()
    }
    /// <p>The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active.</p>
    /// <p>If you want to create a Firehose stream with Earliest start position from SDK or CLI, you need to set the <code>ReadFromTimestamp</code> parameter to Epoch (1970-01-01T00:00:00Z).</p>
    pub fn read_from_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.read_from_timestamp.as_ref()
    }
}
impl MskSourceConfiguration {
    /// Creates a new builder-style object to manufacture [`MskSourceConfiguration`](crate::types::MskSourceConfiguration).
    pub fn builder() -> crate::types::builders::MskSourceConfigurationBuilder {
        crate::types::builders::MskSourceConfigurationBuilder::default()
    }
}

/// A builder for [`MskSourceConfiguration`](crate::types::MskSourceConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MskSourceConfigurationBuilder {
    pub(crate) msk_cluster_arn: ::std::option::Option<::std::string::String>,
    pub(crate) topic_name: ::std::option::Option<::std::string::String>,
    pub(crate) authentication_configuration: ::std::option::Option<crate::types::AuthenticationConfiguration>,
    pub(crate) read_from_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MskSourceConfigurationBuilder {
    /// <p>The ARN of the Amazon MSK cluster.</p>
    /// This field is required.
    pub fn msk_cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.msk_cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the Amazon MSK cluster.</p>
    pub fn set_msk_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.msk_cluster_arn = input;
        self
    }
    /// <p>The ARN of the Amazon MSK cluster.</p>
    pub fn get_msk_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.msk_cluster_arn
    }
    /// <p>The topic name within the Amazon MSK cluster.</p>
    /// This field is required.
    pub fn topic_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.topic_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The topic name within the Amazon MSK cluster.</p>
    pub fn set_topic_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.topic_name = input;
        self
    }
    /// <p>The topic name within the Amazon MSK cluster.</p>
    pub fn get_topic_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.topic_name
    }
    /// <p>The authentication configuration of the Amazon MSK cluster.</p>
    /// This field is required.
    pub fn authentication_configuration(mut self, input: crate::types::AuthenticationConfiguration) -> Self {
        self.authentication_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The authentication configuration of the Amazon MSK cluster.</p>
    pub fn set_authentication_configuration(mut self, input: ::std::option::Option<crate::types::AuthenticationConfiguration>) -> Self {
        self.authentication_configuration = input;
        self
    }
    /// <p>The authentication configuration of the Amazon MSK cluster.</p>
    pub fn get_authentication_configuration(&self) -> &::std::option::Option<crate::types::AuthenticationConfiguration> {
        &self.authentication_configuration
    }
    /// <p>The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active.</p>
    /// <p>If you want to create a Firehose stream with Earliest start position from SDK or CLI, you need to set the <code>ReadFromTimestamp</code> parameter to Epoch (1970-01-01T00:00:00Z).</p>
    pub fn read_from_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.read_from_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active.</p>
    /// <p>If you want to create a Firehose stream with Earliest start position from SDK or CLI, you need to set the <code>ReadFromTimestamp</code> parameter to Epoch (1970-01-01T00:00:00Z).</p>
    pub fn set_read_from_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.read_from_timestamp = input;
        self
    }
    /// <p>The start date and time in UTC for the offset position within your MSK topic from where Firehose begins to read. By default, this is set to timestamp when Firehose becomes Active.</p>
    /// <p>If you want to create a Firehose stream with Earliest start position from SDK or CLI, you need to set the <code>ReadFromTimestamp</code> parameter to Epoch (1970-01-01T00:00:00Z).</p>
    pub fn get_read_from_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.read_from_timestamp
    }
    /// Consumes the builder and constructs a [`MskSourceConfiguration`](crate::types::MskSourceConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`msk_cluster_arn`](crate::types::builders::MskSourceConfigurationBuilder::msk_cluster_arn)
    /// - [`topic_name`](crate::types::builders::MskSourceConfigurationBuilder::topic_name)
    pub fn build(self) -> ::std::result::Result<crate::types::MskSourceConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MskSourceConfiguration {
            msk_cluster_arn: self.msk_cluster_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "msk_cluster_arn",
                    "msk_cluster_arn was not specified but it is required when building MskSourceConfiguration",
                )
            })?,
            topic_name: self.topic_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "topic_name",
                    "topic_name was not specified but it is required when building MskSourceConfiguration",
                )
            })?,
            authentication_configuration: self.authentication_configuration,
            read_from_timestamp: self.read_from_timestamp,
        })
    }
}
