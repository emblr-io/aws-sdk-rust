// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a Kinesis data stream used as the source for a Firehose stream.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SourceDescription {
    /// <p>Details about Direct PUT used as the source for a Firehose stream.</p>
    pub direct_put_source_description: ::std::option::Option<crate::types::DirectPutSourceDescription>,
    /// <p>The <code>KinesisStreamSourceDescription</code> value for the source Kinesis data stream.</p>
    pub kinesis_stream_source_description: ::std::option::Option<crate::types::KinesisStreamSourceDescription>,
    /// <p>The configuration description for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
    pub msk_source_description: ::std::option::Option<crate::types::MskSourceDescription>,
    /// <p>Details about a database used as the source for a Firehose stream.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub database_source_description: ::std::option::Option<crate::types::DatabaseSourceDescription>,
}
impl SourceDescription {
    /// <p>Details about Direct PUT used as the source for a Firehose stream.</p>
    pub fn direct_put_source_description(&self) -> ::std::option::Option<&crate::types::DirectPutSourceDescription> {
        self.direct_put_source_description.as_ref()
    }
    /// <p>The <code>KinesisStreamSourceDescription</code> value for the source Kinesis data stream.</p>
    pub fn kinesis_stream_source_description(&self) -> ::std::option::Option<&crate::types::KinesisStreamSourceDescription> {
        self.kinesis_stream_source_description.as_ref()
    }
    /// <p>The configuration description for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
    pub fn msk_source_description(&self) -> ::std::option::Option<&crate::types::MskSourceDescription> {
        self.msk_source_description.as_ref()
    }
    /// <p>Details about a database used as the source for a Firehose stream.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn database_source_description(&self) -> ::std::option::Option<&crate::types::DatabaseSourceDescription> {
        self.database_source_description.as_ref()
    }
}
impl SourceDescription {
    /// Creates a new builder-style object to manufacture [`SourceDescription`](crate::types::SourceDescription).
    pub fn builder() -> crate::types::builders::SourceDescriptionBuilder {
        crate::types::builders::SourceDescriptionBuilder::default()
    }
}

/// A builder for [`SourceDescription`](crate::types::SourceDescription).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SourceDescriptionBuilder {
    pub(crate) direct_put_source_description: ::std::option::Option<crate::types::DirectPutSourceDescription>,
    pub(crate) kinesis_stream_source_description: ::std::option::Option<crate::types::KinesisStreamSourceDescription>,
    pub(crate) msk_source_description: ::std::option::Option<crate::types::MskSourceDescription>,
    pub(crate) database_source_description: ::std::option::Option<crate::types::DatabaseSourceDescription>,
}
impl SourceDescriptionBuilder {
    /// <p>Details about Direct PUT used as the source for a Firehose stream.</p>
    pub fn direct_put_source_description(mut self, input: crate::types::DirectPutSourceDescription) -> Self {
        self.direct_put_source_description = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about Direct PUT used as the source for a Firehose stream.</p>
    pub fn set_direct_put_source_description(mut self, input: ::std::option::Option<crate::types::DirectPutSourceDescription>) -> Self {
        self.direct_put_source_description = input;
        self
    }
    /// <p>Details about Direct PUT used as the source for a Firehose stream.</p>
    pub fn get_direct_put_source_description(&self) -> &::std::option::Option<crate::types::DirectPutSourceDescription> {
        &self.direct_put_source_description
    }
    /// <p>The <code>KinesisStreamSourceDescription</code> value for the source Kinesis data stream.</p>
    pub fn kinesis_stream_source_description(mut self, input: crate::types::KinesisStreamSourceDescription) -> Self {
        self.kinesis_stream_source_description = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>KinesisStreamSourceDescription</code> value for the source Kinesis data stream.</p>
    pub fn set_kinesis_stream_source_description(mut self, input: ::std::option::Option<crate::types::KinesisStreamSourceDescription>) -> Self {
        self.kinesis_stream_source_description = input;
        self
    }
    /// <p>The <code>KinesisStreamSourceDescription</code> value for the source Kinesis data stream.</p>
    pub fn get_kinesis_stream_source_description(&self) -> &::std::option::Option<crate::types::KinesisStreamSourceDescription> {
        &self.kinesis_stream_source_description
    }
    /// <p>The configuration description for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
    pub fn msk_source_description(mut self, input: crate::types::MskSourceDescription) -> Self {
        self.msk_source_description = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration description for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
    pub fn set_msk_source_description(mut self, input: ::std::option::Option<crate::types::MskSourceDescription>) -> Self {
        self.msk_source_description = input;
        self
    }
    /// <p>The configuration description for the Amazon MSK cluster to be used as the source for a delivery stream.</p>
    pub fn get_msk_source_description(&self) -> &::std::option::Option<crate::types::MskSourceDescription> {
        &self.msk_source_description
    }
    /// <p>Details about a database used as the source for a Firehose stream.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn database_source_description(mut self, input: crate::types::DatabaseSourceDescription) -> Self {
        self.database_source_description = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about a database used as the source for a Firehose stream.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn set_database_source_description(mut self, input: ::std::option::Option<crate::types::DatabaseSourceDescription>) -> Self {
        self.database_source_description = input;
        self
    }
    /// <p>Details about a database used as the source for a Firehose stream.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn get_database_source_description(&self) -> &::std::option::Option<crate::types::DatabaseSourceDescription> {
        &self.database_source_description
    }
    /// Consumes the builder and constructs a [`SourceDescription`](crate::types::SourceDescription).
    pub fn build(self) -> crate::types::SourceDescription {
        crate::types::SourceDescription {
            direct_put_source_description: self.direct_put_source_description,
            kinesis_stream_source_description: self.kinesis_stream_source_description,
            msk_source_description: self.msk_source_description,
            database_source_description: self.database_source_description,
        }
    }
}
