// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure that configures parameters such as <code>ThroughputHintInMBs</code> for a stream configured with Direct PUT as a source.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DirectPutSourceDescription {
    /// <p>The value that you configure for this parameter is for information purpose only and does not affect Firehose delivery throughput limit. You can use the <a href="https://support.console.aws.amazon.com/support/home#/case/create%3FissueType=service-limit-increase%26limitType=kinesis-firehose-limits">Firehose Limits form</a> to request a throughput limit increase.</p>
    pub throughput_hint_in_mbs: ::std::option::Option<i32>,
}
impl DirectPutSourceDescription {
    /// <p>The value that you configure for this parameter is for information purpose only and does not affect Firehose delivery throughput limit. You can use the <a href="https://support.console.aws.amazon.com/support/home#/case/create%3FissueType=service-limit-increase%26limitType=kinesis-firehose-limits">Firehose Limits form</a> to request a throughput limit increase.</p>
    pub fn throughput_hint_in_mbs(&self) -> ::std::option::Option<i32> {
        self.throughput_hint_in_mbs
    }
}
impl DirectPutSourceDescription {
    /// Creates a new builder-style object to manufacture [`DirectPutSourceDescription`](crate::types::DirectPutSourceDescription).
    pub fn builder() -> crate::types::builders::DirectPutSourceDescriptionBuilder {
        crate::types::builders::DirectPutSourceDescriptionBuilder::default()
    }
}

/// A builder for [`DirectPutSourceDescription`](crate::types::DirectPutSourceDescription).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DirectPutSourceDescriptionBuilder {
    pub(crate) throughput_hint_in_mbs: ::std::option::Option<i32>,
}
impl DirectPutSourceDescriptionBuilder {
    /// <p>The value that you configure for this parameter is for information purpose only and does not affect Firehose delivery throughput limit. You can use the <a href="https://support.console.aws.amazon.com/support/home#/case/create%3FissueType=service-limit-increase%26limitType=kinesis-firehose-limits">Firehose Limits form</a> to request a throughput limit increase.</p>
    pub fn throughput_hint_in_mbs(mut self, input: i32) -> Self {
        self.throughput_hint_in_mbs = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value that you configure for this parameter is for information purpose only and does not affect Firehose delivery throughput limit. You can use the <a href="https://support.console.aws.amazon.com/support/home#/case/create%3FissueType=service-limit-increase%26limitType=kinesis-firehose-limits">Firehose Limits form</a> to request a throughput limit increase.</p>
    pub fn set_throughput_hint_in_mbs(mut self, input: ::std::option::Option<i32>) -> Self {
        self.throughput_hint_in_mbs = input;
        self
    }
    /// <p>The value that you configure for this parameter is for information purpose only and does not affect Firehose delivery throughput limit. You can use the <a href="https://support.console.aws.amazon.com/support/home#/case/create%3FissueType=service-limit-increase%26limitType=kinesis-firehose-limits">Firehose Limits form</a> to request a throughput limit increase.</p>
    pub fn get_throughput_hint_in_mbs(&self) -> &::std::option::Option<i32> {
        &self.throughput_hint_in_mbs
    }
    /// Consumes the builder and constructs a [`DirectPutSourceDescription`](crate::types::DirectPutSourceDescription).
    pub fn build(self) -> crate::types::DirectPutSourceDescription {
        crate::types::DirectPutSourceDescription {
            throughput_hint_in_mbs: self.throughput_hint_in_mbs,
        }
    }
}
