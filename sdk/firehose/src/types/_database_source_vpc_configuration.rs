// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure for details of the VPC Endpoint Service which Firehose uses to create a PrivateLink to the database.</p>
/// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DatabaseSourceVpcConfiguration {
    /// <p>The VPC endpoint service name which Firehose uses to create a PrivateLink to the database. The endpoint service must have the Firehose service principle <code>firehose.amazonaws.com</code> as an allowed principal on the VPC endpoint service. The VPC endpoint service name is a string that looks like <code>com.amazonaws.vpce.<region>
    /// .
    /// <vpc-endpoint-service-id></vpc-endpoint-service-id>
    /// </region></code>.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub vpc_endpoint_service_name: ::std::string::String,
}
impl DatabaseSourceVpcConfiguration {
    /// <p>The VPC endpoint service name which Firehose uses to create a PrivateLink to the database. The endpoint service must have the Firehose service principle <code>firehose.amazonaws.com</code> as an allowed principal on the VPC endpoint service. The VPC endpoint service name is a string that looks like <code>com.amazonaws.vpce.<region>
    /// .
    /// <vpc-endpoint-service-id></vpc-endpoint-service-id>
    /// </region></code>.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn vpc_endpoint_service_name(&self) -> &str {
        use std::ops::Deref;
        self.vpc_endpoint_service_name.deref()
    }
}
impl DatabaseSourceVpcConfiguration {
    /// Creates a new builder-style object to manufacture [`DatabaseSourceVpcConfiguration`](crate::types::DatabaseSourceVpcConfiguration).
    pub fn builder() -> crate::types::builders::DatabaseSourceVpcConfigurationBuilder {
        crate::types::builders::DatabaseSourceVpcConfigurationBuilder::default()
    }
}

/// A builder for [`DatabaseSourceVpcConfiguration`](crate::types::DatabaseSourceVpcConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DatabaseSourceVpcConfigurationBuilder {
    pub(crate) vpc_endpoint_service_name: ::std::option::Option<::std::string::String>,
}
impl DatabaseSourceVpcConfigurationBuilder {
    /// <p>The VPC endpoint service name which Firehose uses to create a PrivateLink to the database. The endpoint service must have the Firehose service principle <code>firehose.amazonaws.com</code> as an allowed principal on the VPC endpoint service. The VPC endpoint service name is a string that looks like <code>com.amazonaws.vpce.<region>
    /// .
    /// <vpc-endpoint-service-id></vpc-endpoint-service-id>
    /// </region></code>.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    /// This field is required.
    pub fn vpc_endpoint_service_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_endpoint_service_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC endpoint service name which Firehose uses to create a PrivateLink to the database. The endpoint service must have the Firehose service principle <code>firehose.amazonaws.com</code> as an allowed principal on the VPC endpoint service. The VPC endpoint service name is a string that looks like <code>com.amazonaws.vpce.<region>
    /// .
    /// <vpc-endpoint-service-id></vpc-endpoint-service-id>
    /// </region></code>.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn set_vpc_endpoint_service_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_endpoint_service_name = input;
        self
    }
    /// <p>The VPC endpoint service name which Firehose uses to create a PrivateLink to the database. The endpoint service must have the Firehose service principle <code>firehose.amazonaws.com</code> as an allowed principal on the VPC endpoint service. The VPC endpoint service name is a string that looks like <code>com.amazonaws.vpce.<region>
    /// .
    /// <vpc-endpoint-service-id></vpc-endpoint-service-id>
    /// </region></code>.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn get_vpc_endpoint_service_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_endpoint_service_name
    }
    /// Consumes the builder and constructs a [`DatabaseSourceVpcConfiguration`](crate::types::DatabaseSourceVpcConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`vpc_endpoint_service_name`](crate::types::builders::DatabaseSourceVpcConfigurationBuilder::vpc_endpoint_service_name)
    pub fn build(self) -> ::std::result::Result<crate::types::DatabaseSourceVpcConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DatabaseSourceVpcConfiguration {
            vpc_endpoint_service_name: self.vpc_endpoint_service_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vpc_endpoint_service_name",
                    "vpc_endpoint_service_name was not specified but it is required when building DatabaseSourceVpcConfiguration",
                )
            })?,
        })
    }
}
