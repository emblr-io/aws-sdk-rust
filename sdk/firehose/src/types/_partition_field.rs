// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a single field in a <code>PartitionSpec</code>.</p>
/// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PartitionField {
    /// <p>The column name to be configured in partition spec.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub source_name: ::std::string::String,
}
impl PartitionField {
    /// <p>The column name to be configured in partition spec.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn source_name(&self) -> &str {
        use std::ops::Deref;
        self.source_name.deref()
    }
}
impl PartitionField {
    /// Creates a new builder-style object to manufacture [`PartitionField`](crate::types::PartitionField).
    pub fn builder() -> crate::types::builders::PartitionFieldBuilder {
        crate::types::builders::PartitionFieldBuilder::default()
    }
}

/// A builder for [`PartitionField`](crate::types::PartitionField).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PartitionFieldBuilder {
    pub(crate) source_name: ::std::option::Option<::std::string::String>,
}
impl PartitionFieldBuilder {
    /// <p>The column name to be configured in partition spec.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    /// This field is required.
    pub fn source_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The column name to be configured in partition spec.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn set_source_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_name = input;
        self
    }
    /// <p>The column name to be configured in partition spec.</p>
    /// <p>Amazon Data Firehose is in preview release and is subject to change.</p>
    pub fn get_source_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_name
    }
    /// Consumes the builder and constructs a [`PartitionField`](crate::types::PartitionField).
    /// This method will fail if any of the following fields are not set:
    /// - [`source_name`](crate::types::builders::PartitionFieldBuilder::source_name)
    pub fn build(self) -> ::std::result::Result<crate::types::PartitionField, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PartitionField {
            source_name: self.source_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "source_name",
                    "source_name was not specified but it is required when building PartitionField",
                )
            })?,
        })
    }
}
