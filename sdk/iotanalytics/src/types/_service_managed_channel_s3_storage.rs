// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Used to store channel data in an S3 bucket managed by IoT Analytics. You can't change the choice of S3 storage after the data store is created.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceManagedChannelS3Storage {}
impl ServiceManagedChannelS3Storage {
    /// Creates a new builder-style object to manufacture [`ServiceManagedChannelS3Storage`](crate::types::ServiceManagedChannelS3Storage).
    pub fn builder() -> crate::types::builders::ServiceManagedChannelS3StorageBuilder {
        crate::types::builders::ServiceManagedChannelS3StorageBuilder::default()
    }
}

/// A builder for [`ServiceManagedChannelS3Storage`](crate::types::ServiceManagedChannelS3Storage).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceManagedChannelS3StorageBuilder {}
impl ServiceManagedChannelS3StorageBuilder {
    /// Consumes the builder and constructs a [`ServiceManagedChannelS3Storage`](crate::types::ServiceManagedChannelS3Storage).
    pub fn build(self) -> crate::types::ServiceManagedChannelS3Storage {
        crate::types::ServiceManagedChannelS3Storage {}
    }
}
