// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateNotificationConfigurationOutput {
    /// <p>The ARN used to update the <code>NotificationConfiguration</code>.</p>
    pub arn: ::std::string::String,
    _request_id: Option<String>,
}
impl UpdateNotificationConfigurationOutput {
    /// <p>The ARN used to update the <code>NotificationConfiguration</code>.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
}
impl ::aws_types::request_id::RequestId for UpdateNotificationConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateNotificationConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`UpdateNotificationConfigurationOutput`](crate::operation::update_notification_configuration::UpdateNotificationConfigurationOutput).
    pub fn builder() -> crate::operation::update_notification_configuration::builders::UpdateNotificationConfigurationOutputBuilder {
        crate::operation::update_notification_configuration::builders::UpdateNotificationConfigurationOutputBuilder::default()
    }
}

/// A builder for [`UpdateNotificationConfigurationOutput`](crate::operation::update_notification_configuration::UpdateNotificationConfigurationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateNotificationConfigurationOutputBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl UpdateNotificationConfigurationOutputBuilder {
    /// <p>The ARN used to update the <code>NotificationConfiguration</code>.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN used to update the <code>NotificationConfiguration</code>.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN used to update the <code>NotificationConfiguration</code>.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateNotificationConfigurationOutput`](crate::operation::update_notification_configuration::UpdateNotificationConfigurationOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::operation::update_notification_configuration::builders::UpdateNotificationConfigurationOutputBuilder::arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_notification_configuration::UpdateNotificationConfigurationOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_notification_configuration::UpdateNotificationConfigurationOutput {
                arn: self.arn.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "arn",
                        "arn was not specified but it is required when building UpdateNotificationConfigurationOutput",
                    )
                })?,
                _request_id: self._request_id,
            },
        )
    }
}
