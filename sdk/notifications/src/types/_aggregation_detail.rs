// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides detailed information about the dimensions used for aggregation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AggregationDetail {
    /// <p>Properties used to summarize aggregated events.</p>
    pub summarization_dimensions: ::std::option::Option<::std::vec::Vec<crate::types::SummarizationDimensionDetail>>,
}
impl AggregationDetail {
    /// <p>Properties used to summarize aggregated events.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.summarization_dimensions.is_none()`.
    pub fn summarization_dimensions(&self) -> &[crate::types::SummarizationDimensionDetail] {
        self.summarization_dimensions.as_deref().unwrap_or_default()
    }
}
impl AggregationDetail {
    /// Creates a new builder-style object to manufacture [`AggregationDetail`](crate::types::AggregationDetail).
    pub fn builder() -> crate::types::builders::AggregationDetailBuilder {
        crate::types::builders::AggregationDetailBuilder::default()
    }
}

/// A builder for [`AggregationDetail`](crate::types::AggregationDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AggregationDetailBuilder {
    pub(crate) summarization_dimensions: ::std::option::Option<::std::vec::Vec<crate::types::SummarizationDimensionDetail>>,
}
impl AggregationDetailBuilder {
    /// Appends an item to `summarization_dimensions`.
    ///
    /// To override the contents of this collection use [`set_summarization_dimensions`](Self::set_summarization_dimensions).
    ///
    /// <p>Properties used to summarize aggregated events.</p>
    pub fn summarization_dimensions(mut self, input: crate::types::SummarizationDimensionDetail) -> Self {
        let mut v = self.summarization_dimensions.unwrap_or_default();
        v.push(input);
        self.summarization_dimensions = ::std::option::Option::Some(v);
        self
    }
    /// <p>Properties used to summarize aggregated events.</p>
    pub fn set_summarization_dimensions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SummarizationDimensionDetail>>) -> Self {
        self.summarization_dimensions = input;
        self
    }
    /// <p>Properties used to summarize aggregated events.</p>
    pub fn get_summarization_dimensions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SummarizationDimensionDetail>> {
        &self.summarization_dimensions
    }
    /// Consumes the builder and constructs a [`AggregationDetail`](crate::types::AggregationDetail).
    pub fn build(self) -> crate::types::AggregationDetail {
        crate::types::AggregationDetail {
            summarization_dimensions: self.summarization_dimensions,
        }
    }
}
