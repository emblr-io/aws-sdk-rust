// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the headline message component.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MessageComponentsSummary {
    /// <p>A sentence long summary. For example, titles or an email subject line.</p>
    pub headline: ::std::string::String,
}
impl MessageComponentsSummary {
    /// <p>A sentence long summary. For example, titles or an email subject line.</p>
    pub fn headline(&self) -> &str {
        use std::ops::Deref;
        self.headline.deref()
    }
}
impl MessageComponentsSummary {
    /// Creates a new builder-style object to manufacture [`MessageComponentsSummary`](crate::types::MessageComponentsSummary).
    pub fn builder() -> crate::types::builders::MessageComponentsSummaryBuilder {
        crate::types::builders::MessageComponentsSummaryBuilder::default()
    }
}

/// A builder for [`MessageComponentsSummary`](crate::types::MessageComponentsSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MessageComponentsSummaryBuilder {
    pub(crate) headline: ::std::option::Option<::std::string::String>,
}
impl MessageComponentsSummaryBuilder {
    /// <p>A sentence long summary. For example, titles or an email subject line.</p>
    /// This field is required.
    pub fn headline(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.headline = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A sentence long summary. For example, titles or an email subject line.</p>
    pub fn set_headline(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.headline = input;
        self
    }
    /// <p>A sentence long summary. For example, titles or an email subject line.</p>
    pub fn get_headline(&self) -> &::std::option::Option<::std::string::String> {
        &self.headline
    }
    /// Consumes the builder and constructs a [`MessageComponentsSummary`](crate::types::MessageComponentsSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`headline`](crate::types::builders::MessageComponentsSummaryBuilder::headline)
    pub fn build(self) -> ::std::result::Result<crate::types::MessageComponentsSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MessageComponentsSummary {
            headline: self.headline.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "headline",
                    "headline was not specified but it is required when building MessageComponentsSummary",
                )
            })?,
        })
    }
}
