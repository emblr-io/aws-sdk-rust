// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an overview of a <code>NotificationHub</code>.</p>
/// <p>A <code>NotificationConfiguration</code> is an account-level setting used to select the Regions where you want to store, process and replicate your notifications.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NotificationHubOverview {
    /// <p>The Region of the resource.</p>
    pub notification_hub_region: ::std::string::String,
    /// <p>The status summary of the resource.</p>
    pub status_summary: ::std::option::Option<crate::types::NotificationHubStatusSummary>,
    /// <p>The date and time the <code>NotificationHubOverview</code> was created.</p>
    pub creation_time: ::aws_smithy_types::DateTime,
    /// <p>The most recent time this <code>NotificationHub</code> had an <code>ACTIVE</code> status.</p>
    pub last_activation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl NotificationHubOverview {
    /// <p>The Region of the resource.</p>
    pub fn notification_hub_region(&self) -> &str {
        use std::ops::Deref;
        self.notification_hub_region.deref()
    }
    /// <p>The status summary of the resource.</p>
    pub fn status_summary(&self) -> ::std::option::Option<&crate::types::NotificationHubStatusSummary> {
        self.status_summary.as_ref()
    }
    /// <p>The date and time the <code>NotificationHubOverview</code> was created.</p>
    pub fn creation_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_time
    }
    /// <p>The most recent time this <code>NotificationHub</code> had an <code>ACTIVE</code> status.</p>
    pub fn last_activation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_activation_time.as_ref()
    }
}
impl NotificationHubOverview {
    /// Creates a new builder-style object to manufacture [`NotificationHubOverview`](crate::types::NotificationHubOverview).
    pub fn builder() -> crate::types::builders::NotificationHubOverviewBuilder {
        crate::types::builders::NotificationHubOverviewBuilder::default()
    }
}

/// A builder for [`NotificationHubOverview`](crate::types::NotificationHubOverview).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NotificationHubOverviewBuilder {
    pub(crate) notification_hub_region: ::std::option::Option<::std::string::String>,
    pub(crate) status_summary: ::std::option::Option<crate::types::NotificationHubStatusSummary>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_activation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl NotificationHubOverviewBuilder {
    /// <p>The Region of the resource.</p>
    /// This field is required.
    pub fn notification_hub_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.notification_hub_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Region of the resource.</p>
    pub fn set_notification_hub_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.notification_hub_region = input;
        self
    }
    /// <p>The Region of the resource.</p>
    pub fn get_notification_hub_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.notification_hub_region
    }
    /// <p>The status summary of the resource.</p>
    /// This field is required.
    pub fn status_summary(mut self, input: crate::types::NotificationHubStatusSummary) -> Self {
        self.status_summary = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status summary of the resource.</p>
    pub fn set_status_summary(mut self, input: ::std::option::Option<crate::types::NotificationHubStatusSummary>) -> Self {
        self.status_summary = input;
        self
    }
    /// <p>The status summary of the resource.</p>
    pub fn get_status_summary(&self) -> &::std::option::Option<crate::types::NotificationHubStatusSummary> {
        &self.status_summary
    }
    /// <p>The date and time the <code>NotificationHubOverview</code> was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the <code>NotificationHubOverview</code> was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The date and time the <code>NotificationHubOverview</code> was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The most recent time this <code>NotificationHub</code> had an <code>ACTIVE</code> status.</p>
    pub fn last_activation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_activation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The most recent time this <code>NotificationHub</code> had an <code>ACTIVE</code> status.</p>
    pub fn set_last_activation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_activation_time = input;
        self
    }
    /// <p>The most recent time this <code>NotificationHub</code> had an <code>ACTIVE</code> status.</p>
    pub fn get_last_activation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_activation_time
    }
    /// Consumes the builder and constructs a [`NotificationHubOverview`](crate::types::NotificationHubOverview).
    /// This method will fail if any of the following fields are not set:
    /// - [`notification_hub_region`](crate::types::builders::NotificationHubOverviewBuilder::notification_hub_region)
    /// - [`creation_time`](crate::types::builders::NotificationHubOverviewBuilder::creation_time)
    pub fn build(self) -> ::std::result::Result<crate::types::NotificationHubOverview, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::NotificationHubOverview {
            notification_hub_region: self.notification_hub_region.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "notification_hub_region",
                    "notification_hub_region was not specified but it is required when building NotificationHubOverview",
                )
            })?,
            status_summary: self.status_summary,
            creation_time: self.creation_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_time",
                    "creation_time was not specified but it is required when building NotificationHubOverview",
                )
            })?,
            last_activation_time: self.last_activation_time,
        })
    }
}
