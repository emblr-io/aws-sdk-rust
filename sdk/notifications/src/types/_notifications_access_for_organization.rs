// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Orgs Service trust for User Notifications.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NotificationsAccessForOrganization {
    /// <p>Access Status for the Orgs Service.</p>
    pub access_status: crate::types::AccessStatus,
}
impl NotificationsAccessForOrganization {
    /// <p>Access Status for the Orgs Service.</p>
    pub fn access_status(&self) -> &crate::types::AccessStatus {
        &self.access_status
    }
}
impl NotificationsAccessForOrganization {
    /// Creates a new builder-style object to manufacture [`NotificationsAccessForOrganization`](crate::types::NotificationsAccessForOrganization).
    pub fn builder() -> crate::types::builders::NotificationsAccessForOrganizationBuilder {
        crate::types::builders::NotificationsAccessForOrganizationBuilder::default()
    }
}

/// A builder for [`NotificationsAccessForOrganization`](crate::types::NotificationsAccessForOrganization).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NotificationsAccessForOrganizationBuilder {
    pub(crate) access_status: ::std::option::Option<crate::types::AccessStatus>,
}
impl NotificationsAccessForOrganizationBuilder {
    /// <p>Access Status for the Orgs Service.</p>
    /// This field is required.
    pub fn access_status(mut self, input: crate::types::AccessStatus) -> Self {
        self.access_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Access Status for the Orgs Service.</p>
    pub fn set_access_status(mut self, input: ::std::option::Option<crate::types::AccessStatus>) -> Self {
        self.access_status = input;
        self
    }
    /// <p>Access Status for the Orgs Service.</p>
    pub fn get_access_status(&self) -> &::std::option::Option<crate::types::AccessStatus> {
        &self.access_status
    }
    /// Consumes the builder and constructs a [`NotificationsAccessForOrganization`](crate::types::NotificationsAccessForOrganization).
    /// This method will fail if any of the following fields are not set:
    /// - [`access_status`](crate::types::builders::NotificationsAccessForOrganizationBuilder::access_status)
    pub fn build(self) -> ::std::result::Result<crate::types::NotificationsAccessForOrganization, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::NotificationsAccessForOrganization {
            access_status: self.access_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "access_status",
                    "access_status was not specified but it is required when building NotificationsAccessForOrganization",
                )
            })?,
        })
    }
}
