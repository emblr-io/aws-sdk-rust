// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the basic structure and properties of a <code>ManagedNotificationConfiguration</code>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ManagedNotificationConfigurationStructure {
    /// <p>The Amazon Resource Name (ARN) of the <code>ManagedNotificationConfiguration</code>.</p>
    pub arn: ::std::string::String,
    /// <p>The name of the <code>ManagedNotificationConfiguration</code>.</p>
    pub name: ::std::string::String,
    /// <p>The description of the <code>ManagedNotificationConfiguration</code>.</p>
    pub description: ::std::string::String,
}
impl ManagedNotificationConfigurationStructure {
    /// <p>The Amazon Resource Name (ARN) of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The name of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The description of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn description(&self) -> &str {
        use std::ops::Deref;
        self.description.deref()
    }
}
impl ManagedNotificationConfigurationStructure {
    /// Creates a new builder-style object to manufacture [`ManagedNotificationConfigurationStructure`](crate::types::ManagedNotificationConfigurationStructure).
    pub fn builder() -> crate::types::builders::ManagedNotificationConfigurationStructureBuilder {
        crate::types::builders::ManagedNotificationConfigurationStructureBuilder::default()
    }
}

/// A builder for [`ManagedNotificationConfigurationStructure`](crate::types::ManagedNotificationConfigurationStructure).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ManagedNotificationConfigurationStructureBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl ManagedNotificationConfigurationStructureBuilder {
    /// <p>The Amazon Resource Name (ARN) of the <code>ManagedNotificationConfiguration</code>.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the <code>ManagedNotificationConfiguration</code>.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the <code>ManagedNotificationConfiguration</code>.</p>
    /// This field is required.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the <code>ManagedNotificationConfiguration</code>.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`ManagedNotificationConfigurationStructure`](crate::types::ManagedNotificationConfigurationStructure).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::ManagedNotificationConfigurationStructureBuilder::arn)
    /// - [`name`](crate::types::builders::ManagedNotificationConfigurationStructureBuilder::name)
    /// - [`description`](crate::types::builders::ManagedNotificationConfigurationStructureBuilder::description)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::ManagedNotificationConfigurationStructure, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ManagedNotificationConfigurationStructure {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building ManagedNotificationConfigurationStructure",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building ManagedNotificationConfigurationStructure",
                )
            })?,
            description: self.description.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "description",
                    "description was not specified but it is required when building ManagedNotificationConfigurationStructure",
                )
            })?,
        })
    }
}
