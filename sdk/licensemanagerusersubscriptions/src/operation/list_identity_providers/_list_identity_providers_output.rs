// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListIdentityProvidersOutput {
    /// <p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>
    pub identity_provider_summaries: ::std::vec::Vec<crate::types::IdentityProviderSummary>,
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListIdentityProvidersOutput {
    /// <p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>
    pub fn identity_provider_summaries(&self) -> &[crate::types::IdentityProviderSummary] {
        use std::ops::Deref;
        self.identity_provider_summaries.deref()
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListIdentityProvidersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListIdentityProvidersOutput {
    /// Creates a new builder-style object to manufacture [`ListIdentityProvidersOutput`](crate::operation::list_identity_providers::ListIdentityProvidersOutput).
    pub fn builder() -> crate::operation::list_identity_providers::builders::ListIdentityProvidersOutputBuilder {
        crate::operation::list_identity_providers::builders::ListIdentityProvidersOutputBuilder::default()
    }
}

/// A builder for [`ListIdentityProvidersOutput`](crate::operation::list_identity_providers::ListIdentityProvidersOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListIdentityProvidersOutputBuilder {
    pub(crate) identity_provider_summaries: ::std::option::Option<::std::vec::Vec<crate::types::IdentityProviderSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListIdentityProvidersOutputBuilder {
    /// Appends an item to `identity_provider_summaries`.
    ///
    /// To override the contents of this collection use [`set_identity_provider_summaries`](Self::set_identity_provider_summaries).
    ///
    /// <p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>
    pub fn identity_provider_summaries(mut self, input: crate::types::IdentityProviderSummary) -> Self {
        let mut v = self.identity_provider_summaries.unwrap_or_default();
        v.push(input);
        self.identity_provider_summaries = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>
    pub fn set_identity_provider_summaries(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::IdentityProviderSummary>>) -> Self {
        self.identity_provider_summaries = input;
        self
    }
    /// <p>An array of <code>IdentityProviderSummary</code> resources that contain details about the Active Directory identity providers that meet the request criteria.</p>
    pub fn get_identity_provider_summaries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::IdentityProviderSummary>> {
        &self.identity_provider_summaries
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListIdentityProvidersOutput`](crate::operation::list_identity_providers::ListIdentityProvidersOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`identity_provider_summaries`](crate::operation::list_identity_providers::builders::ListIdentityProvidersOutputBuilder::identity_provider_summaries)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_identity_providers::ListIdentityProvidersOutput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::list_identity_providers::ListIdentityProvidersOutput {
            identity_provider_summaries: self.identity_provider_summaries.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "identity_provider_summaries",
                    "identity_provider_summaries was not specified but it is required when building ListIdentityProvidersOutput",
                )
            })?,
            next_token: self.next_token,
            _request_id: self._request_id,
        })
    }
}
