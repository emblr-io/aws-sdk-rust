// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the configuration of an internal access analyzer for an Amazon Web Services organization or account. This configuration determines how the analyzer evaluates internal access within your Amazon Web Services environment.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InternalAccessConfiguration {
    /// <p>Contains information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed.</p>
    pub analysis_rule: ::std::option::Option<crate::types::InternalAccessAnalysisRule>,
}
impl InternalAccessConfiguration {
    /// <p>Contains information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed.</p>
    pub fn analysis_rule(&self) -> ::std::option::Option<&crate::types::InternalAccessAnalysisRule> {
        self.analysis_rule.as_ref()
    }
}
impl InternalAccessConfiguration {
    /// Creates a new builder-style object to manufacture [`InternalAccessConfiguration`](crate::types::InternalAccessConfiguration).
    pub fn builder() -> crate::types::builders::InternalAccessConfigurationBuilder {
        crate::types::builders::InternalAccessConfigurationBuilder::default()
    }
}

/// A builder for [`InternalAccessConfiguration`](crate::types::InternalAccessConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InternalAccessConfigurationBuilder {
    pub(crate) analysis_rule: ::std::option::Option<crate::types::InternalAccessAnalysisRule>,
}
impl InternalAccessConfigurationBuilder {
    /// <p>Contains information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed.</p>
    pub fn analysis_rule(mut self, input: crate::types::InternalAccessAnalysisRule) -> Self {
        self.analysis_rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed.</p>
    pub fn set_analysis_rule(mut self, input: ::std::option::Option<crate::types::InternalAccessAnalysisRule>) -> Self {
        self.analysis_rule = input;
        self
    }
    /// <p>Contains information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed.</p>
    pub fn get_analysis_rule(&self) -> &::std::option::Option<crate::types::InternalAccessAnalysisRule> {
        &self.analysis_rule
    }
    /// Consumes the builder and constructs a [`InternalAccessConfiguration`](crate::types::InternalAccessConfiguration).
    pub fn build(self) -> crate::types::InternalAccessConfiguration {
        crate::types::InternalAccessConfiguration {
            analysis_rule: self.analysis_rule,
        }
    }
}
