// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the total number of active, archived, and resolved findings for a resource type of an internal access analyzer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InternalAccessResourceTypeDetails {
    /// <p>The total number of active findings for the resource type in the internal access analyzer.</p>
    pub total_active_findings: ::std::option::Option<i32>,
    /// <p>The total number of resolved findings for the resource type in the internal access analyzer.</p>
    pub total_resolved_findings: ::std::option::Option<i32>,
    /// <p>The total number of archived findings for the resource type in the internal access analyzer.</p>
    pub total_archived_findings: ::std::option::Option<i32>,
}
impl InternalAccessResourceTypeDetails {
    /// <p>The total number of active findings for the resource type in the internal access analyzer.</p>
    pub fn total_active_findings(&self) -> ::std::option::Option<i32> {
        self.total_active_findings
    }
    /// <p>The total number of resolved findings for the resource type in the internal access analyzer.</p>
    pub fn total_resolved_findings(&self) -> ::std::option::Option<i32> {
        self.total_resolved_findings
    }
    /// <p>The total number of archived findings for the resource type in the internal access analyzer.</p>
    pub fn total_archived_findings(&self) -> ::std::option::Option<i32> {
        self.total_archived_findings
    }
}
impl InternalAccessResourceTypeDetails {
    /// Creates a new builder-style object to manufacture [`InternalAccessResourceTypeDetails`](crate::types::InternalAccessResourceTypeDetails).
    pub fn builder() -> crate::types::builders::InternalAccessResourceTypeDetailsBuilder {
        crate::types::builders::InternalAccessResourceTypeDetailsBuilder::default()
    }
}

/// A builder for [`InternalAccessResourceTypeDetails`](crate::types::InternalAccessResourceTypeDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InternalAccessResourceTypeDetailsBuilder {
    pub(crate) total_active_findings: ::std::option::Option<i32>,
    pub(crate) total_resolved_findings: ::std::option::Option<i32>,
    pub(crate) total_archived_findings: ::std::option::Option<i32>,
}
impl InternalAccessResourceTypeDetailsBuilder {
    /// <p>The total number of active findings for the resource type in the internal access analyzer.</p>
    pub fn total_active_findings(mut self, input: i32) -> Self {
        self.total_active_findings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of active findings for the resource type in the internal access analyzer.</p>
    pub fn set_total_active_findings(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_active_findings = input;
        self
    }
    /// <p>The total number of active findings for the resource type in the internal access analyzer.</p>
    pub fn get_total_active_findings(&self) -> &::std::option::Option<i32> {
        &self.total_active_findings
    }
    /// <p>The total number of resolved findings for the resource type in the internal access analyzer.</p>
    pub fn total_resolved_findings(mut self, input: i32) -> Self {
        self.total_resolved_findings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of resolved findings for the resource type in the internal access analyzer.</p>
    pub fn set_total_resolved_findings(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_resolved_findings = input;
        self
    }
    /// <p>The total number of resolved findings for the resource type in the internal access analyzer.</p>
    pub fn get_total_resolved_findings(&self) -> &::std::option::Option<i32> {
        &self.total_resolved_findings
    }
    /// <p>The total number of archived findings for the resource type in the internal access analyzer.</p>
    pub fn total_archived_findings(mut self, input: i32) -> Self {
        self.total_archived_findings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of archived findings for the resource type in the internal access analyzer.</p>
    pub fn set_total_archived_findings(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_archived_findings = input;
        self
    }
    /// <p>The total number of archived findings for the resource type in the internal access analyzer.</p>
    pub fn get_total_archived_findings(&self) -> &::std::option::Option<i32> {
        &self.total_archived_findings
    }
    /// Consumes the builder and constructs a [`InternalAccessResourceTypeDetails`](crate::types::InternalAccessResourceTypeDetails).
    pub fn build(self) -> crate::types::InternalAccessResourceTypeDetails {
        crate::types::InternalAccessResourceTypeDetails {
            total_active_findings: self.total_active_findings,
            total_resolved_findings: self.total_resolved_findings,
            total_archived_findings: self.total_archived_findings,
        }
    }
}
