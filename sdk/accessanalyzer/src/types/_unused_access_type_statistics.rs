// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the total number of findings for a type of unused access.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UnusedAccessTypeStatistics {
    /// <p>The type of unused access.</p>
    pub unused_access_type: ::std::option::Option<::std::string::String>,
    /// <p>The total number of findings for the specified unused access type.</p>
    pub total: ::std::option::Option<i32>,
}
impl UnusedAccessTypeStatistics {
    /// <p>The type of unused access.</p>
    pub fn unused_access_type(&self) -> ::std::option::Option<&str> {
        self.unused_access_type.as_deref()
    }
    /// <p>The total number of findings for the specified unused access type.</p>
    pub fn total(&self) -> ::std::option::Option<i32> {
        self.total
    }
}
impl UnusedAccessTypeStatistics {
    /// Creates a new builder-style object to manufacture [`UnusedAccessTypeStatistics`](crate::types::UnusedAccessTypeStatistics).
    pub fn builder() -> crate::types::builders::UnusedAccessTypeStatisticsBuilder {
        crate::types::builders::UnusedAccessTypeStatisticsBuilder::default()
    }
}

/// A builder for [`UnusedAccessTypeStatistics`](crate::types::UnusedAccessTypeStatistics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UnusedAccessTypeStatisticsBuilder {
    pub(crate) unused_access_type: ::std::option::Option<::std::string::String>,
    pub(crate) total: ::std::option::Option<i32>,
}
impl UnusedAccessTypeStatisticsBuilder {
    /// <p>The type of unused access.</p>
    pub fn unused_access_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.unused_access_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of unused access.</p>
    pub fn set_unused_access_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.unused_access_type = input;
        self
    }
    /// <p>The type of unused access.</p>
    pub fn get_unused_access_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.unused_access_type
    }
    /// <p>The total number of findings for the specified unused access type.</p>
    pub fn total(mut self, input: i32) -> Self {
        self.total = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of findings for the specified unused access type.</p>
    pub fn set_total(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total = input;
        self
    }
    /// <p>The total number of findings for the specified unused access type.</p>
    pub fn get_total(&self) -> &::std::option::Option<i32> {
        &self.total
    }
    /// Consumes the builder and constructs a [`UnusedAccessTypeStatistics`](crate::types::UnusedAccessTypeStatistics).
    pub fn build(self) -> crate::types::UnusedAccessTypeStatistics {
        crate::types::UnusedAccessTypeStatistics {
            unused_access_type: self.unused_access_type,
            total: self.total,
        }
    }
}
