// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTableBucketOutput {
    /// <p>The Amazon Resource Name (ARN) of the table bucket.</p>
    pub arn: ::std::string::String,
    /// <p>The name of the table bucket</p>
    pub name: ::std::string::String,
    /// <p>The ID of the account that owns the table bucket.</p>
    pub owner_account_id: ::std::string::String,
    /// <p>The date and time the table bucket was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The unique identifier of the table bucket.</p>
    pub table_bucket_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetTableBucketOutput {
    /// <p>The Amazon Resource Name (ARN) of the table bucket.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The name of the table bucket</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The ID of the account that owns the table bucket.</p>
    pub fn owner_account_id(&self) -> &str {
        use std::ops::Deref;
        self.owner_account_id.deref()
    }
    /// <p>The date and time the table bucket was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The unique identifier of the table bucket.</p>
    pub fn table_bucket_id(&self) -> ::std::option::Option<&str> {
        self.table_bucket_id.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetTableBucketOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetTableBucketOutput {
    /// Creates a new builder-style object to manufacture [`GetTableBucketOutput`](crate::operation::get_table_bucket::GetTableBucketOutput).
    pub fn builder() -> crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder {
        crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder::default()
    }
}

/// A builder for [`GetTableBucketOutput`](crate::operation::get_table_bucket::GetTableBucketOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetTableBucketOutputBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) owner_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) table_bucket_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetTableBucketOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the table bucket.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table bucket.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table bucket.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the table bucket</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the table bucket</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the table bucket</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ID of the account that owns the table bucket.</p>
    /// This field is required.
    pub fn owner_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.owner_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the account that owns the table bucket.</p>
    pub fn set_owner_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.owner_account_id = input;
        self
    }
    /// <p>The ID of the account that owns the table bucket.</p>
    pub fn get_owner_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.owner_account_id
    }
    /// <p>The date and time the table bucket was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the table bucket was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time the table bucket was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The unique identifier of the table bucket.</p>
    pub fn table_bucket_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table_bucket_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the table bucket.</p>
    pub fn set_table_bucket_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table_bucket_id = input;
        self
    }
    /// <p>The unique identifier of the table bucket.</p>
    pub fn get_table_bucket_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.table_bucket_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetTableBucketOutput`](crate::operation::get_table_bucket::GetTableBucketOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder::arn)
    /// - [`name`](crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder::name)
    /// - [`owner_account_id`](crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder::owner_account_id)
    /// - [`created_at`](crate::operation::get_table_bucket::builders::GetTableBucketOutputBuilder::created_at)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_table_bucket::GetTableBucketOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_table_bucket::GetTableBucketOutput {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building GetTableBucketOutput",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building GetTableBucketOutput",
                )
            })?,
            owner_account_id: self.owner_account_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "owner_account_id",
                    "owner_account_id was not specified but it is required when building GetTableBucketOutput",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building GetTableBucketOutput",
                )
            })?,
            table_bucket_id: self.table_bucket_id,
            _request_id: self._request_id,
        })
    }
}
