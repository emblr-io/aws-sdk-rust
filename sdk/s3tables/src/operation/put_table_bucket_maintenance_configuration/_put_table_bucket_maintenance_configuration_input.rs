// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutTableBucketMaintenanceConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) of the table bucket associated with the maintenance configuration.</p>
    pub table_bucket_arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of the maintenance configuration.</p>
    pub r#type: ::std::option::Option<crate::types::TableBucketMaintenanceType>,
    /// <p>Defines the values of the maintenance configuration for the table bucket.</p>
    pub value: ::std::option::Option<crate::types::TableBucketMaintenanceConfigurationValue>,
}
impl PutTableBucketMaintenanceConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) of the table bucket associated with the maintenance configuration.</p>
    pub fn table_bucket_arn(&self) -> ::std::option::Option<&str> {
        self.table_bucket_arn.as_deref()
    }
    /// <p>The type of the maintenance configuration.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::TableBucketMaintenanceType> {
        self.r#type.as_ref()
    }
    /// <p>Defines the values of the maintenance configuration for the table bucket.</p>
    pub fn value(&self) -> ::std::option::Option<&crate::types::TableBucketMaintenanceConfigurationValue> {
        self.value.as_ref()
    }
}
impl PutTableBucketMaintenanceConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutTableBucketMaintenanceConfigurationInput`](crate::operation::put_table_bucket_maintenance_configuration::PutTableBucketMaintenanceConfigurationInput).
    pub fn builder() -> crate::operation::put_table_bucket_maintenance_configuration::builders::PutTableBucketMaintenanceConfigurationInputBuilder {
        crate::operation::put_table_bucket_maintenance_configuration::builders::PutTableBucketMaintenanceConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutTableBucketMaintenanceConfigurationInput`](crate::operation::put_table_bucket_maintenance_configuration::PutTableBucketMaintenanceConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutTableBucketMaintenanceConfigurationInputBuilder {
    pub(crate) table_bucket_arn: ::std::option::Option<::std::string::String>,
    pub(crate) r#type: ::std::option::Option<crate::types::TableBucketMaintenanceType>,
    pub(crate) value: ::std::option::Option<crate::types::TableBucketMaintenanceConfigurationValue>,
}
impl PutTableBucketMaintenanceConfigurationInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the table bucket associated with the maintenance configuration.</p>
    /// This field is required.
    pub fn table_bucket_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table_bucket_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table bucket associated with the maintenance configuration.</p>
    pub fn set_table_bucket_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table_bucket_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table bucket associated with the maintenance configuration.</p>
    pub fn get_table_bucket_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.table_bucket_arn
    }
    /// <p>The type of the maintenance configuration.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::TableBucketMaintenanceType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the maintenance configuration.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::TableBucketMaintenanceType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of the maintenance configuration.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::TableBucketMaintenanceType> {
        &self.r#type
    }
    /// <p>Defines the values of the maintenance configuration for the table bucket.</p>
    /// This field is required.
    pub fn value(mut self, input: crate::types::TableBucketMaintenanceConfigurationValue) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the values of the maintenance configuration for the table bucket.</p>
    pub fn set_value(mut self, input: ::std::option::Option<crate::types::TableBucketMaintenanceConfigurationValue>) -> Self {
        self.value = input;
        self
    }
    /// <p>Defines the values of the maintenance configuration for the table bucket.</p>
    pub fn get_value(&self) -> &::std::option::Option<crate::types::TableBucketMaintenanceConfigurationValue> {
        &self.value
    }
    /// Consumes the builder and constructs a [`PutTableBucketMaintenanceConfigurationInput`](crate::operation::put_table_bucket_maintenance_configuration::PutTableBucketMaintenanceConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_table_bucket_maintenance_configuration::PutTableBucketMaintenanceConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_table_bucket_maintenance_configuration::PutTableBucketMaintenanceConfigurationInput {
                table_bucket_arn: self.table_bucket_arn,
                r#type: self.r#type,
                value: self.value,
            },
        )
    }
}
