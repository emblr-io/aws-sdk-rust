// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTableMetadataLocationOutput {
    /// <p>The version token.</p>
    pub version_token: ::std::string::String,
    /// <p>The metadata location.</p>
    pub metadata_location: ::std::option::Option<::std::string::String>,
    /// <p>The warehouse location.</p>
    pub warehouse_location: ::std::string::String,
    _request_id: Option<String>,
}
impl GetTableMetadataLocationOutput {
    /// <p>The version token.</p>
    pub fn version_token(&self) -> &str {
        use std::ops::Deref;
        self.version_token.deref()
    }
    /// <p>The metadata location.</p>
    pub fn metadata_location(&self) -> ::std::option::Option<&str> {
        self.metadata_location.as_deref()
    }
    /// <p>The warehouse location.</p>
    pub fn warehouse_location(&self) -> &str {
        use std::ops::Deref;
        self.warehouse_location.deref()
    }
}
impl ::aws_types::request_id::RequestId for GetTableMetadataLocationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetTableMetadataLocationOutput {
    /// Creates a new builder-style object to manufacture [`GetTableMetadataLocationOutput`](crate::operation::get_table_metadata_location::GetTableMetadataLocationOutput).
    pub fn builder() -> crate::operation::get_table_metadata_location::builders::GetTableMetadataLocationOutputBuilder {
        crate::operation::get_table_metadata_location::builders::GetTableMetadataLocationOutputBuilder::default()
    }
}

/// A builder for [`GetTableMetadataLocationOutput`](crate::operation::get_table_metadata_location::GetTableMetadataLocationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetTableMetadataLocationOutputBuilder {
    pub(crate) version_token: ::std::option::Option<::std::string::String>,
    pub(crate) metadata_location: ::std::option::Option<::std::string::String>,
    pub(crate) warehouse_location: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetTableMetadataLocationOutputBuilder {
    /// <p>The version token.</p>
    /// This field is required.
    pub fn version_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version token.</p>
    pub fn set_version_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_token = input;
        self
    }
    /// <p>The version token.</p>
    pub fn get_version_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_token
    }
    /// <p>The metadata location.</p>
    pub fn metadata_location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metadata_location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metadata location.</p>
    pub fn set_metadata_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metadata_location = input;
        self
    }
    /// <p>The metadata location.</p>
    pub fn get_metadata_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.metadata_location
    }
    /// <p>The warehouse location.</p>
    /// This field is required.
    pub fn warehouse_location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.warehouse_location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The warehouse location.</p>
    pub fn set_warehouse_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.warehouse_location = input;
        self
    }
    /// <p>The warehouse location.</p>
    pub fn get_warehouse_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.warehouse_location
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetTableMetadataLocationOutput`](crate::operation::get_table_metadata_location::GetTableMetadataLocationOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`version_token`](crate::operation::get_table_metadata_location::builders::GetTableMetadataLocationOutputBuilder::version_token)
    /// - [`warehouse_location`](crate::operation::get_table_metadata_location::builders::GetTableMetadataLocationOutputBuilder::warehouse_location)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_table_metadata_location::GetTableMetadataLocationOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_table_metadata_location::GetTableMetadataLocationOutput {
            version_token: self.version_token.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "version_token",
                    "version_token was not specified but it is required when building GetTableMetadataLocationOutput",
                )
            })?,
            metadata_location: self.metadata_location,
            warehouse_location: self.warehouse_location.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "warehouse_location",
                    "warehouse_location was not specified but it is required when building GetTableMetadataLocationOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
