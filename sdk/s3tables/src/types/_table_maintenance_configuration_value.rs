// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the values that define a maintenance configuration for a table.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TableMaintenanceConfigurationValue {
    /// <p>The status of the maintenance configuration.</p>
    pub status: ::std::option::Option<crate::types::MaintenanceStatus>,
    /// <p>Contains details about the settings for the maintenance configuration.</p>
    pub settings: ::std::option::Option<crate::types::TableMaintenanceSettings>,
}
impl TableMaintenanceConfigurationValue {
    /// <p>The status of the maintenance configuration.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::MaintenanceStatus> {
        self.status.as_ref()
    }
    /// <p>Contains details about the settings for the maintenance configuration.</p>
    pub fn settings(&self) -> ::std::option::Option<&crate::types::TableMaintenanceSettings> {
        self.settings.as_ref()
    }
}
impl TableMaintenanceConfigurationValue {
    /// Creates a new builder-style object to manufacture [`TableMaintenanceConfigurationValue`](crate::types::TableMaintenanceConfigurationValue).
    pub fn builder() -> crate::types::builders::TableMaintenanceConfigurationValueBuilder {
        crate::types::builders::TableMaintenanceConfigurationValueBuilder::default()
    }
}

/// A builder for [`TableMaintenanceConfigurationValue`](crate::types::TableMaintenanceConfigurationValue).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TableMaintenanceConfigurationValueBuilder {
    pub(crate) status: ::std::option::Option<crate::types::MaintenanceStatus>,
    pub(crate) settings: ::std::option::Option<crate::types::TableMaintenanceSettings>,
}
impl TableMaintenanceConfigurationValueBuilder {
    /// <p>The status of the maintenance configuration.</p>
    pub fn status(mut self, input: crate::types::MaintenanceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the maintenance configuration.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::MaintenanceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the maintenance configuration.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::MaintenanceStatus> {
        &self.status
    }
    /// <p>Contains details about the settings for the maintenance configuration.</p>
    pub fn settings(mut self, input: crate::types::TableMaintenanceSettings) -> Self {
        self.settings = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about the settings for the maintenance configuration.</p>
    pub fn set_settings(mut self, input: ::std::option::Option<crate::types::TableMaintenanceSettings>) -> Self {
        self.settings = input;
        self
    }
    /// <p>Contains details about the settings for the maintenance configuration.</p>
    pub fn get_settings(&self) -> &::std::option::Option<crate::types::TableMaintenanceSettings> {
        &self.settings
    }
    /// Consumes the builder and constructs a [`TableMaintenanceConfigurationValue`](crate::types::TableMaintenanceConfigurationValue).
    pub fn build(self) -> crate::types::TableMaintenanceConfigurationValue {
        crate::types::TableMaintenanceConfigurationValue {
            status: self.status,
            settings: self.settings,
        }
    }
}
