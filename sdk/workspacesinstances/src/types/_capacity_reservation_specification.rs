// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies capacity reservation preferences.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CapacityReservationSpecification {
    /// <p>Preference for using capacity reservation.</p>
    pub capacity_reservation_preference: ::std::option::Option<crate::types::CapacityReservationPreferenceEnum>,
    /// <p>Specific capacity reservation target.</p>
    pub capacity_reservation_target: ::std::option::Option<crate::types::CapacityReservationTarget>,
}
impl CapacityReservationSpecification {
    /// <p>Preference for using capacity reservation.</p>
    pub fn capacity_reservation_preference(&self) -> ::std::option::Option<&crate::types::CapacityReservationPreferenceEnum> {
        self.capacity_reservation_preference.as_ref()
    }
    /// <p>Specific capacity reservation target.</p>
    pub fn capacity_reservation_target(&self) -> ::std::option::Option<&crate::types::CapacityReservationTarget> {
        self.capacity_reservation_target.as_ref()
    }
}
impl CapacityReservationSpecification {
    /// Creates a new builder-style object to manufacture [`CapacityReservationSpecification`](crate::types::CapacityReservationSpecification).
    pub fn builder() -> crate::types::builders::CapacityReservationSpecificationBuilder {
        crate::types::builders::CapacityReservationSpecificationBuilder::default()
    }
}

/// A builder for [`CapacityReservationSpecification`](crate::types::CapacityReservationSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CapacityReservationSpecificationBuilder {
    pub(crate) capacity_reservation_preference: ::std::option::Option<crate::types::CapacityReservationPreferenceEnum>,
    pub(crate) capacity_reservation_target: ::std::option::Option<crate::types::CapacityReservationTarget>,
}
impl CapacityReservationSpecificationBuilder {
    /// <p>Preference for using capacity reservation.</p>
    pub fn capacity_reservation_preference(mut self, input: crate::types::CapacityReservationPreferenceEnum) -> Self {
        self.capacity_reservation_preference = ::std::option::Option::Some(input);
        self
    }
    /// <p>Preference for using capacity reservation.</p>
    pub fn set_capacity_reservation_preference(mut self, input: ::std::option::Option<crate::types::CapacityReservationPreferenceEnum>) -> Self {
        self.capacity_reservation_preference = input;
        self
    }
    /// <p>Preference for using capacity reservation.</p>
    pub fn get_capacity_reservation_preference(&self) -> &::std::option::Option<crate::types::CapacityReservationPreferenceEnum> {
        &self.capacity_reservation_preference
    }
    /// <p>Specific capacity reservation target.</p>
    pub fn capacity_reservation_target(mut self, input: crate::types::CapacityReservationTarget) -> Self {
        self.capacity_reservation_target = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specific capacity reservation target.</p>
    pub fn set_capacity_reservation_target(mut self, input: ::std::option::Option<crate::types::CapacityReservationTarget>) -> Self {
        self.capacity_reservation_target = input;
        self
    }
    /// <p>Specific capacity reservation target.</p>
    pub fn get_capacity_reservation_target(&self) -> &::std::option::Option<crate::types::CapacityReservationTarget> {
        &self.capacity_reservation_target
    }
    /// Consumes the builder and constructs a [`CapacityReservationSpecification`](crate::types::CapacityReservationSpecification).
    pub fn build(self) -> crate::types::CapacityReservationSpecification {
        crate::types::CapacityReservationSpecification {
            capacity_reservation_preference: self.capacity_reservation_preference,
            capacity_reservation_target: self.capacity_reservation_target,
        }
    }
}
