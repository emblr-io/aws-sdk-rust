// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies a specific capacity reservation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CapacityReservationTarget {
    /// <p>Unique identifier for the capacity reservation.</p>
    pub capacity_reservation_id: ::std::option::Option<::std::string::String>,
    /// <p>ARN of the capacity reservation resource group.</p>
    pub capacity_reservation_resource_group_arn: ::std::option::Option<::std::string::String>,
}
impl CapacityReservationTarget {
    /// <p>Unique identifier for the capacity reservation.</p>
    pub fn capacity_reservation_id(&self) -> ::std::option::Option<&str> {
        self.capacity_reservation_id.as_deref()
    }
    /// <p>ARN of the capacity reservation resource group.</p>
    pub fn capacity_reservation_resource_group_arn(&self) -> ::std::option::Option<&str> {
        self.capacity_reservation_resource_group_arn.as_deref()
    }
}
impl CapacityReservationTarget {
    /// Creates a new builder-style object to manufacture [`CapacityReservationTarget`](crate::types::CapacityReservationTarget).
    pub fn builder() -> crate::types::builders::CapacityReservationTargetBuilder {
        crate::types::builders::CapacityReservationTargetBuilder::default()
    }
}

/// A builder for [`CapacityReservationTarget`](crate::types::CapacityReservationTarget).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CapacityReservationTargetBuilder {
    pub(crate) capacity_reservation_id: ::std::option::Option<::std::string::String>,
    pub(crate) capacity_reservation_resource_group_arn: ::std::option::Option<::std::string::String>,
}
impl CapacityReservationTargetBuilder {
    /// <p>Unique identifier for the capacity reservation.</p>
    pub fn capacity_reservation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_reservation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique identifier for the capacity reservation.</p>
    pub fn set_capacity_reservation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_reservation_id = input;
        self
    }
    /// <p>Unique identifier for the capacity reservation.</p>
    pub fn get_capacity_reservation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_reservation_id
    }
    /// <p>ARN of the capacity reservation resource group.</p>
    pub fn capacity_reservation_resource_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_reservation_resource_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN of the capacity reservation resource group.</p>
    pub fn set_capacity_reservation_resource_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_reservation_resource_group_arn = input;
        self
    }
    /// <p>ARN of the capacity reservation resource group.</p>
    pub fn get_capacity_reservation_resource_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_reservation_resource_group_arn
    }
    /// Consumes the builder and constructs a [`CapacityReservationTarget`](crate::types::CapacityReservationTarget).
    pub fn build(self) -> crate::types::CapacityReservationTarget {
        crate::types::CapacityReservationTarget {
            capacity_reservation_id: self.capacity_reservation_id,
            capacity_reservation_resource_group_arn: self.capacity_reservation_resource_group_arn,
        }
    }
}
