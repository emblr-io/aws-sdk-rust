// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteBudgetInput {
    /// <p>The farm ID of the farm to remove from the budget.</p>
    pub farm_id: ::std::option::Option<::std::string::String>,
    /// <p>The budget ID of the budget to delete.</p>
    pub budget_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBudgetInput {
    /// <p>The farm ID of the farm to remove from the budget.</p>
    pub fn farm_id(&self) -> ::std::option::Option<&str> {
        self.farm_id.as_deref()
    }
    /// <p>The budget ID of the budget to delete.</p>
    pub fn budget_id(&self) -> ::std::option::Option<&str> {
        self.budget_id.as_deref()
    }
}
impl DeleteBudgetInput {
    /// Creates a new builder-style object to manufacture [`DeleteBudgetInput`](crate::operation::delete_budget::DeleteBudgetInput).
    pub fn builder() -> crate::operation::delete_budget::builders::DeleteBudgetInputBuilder {
        crate::operation::delete_budget::builders::DeleteBudgetInputBuilder::default()
    }
}

/// A builder for [`DeleteBudgetInput`](crate::operation::delete_budget::DeleteBudgetInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteBudgetInputBuilder {
    pub(crate) farm_id: ::std::option::Option<::std::string::String>,
    pub(crate) budget_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBudgetInputBuilder {
    /// <p>The farm ID of the farm to remove from the budget.</p>
    /// This field is required.
    pub fn farm_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.farm_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The farm ID of the farm to remove from the budget.</p>
    pub fn set_farm_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.farm_id = input;
        self
    }
    /// <p>The farm ID of the farm to remove from the budget.</p>
    pub fn get_farm_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.farm_id
    }
    /// <p>The budget ID of the budget to delete.</p>
    /// This field is required.
    pub fn budget_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.budget_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The budget ID of the budget to delete.</p>
    pub fn set_budget_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.budget_id = input;
        self
    }
    /// <p>The budget ID of the budget to delete.</p>
    pub fn get_budget_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.budget_id
    }
    /// Consumes the builder and constructs a [`DeleteBudgetInput`](crate::operation::delete_budget::DeleteBudgetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_budget::DeleteBudgetInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_budget::DeleteBudgetInput {
            farm_id: self.farm_id,
            budget_id: self.budget_id,
        })
    }
}
