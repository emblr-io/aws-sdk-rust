// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AssumeQueueRoleForReadOutput {
    /// <p>The credentials for the queue role.</p>
    pub credentials: ::std::option::Option<crate::types::AwsCredentials>,
    _request_id: Option<String>,
}
impl AssumeQueueRoleForReadOutput {
    /// <p>The credentials for the queue role.</p>
    pub fn credentials(&self) -> ::std::option::Option<&crate::types::AwsCredentials> {
        self.credentials.as_ref()
    }
}
impl ::std::fmt::Debug for AssumeQueueRoleForReadOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AssumeQueueRoleForReadOutput");
        formatter.field("credentials", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_types::request_id::RequestId for AssumeQueueRoleForReadOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AssumeQueueRoleForReadOutput {
    /// Creates a new builder-style object to manufacture [`AssumeQueueRoleForReadOutput`](crate::operation::assume_queue_role_for_read::AssumeQueueRoleForReadOutput).
    pub fn builder() -> crate::operation::assume_queue_role_for_read::builders::AssumeQueueRoleForReadOutputBuilder {
        crate::operation::assume_queue_role_for_read::builders::AssumeQueueRoleForReadOutputBuilder::default()
    }
}

/// A builder for [`AssumeQueueRoleForReadOutput`](crate::operation::assume_queue_role_for_read::AssumeQueueRoleForReadOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct AssumeQueueRoleForReadOutputBuilder {
    pub(crate) credentials: ::std::option::Option<crate::types::AwsCredentials>,
    _request_id: Option<String>,
}
impl AssumeQueueRoleForReadOutputBuilder {
    /// <p>The credentials for the queue role.</p>
    /// This field is required.
    pub fn credentials(mut self, input: crate::types::AwsCredentials) -> Self {
        self.credentials = ::std::option::Option::Some(input);
        self
    }
    /// <p>The credentials for the queue role.</p>
    pub fn set_credentials(mut self, input: ::std::option::Option<crate::types::AwsCredentials>) -> Self {
        self.credentials = input;
        self
    }
    /// <p>The credentials for the queue role.</p>
    pub fn get_credentials(&self) -> &::std::option::Option<crate::types::AwsCredentials> {
        &self.credentials
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AssumeQueueRoleForReadOutput`](crate::operation::assume_queue_role_for_read::AssumeQueueRoleForReadOutput).
    pub fn build(self) -> crate::operation::assume_queue_role_for_read::AssumeQueueRoleForReadOutput {
        crate::operation::assume_queue_role_for_read::AssumeQueueRoleForReadOutput {
            credentials: self.credentials,
            _request_id: self._request_id,
        }
    }
}
impl ::std::fmt::Debug for AssumeQueueRoleForReadOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AssumeQueueRoleForReadOutputBuilder");
        formatter.field("credentials", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
