// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a worker search.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkerSearchSummary {
    /// <p>The fleet ID.</p>
    pub fleet_id: ::std::option::Option<::std::string::String>,
    /// <p>The worker ID.</p>
    pub worker_id: ::std::option::Option<::std::string::String>,
    /// <p>The status of the worker search.</p>
    pub status: ::std::option::Option<crate::types::WorkerStatus>,
    /// <p>Provides the Amazon EC2 instance properties of the worker host.</p>
    pub host_properties: ::std::option::Option<crate::types::HostPropertiesResponse>,
    /// <p>The user or system that created this resource.</p>
    pub created_by: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the resource was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The user or system that updated this resource.</p>
    pub updated_by: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the resource was updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl WorkerSearchSummary {
    /// <p>The fleet ID.</p>
    pub fn fleet_id(&self) -> ::std::option::Option<&str> {
        self.fleet_id.as_deref()
    }
    /// <p>The worker ID.</p>
    pub fn worker_id(&self) -> ::std::option::Option<&str> {
        self.worker_id.as_deref()
    }
    /// <p>The status of the worker search.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::WorkerStatus> {
        self.status.as_ref()
    }
    /// <p>Provides the Amazon EC2 instance properties of the worker host.</p>
    pub fn host_properties(&self) -> ::std::option::Option<&crate::types::HostPropertiesResponse> {
        self.host_properties.as_ref()
    }
    /// <p>The user or system that created this resource.</p>
    pub fn created_by(&self) -> ::std::option::Option<&str> {
        self.created_by.as_deref()
    }
    /// <p>The date and time the resource was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The user or system that updated this resource.</p>
    pub fn updated_by(&self) -> ::std::option::Option<&str> {
        self.updated_by.as_deref()
    }
    /// <p>The date and time the resource was updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl WorkerSearchSummary {
    /// Creates a new builder-style object to manufacture [`WorkerSearchSummary`](crate::types::WorkerSearchSummary).
    pub fn builder() -> crate::types::builders::WorkerSearchSummaryBuilder {
        crate::types::builders::WorkerSearchSummaryBuilder::default()
    }
}

/// A builder for [`WorkerSearchSummary`](crate::types::WorkerSearchSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WorkerSearchSummaryBuilder {
    pub(crate) fleet_id: ::std::option::Option<::std::string::String>,
    pub(crate) worker_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::WorkerStatus>,
    pub(crate) host_properties: ::std::option::Option<crate::types::HostPropertiesResponse>,
    pub(crate) created_by: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_by: ::std::option::Option<::std::string::String>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl WorkerSearchSummaryBuilder {
    /// <p>The fleet ID.</p>
    pub fn fleet_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fleet_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The fleet ID.</p>
    pub fn set_fleet_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fleet_id = input;
        self
    }
    /// <p>The fleet ID.</p>
    pub fn get_fleet_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.fleet_id
    }
    /// <p>The worker ID.</p>
    pub fn worker_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.worker_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The worker ID.</p>
    pub fn set_worker_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.worker_id = input;
        self
    }
    /// <p>The worker ID.</p>
    pub fn get_worker_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.worker_id
    }
    /// <p>The status of the worker search.</p>
    pub fn status(mut self, input: crate::types::WorkerStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the worker search.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::WorkerStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the worker search.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::WorkerStatus> {
        &self.status
    }
    /// <p>Provides the Amazon EC2 instance properties of the worker host.</p>
    pub fn host_properties(mut self, input: crate::types::HostPropertiesResponse) -> Self {
        self.host_properties = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides the Amazon EC2 instance properties of the worker host.</p>
    pub fn set_host_properties(mut self, input: ::std::option::Option<crate::types::HostPropertiesResponse>) -> Self {
        self.host_properties = input;
        self
    }
    /// <p>Provides the Amazon EC2 instance properties of the worker host.</p>
    pub fn get_host_properties(&self) -> &::std::option::Option<crate::types::HostPropertiesResponse> {
        &self.host_properties
    }
    /// <p>The user or system that created this resource.</p>
    pub fn created_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.created_by = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user or system that created this resource.</p>
    pub fn set_created_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.created_by = input;
        self
    }
    /// <p>The user or system that created this resource.</p>
    pub fn get_created_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.created_by
    }
    /// <p>The date and time the resource was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the resource was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time the resource was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The user or system that updated this resource.</p>
    pub fn updated_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.updated_by = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user or system that updated this resource.</p>
    pub fn set_updated_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.updated_by = input;
        self
    }
    /// <p>The user or system that updated this resource.</p>
    pub fn get_updated_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.updated_by
    }
    /// <p>The date and time the resource was updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the resource was updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The date and time the resource was updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`WorkerSearchSummary`](crate::types::WorkerSearchSummary).
    pub fn build(self) -> crate::types::WorkerSearchSummary {
        crate::types::WorkerSearchSummary {
            fleet_id: self.fleet_id,
            worker_id: self.worker_id,
            status: self.status,
            host_properties: self.host_properties,
            created_by: self.created_by,
            created_at: self.created_at,
            updated_by: self.updated_by,
            updated_at: self.updated_at,
        }
    }
}
