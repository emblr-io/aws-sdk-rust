// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The action for a session defined by the session action ID.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssignedSessionAction {
    /// <p>The session action ID for the assigned session.</p>
    pub session_action_id: ::std::string::String,
    /// <p>The definition of the assigned session action.</p>
    pub definition: ::std::option::Option<crate::types::AssignedSessionActionDefinition>,
}
impl AssignedSessionAction {
    /// <p>The session action ID for the assigned session.</p>
    pub fn session_action_id(&self) -> &str {
        use std::ops::Deref;
        self.session_action_id.deref()
    }
    /// <p>The definition of the assigned session action.</p>
    pub fn definition(&self) -> ::std::option::Option<&crate::types::AssignedSessionActionDefinition> {
        self.definition.as_ref()
    }
}
impl AssignedSessionAction {
    /// Creates a new builder-style object to manufacture [`AssignedSessionAction`](crate::types::AssignedSessionAction).
    pub fn builder() -> crate::types::builders::AssignedSessionActionBuilder {
        crate::types::builders::AssignedSessionActionBuilder::default()
    }
}

/// A builder for [`AssignedSessionAction`](crate::types::AssignedSessionAction).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssignedSessionActionBuilder {
    pub(crate) session_action_id: ::std::option::Option<::std::string::String>,
    pub(crate) definition: ::std::option::Option<crate::types::AssignedSessionActionDefinition>,
}
impl AssignedSessionActionBuilder {
    /// <p>The session action ID for the assigned session.</p>
    /// This field is required.
    pub fn session_action_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.session_action_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The session action ID for the assigned session.</p>
    pub fn set_session_action_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.session_action_id = input;
        self
    }
    /// <p>The session action ID for the assigned session.</p>
    pub fn get_session_action_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.session_action_id
    }
    /// <p>The definition of the assigned session action.</p>
    /// This field is required.
    pub fn definition(mut self, input: crate::types::AssignedSessionActionDefinition) -> Self {
        self.definition = ::std::option::Option::Some(input);
        self
    }
    /// <p>The definition of the assigned session action.</p>
    pub fn set_definition(mut self, input: ::std::option::Option<crate::types::AssignedSessionActionDefinition>) -> Self {
        self.definition = input;
        self
    }
    /// <p>The definition of the assigned session action.</p>
    pub fn get_definition(&self) -> &::std::option::Option<crate::types::AssignedSessionActionDefinition> {
        &self.definition
    }
    /// Consumes the builder and constructs a [`AssignedSessionAction`](crate::types::AssignedSessionAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`session_action_id`](crate::types::builders::AssignedSessionActionBuilder::session_action_id)
    pub fn build(self) -> ::std::result::Result<crate::types::AssignedSessionAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssignedSessionAction {
            session_action_id: self.session_action_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "session_action_id",
                    "session_action_id was not specified but it is required when building AssignedSessionAction",
                )
            })?,
            definition: self.definition,
        })
    }
}
