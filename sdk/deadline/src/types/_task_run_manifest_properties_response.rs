// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The manifest properties for a task run, corresponding to the manifest properties in the job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaskRunManifestPropertiesResponse {
    /// <p>The manifest file path.</p>
    pub output_manifest_path: ::std::option::Option<::std::string::String>,
    /// <p>The hash value of the file.</p>
    pub output_manifest_hash: ::std::option::Option<::std::string::String>,
}
impl TaskRunManifestPropertiesResponse {
    /// <p>The manifest file path.</p>
    pub fn output_manifest_path(&self) -> ::std::option::Option<&str> {
        self.output_manifest_path.as_deref()
    }
    /// <p>The hash value of the file.</p>
    pub fn output_manifest_hash(&self) -> ::std::option::Option<&str> {
        self.output_manifest_hash.as_deref()
    }
}
impl TaskRunManifestPropertiesResponse {
    /// Creates a new builder-style object to manufacture [`TaskRunManifestPropertiesResponse`](crate::types::TaskRunManifestPropertiesResponse).
    pub fn builder() -> crate::types::builders::TaskRunManifestPropertiesResponseBuilder {
        crate::types::builders::TaskRunManifestPropertiesResponseBuilder::default()
    }
}

/// A builder for [`TaskRunManifestPropertiesResponse`](crate::types::TaskRunManifestPropertiesResponse).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TaskRunManifestPropertiesResponseBuilder {
    pub(crate) output_manifest_path: ::std::option::Option<::std::string::String>,
    pub(crate) output_manifest_hash: ::std::option::Option<::std::string::String>,
}
impl TaskRunManifestPropertiesResponseBuilder {
    /// <p>The manifest file path.</p>
    pub fn output_manifest_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.output_manifest_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The manifest file path.</p>
    pub fn set_output_manifest_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.output_manifest_path = input;
        self
    }
    /// <p>The manifest file path.</p>
    pub fn get_output_manifest_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.output_manifest_path
    }
    /// <p>The hash value of the file.</p>
    pub fn output_manifest_hash(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.output_manifest_hash = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The hash value of the file.</p>
    pub fn set_output_manifest_hash(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.output_manifest_hash = input;
        self
    }
    /// <p>The hash value of the file.</p>
    pub fn get_output_manifest_hash(&self) -> &::std::option::Option<::std::string::String> {
        &self.output_manifest_hash
    }
    /// Consumes the builder and constructs a [`TaskRunManifestPropertiesResponse`](crate::types::TaskRunManifestPropertiesResponse).
    pub fn build(self) -> crate::types::TaskRunManifestPropertiesResponse {
        crate::types::TaskRunManifestPropertiesResponse {
            output_manifest_path: self.output_manifest_path,
            output_manifest_hash: self.output_manifest_hash,
        }
    }
}
