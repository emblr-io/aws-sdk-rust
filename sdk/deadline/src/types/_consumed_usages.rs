// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The consumed usage for the resource.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConsumedUsages {
    /// <p>The amount of the budget consumed.</p>
    pub approximate_dollar_usage: f32,
}
impl ConsumedUsages {
    /// <p>The amount of the budget consumed.</p>
    pub fn approximate_dollar_usage(&self) -> f32 {
        self.approximate_dollar_usage
    }
}
impl ConsumedUsages {
    /// Creates a new builder-style object to manufacture [`ConsumedUsages`](crate::types::ConsumedUsages).
    pub fn builder() -> crate::types::builders::ConsumedUsagesBuilder {
        crate::types::builders::ConsumedUsagesBuilder::default()
    }
}

/// A builder for [`ConsumedUsages`](crate::types::ConsumedUsages).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConsumedUsagesBuilder {
    pub(crate) approximate_dollar_usage: ::std::option::Option<f32>,
}
impl ConsumedUsagesBuilder {
    /// <p>The amount of the budget consumed.</p>
    /// This field is required.
    pub fn approximate_dollar_usage(mut self, input: f32) -> Self {
        self.approximate_dollar_usage = ::std::option::Option::Some(input);
        self
    }
    /// <p>The amount of the budget consumed.</p>
    pub fn set_approximate_dollar_usage(mut self, input: ::std::option::Option<f32>) -> Self {
        self.approximate_dollar_usage = input;
        self
    }
    /// <p>The amount of the budget consumed.</p>
    pub fn get_approximate_dollar_usage(&self) -> &::std::option::Option<f32> {
        &self.approximate_dollar_usage
    }
    /// Consumes the builder and constructs a [`ConsumedUsages`](crate::types::ConsumedUsages).
    /// This method will fail if any of the following fields are not set:
    /// - [`approximate_dollar_usage`](crate::types::builders::ConsumedUsagesBuilder::approximate_dollar_usage)
    pub fn build(self) -> ::std::result::Result<crate::types::ConsumedUsages, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ConsumedUsages {
            approximate_dollar_usage: self.approximate_dollar_usage.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "approximate_dollar_usage",
                    "approximate_dollar_usage was not specified but it is required when building ConsumedUsages",
                )
            })?,
        })
    }
}
