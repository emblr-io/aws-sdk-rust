// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a storage profile.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StorageProfileSummary {
    /// <p>The storage profile ID.</p>
    pub storage_profile_id: ::std::string::String,
    /// <p>The display name of the storage profile summary to update.</p><important>
    /// <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p>
    /// </important>
    pub display_name: ::std::string::String,
    /// <p>The operating system (OS) family.</p>
    pub os_family: crate::types::StorageProfileOperatingSystemFamily,
}
impl StorageProfileSummary {
    /// <p>The storage profile ID.</p>
    pub fn storage_profile_id(&self) -> &str {
        use std::ops::Deref;
        self.storage_profile_id.deref()
    }
    /// <p>The display name of the storage profile summary to update.</p><important>
    /// <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p>
    /// </important>
    pub fn display_name(&self) -> &str {
        use std::ops::Deref;
        self.display_name.deref()
    }
    /// <p>The operating system (OS) family.</p>
    pub fn os_family(&self) -> &crate::types::StorageProfileOperatingSystemFamily {
        &self.os_family
    }
}
impl StorageProfileSummary {
    /// Creates a new builder-style object to manufacture [`StorageProfileSummary`](crate::types::StorageProfileSummary).
    pub fn builder() -> crate::types::builders::StorageProfileSummaryBuilder {
        crate::types::builders::StorageProfileSummaryBuilder::default()
    }
}

/// A builder for [`StorageProfileSummary`](crate::types::StorageProfileSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StorageProfileSummaryBuilder {
    pub(crate) storage_profile_id: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) os_family: ::std::option::Option<crate::types::StorageProfileOperatingSystemFamily>,
}
impl StorageProfileSummaryBuilder {
    /// <p>The storage profile ID.</p>
    /// This field is required.
    pub fn storage_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.storage_profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The storage profile ID.</p>
    pub fn set_storage_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.storage_profile_id = input;
        self
    }
    /// <p>The storage profile ID.</p>
    pub fn get_storage_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.storage_profile_id
    }
    /// <p>The display name of the storage profile summary to update.</p><important>
    /// <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p>
    /// </important>
    /// This field is required.
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the storage profile summary to update.</p><important>
    /// <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p>
    /// </important>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The display name of the storage profile summary to update.</p><important>
    /// <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p>
    /// </important>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The operating system (OS) family.</p>
    /// This field is required.
    pub fn os_family(mut self, input: crate::types::StorageProfileOperatingSystemFamily) -> Self {
        self.os_family = ::std::option::Option::Some(input);
        self
    }
    /// <p>The operating system (OS) family.</p>
    pub fn set_os_family(mut self, input: ::std::option::Option<crate::types::StorageProfileOperatingSystemFamily>) -> Self {
        self.os_family = input;
        self
    }
    /// <p>The operating system (OS) family.</p>
    pub fn get_os_family(&self) -> &::std::option::Option<crate::types::StorageProfileOperatingSystemFamily> {
        &self.os_family
    }
    /// Consumes the builder and constructs a [`StorageProfileSummary`](crate::types::StorageProfileSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`storage_profile_id`](crate::types::builders::StorageProfileSummaryBuilder::storage_profile_id)
    /// - [`display_name`](crate::types::builders::StorageProfileSummaryBuilder::display_name)
    /// - [`os_family`](crate::types::builders::StorageProfileSummaryBuilder::os_family)
    pub fn build(self) -> ::std::result::Result<crate::types::StorageProfileSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StorageProfileSummary {
            storage_profile_id: self.storage_profile_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "storage_profile_id",
                    "storage_profile_id was not specified but it is required when building StorageProfileSummary",
                )
            })?,
            display_name: self.display_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "display_name",
                    "display_name was not specified but it is required when building StorageProfileSummary",
                )
            })?,
            os_family: self.os_family.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "os_family",
                    "os_family was not specified but it is required when building StorageProfileSummary",
                )
            })?,
        })
    }
}
