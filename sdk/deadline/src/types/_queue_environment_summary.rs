// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of a queue environment.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueueEnvironmentSummary {
    /// <p>The queue environment ID.</p>
    pub queue_environment_id: ::std::string::String,
    /// <p>The name of the queue environment.</p>
    pub name: ::std::string::String,
    /// <p>The queue environment's priority.</p>
    pub priority: i32,
}
impl QueueEnvironmentSummary {
    /// <p>The queue environment ID.</p>
    pub fn queue_environment_id(&self) -> &str {
        use std::ops::Deref;
        self.queue_environment_id.deref()
    }
    /// <p>The name of the queue environment.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The queue environment's priority.</p>
    pub fn priority(&self) -> i32 {
        self.priority
    }
}
impl QueueEnvironmentSummary {
    /// Creates a new builder-style object to manufacture [`QueueEnvironmentSummary`](crate::types::QueueEnvironmentSummary).
    pub fn builder() -> crate::types::builders::QueueEnvironmentSummaryBuilder {
        crate::types::builders::QueueEnvironmentSummaryBuilder::default()
    }
}

/// A builder for [`QueueEnvironmentSummary`](crate::types::QueueEnvironmentSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct QueueEnvironmentSummaryBuilder {
    pub(crate) queue_environment_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) priority: ::std::option::Option<i32>,
}
impl QueueEnvironmentSummaryBuilder {
    /// <p>The queue environment ID.</p>
    /// This field is required.
    pub fn queue_environment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.queue_environment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The queue environment ID.</p>
    pub fn set_queue_environment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.queue_environment_id = input;
        self
    }
    /// <p>The queue environment ID.</p>
    pub fn get_queue_environment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.queue_environment_id
    }
    /// <p>The name of the queue environment.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the queue environment.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the queue environment.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The queue environment's priority.</p>
    /// This field is required.
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = ::std::option::Option::Some(input);
        self
    }
    /// <p>The queue environment's priority.</p>
    pub fn set_priority(mut self, input: ::std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>The queue environment's priority.</p>
    pub fn get_priority(&self) -> &::std::option::Option<i32> {
        &self.priority
    }
    /// Consumes the builder and constructs a [`QueueEnvironmentSummary`](crate::types::QueueEnvironmentSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`queue_environment_id`](crate::types::builders::QueueEnvironmentSummaryBuilder::queue_environment_id)
    /// - [`name`](crate::types::builders::QueueEnvironmentSummaryBuilder::name)
    /// - [`priority`](crate::types::builders::QueueEnvironmentSummaryBuilder::priority)
    pub fn build(self) -> ::std::result::Result<crate::types::QueueEnvironmentSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::QueueEnvironmentSummary {
            queue_environment_id: self.queue_environment_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "queue_environment_id",
                    "queue_environment_id was not specified but it is required when building QueueEnvironmentSummary",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building QueueEnvironmentSummary",
                )
            })?,
            priority: self.priority.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "priority",
                    "priority was not specified but it is required when building QueueEnvironmentSummary",
                )
            })?,
        })
    }
}
