// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_updated_session_action_info(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdatedSessionActionInfo,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.completed_status {
        object.key("completedStatus").string(var_1.as_str());
    }
    if let Some(var_2) = &input.process_exit_code {
        object.key("processExitCode").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.progress_message {
        object.key("progressMessage").string(var_3.as_str());
    }
    if let Some(var_4) = &input.started_at {
        object
            .key("startedAt")
            .date_time(var_4, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    if let Some(var_5) = &input.ended_at {
        object.key("endedAt").date_time(var_5, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    if let Some(var_6) = &input.updated_at {
        object
            .key("updatedAt")
            .date_time(var_6, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    if let Some(var_7) = &input.progress_percent {
        object.key("progressPercent").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.manifests {
        let mut array_9 = object.key("manifests").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_task_run_manifest_properties_request::ser_task_run_manifest_properties_request(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    Ok(())
}
