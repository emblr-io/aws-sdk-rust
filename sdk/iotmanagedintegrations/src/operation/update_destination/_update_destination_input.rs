// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateDestinationInput {
    /// <p>The name of the customer-managed destination.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>
    pub delivery_destination_arn: ::std::option::Option<::std::string::String>,
    /// <p>The destination type for the customer-managed destination.</p>
    pub delivery_destination_type: ::std::option::Option<crate::types::DeliveryDestinationType>,
    /// <p>The Amazon Resource Name (ARN) of the delivery destination role.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The description of the customer-managed destination.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl UpdateDestinationInput {
    /// <p>The name of the customer-managed destination.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>
    pub fn delivery_destination_arn(&self) -> ::std::option::Option<&str> {
        self.delivery_destination_arn.as_deref()
    }
    /// <p>The destination type for the customer-managed destination.</p>
    pub fn delivery_destination_type(&self) -> ::std::option::Option<&crate::types::DeliveryDestinationType> {
        self.delivery_destination_type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the delivery destination role.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The description of the customer-managed destination.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl UpdateDestinationInput {
    /// Creates a new builder-style object to manufacture [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
    pub fn builder() -> crate::operation::update_destination::builders::UpdateDestinationInputBuilder {
        crate::operation::update_destination::builders::UpdateDestinationInputBuilder::default()
    }
}

/// A builder for [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateDestinationInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) delivery_destination_arn: ::std::option::Option<::std::string::String>,
    pub(crate) delivery_destination_type: ::std::option::Option<crate::types::DeliveryDestinationType>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl UpdateDestinationInputBuilder {
    /// <p>The name of the customer-managed destination.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the customer-managed destination.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the customer-managed destination.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>
    pub fn delivery_destination_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.delivery_destination_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>
    pub fn set_delivery_destination_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.delivery_destination_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>
    pub fn get_delivery_destination_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.delivery_destination_arn
    }
    /// <p>The destination type for the customer-managed destination.</p>
    pub fn delivery_destination_type(mut self, input: crate::types::DeliveryDestinationType) -> Self {
        self.delivery_destination_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The destination type for the customer-managed destination.</p>
    pub fn set_delivery_destination_type(mut self, input: ::std::option::Option<crate::types::DeliveryDestinationType>) -> Self {
        self.delivery_destination_type = input;
        self
    }
    /// <p>The destination type for the customer-managed destination.</p>
    pub fn get_delivery_destination_type(&self) -> &::std::option::Option<crate::types::DeliveryDestinationType> {
        &self.delivery_destination_type
    }
    /// <p>The Amazon Resource Name (ARN) of the delivery destination role.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the delivery destination role.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the delivery destination role.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The description of the customer-managed destination.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the customer-managed destination.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the customer-managed destination.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_destination::UpdateDestinationInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_destination::UpdateDestinationInput {
            name: self.name,
            delivery_destination_arn: self.delivery_destination_arn,
            delivery_destination_type: self.delivery_destination_type,
            role_arn: self.role_arn,
            description: self.description,
        })
    }
}
