// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GetOtaTaskConfigurationOutput {
    /// <p>The over-the-air (OTA) task configuration id.</p>
    pub task_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the over-the-air (OTA) task configuration.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Describes the type of configuration used for the over-the-air (OTA) task.</p>
    pub push_config: ::std::option::Option<crate::types::PushConfig>,
    /// <p>A description of the over-the-air (OTA) task configuration.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetOtaTaskConfigurationOutput {
    /// <p>The over-the-air (OTA) task configuration id.</p>
    pub fn task_configuration_id(&self) -> ::std::option::Option<&str> {
        self.task_configuration_id.as_deref()
    }
    /// <p>The name of the over-the-air (OTA) task configuration.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Describes the type of configuration used for the over-the-air (OTA) task.</p>
    pub fn push_config(&self) -> ::std::option::Option<&crate::types::PushConfig> {
        self.push_config.as_ref()
    }
    /// <p>A description of the over-the-air (OTA) task configuration.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
}
impl ::std::fmt::Debug for GetOtaTaskConfigurationOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetOtaTaskConfigurationOutput");
        formatter.field("task_configuration_id", &self.task_configuration_id);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("push_config", &self.push_config);
        formatter.field("description", &self.description);
        formatter.field("created_at", &self.created_at);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_types::request_id::RequestId for GetOtaTaskConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetOtaTaskConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`GetOtaTaskConfigurationOutput`](crate::operation::get_ota_task_configuration::GetOtaTaskConfigurationOutput).
    pub fn builder() -> crate::operation::get_ota_task_configuration::builders::GetOtaTaskConfigurationOutputBuilder {
        crate::operation::get_ota_task_configuration::builders::GetOtaTaskConfigurationOutputBuilder::default()
    }
}

/// A builder for [`GetOtaTaskConfigurationOutput`](crate::operation::get_ota_task_configuration::GetOtaTaskConfigurationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GetOtaTaskConfigurationOutputBuilder {
    pub(crate) task_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) push_config: ::std::option::Option<crate::types::PushConfig>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetOtaTaskConfigurationOutputBuilder {
    /// <p>The over-the-air (OTA) task configuration id.</p>
    pub fn task_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The over-the-air (OTA) task configuration id.</p>
    pub fn set_task_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_configuration_id = input;
        self
    }
    /// <p>The over-the-air (OTA) task configuration id.</p>
    pub fn get_task_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_configuration_id
    }
    /// <p>The name of the over-the-air (OTA) task configuration.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the over-the-air (OTA) task configuration.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the over-the-air (OTA) task configuration.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Describes the type of configuration used for the over-the-air (OTA) task.</p>
    pub fn push_config(mut self, input: crate::types::PushConfig) -> Self {
        self.push_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the type of configuration used for the over-the-air (OTA) task.</p>
    pub fn set_push_config(mut self, input: ::std::option::Option<crate::types::PushConfig>) -> Self {
        self.push_config = input;
        self
    }
    /// <p>Describes the type of configuration used for the over-the-air (OTA) task.</p>
    pub fn get_push_config(&self) -> &::std::option::Option<crate::types::PushConfig> {
        &self.push_config
    }
    /// <p>A description of the over-the-air (OTA) task configuration.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the over-the-air (OTA) task configuration.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the over-the-air (OTA) task configuration.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetOtaTaskConfigurationOutput`](crate::operation::get_ota_task_configuration::GetOtaTaskConfigurationOutput).
    pub fn build(self) -> crate::operation::get_ota_task_configuration::GetOtaTaskConfigurationOutput {
        crate::operation::get_ota_task_configuration::GetOtaTaskConfigurationOutput {
            task_configuration_id: self.task_configuration_id,
            name: self.name,
            push_config: self.push_config,
            description: self.description,
            created_at: self.created_at,
            _request_id: self._request_id,
        }
    }
}
impl ::std::fmt::Debug for GetOtaTaskConfigurationOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetOtaTaskConfigurationOutputBuilder");
        formatter.field("task_configuration_id", &self.task_configuration_id);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("push_config", &self.push_config);
        formatter.field("description", &self.description);
        formatter.field("created_at", &self.created_at);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
