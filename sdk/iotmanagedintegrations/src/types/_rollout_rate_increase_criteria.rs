// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing rollout config criteria.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RolloutRateIncreaseCriteria {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub number_of_notified_things: ::std::option::Option<i32>,
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub number_of_succeeded_things: ::std::option::Option<i32>,
}
impl RolloutRateIncreaseCriteria {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_notified_things(&self) -> ::std::option::Option<i32> {
        self.number_of_notified_things
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_succeeded_things(&self) -> ::std::option::Option<i32> {
        self.number_of_succeeded_things
    }
}
impl RolloutRateIncreaseCriteria {
    /// Creates a new builder-style object to manufacture [`RolloutRateIncreaseCriteria`](crate::types::RolloutRateIncreaseCriteria).
    pub fn builder() -> crate::types::builders::RolloutRateIncreaseCriteriaBuilder {
        crate::types::builders::RolloutRateIncreaseCriteriaBuilder::default()
    }
}

/// A builder for [`RolloutRateIncreaseCriteria`](crate::types::RolloutRateIncreaseCriteria).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RolloutRateIncreaseCriteriaBuilder {
    pub(crate) number_of_notified_things: ::std::option::Option<i32>,
    pub(crate) number_of_succeeded_things: ::std::option::Option<i32>,
}
impl RolloutRateIncreaseCriteriaBuilder {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_notified_things(mut self, input: i32) -> Self {
        self.number_of_notified_things = ::std::option::Option::Some(input);
        self
    }
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn set_number_of_notified_things(mut self, input: ::std::option::Option<i32>) -> Self {
        self.number_of_notified_things = input;
        self
    }
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn get_number_of_notified_things(&self) -> &::std::option::Option<i32> {
        &self.number_of_notified_things
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_succeeded_things(mut self, input: i32) -> Self {
        self.number_of_succeeded_things = ::std::option::Option::Some(input);
        self
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn set_number_of_succeeded_things(mut self, input: ::std::option::Option<i32>) -> Self {
        self.number_of_succeeded_things = input;
        self
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn get_number_of_succeeded_things(&self) -> &::std::option::Option<i32> {
        &self.number_of_succeeded_things
    }
    /// Consumes the builder and constructs a [`RolloutRateIncreaseCriteria`](crate::types::RolloutRateIncreaseCriteria).
    pub fn build(self) -> crate::types::RolloutRateIncreaseCriteria {
        crate::types::RolloutRateIncreaseCriteria {
            number_of_notified_things: self.number_of_notified_things,
            number_of_succeeded_things: self.number_of_succeeded_things,
        }
    }
}
