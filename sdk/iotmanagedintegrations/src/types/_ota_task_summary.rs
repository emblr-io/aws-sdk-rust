// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing one over-the-air (OTA) task.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OtaTaskSummary {
    /// <p>The id of the over-the-air (OTA) task.</p>
    pub task_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>
    pub task_arn: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp value of when the over-the-air (OTA) task was created at.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The identifier for the over-the-air (OTA) task configuration.</p>
    pub task_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The status of the over-the-air (OTA) task summary.</p>
    pub status: ::std::option::Option<crate::types::OtaStatus>,
}
impl OtaTaskSummary {
    /// <p>The id of the over-the-air (OTA) task.</p>
    pub fn task_id(&self) -> ::std::option::Option<&str> {
        self.task_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>
    pub fn task_arn(&self) -> ::std::option::Option<&str> {
        self.task_arn.as_deref()
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was created at.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
    /// <p>The identifier for the over-the-air (OTA) task configuration.</p>
    pub fn task_configuration_id(&self) -> ::std::option::Option<&str> {
        self.task_configuration_id.as_deref()
    }
    /// <p>The status of the over-the-air (OTA) task summary.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::OtaStatus> {
        self.status.as_ref()
    }
}
impl OtaTaskSummary {
    /// Creates a new builder-style object to manufacture [`OtaTaskSummary`](crate::types::OtaTaskSummary).
    pub fn builder() -> crate::types::builders::OtaTaskSummaryBuilder {
        crate::types::builders::OtaTaskSummaryBuilder::default()
    }
}

/// A builder for [`OtaTaskSummary`](crate::types::OtaTaskSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OtaTaskSummaryBuilder {
    pub(crate) task_id: ::std::option::Option<::std::string::String>,
    pub(crate) task_arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) task_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::OtaStatus>,
}
impl OtaTaskSummaryBuilder {
    /// <p>The id of the over-the-air (OTA) task.</p>
    pub fn task_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The id of the over-the-air (OTA) task.</p>
    pub fn set_task_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_id = input;
        self
    }
    /// <p>The id of the over-the-air (OTA) task.</p>
    pub fn get_task_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_id
    }
    /// <p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>
    pub fn task_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>
    pub fn set_task_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>
    pub fn get_task_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_arn
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was created at.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was created at.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was created at.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// <p>The identifier for the over-the-air (OTA) task configuration.</p>
    pub fn task_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the over-the-air (OTA) task configuration.</p>
    pub fn set_task_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_configuration_id = input;
        self
    }
    /// <p>The identifier for the over-the-air (OTA) task configuration.</p>
    pub fn get_task_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_configuration_id
    }
    /// <p>The status of the over-the-air (OTA) task summary.</p>
    pub fn status(mut self, input: crate::types::OtaStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the over-the-air (OTA) task summary.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::OtaStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the over-the-air (OTA) task summary.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::OtaStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`OtaTaskSummary`](crate::types::OtaTaskSummary).
    pub fn build(self) -> crate::types::OtaTaskSummary {
        crate::types::OtaTaskSummary {
            task_id: self.task_id,
            task_arn: self.task_arn,
            created_at: self.created_at,
            last_updated_at: self.last_updated_at,
            task_configuration_id: self.task_configuration_id,
            status: self.status,
        }
    }
}
