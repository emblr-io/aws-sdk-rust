// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing a push config.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PushConfig {
    /// <p>Structure representing one abort config.</p>
    pub abort_config: ::std::option::Option<crate::types::OtaTaskAbortConfig>,
    /// <p>Structure representing one rollout config.</p>
    pub rollout_config: ::std::option::Option<crate::types::OtaTaskExecutionRolloutConfig>,
    /// <p>Structure representing one timeout config.</p>
    pub timeout_config: ::std::option::Option<crate::types::OtaTaskTimeoutConfig>,
}
impl PushConfig {
    /// <p>Structure representing one abort config.</p>
    pub fn abort_config(&self) -> ::std::option::Option<&crate::types::OtaTaskAbortConfig> {
        self.abort_config.as_ref()
    }
    /// <p>Structure representing one rollout config.</p>
    pub fn rollout_config(&self) -> ::std::option::Option<&crate::types::OtaTaskExecutionRolloutConfig> {
        self.rollout_config.as_ref()
    }
    /// <p>Structure representing one timeout config.</p>
    pub fn timeout_config(&self) -> ::std::option::Option<&crate::types::OtaTaskTimeoutConfig> {
        self.timeout_config.as_ref()
    }
}
impl PushConfig {
    /// Creates a new builder-style object to manufacture [`PushConfig`](crate::types::PushConfig).
    pub fn builder() -> crate::types::builders::PushConfigBuilder {
        crate::types::builders::PushConfigBuilder::default()
    }
}

/// A builder for [`PushConfig`](crate::types::PushConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PushConfigBuilder {
    pub(crate) abort_config: ::std::option::Option<crate::types::OtaTaskAbortConfig>,
    pub(crate) rollout_config: ::std::option::Option<crate::types::OtaTaskExecutionRolloutConfig>,
    pub(crate) timeout_config: ::std::option::Option<crate::types::OtaTaskTimeoutConfig>,
}
impl PushConfigBuilder {
    /// <p>Structure representing one abort config.</p>
    pub fn abort_config(mut self, input: crate::types::OtaTaskAbortConfig) -> Self {
        self.abort_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Structure representing one abort config.</p>
    pub fn set_abort_config(mut self, input: ::std::option::Option<crate::types::OtaTaskAbortConfig>) -> Self {
        self.abort_config = input;
        self
    }
    /// <p>Structure representing one abort config.</p>
    pub fn get_abort_config(&self) -> &::std::option::Option<crate::types::OtaTaskAbortConfig> {
        &self.abort_config
    }
    /// <p>Structure representing one rollout config.</p>
    pub fn rollout_config(mut self, input: crate::types::OtaTaskExecutionRolloutConfig) -> Self {
        self.rollout_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Structure representing one rollout config.</p>
    pub fn set_rollout_config(mut self, input: ::std::option::Option<crate::types::OtaTaskExecutionRolloutConfig>) -> Self {
        self.rollout_config = input;
        self
    }
    /// <p>Structure representing one rollout config.</p>
    pub fn get_rollout_config(&self) -> &::std::option::Option<crate::types::OtaTaskExecutionRolloutConfig> {
        &self.rollout_config
    }
    /// <p>Structure representing one timeout config.</p>
    pub fn timeout_config(mut self, input: crate::types::OtaTaskTimeoutConfig) -> Self {
        self.timeout_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Structure representing one timeout config.</p>
    pub fn set_timeout_config(mut self, input: ::std::option::Option<crate::types::OtaTaskTimeoutConfig>) -> Self {
        self.timeout_config = input;
        self
    }
    /// <p>Structure representing one timeout config.</p>
    pub fn get_timeout_config(&self) -> &::std::option::Option<crate::types::OtaTaskTimeoutConfig> {
        &self.timeout_config
    }
    /// Consumes the builder and constructs a [`PushConfig`](crate::types::PushConfig).
    pub fn build(self) -> crate::types::PushConfig {
        crate::types::PushConfig {
            abort_config: self.abort_config,
            rollout_config: self.rollout_config,
            timeout_config: self.timeout_config,
        }
    }
}
