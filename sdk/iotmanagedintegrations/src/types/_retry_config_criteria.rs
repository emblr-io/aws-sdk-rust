// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing one retry config criteria.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetryConfigCriteria {
    /// <p>Over-the-air (OTA) retry criteria failure type.</p>
    pub failure_type: ::std::option::Option<crate::types::RetryCriteriaFailureType>,
    /// <p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>
    pub min_number_of_retries: ::std::option::Option<i32>,
}
impl RetryConfigCriteria {
    /// <p>Over-the-air (OTA) retry criteria failure type.</p>
    pub fn failure_type(&self) -> ::std::option::Option<&crate::types::RetryCriteriaFailureType> {
        self.failure_type.as_ref()
    }
    /// <p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>
    pub fn min_number_of_retries(&self) -> ::std::option::Option<i32> {
        self.min_number_of_retries
    }
}
impl RetryConfigCriteria {
    /// Creates a new builder-style object to manufacture [`RetryConfigCriteria`](crate::types::RetryConfigCriteria).
    pub fn builder() -> crate::types::builders::RetryConfigCriteriaBuilder {
        crate::types::builders::RetryConfigCriteriaBuilder::default()
    }
}

/// A builder for [`RetryConfigCriteria`](crate::types::RetryConfigCriteria).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetryConfigCriteriaBuilder {
    pub(crate) failure_type: ::std::option::Option<crate::types::RetryCriteriaFailureType>,
    pub(crate) min_number_of_retries: ::std::option::Option<i32>,
}
impl RetryConfigCriteriaBuilder {
    /// <p>Over-the-air (OTA) retry criteria failure type.</p>
    pub fn failure_type(mut self, input: crate::types::RetryCriteriaFailureType) -> Self {
        self.failure_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Over-the-air (OTA) retry criteria failure type.</p>
    pub fn set_failure_type(mut self, input: ::std::option::Option<crate::types::RetryCriteriaFailureType>) -> Self {
        self.failure_type = input;
        self
    }
    /// <p>Over-the-air (OTA) retry criteria failure type.</p>
    pub fn get_failure_type(&self) -> &::std::option::Option<crate::types::RetryCriteriaFailureType> {
        &self.failure_type
    }
    /// <p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>
    pub fn min_number_of_retries(mut self, input: i32) -> Self {
        self.min_number_of_retries = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>
    pub fn set_min_number_of_retries(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min_number_of_retries = input;
        self
    }
    /// <p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>
    pub fn get_min_number_of_retries(&self) -> &::std::option::Option<i32> {
        &self.min_number_of_retries
    }
    /// Consumes the builder and constructs a [`RetryConfigCriteria`](crate::types::RetryConfigCriteria).
    pub fn build(self) -> crate::types::RetryConfigCriteria {
        crate::types::RetryConfigCriteria {
            failure_type: self.failure_type,
            min_number_of_retries: self.min_number_of_retries,
        }
    }
}
