// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure describing a notification configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NotificationConfigurationSummary {
    /// <p>The type of event triggering a device notification to the customer-managed destination.</p>
    pub event_type: ::std::option::Option<crate::types::EventType>,
    /// <p>The name of the destination for the notification configuration.</p>
    pub destination_name: ::std::option::Option<::std::string::String>,
}
impl NotificationConfigurationSummary {
    /// <p>The type of event triggering a device notification to the customer-managed destination.</p>
    pub fn event_type(&self) -> ::std::option::Option<&crate::types::EventType> {
        self.event_type.as_ref()
    }
    /// <p>The name of the destination for the notification configuration.</p>
    pub fn destination_name(&self) -> ::std::option::Option<&str> {
        self.destination_name.as_deref()
    }
}
impl NotificationConfigurationSummary {
    /// Creates a new builder-style object to manufacture [`NotificationConfigurationSummary`](crate::types::NotificationConfigurationSummary).
    pub fn builder() -> crate::types::builders::NotificationConfigurationSummaryBuilder {
        crate::types::builders::NotificationConfigurationSummaryBuilder::default()
    }
}

/// A builder for [`NotificationConfigurationSummary`](crate::types::NotificationConfigurationSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NotificationConfigurationSummaryBuilder {
    pub(crate) event_type: ::std::option::Option<crate::types::EventType>,
    pub(crate) destination_name: ::std::option::Option<::std::string::String>,
}
impl NotificationConfigurationSummaryBuilder {
    /// <p>The type of event triggering a device notification to the customer-managed destination.</p>
    pub fn event_type(mut self, input: crate::types::EventType) -> Self {
        self.event_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of event triggering a device notification to the customer-managed destination.</p>
    pub fn set_event_type(mut self, input: ::std::option::Option<crate::types::EventType>) -> Self {
        self.event_type = input;
        self
    }
    /// <p>The type of event triggering a device notification to the customer-managed destination.</p>
    pub fn get_event_type(&self) -> &::std::option::Option<crate::types::EventType> {
        &self.event_type
    }
    /// <p>The name of the destination for the notification configuration.</p>
    pub fn destination_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the destination for the notification configuration.</p>
    pub fn set_destination_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_name = input;
        self
    }
    /// <p>The name of the destination for the notification configuration.</p>
    pub fn get_destination_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_name
    }
    /// Consumes the builder and constructs a [`NotificationConfigurationSummary`](crate::types::NotificationConfigurationSummary).
    pub fn build(self) -> crate::types::NotificationConfigurationSummary {
        crate::types::NotificationConfigurationSummary {
            event_type: self.event_type,
            destination_name: self.destination_name,
        }
    }
}
