// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing one over-the-air (OTA) task execution summary.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OtaTaskExecutionSummary {
    /// <p>The execution number of the over-the-air (OTA) task execution summary.</p>
    pub execution_number: ::std::option::Option<i64>,
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>
    pub queued_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>
    pub retry_attempt: ::std::option::Option<i32>,
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>
    pub started_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The status of the over-the-air (OTA) task execution summary.</p>
    pub status: ::std::option::Option<crate::types::OtaTaskExecutionStatus>,
}
impl OtaTaskExecutionSummary {
    /// <p>The execution number of the over-the-air (OTA) task execution summary.</p>
    pub fn execution_number(&self) -> ::std::option::Option<i64> {
        self.execution_number
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>
    pub fn queued_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.queued_at.as_ref()
    }
    /// <p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>
    pub fn retry_attempt(&self) -> ::std::option::Option<i32> {
        self.retry_attempt
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>
    pub fn started_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.started_at.as_ref()
    }
    /// <p>The status of the over-the-air (OTA) task execution summary.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::OtaTaskExecutionStatus> {
        self.status.as_ref()
    }
}
impl OtaTaskExecutionSummary {
    /// Creates a new builder-style object to manufacture [`OtaTaskExecutionSummary`](crate::types::OtaTaskExecutionSummary).
    pub fn builder() -> crate::types::builders::OtaTaskExecutionSummaryBuilder {
        crate::types::builders::OtaTaskExecutionSummaryBuilder::default()
    }
}

/// A builder for [`OtaTaskExecutionSummary`](crate::types::OtaTaskExecutionSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OtaTaskExecutionSummaryBuilder {
    pub(crate) execution_number: ::std::option::Option<i64>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) queued_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) retry_attempt: ::std::option::Option<i32>,
    pub(crate) started_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::OtaTaskExecutionStatus>,
}
impl OtaTaskExecutionSummaryBuilder {
    /// <p>The execution number of the over-the-air (OTA) task execution summary.</p>
    pub fn execution_number(mut self, input: i64) -> Self {
        self.execution_number = ::std::option::Option::Some(input);
        self
    }
    /// <p>The execution number of the over-the-air (OTA) task execution summary.</p>
    pub fn set_execution_number(mut self, input: ::std::option::Option<i64>) -> Self {
        self.execution_number = input;
        self
    }
    /// <p>The execution number of the over-the-air (OTA) task execution summary.</p>
    pub fn get_execution_number(&self) -> &::std::option::Option<i64> {
        &self.execution_number
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>
    pub fn queued_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.queued_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>
    pub fn set_queued_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.queued_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>
    pub fn get_queued_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.queued_at
    }
    /// <p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>
    pub fn retry_attempt(mut self, input: i32) -> Self {
        self.retry_attempt = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>
    pub fn set_retry_attempt(mut self, input: ::std::option::Option<i32>) -> Self {
        self.retry_attempt = input;
        self
    }
    /// <p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>
    pub fn get_retry_attempt(&self) -> &::std::option::Option<i32> {
        &self.retry_attempt
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>
    pub fn started_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.started_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>
    pub fn set_started_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.started_at = input;
        self
    }
    /// <p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>
    pub fn get_started_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.started_at
    }
    /// <p>The status of the over-the-air (OTA) task execution summary.</p>
    pub fn status(mut self, input: crate::types::OtaTaskExecutionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the over-the-air (OTA) task execution summary.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::OtaTaskExecutionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the over-the-air (OTA) task execution summary.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::OtaTaskExecutionStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`OtaTaskExecutionSummary`](crate::types::OtaTaskExecutionSummary).
    pub fn build(self) -> crate::types::OtaTaskExecutionSummary {
        crate::types::OtaTaskExecutionSummary {
            execution_number: self.execution_number,
            last_updated_at: self.last_updated_at,
            queued_at: self.queued_at,
            retry_attempt: self.retry_attempt,
            started_at: self.started_at,
            status: self.status,
        }
    }
}
