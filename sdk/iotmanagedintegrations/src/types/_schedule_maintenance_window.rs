// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure representing scheduling maintenance window.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScheduleMaintenanceWindow {
    /// <p>Displays the duration of the next maintenance window.</p>
    pub duration_in_minutes: ::std::option::Option<i32>,
    /// <p>Displays the start time of the next maintenance window.</p>
    pub start_time: ::std::option::Option<::std::string::String>,
}
impl ScheduleMaintenanceWindow {
    /// <p>Displays the duration of the next maintenance window.</p>
    pub fn duration_in_minutes(&self) -> ::std::option::Option<i32> {
        self.duration_in_minutes
    }
    /// <p>Displays the start time of the next maintenance window.</p>
    pub fn start_time(&self) -> ::std::option::Option<&str> {
        self.start_time.as_deref()
    }
}
impl ScheduleMaintenanceWindow {
    /// Creates a new builder-style object to manufacture [`ScheduleMaintenanceWindow`](crate::types::ScheduleMaintenanceWindow).
    pub fn builder() -> crate::types::builders::ScheduleMaintenanceWindowBuilder {
        crate::types::builders::ScheduleMaintenanceWindowBuilder::default()
    }
}

/// A builder for [`ScheduleMaintenanceWindow`](crate::types::ScheduleMaintenanceWindow).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ScheduleMaintenanceWindowBuilder {
    pub(crate) duration_in_minutes: ::std::option::Option<i32>,
    pub(crate) start_time: ::std::option::Option<::std::string::String>,
}
impl ScheduleMaintenanceWindowBuilder {
    /// <p>Displays the duration of the next maintenance window.</p>
    pub fn duration_in_minutes(mut self, input: i32) -> Self {
        self.duration_in_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>Displays the duration of the next maintenance window.</p>
    pub fn set_duration_in_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.duration_in_minutes = input;
        self
    }
    /// <p>Displays the duration of the next maintenance window.</p>
    pub fn get_duration_in_minutes(&self) -> &::std::option::Option<i32> {
        &self.duration_in_minutes
    }
    /// <p>Displays the start time of the next maintenance window.</p>
    pub fn start_time(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.start_time = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Displays the start time of the next maintenance window.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>Displays the start time of the next maintenance window.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::std::string::String> {
        &self.start_time
    }
    /// Consumes the builder and constructs a [`ScheduleMaintenanceWindow`](crate::types::ScheduleMaintenanceWindow).
    pub fn build(self) -> crate::types::ScheduleMaintenanceWindow {
        crate::types::ScheduleMaintenanceWindow {
            duration_in_minutes: self.duration_in_minutes,
            start_time: self.start_time,
        }
    }
}
