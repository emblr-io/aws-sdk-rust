// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the information about a service account token.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceAccountTokenSummary {
    /// <p>The unique ID of the service account token.</p>
    pub id: ::std::string::String,
    /// <p>The name of the service account token.</p>
    pub name: ::std::string::String,
    /// <p>When the service account token was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>When the service account token will expire.</p>
    pub expires_at: ::aws_smithy_types::DateTime,
    /// <p>The last time the token was used to authorize a Grafana HTTP API.</p>
    pub last_used_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ServiceAccountTokenSummary {
    /// <p>The unique ID of the service account token.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The name of the service account token.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>When the service account token was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>When the service account token will expire.</p>
    pub fn expires_at(&self) -> &::aws_smithy_types::DateTime {
        &self.expires_at
    }
    /// <p>The last time the token was used to authorize a Grafana HTTP API.</p>
    pub fn last_used_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_used_at.as_ref()
    }
}
impl ServiceAccountTokenSummary {
    /// Creates a new builder-style object to manufacture [`ServiceAccountTokenSummary`](crate::types::ServiceAccountTokenSummary).
    pub fn builder() -> crate::types::builders::ServiceAccountTokenSummaryBuilder {
        crate::types::builders::ServiceAccountTokenSummaryBuilder::default()
    }
}

/// A builder for [`ServiceAccountTokenSummary`](crate::types::ServiceAccountTokenSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceAccountTokenSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) expires_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_used_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ServiceAccountTokenSummaryBuilder {
    /// <p>The unique ID of the service account token.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID of the service account token.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique ID of the service account token.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the service account token.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the service account token.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the service account token.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>When the service account token was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>When the service account token was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>When the service account token was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>When the service account token will expire.</p>
    /// This field is required.
    pub fn expires_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expires_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>When the service account token will expire.</p>
    pub fn set_expires_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expires_at = input;
        self
    }
    /// <p>When the service account token will expire.</p>
    pub fn get_expires_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expires_at
    }
    /// <p>The last time the token was used to authorize a Grafana HTTP API.</p>
    pub fn last_used_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_used_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last time the token was used to authorize a Grafana HTTP API.</p>
    pub fn set_last_used_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_used_at = input;
        self
    }
    /// <p>The last time the token was used to authorize a Grafana HTTP API.</p>
    pub fn get_last_used_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_used_at
    }
    /// Consumes the builder and constructs a [`ServiceAccountTokenSummary`](crate::types::ServiceAccountTokenSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::ServiceAccountTokenSummaryBuilder::id)
    /// - [`name`](crate::types::builders::ServiceAccountTokenSummaryBuilder::name)
    /// - [`created_at`](crate::types::builders::ServiceAccountTokenSummaryBuilder::created_at)
    /// - [`expires_at`](crate::types::builders::ServiceAccountTokenSummaryBuilder::expires_at)
    pub fn build(self) -> ::std::result::Result<crate::types::ServiceAccountTokenSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ServiceAccountTokenSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building ServiceAccountTokenSummary",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building ServiceAccountTokenSummary",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building ServiceAccountTokenSummary",
                )
            })?,
            expires_at: self.expires_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "expires_at",
                    "expires_at was not specified but it is required when building ServiceAccountTokenSummary",
                )
            })?,
            last_used_at: self.last_used_at,
        })
    }
}
