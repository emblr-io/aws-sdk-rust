// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteWorkspaceServiceAccountTokenInput {
    /// <p>The ID of the token to delete.</p>
    pub token_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the service account from which to delete the token.</p>
    pub service_account_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the workspace from which to delete the token.</p>
    pub workspace_id: ::std::option::Option<::std::string::String>,
}
impl DeleteWorkspaceServiceAccountTokenInput {
    /// <p>The ID of the token to delete.</p>
    pub fn token_id(&self) -> ::std::option::Option<&str> {
        self.token_id.as_deref()
    }
    /// <p>The ID of the service account from which to delete the token.</p>
    pub fn service_account_id(&self) -> ::std::option::Option<&str> {
        self.service_account_id.as_deref()
    }
    /// <p>The ID of the workspace from which to delete the token.</p>
    pub fn workspace_id(&self) -> ::std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
}
impl DeleteWorkspaceServiceAccountTokenInput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkspaceServiceAccountTokenInput`](crate::operation::delete_workspace_service_account_token::DeleteWorkspaceServiceAccountTokenInput).
    pub fn builder() -> crate::operation::delete_workspace_service_account_token::builders::DeleteWorkspaceServiceAccountTokenInputBuilder {
        crate::operation::delete_workspace_service_account_token::builders::DeleteWorkspaceServiceAccountTokenInputBuilder::default()
    }
}

/// A builder for [`DeleteWorkspaceServiceAccountTokenInput`](crate::operation::delete_workspace_service_account_token::DeleteWorkspaceServiceAccountTokenInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteWorkspaceServiceAccountTokenInputBuilder {
    pub(crate) token_id: ::std::option::Option<::std::string::String>,
    pub(crate) service_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
}
impl DeleteWorkspaceServiceAccountTokenInputBuilder {
    /// <p>The ID of the token to delete.</p>
    /// This field is required.
    pub fn token_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the token to delete.</p>
    pub fn set_token_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token_id = input;
        self
    }
    /// <p>The ID of the token to delete.</p>
    pub fn get_token_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.token_id
    }
    /// <p>The ID of the service account from which to delete the token.</p>
    /// This field is required.
    pub fn service_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the service account from which to delete the token.</p>
    pub fn set_service_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_account_id = input;
        self
    }
    /// <p>The ID of the service account from which to delete the token.</p>
    pub fn get_service_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_account_id
    }
    /// <p>The ID of the workspace from which to delete the token.</p>
    /// This field is required.
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the workspace from which to delete the token.</p>
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The ID of the workspace from which to delete the token.</p>
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    /// Consumes the builder and constructs a [`DeleteWorkspaceServiceAccountTokenInput`](crate::operation::delete_workspace_service_account_token::DeleteWorkspaceServiceAccountTokenInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_workspace_service_account_token::DeleteWorkspaceServiceAccountTokenInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_workspace_service_account_token::DeleteWorkspaceServiceAccountTokenInput {
                token_id: self.token_id,
                service_account_id: self.service_account_id,
                workspace_id: self.workspace_id,
            },
        )
    }
}
