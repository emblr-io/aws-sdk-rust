// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateWorkspaceServiceAccountTokenOutput {
    /// <p>Information about the created token, including the key. Be sure to store the key securely.</p>
    pub service_account_token: ::std::option::Option<crate::types::ServiceAccountTokenSummaryWithKey>,
    /// <p>The ID of the service account where the token was created.</p>
    pub service_account_id: ::std::string::String,
    /// <p>The ID of the workspace where the token was created.</p>
    pub workspace_id: ::std::string::String,
    _request_id: Option<String>,
}
impl CreateWorkspaceServiceAccountTokenOutput {
    /// <p>Information about the created token, including the key. Be sure to store the key securely.</p>
    pub fn service_account_token(&self) -> ::std::option::Option<&crate::types::ServiceAccountTokenSummaryWithKey> {
        self.service_account_token.as_ref()
    }
    /// <p>The ID of the service account where the token was created.</p>
    pub fn service_account_id(&self) -> &str {
        use std::ops::Deref;
        self.service_account_id.deref()
    }
    /// <p>The ID of the workspace where the token was created.</p>
    pub fn workspace_id(&self) -> &str {
        use std::ops::Deref;
        self.workspace_id.deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateWorkspaceServiceAccountTokenOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateWorkspaceServiceAccountTokenOutput {
    /// Creates a new builder-style object to manufacture [`CreateWorkspaceServiceAccountTokenOutput`](crate::operation::create_workspace_service_account_token::CreateWorkspaceServiceAccountTokenOutput).
    pub fn builder() -> crate::operation::create_workspace_service_account_token::builders::CreateWorkspaceServiceAccountTokenOutputBuilder {
        crate::operation::create_workspace_service_account_token::builders::CreateWorkspaceServiceAccountTokenOutputBuilder::default()
    }
}

/// A builder for [`CreateWorkspaceServiceAccountTokenOutput`](crate::operation::create_workspace_service_account_token::CreateWorkspaceServiceAccountTokenOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateWorkspaceServiceAccountTokenOutputBuilder {
    pub(crate) service_account_token: ::std::option::Option<crate::types::ServiceAccountTokenSummaryWithKey>,
    pub(crate) service_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateWorkspaceServiceAccountTokenOutputBuilder {
    /// <p>Information about the created token, including the key. Be sure to store the key securely.</p>
    /// This field is required.
    pub fn service_account_token(mut self, input: crate::types::ServiceAccountTokenSummaryWithKey) -> Self {
        self.service_account_token = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the created token, including the key. Be sure to store the key securely.</p>
    pub fn set_service_account_token(mut self, input: ::std::option::Option<crate::types::ServiceAccountTokenSummaryWithKey>) -> Self {
        self.service_account_token = input;
        self
    }
    /// <p>Information about the created token, including the key. Be sure to store the key securely.</p>
    pub fn get_service_account_token(&self) -> &::std::option::Option<crate::types::ServiceAccountTokenSummaryWithKey> {
        &self.service_account_token
    }
    /// <p>The ID of the service account where the token was created.</p>
    /// This field is required.
    pub fn service_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the service account where the token was created.</p>
    pub fn set_service_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_account_id = input;
        self
    }
    /// <p>The ID of the service account where the token was created.</p>
    pub fn get_service_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_account_id
    }
    /// <p>The ID of the workspace where the token was created.</p>
    /// This field is required.
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the workspace where the token was created.</p>
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The ID of the workspace where the token was created.</p>
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateWorkspaceServiceAccountTokenOutput`](crate::operation::create_workspace_service_account_token::CreateWorkspaceServiceAccountTokenOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_account_id`](crate::operation::create_workspace_service_account_token::builders::CreateWorkspaceServiceAccountTokenOutputBuilder::service_account_id)
    /// - [`workspace_id`](crate::operation::create_workspace_service_account_token::builders::CreateWorkspaceServiceAccountTokenOutputBuilder::workspace_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_workspace_service_account_token::CreateWorkspaceServiceAccountTokenOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_workspace_service_account_token::CreateWorkspaceServiceAccountTokenOutput {
                service_account_token: self.service_account_token,
                service_account_id: self.service_account_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "service_account_id",
                        "service_account_id was not specified but it is required when building CreateWorkspaceServiceAccountTokenOutput",
                    )
                })?,
                workspace_id: self.workspace_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "workspace_id",
                        "workspace_id was not specified but it is required when building CreateWorkspaceServiceAccountTokenOutput",
                    )
                })?,
                _request_id: self._request_id,
            },
        )
    }
}
