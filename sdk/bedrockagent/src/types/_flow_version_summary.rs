// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a version of a flow.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_ListFlowVersions.html#API_agent_ListFlowVersions_ResponseSyntax">ListFlowVersions response</a></p></li>
/// </ul>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowVersionSummary {
    /// <p>The unique identifier of the flow.</p>
    pub id: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the flow that the version belongs to.</p>
    pub arn: ::std::string::String,
    /// <p>The status of the flow.</p>
    pub status: crate::types::FlowStatus,
    /// <p>The time at the version was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The version of the flow.</p>
    pub version: ::std::string::String,
}
impl FlowVersionSummary {
    /// <p>The unique identifier of the flow.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the flow that the version belongs to.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The status of the flow.</p>
    pub fn status(&self) -> &crate::types::FlowStatus {
        &self.status
    }
    /// <p>The time at the version was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The version of the flow.</p>
    pub fn version(&self) -> &str {
        use std::ops::Deref;
        self.version.deref()
    }
}
impl FlowVersionSummary {
    /// Creates a new builder-style object to manufacture [`FlowVersionSummary`](crate::types::FlowVersionSummary).
    pub fn builder() -> crate::types::builders::FlowVersionSummaryBuilder {
        crate::types::builders::FlowVersionSummaryBuilder::default()
    }
}

/// A builder for [`FlowVersionSummary`](crate::types::FlowVersionSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FlowVersionSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::FlowStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl FlowVersionSummaryBuilder {
    /// <p>The unique identifier of the flow.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the flow.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The Amazon Resource Name (ARN) of the flow that the version belongs to.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow that the version belongs to.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow that the version belongs to.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The status of the flow.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::FlowStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the flow.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FlowStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the flow.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FlowStatus> {
        &self.status
    }
    /// <p>The time at the version was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at the version was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time at the version was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The version of the flow.</p>
    /// This field is required.
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the flow.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The version of the flow.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`FlowVersionSummary`](crate::types::FlowVersionSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::FlowVersionSummaryBuilder::id)
    /// - [`arn`](crate::types::builders::FlowVersionSummaryBuilder::arn)
    /// - [`status`](crate::types::builders::FlowVersionSummaryBuilder::status)
    /// - [`created_at`](crate::types::builders::FlowVersionSummaryBuilder::created_at)
    /// - [`version`](crate::types::builders::FlowVersionSummaryBuilder::version)
    pub fn build(self) -> ::std::result::Result<crate::types::FlowVersionSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FlowVersionSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building FlowVersionSummary",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building FlowVersionSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building FlowVersionSummary",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building FlowVersionSummary",
                )
            })?,
            version: self.version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "version",
                    "version was not specified but it is required when building FlowVersionSummary",
                )
            })?,
        })
    }
}
