// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a Retrieval node in a flow. This node retrieves data from the Amazon S3 location that you specify and returns it as the output.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetrievalFlowNodeConfiguration {
    /// <p>Contains configurations for the service to use for retrieving data to return as the output from the node.</p>
    pub service_configuration: ::std::option::Option<crate::types::RetrievalFlowNodeServiceConfiguration>,
}
impl RetrievalFlowNodeConfiguration {
    /// <p>Contains configurations for the service to use for retrieving data to return as the output from the node.</p>
    pub fn service_configuration(&self) -> ::std::option::Option<&crate::types::RetrievalFlowNodeServiceConfiguration> {
        self.service_configuration.as_ref()
    }
}
impl RetrievalFlowNodeConfiguration {
    /// Creates a new builder-style object to manufacture [`RetrievalFlowNodeConfiguration`](crate::types::RetrievalFlowNodeConfiguration).
    pub fn builder() -> crate::types::builders::RetrievalFlowNodeConfigurationBuilder {
        crate::types::builders::RetrievalFlowNodeConfigurationBuilder::default()
    }
}

/// A builder for [`RetrievalFlowNodeConfiguration`](crate::types::RetrievalFlowNodeConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetrievalFlowNodeConfigurationBuilder {
    pub(crate) service_configuration: ::std::option::Option<crate::types::RetrievalFlowNodeServiceConfiguration>,
}
impl RetrievalFlowNodeConfigurationBuilder {
    /// <p>Contains configurations for the service to use for retrieving data to return as the output from the node.</p>
    /// This field is required.
    pub fn service_configuration(mut self, input: crate::types::RetrievalFlowNodeServiceConfiguration) -> Self {
        self.service_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains configurations for the service to use for retrieving data to return as the output from the node.</p>
    pub fn set_service_configuration(mut self, input: ::std::option::Option<crate::types::RetrievalFlowNodeServiceConfiguration>) -> Self {
        self.service_configuration = input;
        self
    }
    /// <p>Contains configurations for the service to use for retrieving data to return as the output from the node.</p>
    pub fn get_service_configuration(&self) -> &::std::option::Option<crate::types::RetrievalFlowNodeServiceConfiguration> {
        &self.service_configuration
    }
    /// Consumes the builder and constructs a [`RetrievalFlowNodeConfiguration`](crate::types::RetrievalFlowNodeConfiguration).
    pub fn build(self) -> crate::types::RetrievalFlowNodeConfiguration {
        crate::types::RetrievalFlowNodeConfiguration {
            service_configuration: self.service_configuration,
        }
    }
}
