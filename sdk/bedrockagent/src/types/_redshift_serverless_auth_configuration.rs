// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies configurations for authentication to a Redshift Serverless. Specify the type of authentication to use in the <code>type</code> field and include the corresponding field. If you specify IAM authentication, you don't need to include another field.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RedshiftServerlessAuthConfiguration {
    /// <p>The type of authentication to use.</p>
    pub r#type: crate::types::RedshiftServerlessAuthType,
    /// <p>The ARN of an Secrets Manager secret for authentication.</p>
    pub username_password_secret_arn: ::std::option::Option<::std::string::String>,
}
impl RedshiftServerlessAuthConfiguration {
    /// <p>The type of authentication to use.</p>
    pub fn r#type(&self) -> &crate::types::RedshiftServerlessAuthType {
        &self.r#type
    }
    /// <p>The ARN of an Secrets Manager secret for authentication.</p>
    pub fn username_password_secret_arn(&self) -> ::std::option::Option<&str> {
        self.username_password_secret_arn.as_deref()
    }
}
impl RedshiftServerlessAuthConfiguration {
    /// Creates a new builder-style object to manufacture [`RedshiftServerlessAuthConfiguration`](crate::types::RedshiftServerlessAuthConfiguration).
    pub fn builder() -> crate::types::builders::RedshiftServerlessAuthConfigurationBuilder {
        crate::types::builders::RedshiftServerlessAuthConfigurationBuilder::default()
    }
}

/// A builder for [`RedshiftServerlessAuthConfiguration`](crate::types::RedshiftServerlessAuthConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RedshiftServerlessAuthConfigurationBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::RedshiftServerlessAuthType>,
    pub(crate) username_password_secret_arn: ::std::option::Option<::std::string::String>,
}
impl RedshiftServerlessAuthConfigurationBuilder {
    /// <p>The type of authentication to use.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::RedshiftServerlessAuthType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of authentication to use.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::RedshiftServerlessAuthType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of authentication to use.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::RedshiftServerlessAuthType> {
        &self.r#type
    }
    /// <p>The ARN of an Secrets Manager secret for authentication.</p>
    pub fn username_password_secret_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.username_password_secret_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of an Secrets Manager secret for authentication.</p>
    pub fn set_username_password_secret_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.username_password_secret_arn = input;
        self
    }
    /// <p>The ARN of an Secrets Manager secret for authentication.</p>
    pub fn get_username_password_secret_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.username_password_secret_arn
    }
    /// Consumes the builder and constructs a [`RedshiftServerlessAuthConfiguration`](crate::types::RedshiftServerlessAuthConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::RedshiftServerlessAuthConfigurationBuilder::type)
    pub fn build(self) -> ::std::result::Result<crate::types::RedshiftServerlessAuthConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RedshiftServerlessAuthConfiguration {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building RedshiftServerlessAuthConfiguration",
                )
            })?,
            username_password_secret_arn: self.username_password_secret_arn,
        })
    }
}
