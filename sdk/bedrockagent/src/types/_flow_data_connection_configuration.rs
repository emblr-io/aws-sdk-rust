// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of a connection originating from a node that isn't a Condition node.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowDataConnectionConfiguration {
    /// <p>The name of the output in the source node that the connection begins from.</p>
    pub source_output: ::std::string::String,
    /// <p>The name of the input in the target node that the connection ends at.</p>
    pub target_input: ::std::string::String,
}
impl FlowDataConnectionConfiguration {
    /// <p>The name of the output in the source node that the connection begins from.</p>
    pub fn source_output(&self) -> &str {
        use std::ops::Deref;
        self.source_output.deref()
    }
    /// <p>The name of the input in the target node that the connection ends at.</p>
    pub fn target_input(&self) -> &str {
        use std::ops::Deref;
        self.target_input.deref()
    }
}
impl FlowDataConnectionConfiguration {
    /// Creates a new builder-style object to manufacture [`FlowDataConnectionConfiguration`](crate::types::FlowDataConnectionConfiguration).
    pub fn builder() -> crate::types::builders::FlowDataConnectionConfigurationBuilder {
        crate::types::builders::FlowDataConnectionConfigurationBuilder::default()
    }
}

/// A builder for [`FlowDataConnectionConfiguration`](crate::types::FlowDataConnectionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FlowDataConnectionConfigurationBuilder {
    pub(crate) source_output: ::std::option::Option<::std::string::String>,
    pub(crate) target_input: ::std::option::Option<::std::string::String>,
}
impl FlowDataConnectionConfigurationBuilder {
    /// <p>The name of the output in the source node that the connection begins from.</p>
    /// This field is required.
    pub fn source_output(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_output = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the output in the source node that the connection begins from.</p>
    pub fn set_source_output(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_output = input;
        self
    }
    /// <p>The name of the output in the source node that the connection begins from.</p>
    pub fn get_source_output(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_output
    }
    /// <p>The name of the input in the target node that the connection ends at.</p>
    /// This field is required.
    pub fn target_input(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_input = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the input in the target node that the connection ends at.</p>
    pub fn set_target_input(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_input = input;
        self
    }
    /// <p>The name of the input in the target node that the connection ends at.</p>
    pub fn get_target_input(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_input
    }
    /// Consumes the builder and constructs a [`FlowDataConnectionConfiguration`](crate::types::FlowDataConnectionConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`source_output`](crate::types::builders::FlowDataConnectionConfigurationBuilder::source_output)
    /// - [`target_input`](crate::types::builders::FlowDataConnectionConfigurationBuilder::target_input)
    pub fn build(self) -> ::std::result::Result<crate::types::FlowDataConnectionConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FlowDataConnectionConfiguration {
            source_output: self.source_output.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "source_output",
                    "source_output was not specified but it is required when building FlowDataConnectionConfiguration",
                )
            })?,
            target_input: self.target_input.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "target_input",
                    "target_input was not specified but it is required when building FlowDataConnectionConfiguration",
                )
            })?,
        })
    }
}
