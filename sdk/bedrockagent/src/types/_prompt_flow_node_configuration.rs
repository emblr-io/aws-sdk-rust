// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a prompt node in the flow. You can use a prompt from Prompt management or you can define one in this node. If the prompt contains variables, the inputs into this node will fill in the variables. The output from this node is the response generated by the model. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html">Node types in a flow</a> in the Amazon Bedrock User Guide.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PromptFlowNodeConfiguration {
    /// <p>Specifies whether the prompt is from Prompt management or defined inline.</p>
    pub source_configuration: ::std::option::Option<crate::types::PromptFlowNodeSourceConfiguration>,
    /// <p>Contains configurations for a guardrail to apply to the prompt in this node and the response generated from it.</p>
    pub guardrail_configuration: ::std::option::Option<crate::types::GuardrailConfiguration>,
}
impl PromptFlowNodeConfiguration {
    /// <p>Specifies whether the prompt is from Prompt management or defined inline.</p>
    pub fn source_configuration(&self) -> ::std::option::Option<&crate::types::PromptFlowNodeSourceConfiguration> {
        self.source_configuration.as_ref()
    }
    /// <p>Contains configurations for a guardrail to apply to the prompt in this node and the response generated from it.</p>
    pub fn guardrail_configuration(&self) -> ::std::option::Option<&crate::types::GuardrailConfiguration> {
        self.guardrail_configuration.as_ref()
    }
}
impl PromptFlowNodeConfiguration {
    /// Creates a new builder-style object to manufacture [`PromptFlowNodeConfiguration`](crate::types::PromptFlowNodeConfiguration).
    pub fn builder() -> crate::types::builders::PromptFlowNodeConfigurationBuilder {
        crate::types::builders::PromptFlowNodeConfigurationBuilder::default()
    }
}

/// A builder for [`PromptFlowNodeConfiguration`](crate::types::PromptFlowNodeConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PromptFlowNodeConfigurationBuilder {
    pub(crate) source_configuration: ::std::option::Option<crate::types::PromptFlowNodeSourceConfiguration>,
    pub(crate) guardrail_configuration: ::std::option::Option<crate::types::GuardrailConfiguration>,
}
impl PromptFlowNodeConfigurationBuilder {
    /// <p>Specifies whether the prompt is from Prompt management or defined inline.</p>
    /// This field is required.
    pub fn source_configuration(mut self, input: crate::types::PromptFlowNodeSourceConfiguration) -> Self {
        self.source_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the prompt is from Prompt management or defined inline.</p>
    pub fn set_source_configuration(mut self, input: ::std::option::Option<crate::types::PromptFlowNodeSourceConfiguration>) -> Self {
        self.source_configuration = input;
        self
    }
    /// <p>Specifies whether the prompt is from Prompt management or defined inline.</p>
    pub fn get_source_configuration(&self) -> &::std::option::Option<crate::types::PromptFlowNodeSourceConfiguration> {
        &self.source_configuration
    }
    /// <p>Contains configurations for a guardrail to apply to the prompt in this node and the response generated from it.</p>
    pub fn guardrail_configuration(mut self, input: crate::types::GuardrailConfiguration) -> Self {
        self.guardrail_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains configurations for a guardrail to apply to the prompt in this node and the response generated from it.</p>
    pub fn set_guardrail_configuration(mut self, input: ::std::option::Option<crate::types::GuardrailConfiguration>) -> Self {
        self.guardrail_configuration = input;
        self
    }
    /// <p>Contains configurations for a guardrail to apply to the prompt in this node and the response generated from it.</p>
    pub fn get_guardrail_configuration(&self) -> &::std::option::Option<crate::types::GuardrailConfiguration> {
        &self.guardrail_configuration
    }
    /// Consumes the builder and constructs a [`PromptFlowNodeConfiguration`](crate::types::PromptFlowNodeConfiguration).
    pub fn build(self) -> crate::types::PromptFlowNodeConfiguration {
        crate::types::PromptFlowNodeConfiguration {
            source_configuration: self.source_configuration,
            guardrail_configuration: self.guardrail_configuration,
        }
    }
}
