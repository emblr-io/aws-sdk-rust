// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a connection missing required configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MissingConnectionConfigurationFlowValidationDetails {
    /// <p>The name of the connection missing configuration.</p>
    pub connection: ::std::string::String,
}
impl MissingConnectionConfigurationFlowValidationDetails {
    /// <p>The name of the connection missing configuration.</p>
    pub fn connection(&self) -> &str {
        use std::ops::Deref;
        self.connection.deref()
    }
}
impl MissingConnectionConfigurationFlowValidationDetails {
    /// Creates a new builder-style object to manufacture [`MissingConnectionConfigurationFlowValidationDetails`](crate::types::MissingConnectionConfigurationFlowValidationDetails).
    pub fn builder() -> crate::types::builders::MissingConnectionConfigurationFlowValidationDetailsBuilder {
        crate::types::builders::MissingConnectionConfigurationFlowValidationDetailsBuilder::default()
    }
}

/// A builder for [`MissingConnectionConfigurationFlowValidationDetails`](crate::types::MissingConnectionConfigurationFlowValidationDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MissingConnectionConfigurationFlowValidationDetailsBuilder {
    pub(crate) connection: ::std::option::Option<::std::string::String>,
}
impl MissingConnectionConfigurationFlowValidationDetailsBuilder {
    /// <p>The name of the connection missing configuration.</p>
    /// This field is required.
    pub fn connection(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connection = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the connection missing configuration.</p>
    pub fn set_connection(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connection = input;
        self
    }
    /// <p>The name of the connection missing configuration.</p>
    pub fn get_connection(&self) -> &::std::option::Option<::std::string::String> {
        &self.connection
    }
    /// Consumes the builder and constructs a [`MissingConnectionConfigurationFlowValidationDetails`](crate::types::MissingConnectionConfigurationFlowValidationDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`connection`](crate::types::builders::MissingConnectionConfigurationFlowValidationDetailsBuilder::connection)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::MissingConnectionConfigurationFlowValidationDetails, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::types::MissingConnectionConfigurationFlowValidationDetails {
            connection: self.connection.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "connection",
                    "connection was not specified but it is required when building MissingConnectionConfigurationFlowValidationDetails",
                )
            })?,
        })
    }
}
