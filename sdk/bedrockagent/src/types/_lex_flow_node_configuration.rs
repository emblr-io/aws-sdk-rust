// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a Lex node in the flow. You specify a Amazon Lex bot to invoke. This node takes an utterance as the input and returns as the output the intent identified by the Amazon Lex bot. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html">Node types in a flow</a> in the Amazon Bedrock User Guide.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LexFlowNodeConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Lex bot alias to invoke.</p>
    pub bot_alias_arn: ::std::string::String,
    /// <p>The Region to invoke the Amazon Lex bot in.</p>
    pub locale_id: ::std::string::String,
}
impl LexFlowNodeConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Lex bot alias to invoke.</p>
    pub fn bot_alias_arn(&self) -> &str {
        use std::ops::Deref;
        self.bot_alias_arn.deref()
    }
    /// <p>The Region to invoke the Amazon Lex bot in.</p>
    pub fn locale_id(&self) -> &str {
        use std::ops::Deref;
        self.locale_id.deref()
    }
}
impl LexFlowNodeConfiguration {
    /// Creates a new builder-style object to manufacture [`LexFlowNodeConfiguration`](crate::types::LexFlowNodeConfiguration).
    pub fn builder() -> crate::types::builders::LexFlowNodeConfigurationBuilder {
        crate::types::builders::LexFlowNodeConfigurationBuilder::default()
    }
}

/// A builder for [`LexFlowNodeConfiguration`](crate::types::LexFlowNodeConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LexFlowNodeConfigurationBuilder {
    pub(crate) bot_alias_arn: ::std::option::Option<::std::string::String>,
    pub(crate) locale_id: ::std::option::Option<::std::string::String>,
}
impl LexFlowNodeConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Lex bot alias to invoke.</p>
    /// This field is required.
    pub fn bot_alias_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bot_alias_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Lex bot alias to invoke.</p>
    pub fn set_bot_alias_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bot_alias_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Lex bot alias to invoke.</p>
    pub fn get_bot_alias_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.bot_alias_arn
    }
    /// <p>The Region to invoke the Amazon Lex bot in.</p>
    /// This field is required.
    pub fn locale_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.locale_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Region to invoke the Amazon Lex bot in.</p>
    pub fn set_locale_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.locale_id = input;
        self
    }
    /// <p>The Region to invoke the Amazon Lex bot in.</p>
    pub fn get_locale_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.locale_id
    }
    /// Consumes the builder and constructs a [`LexFlowNodeConfiguration`](crate::types::LexFlowNodeConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`bot_alias_arn`](crate::types::builders::LexFlowNodeConfigurationBuilder::bot_alias_arn)
    /// - [`locale_id`](crate::types::builders::LexFlowNodeConfigurationBuilder::locale_id)
    pub fn build(self) -> ::std::result::Result<crate::types::LexFlowNodeConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::LexFlowNodeConfiguration {
            bot_alias_arn: self.bot_alias_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "bot_alias_arn",
                    "bot_alias_arn was not specified but it is required when building LexFlowNodeConfiguration",
                )
            })?,
            locale_id: self.locale_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "locale_id",
                    "locale_id was not specified but it is required when building LexFlowNodeConfiguration",
                )
            })?,
        })
    }
}
