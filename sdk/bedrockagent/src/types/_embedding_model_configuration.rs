// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details for the embeddings model.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EmbeddingModelConfiguration {
    /// <p>The vector configuration details on the Bedrock embeddings model.</p>
    pub bedrock_embedding_model_configuration: ::std::option::Option<crate::types::BedrockEmbeddingModelConfiguration>,
}
impl EmbeddingModelConfiguration {
    /// <p>The vector configuration details on the Bedrock embeddings model.</p>
    pub fn bedrock_embedding_model_configuration(&self) -> ::std::option::Option<&crate::types::BedrockEmbeddingModelConfiguration> {
        self.bedrock_embedding_model_configuration.as_ref()
    }
}
impl EmbeddingModelConfiguration {
    /// Creates a new builder-style object to manufacture [`EmbeddingModelConfiguration`](crate::types::EmbeddingModelConfiguration).
    pub fn builder() -> crate::types::builders::EmbeddingModelConfigurationBuilder {
        crate::types::builders::EmbeddingModelConfigurationBuilder::default()
    }
}

/// A builder for [`EmbeddingModelConfiguration`](crate::types::EmbeddingModelConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EmbeddingModelConfigurationBuilder {
    pub(crate) bedrock_embedding_model_configuration: ::std::option::Option<crate::types::BedrockEmbeddingModelConfiguration>,
}
impl EmbeddingModelConfigurationBuilder {
    /// <p>The vector configuration details on the Bedrock embeddings model.</p>
    pub fn bedrock_embedding_model_configuration(mut self, input: crate::types::BedrockEmbeddingModelConfiguration) -> Self {
        self.bedrock_embedding_model_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The vector configuration details on the Bedrock embeddings model.</p>
    pub fn set_bedrock_embedding_model_configuration(
        mut self,
        input: ::std::option::Option<crate::types::BedrockEmbeddingModelConfiguration>,
    ) -> Self {
        self.bedrock_embedding_model_configuration = input;
        self
    }
    /// <p>The vector configuration details on the Bedrock embeddings model.</p>
    pub fn get_bedrock_embedding_model_configuration(&self) -> &::std::option::Option<crate::types::BedrockEmbeddingModelConfiguration> {
        &self.bedrock_embedding_model_configuration
    }
    /// Consumes the builder and constructs a [`EmbeddingModelConfiguration`](crate::types::EmbeddingModelConfiguration).
    pub fn build(self) -> crate::types::EmbeddingModelConfiguration {
        crate::types::EmbeddingModelConfiguration {
            bedrock_embedding_model_configuration: self.bedrock_embedding_model_configuration,
        }
    }
}
