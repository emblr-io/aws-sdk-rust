// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration information to connect to SharePoint as your data source.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SharePointDataSourceConfiguration {
    /// <p>The endpoint information to connect to your SharePoint data source.</p>
    pub source_configuration: ::std::option::Option<crate::types::SharePointSourceConfiguration>,
    /// <p>The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.</p>
    pub crawler_configuration: ::std::option::Option<crate::types::SharePointCrawlerConfiguration>,
}
impl SharePointDataSourceConfiguration {
    /// <p>The endpoint information to connect to your SharePoint data source.</p>
    pub fn source_configuration(&self) -> ::std::option::Option<&crate::types::SharePointSourceConfiguration> {
        self.source_configuration.as_ref()
    }
    /// <p>The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.</p>
    pub fn crawler_configuration(&self) -> ::std::option::Option<&crate::types::SharePointCrawlerConfiguration> {
        self.crawler_configuration.as_ref()
    }
}
impl SharePointDataSourceConfiguration {
    /// Creates a new builder-style object to manufacture [`SharePointDataSourceConfiguration`](crate::types::SharePointDataSourceConfiguration).
    pub fn builder() -> crate::types::builders::SharePointDataSourceConfigurationBuilder {
        crate::types::builders::SharePointDataSourceConfigurationBuilder::default()
    }
}

/// A builder for [`SharePointDataSourceConfiguration`](crate::types::SharePointDataSourceConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SharePointDataSourceConfigurationBuilder {
    pub(crate) source_configuration: ::std::option::Option<crate::types::SharePointSourceConfiguration>,
    pub(crate) crawler_configuration: ::std::option::Option<crate::types::SharePointCrawlerConfiguration>,
}
impl SharePointDataSourceConfigurationBuilder {
    /// <p>The endpoint information to connect to your SharePoint data source.</p>
    /// This field is required.
    pub fn source_configuration(mut self, input: crate::types::SharePointSourceConfiguration) -> Self {
        self.source_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The endpoint information to connect to your SharePoint data source.</p>
    pub fn set_source_configuration(mut self, input: ::std::option::Option<crate::types::SharePointSourceConfiguration>) -> Self {
        self.source_configuration = input;
        self
    }
    /// <p>The endpoint information to connect to your SharePoint data source.</p>
    pub fn get_source_configuration(&self) -> &::std::option::Option<crate::types::SharePointSourceConfiguration> {
        &self.source_configuration
    }
    /// <p>The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.</p>
    pub fn crawler_configuration(mut self, input: crate::types::SharePointCrawlerConfiguration) -> Self {
        self.crawler_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.</p>
    pub fn set_crawler_configuration(mut self, input: ::std::option::Option<crate::types::SharePointCrawlerConfiguration>) -> Self {
        self.crawler_configuration = input;
        self
    }
    /// <p>The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.</p>
    pub fn get_crawler_configuration(&self) -> &::std::option::Option<crate::types::SharePointCrawlerConfiguration> {
        &self.crawler_configuration
    }
    /// Consumes the builder and constructs a [`SharePointDataSourceConfiguration`](crate::types::SharePointDataSourceConfiguration).
    pub fn build(self) -> crate::types::SharePointDataSourceConfiguration {
        crate::types::SharePointDataSourceConfiguration {
            source_configuration: self.source_configuration,
            crawler_configuration: self.crawler_configuration,
        }
    }
}
