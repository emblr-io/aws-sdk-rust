// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a provisioned Amazon Redshift query engine.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RedshiftProvisionedConfiguration {
    /// <p>The ID of the Amazon Redshift cluster.</p>
    pub cluster_identifier: ::std::string::String,
    /// <p>Specifies configurations for authentication to Amazon Redshift.</p>
    pub auth_configuration: ::std::option::Option<crate::types::RedshiftProvisionedAuthConfiguration>,
}
impl RedshiftProvisionedConfiguration {
    /// <p>The ID of the Amazon Redshift cluster.</p>
    pub fn cluster_identifier(&self) -> &str {
        use std::ops::Deref;
        self.cluster_identifier.deref()
    }
    /// <p>Specifies configurations for authentication to Amazon Redshift.</p>
    pub fn auth_configuration(&self) -> ::std::option::Option<&crate::types::RedshiftProvisionedAuthConfiguration> {
        self.auth_configuration.as_ref()
    }
}
impl RedshiftProvisionedConfiguration {
    /// Creates a new builder-style object to manufacture [`RedshiftProvisionedConfiguration`](crate::types::RedshiftProvisionedConfiguration).
    pub fn builder() -> crate::types::builders::RedshiftProvisionedConfigurationBuilder {
        crate::types::builders::RedshiftProvisionedConfigurationBuilder::default()
    }
}

/// A builder for [`RedshiftProvisionedConfiguration`](crate::types::RedshiftProvisionedConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RedshiftProvisionedConfigurationBuilder {
    pub(crate) cluster_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) auth_configuration: ::std::option::Option<crate::types::RedshiftProvisionedAuthConfiguration>,
}
impl RedshiftProvisionedConfigurationBuilder {
    /// <p>The ID of the Amazon Redshift cluster.</p>
    /// This field is required.
    pub fn cluster_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Redshift cluster.</p>
    pub fn set_cluster_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_identifier = input;
        self
    }
    /// <p>The ID of the Amazon Redshift cluster.</p>
    pub fn get_cluster_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_identifier
    }
    /// <p>Specifies configurations for authentication to Amazon Redshift.</p>
    /// This field is required.
    pub fn auth_configuration(mut self, input: crate::types::RedshiftProvisionedAuthConfiguration) -> Self {
        self.auth_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies configurations for authentication to Amazon Redshift.</p>
    pub fn set_auth_configuration(mut self, input: ::std::option::Option<crate::types::RedshiftProvisionedAuthConfiguration>) -> Self {
        self.auth_configuration = input;
        self
    }
    /// <p>Specifies configurations for authentication to Amazon Redshift.</p>
    pub fn get_auth_configuration(&self) -> &::std::option::Option<crate::types::RedshiftProvisionedAuthConfiguration> {
        &self.auth_configuration
    }
    /// Consumes the builder and constructs a [`RedshiftProvisionedConfiguration`](crate::types::RedshiftProvisionedConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`cluster_identifier`](crate::types::builders::RedshiftProvisionedConfigurationBuilder::cluster_identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::RedshiftProvisionedConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RedshiftProvisionedConfiguration {
            cluster_identifier: self.cluster_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cluster_identifier",
                    "cluster_identifier was not specified but it is required when building RedshiftProvisionedConfiguration",
                )
            })?,
            auth_configuration: self.auth_configuration,
        })
    }
}
