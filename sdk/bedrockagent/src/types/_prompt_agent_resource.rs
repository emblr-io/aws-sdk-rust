// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains specifications for an Amazon Bedrock agent with which to use the prompt. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-create.html">Create a prompt using Prompt management</a> and <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/agents.html">Automate tasks in your application using conversational agents</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct PromptAgentResource {
    /// <p>The ARN of the agent with which to use the prompt.</p>
    pub agent_identifier: ::std::string::String,
}
impl PromptAgentResource {
    /// <p>The ARN of the agent with which to use the prompt.</p>
    pub fn agent_identifier(&self) -> &str {
        use std::ops::Deref;
        self.agent_identifier.deref()
    }
}
impl ::std::fmt::Debug for PromptAgentResource {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("PromptAgentResource");
        formatter.field("agent_identifier", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl PromptAgentResource {
    /// Creates a new builder-style object to manufacture [`PromptAgentResource`](crate::types::PromptAgentResource).
    pub fn builder() -> crate::types::builders::PromptAgentResourceBuilder {
        crate::types::builders::PromptAgentResourceBuilder::default()
    }
}

/// A builder for [`PromptAgentResource`](crate::types::PromptAgentResource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct PromptAgentResourceBuilder {
    pub(crate) agent_identifier: ::std::option::Option<::std::string::String>,
}
impl PromptAgentResourceBuilder {
    /// <p>The ARN of the agent with which to use the prompt.</p>
    /// This field is required.
    pub fn agent_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the agent with which to use the prompt.</p>
    pub fn set_agent_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_identifier = input;
        self
    }
    /// <p>The ARN of the agent with which to use the prompt.</p>
    pub fn get_agent_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_identifier
    }
    /// Consumes the builder and constructs a [`PromptAgentResource`](crate::types::PromptAgentResource).
    /// This method will fail if any of the following fields are not set:
    /// - [`agent_identifier`](crate::types::builders::PromptAgentResourceBuilder::agent_identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::PromptAgentResource, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PromptAgentResource {
            agent_identifier: self.agent_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_identifier",
                    "agent_identifier was not specified but it is required when building PromptAgentResource",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for PromptAgentResourceBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("PromptAgentResourceBuilder");
        formatter.field("agent_identifier", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
