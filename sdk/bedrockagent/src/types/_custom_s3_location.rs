// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the Amazon S3 location of the file containing the content to ingest into a knowledge base connected to a custom data source.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomS3Location {
    /// <p>The S3 URI of the file containing the content to ingest.</p>
    pub uri: ::std::string::String,
    /// <p>The identifier of the Amazon Web Services account that owns the S3 bucket containing the content to ingest.</p>
    pub bucket_owner_account_id: ::std::option::Option<::std::string::String>,
}
impl CustomS3Location {
    /// <p>The S3 URI of the file containing the content to ingest.</p>
    pub fn uri(&self) -> &str {
        use std::ops::Deref;
        self.uri.deref()
    }
    /// <p>The identifier of the Amazon Web Services account that owns the S3 bucket containing the content to ingest.</p>
    pub fn bucket_owner_account_id(&self) -> ::std::option::Option<&str> {
        self.bucket_owner_account_id.as_deref()
    }
}
impl CustomS3Location {
    /// Creates a new builder-style object to manufacture [`CustomS3Location`](crate::types::CustomS3Location).
    pub fn builder() -> crate::types::builders::CustomS3LocationBuilder {
        crate::types::builders::CustomS3LocationBuilder::default()
    }
}

/// A builder for [`CustomS3Location`](crate::types::CustomS3Location).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomS3LocationBuilder {
    pub(crate) uri: ::std::option::Option<::std::string::String>,
    pub(crate) bucket_owner_account_id: ::std::option::Option<::std::string::String>,
}
impl CustomS3LocationBuilder {
    /// <p>The S3 URI of the file containing the content to ingest.</p>
    /// This field is required.
    pub fn uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 URI of the file containing the content to ingest.</p>
    pub fn set_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.uri = input;
        self
    }
    /// <p>The S3 URI of the file containing the content to ingest.</p>
    pub fn get_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.uri
    }
    /// <p>The identifier of the Amazon Web Services account that owns the S3 bucket containing the content to ingest.</p>
    pub fn bucket_owner_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket_owner_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Web Services account that owns the S3 bucket containing the content to ingest.</p>
    pub fn set_bucket_owner_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket_owner_account_id = input;
        self
    }
    /// <p>The identifier of the Amazon Web Services account that owns the S3 bucket containing the content to ingest.</p>
    pub fn get_bucket_owner_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket_owner_account_id
    }
    /// Consumes the builder and constructs a [`CustomS3Location`](crate::types::CustomS3Location).
    /// This method will fail if any of the following fields are not set:
    /// - [`uri`](crate::types::builders::CustomS3LocationBuilder::uri)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomS3Location, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomS3Location {
            uri: self.uri.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "uri",
                    "uri was not specified but it is required when building CustomS3Location",
                )
            })?,
            bucket_owner_account_id: self.bucket_owner_account_id,
        })
    }
}
