// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines tools, at least one of which must be requested by the model. No text is generated but the results of tool use are sent back to the model to help generate a response. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/tool-use.html">Use a tool to complete an Amazon Bedrock model response</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnyToolChoice {}
impl AnyToolChoice {
    /// Creates a new builder-style object to manufacture [`AnyToolChoice`](crate::types::AnyToolChoice).
    pub fn builder() -> crate::types::builders::AnyToolChoiceBuilder {
        crate::types::builders::AnyToolChoiceBuilder::default()
    }
}

/// A builder for [`AnyToolChoice`](crate::types::AnyToolChoice).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AnyToolChoiceBuilder {}
impl AnyToolChoiceBuilder {
    /// Consumes the builder and constructs a [`AnyToolChoice`](crate::types::AnyToolChoice).
    pub fn build(self) -> crate::types::AnyToolChoice {
        crate::types::AnyToolChoice {}
    }
}
