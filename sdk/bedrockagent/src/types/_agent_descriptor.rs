// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An agent descriptor.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AgentDescriptor {
    /// <p>The agent's alias ARN.</p>
    pub alias_arn: ::std::option::Option<::std::string::String>,
}
impl AgentDescriptor {
    /// <p>The agent's alias ARN.</p>
    pub fn alias_arn(&self) -> ::std::option::Option<&str> {
        self.alias_arn.as_deref()
    }
}
impl AgentDescriptor {
    /// Creates a new builder-style object to manufacture [`AgentDescriptor`](crate::types::AgentDescriptor).
    pub fn builder() -> crate::types::builders::AgentDescriptorBuilder {
        crate::types::builders::AgentDescriptorBuilder::default()
    }
}

/// A builder for [`AgentDescriptor`](crate::types::AgentDescriptor).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AgentDescriptorBuilder {
    pub(crate) alias_arn: ::std::option::Option<::std::string::String>,
}
impl AgentDescriptorBuilder {
    /// <p>The agent's alias ARN.</p>
    pub fn alias_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.alias_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The agent's alias ARN.</p>
    pub fn set_alias_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.alias_arn = input;
        self
    }
    /// <p>The agent's alias ARN.</p>
    pub fn get_alias_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.alias_arn
    }
    /// Consumes the builder and constructs a [`AgentDescriptor`](crate::types::AgentDescriptor).
    pub fn build(self) -> crate::types::AgentDescriptor {
        crate::types::AgentDescriptor { alias_arn: self.alias_arn }
    }
}
