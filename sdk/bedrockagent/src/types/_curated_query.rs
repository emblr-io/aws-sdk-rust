// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a query, each of which defines information about example queries to help the query engine generate appropriate SQL queries.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CuratedQuery {
    /// <p>An example natural language query.</p>
    pub natural_language: ::std::string::String,
    /// <p>The SQL equivalent of the natural language query.</p>
    pub sql: ::std::string::String,
}
impl CuratedQuery {
    /// <p>An example natural language query.</p>
    pub fn natural_language(&self) -> &str {
        use std::ops::Deref;
        self.natural_language.deref()
    }
    /// <p>The SQL equivalent of the natural language query.</p>
    pub fn sql(&self) -> &str {
        use std::ops::Deref;
        self.sql.deref()
    }
}
impl CuratedQuery {
    /// Creates a new builder-style object to manufacture [`CuratedQuery`](crate::types::CuratedQuery).
    pub fn builder() -> crate::types::builders::CuratedQueryBuilder {
        crate::types::builders::CuratedQueryBuilder::default()
    }
}

/// A builder for [`CuratedQuery`](crate::types::CuratedQuery).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CuratedQueryBuilder {
    pub(crate) natural_language: ::std::option::Option<::std::string::String>,
    pub(crate) sql: ::std::option::Option<::std::string::String>,
}
impl CuratedQueryBuilder {
    /// <p>An example natural language query.</p>
    /// This field is required.
    pub fn natural_language(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.natural_language = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An example natural language query.</p>
    pub fn set_natural_language(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.natural_language = input;
        self
    }
    /// <p>An example natural language query.</p>
    pub fn get_natural_language(&self) -> &::std::option::Option<::std::string::String> {
        &self.natural_language
    }
    /// <p>The SQL equivalent of the natural language query.</p>
    /// This field is required.
    pub fn sql(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sql = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The SQL equivalent of the natural language query.</p>
    pub fn set_sql(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sql = input;
        self
    }
    /// <p>The SQL equivalent of the natural language query.</p>
    pub fn get_sql(&self) -> &::std::option::Option<::std::string::String> {
        &self.sql
    }
    /// Consumes the builder and constructs a [`CuratedQuery`](crate::types::CuratedQuery).
    /// This method will fail if any of the following fields are not set:
    /// - [`natural_language`](crate::types::builders::CuratedQueryBuilder::natural_language)
    /// - [`sql`](crate::types::builders::CuratedQueryBuilder::sql)
    pub fn build(self) -> ::std::result::Result<crate::types::CuratedQuery, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CuratedQuery {
            natural_language: self.natural_language.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "natural_language",
                    "natural_language was not specified but it is required when building CuratedQuery",
                )
            })?,
            sql: self.sql.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "sql",
                    "sql was not specified but it is required when building CuratedQuery",
                )
            })?,
        })
    }
}
