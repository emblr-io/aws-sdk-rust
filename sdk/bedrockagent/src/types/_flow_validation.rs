// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about validation of the flow.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetFlow.html#API_agent_GetFlow_ResponseSyntax">GetFlow response</a></p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetFlowVersion.html#API_agent_GetFlowVersion_ResponseSyntax">GetFlowVersion response</a></p></li>
/// </ul>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowValidation {
    /// <p>A message describing the validation error.</p>
    pub message: ::std::string::String,
    /// <p>The severity of the issue described in the message.</p>
    pub severity: crate::types::FlowValidationSeverity,
    /// <p>Specific details about the validation issue encountered in the flow.</p>
    pub details: ::std::option::Option<crate::types::FlowValidationDetails>,
    /// <p>The type of validation issue encountered in the flow.</p>
    pub r#type: ::std::option::Option<crate::types::FlowValidationType>,
}
impl FlowValidation {
    /// <p>A message describing the validation error.</p>
    pub fn message(&self) -> &str {
        use std::ops::Deref;
        self.message.deref()
    }
    /// <p>The severity of the issue described in the message.</p>
    pub fn severity(&self) -> &crate::types::FlowValidationSeverity {
        &self.severity
    }
    /// <p>Specific details about the validation issue encountered in the flow.</p>
    pub fn details(&self) -> ::std::option::Option<&crate::types::FlowValidationDetails> {
        self.details.as_ref()
    }
    /// <p>The type of validation issue encountered in the flow.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::FlowValidationType> {
        self.r#type.as_ref()
    }
}
impl FlowValidation {
    /// Creates a new builder-style object to manufacture [`FlowValidation`](crate::types::FlowValidation).
    pub fn builder() -> crate::types::builders::FlowValidationBuilder {
        crate::types::builders::FlowValidationBuilder::default()
    }
}

/// A builder for [`FlowValidation`](crate::types::FlowValidation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FlowValidationBuilder {
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) severity: ::std::option::Option<crate::types::FlowValidationSeverity>,
    pub(crate) details: ::std::option::Option<crate::types::FlowValidationDetails>,
    pub(crate) r#type: ::std::option::Option<crate::types::FlowValidationType>,
}
impl FlowValidationBuilder {
    /// <p>A message describing the validation error.</p>
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message describing the validation error.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A message describing the validation error.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// <p>The severity of the issue described in the message.</p>
    /// This field is required.
    pub fn severity(mut self, input: crate::types::FlowValidationSeverity) -> Self {
        self.severity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The severity of the issue described in the message.</p>
    pub fn set_severity(mut self, input: ::std::option::Option<crate::types::FlowValidationSeverity>) -> Self {
        self.severity = input;
        self
    }
    /// <p>The severity of the issue described in the message.</p>
    pub fn get_severity(&self) -> &::std::option::Option<crate::types::FlowValidationSeverity> {
        &self.severity
    }
    /// <p>Specific details about the validation issue encountered in the flow.</p>
    pub fn details(mut self, input: crate::types::FlowValidationDetails) -> Self {
        self.details = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specific details about the validation issue encountered in the flow.</p>
    pub fn set_details(mut self, input: ::std::option::Option<crate::types::FlowValidationDetails>) -> Self {
        self.details = input;
        self
    }
    /// <p>Specific details about the validation issue encountered in the flow.</p>
    pub fn get_details(&self) -> &::std::option::Option<crate::types::FlowValidationDetails> {
        &self.details
    }
    /// <p>The type of validation issue encountered in the flow.</p>
    pub fn r#type(mut self, input: crate::types::FlowValidationType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of validation issue encountered in the flow.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::FlowValidationType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of validation issue encountered in the flow.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::FlowValidationType> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`FlowValidation`](crate::types::FlowValidation).
    /// This method will fail if any of the following fields are not set:
    /// - [`message`](crate::types::builders::FlowValidationBuilder::message)
    /// - [`severity`](crate::types::builders::FlowValidationBuilder::severity)
    pub fn build(self) -> ::std::result::Result<crate::types::FlowValidation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FlowValidation {
            message: self.message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message",
                    "message was not specified but it is required when building FlowValidation",
                )
            })?,
            severity: self.severity.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "severity",
                    "severity was not specified but it is required when building FlowValidation",
                )
            })?,
            details: self.details,
            r#type: self.r#type,
        })
    }
}
