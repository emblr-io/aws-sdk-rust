// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for a Lambda function node in the flow. You specify the Lambda function to invoke and the inputs into the function. The output is the response that is defined in the Lambda function. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html">Node types in a flow</a> in the Amazon Bedrock User Guide.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LambdaFunctionFlowNodeConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function to invoke.</p>
    pub lambda_arn: ::std::string::String,
}
impl LambdaFunctionFlowNodeConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function to invoke.</p>
    pub fn lambda_arn(&self) -> &str {
        use std::ops::Deref;
        self.lambda_arn.deref()
    }
}
impl LambdaFunctionFlowNodeConfiguration {
    /// Creates a new builder-style object to manufacture [`LambdaFunctionFlowNodeConfiguration`](crate::types::LambdaFunctionFlowNodeConfiguration).
    pub fn builder() -> crate::types::builders::LambdaFunctionFlowNodeConfigurationBuilder {
        crate::types::builders::LambdaFunctionFlowNodeConfigurationBuilder::default()
    }
}

/// A builder for [`LambdaFunctionFlowNodeConfiguration`](crate::types::LambdaFunctionFlowNodeConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LambdaFunctionFlowNodeConfigurationBuilder {
    pub(crate) lambda_arn: ::std::option::Option<::std::string::String>,
}
impl LambdaFunctionFlowNodeConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function to invoke.</p>
    /// This field is required.
    pub fn lambda_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.lambda_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function to invoke.</p>
    pub fn set_lambda_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.lambda_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function to invoke.</p>
    pub fn get_lambda_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.lambda_arn
    }
    /// Consumes the builder and constructs a [`LambdaFunctionFlowNodeConfiguration`](crate::types::LambdaFunctionFlowNodeConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`lambda_arn`](crate::types::builders::LambdaFunctionFlowNodeConfigurationBuilder::lambda_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::LambdaFunctionFlowNodeConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::LambdaFunctionFlowNodeConfiguration {
            lambda_arn: self.lambda_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "lambda_arn",
                    "lambda_arn was not specified but it is required when building LambdaFunctionFlowNodeConfiguration",
                )
            })?,
        })
    }
}
