// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteKnowledgeBaseDocumentsOutput {
    /// <p>A list of objects, each of which contains information about the documents that were deleted.</p>
    pub document_details: ::std::option::Option<::std::vec::Vec<crate::types::KnowledgeBaseDocumentDetail>>,
    _request_id: Option<String>,
}
impl DeleteKnowledgeBaseDocumentsOutput {
    /// <p>A list of objects, each of which contains information about the documents that were deleted.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.document_details.is_none()`.
    pub fn document_details(&self) -> &[crate::types::KnowledgeBaseDocumentDetail] {
        self.document_details.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for DeleteKnowledgeBaseDocumentsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteKnowledgeBaseDocumentsOutput {
    /// Creates a new builder-style object to manufacture [`DeleteKnowledgeBaseDocumentsOutput`](crate::operation::delete_knowledge_base_documents::DeleteKnowledgeBaseDocumentsOutput).
    pub fn builder() -> crate::operation::delete_knowledge_base_documents::builders::DeleteKnowledgeBaseDocumentsOutputBuilder {
        crate::operation::delete_knowledge_base_documents::builders::DeleteKnowledgeBaseDocumentsOutputBuilder::default()
    }
}

/// A builder for [`DeleteKnowledgeBaseDocumentsOutput`](crate::operation::delete_knowledge_base_documents::DeleteKnowledgeBaseDocumentsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteKnowledgeBaseDocumentsOutputBuilder {
    pub(crate) document_details: ::std::option::Option<::std::vec::Vec<crate::types::KnowledgeBaseDocumentDetail>>,
    _request_id: Option<String>,
}
impl DeleteKnowledgeBaseDocumentsOutputBuilder {
    /// Appends an item to `document_details`.
    ///
    /// To override the contents of this collection use [`set_document_details`](Self::set_document_details).
    ///
    /// <p>A list of objects, each of which contains information about the documents that were deleted.</p>
    pub fn document_details(mut self, input: crate::types::KnowledgeBaseDocumentDetail) -> Self {
        let mut v = self.document_details.unwrap_or_default();
        v.push(input);
        self.document_details = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of objects, each of which contains information about the documents that were deleted.</p>
    pub fn set_document_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::KnowledgeBaseDocumentDetail>>) -> Self {
        self.document_details = input;
        self
    }
    /// <p>A list of objects, each of which contains information about the documents that were deleted.</p>
    pub fn get_document_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::KnowledgeBaseDocumentDetail>> {
        &self.document_details
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteKnowledgeBaseDocumentsOutput`](crate::operation::delete_knowledge_base_documents::DeleteKnowledgeBaseDocumentsOutput).
    pub fn build(self) -> crate::operation::delete_knowledge_base_documents::DeleteKnowledgeBaseDocumentsOutput {
        crate::operation::delete_knowledge_base_documents::DeleteKnowledgeBaseDocumentsOutput {
            document_details: self.document_details,
            _request_id: self._request_id,
        }
    }
}
