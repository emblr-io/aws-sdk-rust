// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ValidateFlowDefinitionInput {
    /// <p>The definition of a flow to validate.</p>
    pub definition: ::std::option::Option<crate::types::FlowDefinition>,
}
impl ValidateFlowDefinitionInput {
    /// <p>The definition of a flow to validate.</p>
    pub fn definition(&self) -> ::std::option::Option<&crate::types::FlowDefinition> {
        self.definition.as_ref()
    }
}
impl ::std::fmt::Debug for ValidateFlowDefinitionInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ValidateFlowDefinitionInput");
        formatter.field("definition", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ValidateFlowDefinitionInput {
    /// Creates a new builder-style object to manufacture [`ValidateFlowDefinitionInput`](crate::operation::validate_flow_definition::ValidateFlowDefinitionInput).
    pub fn builder() -> crate::operation::validate_flow_definition::builders::ValidateFlowDefinitionInputBuilder {
        crate::operation::validate_flow_definition::builders::ValidateFlowDefinitionInputBuilder::default()
    }
}

/// A builder for [`ValidateFlowDefinitionInput`](crate::operation::validate_flow_definition::ValidateFlowDefinitionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct ValidateFlowDefinitionInputBuilder {
    pub(crate) definition: ::std::option::Option<crate::types::FlowDefinition>,
}
impl ValidateFlowDefinitionInputBuilder {
    /// <p>The definition of a flow to validate.</p>
    /// This field is required.
    pub fn definition(mut self, input: crate::types::FlowDefinition) -> Self {
        self.definition = ::std::option::Option::Some(input);
        self
    }
    /// <p>The definition of a flow to validate.</p>
    pub fn set_definition(mut self, input: ::std::option::Option<crate::types::FlowDefinition>) -> Self {
        self.definition = input;
        self
    }
    /// <p>The definition of a flow to validate.</p>
    pub fn get_definition(&self) -> &::std::option::Option<crate::types::FlowDefinition> {
        &self.definition
    }
    /// Consumes the builder and constructs a [`ValidateFlowDefinitionInput`](crate::operation::validate_flow_definition::ValidateFlowDefinitionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::validate_flow_definition::ValidateFlowDefinitionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::validate_flow_definition::ValidateFlowDefinitionInput { definition: self.definition })
    }
}
impl ::std::fmt::Debug for ValidateFlowDefinitionInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ValidateFlowDefinitionInputBuilder");
        formatter.field("definition", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
