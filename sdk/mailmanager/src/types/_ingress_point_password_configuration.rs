// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The password configuration of the ingress endpoint resource.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IngressPointPasswordConfiguration {
    /// <p>The current password expiry timestamp of the ingress endpoint resource.</p>
    pub smtp_password_version: ::std::option::Option<::std::string::String>,
    /// <p>The previous password version of the ingress endpoint resource.</p>
    pub previous_smtp_password_version: ::std::option::Option<::std::string::String>,
    /// <p>The previous password expiry timestamp of the ingress endpoint resource.</p>
    pub previous_smtp_password_expiry_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl IngressPointPasswordConfiguration {
    /// <p>The current password expiry timestamp of the ingress endpoint resource.</p>
    pub fn smtp_password_version(&self) -> ::std::option::Option<&str> {
        self.smtp_password_version.as_deref()
    }
    /// <p>The previous password version of the ingress endpoint resource.</p>
    pub fn previous_smtp_password_version(&self) -> ::std::option::Option<&str> {
        self.previous_smtp_password_version.as_deref()
    }
    /// <p>The previous password expiry timestamp of the ingress endpoint resource.</p>
    pub fn previous_smtp_password_expiry_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.previous_smtp_password_expiry_timestamp.as_ref()
    }
}
impl IngressPointPasswordConfiguration {
    /// Creates a new builder-style object to manufacture [`IngressPointPasswordConfiguration`](crate::types::IngressPointPasswordConfiguration).
    pub fn builder() -> crate::types::builders::IngressPointPasswordConfigurationBuilder {
        crate::types::builders::IngressPointPasswordConfigurationBuilder::default()
    }
}

/// A builder for [`IngressPointPasswordConfiguration`](crate::types::IngressPointPasswordConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IngressPointPasswordConfigurationBuilder {
    pub(crate) smtp_password_version: ::std::option::Option<::std::string::String>,
    pub(crate) previous_smtp_password_version: ::std::option::Option<::std::string::String>,
    pub(crate) previous_smtp_password_expiry_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl IngressPointPasswordConfigurationBuilder {
    /// <p>The current password expiry timestamp of the ingress endpoint resource.</p>
    pub fn smtp_password_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.smtp_password_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The current password expiry timestamp of the ingress endpoint resource.</p>
    pub fn set_smtp_password_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.smtp_password_version = input;
        self
    }
    /// <p>The current password expiry timestamp of the ingress endpoint resource.</p>
    pub fn get_smtp_password_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.smtp_password_version
    }
    /// <p>The previous password version of the ingress endpoint resource.</p>
    pub fn previous_smtp_password_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.previous_smtp_password_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The previous password version of the ingress endpoint resource.</p>
    pub fn set_previous_smtp_password_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.previous_smtp_password_version = input;
        self
    }
    /// <p>The previous password version of the ingress endpoint resource.</p>
    pub fn get_previous_smtp_password_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.previous_smtp_password_version
    }
    /// <p>The previous password expiry timestamp of the ingress endpoint resource.</p>
    pub fn previous_smtp_password_expiry_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.previous_smtp_password_expiry_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The previous password expiry timestamp of the ingress endpoint resource.</p>
    pub fn set_previous_smtp_password_expiry_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.previous_smtp_password_expiry_timestamp = input;
        self
    }
    /// <p>The previous password expiry timestamp of the ingress endpoint resource.</p>
    pub fn get_previous_smtp_password_expiry_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.previous_smtp_password_expiry_timestamp
    }
    /// Consumes the builder and constructs a [`IngressPointPasswordConfiguration`](crate::types::IngressPointPasswordConfiguration).
    pub fn build(self) -> crate::types::IngressPointPasswordConfiguration {
        crate::types::IngressPointPasswordConfiguration {
            smtp_password_version: self.smtp_password_version,
            previous_smtp_password_version: self.previous_smtp_password_version,
            previous_smtp_password_expiry_timestamp: self.previous_smtp_password_expiry_timestamp,
        }
    }
}
