// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An address that is a member of an address list.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct SavedAddress {
    /// <p>The email or domain that constitutes the address.</p>
    pub address: ::std::string::String,
    /// <p>The timestamp of when the address was added to the address list.</p>
    pub created_timestamp: ::aws_smithy_types::DateTime,
}
impl SavedAddress {
    /// <p>The email or domain that constitutes the address.</p>
    pub fn address(&self) -> &str {
        use std::ops::Deref;
        self.address.deref()
    }
    /// <p>The timestamp of when the address was added to the address list.</p>
    pub fn created_timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.created_timestamp
    }
}
impl ::std::fmt::Debug for SavedAddress {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SavedAddress");
        formatter.field("address", &"*** Sensitive Data Redacted ***");
        formatter.field("created_timestamp", &self.created_timestamp);
        formatter.finish()
    }
}
impl SavedAddress {
    /// Creates a new builder-style object to manufacture [`SavedAddress`](crate::types::SavedAddress).
    pub fn builder() -> crate::types::builders::SavedAddressBuilder {
        crate::types::builders::SavedAddressBuilder::default()
    }
}

/// A builder for [`SavedAddress`](crate::types::SavedAddress).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct SavedAddressBuilder {
    pub(crate) address: ::std::option::Option<::std::string::String>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl SavedAddressBuilder {
    /// <p>The email or domain that constitutes the address.</p>
    /// This field is required.
    pub fn address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.address = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The email or domain that constitutes the address.</p>
    pub fn set_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.address = input;
        self
    }
    /// <p>The email or domain that constitutes the address.</p>
    pub fn get_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.address
    }
    /// <p>The timestamp of when the address was added to the address list.</p>
    /// This field is required.
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the address was added to the address list.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The timestamp of when the address was added to the address list.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// Consumes the builder and constructs a [`SavedAddress`](crate::types::SavedAddress).
    /// This method will fail if any of the following fields are not set:
    /// - [`address`](crate::types::builders::SavedAddressBuilder::address)
    /// - [`created_timestamp`](crate::types::builders::SavedAddressBuilder::created_timestamp)
    pub fn build(self) -> ::std::result::Result<crate::types::SavedAddress, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SavedAddress {
            address: self.address.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "address",
                    "address was not specified but it is required when building SavedAddress",
                )
            })?,
            created_timestamp: self.created_timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_timestamp",
                    "created_timestamp was not specified but it is required when building SavedAddress",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for SavedAddressBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SavedAddressBuilder");
        formatter.field("address", &"*** Sensitive Data Redacted ***");
        formatter.field("created_timestamp", &self.created_timestamp);
        formatter.finish()
    }
}
