// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateAddonSubscriptionOutput {
    /// <p>The unique ID of the Add On subscription created by this API.</p>
    pub addon_subscription_id: ::std::string::String,
    _request_id: Option<String>,
}
impl CreateAddonSubscriptionOutput {
    /// <p>The unique ID of the Add On subscription created by this API.</p>
    pub fn addon_subscription_id(&self) -> &str {
        use std::ops::Deref;
        self.addon_subscription_id.deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateAddonSubscriptionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateAddonSubscriptionOutput {
    /// Creates a new builder-style object to manufacture [`CreateAddonSubscriptionOutput`](crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput).
    pub fn builder() -> crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionOutputBuilder {
        crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionOutputBuilder::default()
    }
}

/// A builder for [`CreateAddonSubscriptionOutput`](crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateAddonSubscriptionOutputBuilder {
    pub(crate) addon_subscription_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateAddonSubscriptionOutputBuilder {
    /// <p>The unique ID of the Add On subscription created by this API.</p>
    /// This field is required.
    pub fn addon_subscription_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.addon_subscription_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID of the Add On subscription created by this API.</p>
    pub fn set_addon_subscription_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.addon_subscription_id = input;
        self
    }
    /// <p>The unique ID of the Add On subscription created by this API.</p>
    pub fn get_addon_subscription_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.addon_subscription_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateAddonSubscriptionOutput`](crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`addon_subscription_id`](crate::operation::create_addon_subscription::builders::CreateAddonSubscriptionOutputBuilder::addon_subscription_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_addon_subscription::CreateAddonSubscriptionOutput {
            addon_subscription_id: self.addon_subscription_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "addon_subscription_id",
                    "addon_subscription_id was not specified but it is required when building CreateAddonSubscriptionOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
