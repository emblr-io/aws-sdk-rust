// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response containing the textual content of the requested archived email message.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetArchiveMessageContentOutput {
    /// <p>The textual body content of the email message.</p>
    pub body: ::std::option::Option<crate::types::MessageBody>,
    _request_id: Option<String>,
}
impl GetArchiveMessageContentOutput {
    /// <p>The textual body content of the email message.</p>
    pub fn body(&self) -> ::std::option::Option<&crate::types::MessageBody> {
        self.body.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetArchiveMessageContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetArchiveMessageContentOutput {
    /// Creates a new builder-style object to manufacture [`GetArchiveMessageContentOutput`](crate::operation::get_archive_message_content::GetArchiveMessageContentOutput).
    pub fn builder() -> crate::operation::get_archive_message_content::builders::GetArchiveMessageContentOutputBuilder {
        crate::operation::get_archive_message_content::builders::GetArchiveMessageContentOutputBuilder::default()
    }
}

/// A builder for [`GetArchiveMessageContentOutput`](crate::operation::get_archive_message_content::GetArchiveMessageContentOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetArchiveMessageContentOutputBuilder {
    pub(crate) body: ::std::option::Option<crate::types::MessageBody>,
    _request_id: Option<String>,
}
impl GetArchiveMessageContentOutputBuilder {
    /// <p>The textual body content of the email message.</p>
    pub fn body(mut self, input: crate::types::MessageBody) -> Self {
        self.body = ::std::option::Option::Some(input);
        self
    }
    /// <p>The textual body content of the email message.</p>
    pub fn set_body(mut self, input: ::std::option::Option<crate::types::MessageBody>) -> Self {
        self.body = input;
        self
    }
    /// <p>The textual body content of the email message.</p>
    pub fn get_body(&self) -> &::std::option::Option<crate::types::MessageBody> {
        &self.body
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetArchiveMessageContentOutput`](crate::operation::get_archive_message_content::GetArchiveMessageContentOutput).
    pub fn build(self) -> crate::operation::get_archive_message_content::GetArchiveMessageContentOutput {
        crate::operation::get_archive_message_content::GetArchiveMessageContentOutput {
            body: self.body,
            _request_id: self._request_id,
        }
    }
}
