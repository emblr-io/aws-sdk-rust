// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request to get details of a specific email message stored in an archive.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetArchiveMessageInput {
    /// <p>The unique identifier of the archived email message.</p>
    pub archived_message_id: ::std::option::Option<::std::string::String>,
}
impl GetArchiveMessageInput {
    /// <p>The unique identifier of the archived email message.</p>
    pub fn archived_message_id(&self) -> ::std::option::Option<&str> {
        self.archived_message_id.as_deref()
    }
}
impl GetArchiveMessageInput {
    /// Creates a new builder-style object to manufacture [`GetArchiveMessageInput`](crate::operation::get_archive_message::GetArchiveMessageInput).
    pub fn builder() -> crate::operation::get_archive_message::builders::GetArchiveMessageInputBuilder {
        crate::operation::get_archive_message::builders::GetArchiveMessageInputBuilder::default()
    }
}

/// A builder for [`GetArchiveMessageInput`](crate::operation::get_archive_message::GetArchiveMessageInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetArchiveMessageInputBuilder {
    pub(crate) archived_message_id: ::std::option::Option<::std::string::String>,
}
impl GetArchiveMessageInputBuilder {
    /// <p>The unique identifier of the archived email message.</p>
    /// This field is required.
    pub fn archived_message_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.archived_message_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the archived email message.</p>
    pub fn set_archived_message_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.archived_message_id = input;
        self
    }
    /// <p>The unique identifier of the archived email message.</p>
    pub fn get_archived_message_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.archived_message_id
    }
    /// Consumes the builder and constructs a [`GetArchiveMessageInput`](crate::operation::get_archive_message::GetArchiveMessageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_archive_message::GetArchiveMessageInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_archive_message::GetArchiveMessageInput {
            archived_message_id: self.archived_message_id,
        })
    }
}
