// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request to retrieve results from a completed archive search job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetArchiveSearchResultsInput {
    /// <p>The identifier of the completed search job.</p>
    pub search_id: ::std::option::Option<::std::string::String>,
}
impl GetArchiveSearchResultsInput {
    /// <p>The identifier of the completed search job.</p>
    pub fn search_id(&self) -> ::std::option::Option<&str> {
        self.search_id.as_deref()
    }
}
impl GetArchiveSearchResultsInput {
    /// Creates a new builder-style object to manufacture [`GetArchiveSearchResultsInput`](crate::operation::get_archive_search_results::GetArchiveSearchResultsInput).
    pub fn builder() -> crate::operation::get_archive_search_results::builders::GetArchiveSearchResultsInputBuilder {
        crate::operation::get_archive_search_results::builders::GetArchiveSearchResultsInputBuilder::default()
    }
}

/// A builder for [`GetArchiveSearchResultsInput`](crate::operation::get_archive_search_results::GetArchiveSearchResultsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetArchiveSearchResultsInputBuilder {
    pub(crate) search_id: ::std::option::Option<::std::string::String>,
}
impl GetArchiveSearchResultsInputBuilder {
    /// <p>The identifier of the completed search job.</p>
    /// This field is required.
    pub fn search_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.search_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the completed search job.</p>
    pub fn set_search_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.search_id = input;
        self
    }
    /// <p>The identifier of the completed search job.</p>
    pub fn get_search_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.search_id
    }
    /// Consumes the builder and constructs a [`GetArchiveSearchResultsInput`](crate::operation::get_archive_search_results::GetArchiveSearchResultsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_archive_search_results::GetArchiveSearchResultsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_archive_search_results::GetArchiveSearchResultsInput { search_id: self.search_id })
    }
}
