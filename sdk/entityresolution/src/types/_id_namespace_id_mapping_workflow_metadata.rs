// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The settings for the ID namespace for the ID mapping workflow job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdNamespaceIdMappingWorkflowMetadata {
    /// <p>The type of ID mapping.</p>
    pub id_mapping_type: crate::types::IdMappingType,
}
impl IdNamespaceIdMappingWorkflowMetadata {
    /// <p>The type of ID mapping.</p>
    pub fn id_mapping_type(&self) -> &crate::types::IdMappingType {
        &self.id_mapping_type
    }
}
impl IdNamespaceIdMappingWorkflowMetadata {
    /// Creates a new builder-style object to manufacture [`IdNamespaceIdMappingWorkflowMetadata`](crate::types::IdNamespaceIdMappingWorkflowMetadata).
    pub fn builder() -> crate::types::builders::IdNamespaceIdMappingWorkflowMetadataBuilder {
        crate::types::builders::IdNamespaceIdMappingWorkflowMetadataBuilder::default()
    }
}

/// A builder for [`IdNamespaceIdMappingWorkflowMetadata`](crate::types::IdNamespaceIdMappingWorkflowMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IdNamespaceIdMappingWorkflowMetadataBuilder {
    pub(crate) id_mapping_type: ::std::option::Option<crate::types::IdMappingType>,
}
impl IdNamespaceIdMappingWorkflowMetadataBuilder {
    /// <p>The type of ID mapping.</p>
    /// This field is required.
    pub fn id_mapping_type(mut self, input: crate::types::IdMappingType) -> Self {
        self.id_mapping_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of ID mapping.</p>
    pub fn set_id_mapping_type(mut self, input: ::std::option::Option<crate::types::IdMappingType>) -> Self {
        self.id_mapping_type = input;
        self
    }
    /// <p>The type of ID mapping.</p>
    pub fn get_id_mapping_type(&self) -> &::std::option::Option<crate::types::IdMappingType> {
        &self.id_mapping_type
    }
    /// Consumes the builder and constructs a [`IdNamespaceIdMappingWorkflowMetadata`](crate::types::IdNamespaceIdMappingWorkflowMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`id_mapping_type`](crate::types::builders::IdNamespaceIdMappingWorkflowMetadataBuilder::id_mapping_type)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IdNamespaceIdMappingWorkflowMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IdNamespaceIdMappingWorkflowMetadata {
            id_mapping_type: self.id_mapping_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id_mapping_type",
                    "id_mapping_type was not specified but it is required when building IdNamespaceIdMappingWorkflowMetadata",
                )
            })?,
        })
    }
}
