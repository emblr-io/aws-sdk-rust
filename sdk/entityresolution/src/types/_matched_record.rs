// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The matched record.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MatchedRecord {
    /// <p>The input source ARN of the matched record.</p>
    pub input_source_arn: ::std::string::String,
    /// <p>The record ID of the matched record.</p>
    pub record_id: ::std::string::String,
}
impl MatchedRecord {
    /// <p>The input source ARN of the matched record.</p>
    pub fn input_source_arn(&self) -> &str {
        use std::ops::Deref;
        self.input_source_arn.deref()
    }
    /// <p>The record ID of the matched record.</p>
    pub fn record_id(&self) -> &str {
        use std::ops::Deref;
        self.record_id.deref()
    }
}
impl MatchedRecord {
    /// Creates a new builder-style object to manufacture [`MatchedRecord`](crate::types::MatchedRecord).
    pub fn builder() -> crate::types::builders::MatchedRecordBuilder {
        crate::types::builders::MatchedRecordBuilder::default()
    }
}

/// A builder for [`MatchedRecord`](crate::types::MatchedRecord).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MatchedRecordBuilder {
    pub(crate) input_source_arn: ::std::option::Option<::std::string::String>,
    pub(crate) record_id: ::std::option::Option<::std::string::String>,
}
impl MatchedRecordBuilder {
    /// <p>The input source ARN of the matched record.</p>
    /// This field is required.
    pub fn input_source_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_source_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The input source ARN of the matched record.</p>
    pub fn set_input_source_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_source_arn = input;
        self
    }
    /// <p>The input source ARN of the matched record.</p>
    pub fn get_input_source_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_source_arn
    }
    /// <p>The record ID of the matched record.</p>
    /// This field is required.
    pub fn record_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.record_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The record ID of the matched record.</p>
    pub fn set_record_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.record_id = input;
        self
    }
    /// <p>The record ID of the matched record.</p>
    pub fn get_record_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.record_id
    }
    /// Consumes the builder and constructs a [`MatchedRecord`](crate::types::MatchedRecord).
    /// This method will fail if any of the following fields are not set:
    /// - [`input_source_arn`](crate::types::builders::MatchedRecordBuilder::input_source_arn)
    /// - [`record_id`](crate::types::builders::MatchedRecordBuilder::record_id)
    pub fn build(self) -> ::std::result::Result<crate::types::MatchedRecord, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MatchedRecord {
            input_source_arn: self.input_source_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "input_source_arn",
                    "input_source_arn was not specified but it is required when building MatchedRecord",
                )
            })?,
            record_id: self.record_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "record_id",
                    "record_id was not specified but it is required when building MatchedRecord",
                )
            })?,
        })
    }
}
