// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCollaborationIdNamespaceAssociationsOutput {
    /// <p>The token value provided to access the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The summary information of the collaboration ID namespace associations that you requested.</p>
    pub collaboration_id_namespace_association_summaries: ::std::vec::Vec<crate::types::CollaborationIdNamespaceAssociationSummary>,
    _request_id: Option<String>,
}
impl ListCollaborationIdNamespaceAssociationsOutput {
    /// <p>The token value provided to access the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The summary information of the collaboration ID namespace associations that you requested.</p>
    pub fn collaboration_id_namespace_association_summaries(&self) -> &[crate::types::CollaborationIdNamespaceAssociationSummary] {
        use std::ops::Deref;
        self.collaboration_id_namespace_association_summaries.deref()
    }
}
impl ::aws_types::request_id::RequestId for ListCollaborationIdNamespaceAssociationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCollaborationIdNamespaceAssociationsOutput {
    /// Creates a new builder-style object to manufacture [`ListCollaborationIdNamespaceAssociationsOutput`](crate::operation::list_collaboration_id_namespace_associations::ListCollaborationIdNamespaceAssociationsOutput).
    pub fn builder() -> crate::operation::list_collaboration_id_namespace_associations::builders::ListCollaborationIdNamespaceAssociationsOutputBuilder
    {
        crate::operation::list_collaboration_id_namespace_associations::builders::ListCollaborationIdNamespaceAssociationsOutputBuilder::default()
    }
}

/// A builder for [`ListCollaborationIdNamespaceAssociationsOutput`](crate::operation::list_collaboration_id_namespace_associations::ListCollaborationIdNamespaceAssociationsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListCollaborationIdNamespaceAssociationsOutputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) collaboration_id_namespace_association_summaries:
        ::std::option::Option<::std::vec::Vec<crate::types::CollaborationIdNamespaceAssociationSummary>>,
    _request_id: Option<String>,
}
impl ListCollaborationIdNamespaceAssociationsOutputBuilder {
    /// <p>The token value provided to access the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token value provided to access the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token value provided to access the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Appends an item to `collaboration_id_namespace_association_summaries`.
    ///
    /// To override the contents of this collection use [`set_collaboration_id_namespace_association_summaries`](Self::set_collaboration_id_namespace_association_summaries).
    ///
    /// <p>The summary information of the collaboration ID namespace associations that you requested.</p>
    pub fn collaboration_id_namespace_association_summaries(mut self, input: crate::types::CollaborationIdNamespaceAssociationSummary) -> Self {
        let mut v = self.collaboration_id_namespace_association_summaries.unwrap_or_default();
        v.push(input);
        self.collaboration_id_namespace_association_summaries = ::std::option::Option::Some(v);
        self
    }
    /// <p>The summary information of the collaboration ID namespace associations that you requested.</p>
    pub fn set_collaboration_id_namespace_association_summaries(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::CollaborationIdNamespaceAssociationSummary>>,
    ) -> Self {
        self.collaboration_id_namespace_association_summaries = input;
        self
    }
    /// <p>The summary information of the collaboration ID namespace associations that you requested.</p>
    pub fn get_collaboration_id_namespace_association_summaries(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::CollaborationIdNamespaceAssociationSummary>> {
        &self.collaboration_id_namespace_association_summaries
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCollaborationIdNamespaceAssociationsOutput`](crate::operation::list_collaboration_id_namespace_associations::ListCollaborationIdNamespaceAssociationsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`collaboration_id_namespace_association_summaries`](crate::operation::list_collaboration_id_namespace_associations::builders::ListCollaborationIdNamespaceAssociationsOutputBuilder::collaboration_id_namespace_association_summaries)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_collaboration_id_namespace_associations::ListCollaborationIdNamespaceAssociationsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_collaboration_id_namespace_associations::ListCollaborationIdNamespaceAssociationsOutput {
                next_token: self.next_token
                ,
                collaboration_id_namespace_association_summaries: self.collaboration_id_namespace_association_summaries
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("collaboration_id_namespace_association_summaries", "collaboration_id_namespace_association_summaries was not specified but it is required when building ListCollaborationIdNamespaceAssociationsOutput")
                    )?
                ,
                _request_id: self._request_id,
            }
        )
    }
}
