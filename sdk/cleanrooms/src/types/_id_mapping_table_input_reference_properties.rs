// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input reference properties for the ID mapping table.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdMappingTableInputReferenceProperties {
    /// <p>The input source of the ID mapping table.</p>
    pub id_mapping_table_input_source: ::std::vec::Vec<crate::types::IdMappingTableInputSource>,
}
impl IdMappingTableInputReferenceProperties {
    /// <p>The input source of the ID mapping table.</p>
    pub fn id_mapping_table_input_source(&self) -> &[crate::types::IdMappingTableInputSource] {
        use std::ops::Deref;
        self.id_mapping_table_input_source.deref()
    }
}
impl IdMappingTableInputReferenceProperties {
    /// Creates a new builder-style object to manufacture [`IdMappingTableInputReferenceProperties`](crate::types::IdMappingTableInputReferenceProperties).
    pub fn builder() -> crate::types::builders::IdMappingTableInputReferencePropertiesBuilder {
        crate::types::builders::IdMappingTableInputReferencePropertiesBuilder::default()
    }
}

/// A builder for [`IdMappingTableInputReferenceProperties`](crate::types::IdMappingTableInputReferenceProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IdMappingTableInputReferencePropertiesBuilder {
    pub(crate) id_mapping_table_input_source: ::std::option::Option<::std::vec::Vec<crate::types::IdMappingTableInputSource>>,
}
impl IdMappingTableInputReferencePropertiesBuilder {
    /// Appends an item to `id_mapping_table_input_source`.
    ///
    /// To override the contents of this collection use [`set_id_mapping_table_input_source`](Self::set_id_mapping_table_input_source).
    ///
    /// <p>The input source of the ID mapping table.</p>
    pub fn id_mapping_table_input_source(mut self, input: crate::types::IdMappingTableInputSource) -> Self {
        let mut v = self.id_mapping_table_input_source.unwrap_or_default();
        v.push(input);
        self.id_mapping_table_input_source = ::std::option::Option::Some(v);
        self
    }
    /// <p>The input source of the ID mapping table.</p>
    pub fn set_id_mapping_table_input_source(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::IdMappingTableInputSource>>,
    ) -> Self {
        self.id_mapping_table_input_source = input;
        self
    }
    /// <p>The input source of the ID mapping table.</p>
    pub fn get_id_mapping_table_input_source(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::IdMappingTableInputSource>> {
        &self.id_mapping_table_input_source
    }
    /// Consumes the builder and constructs a [`IdMappingTableInputReferenceProperties`](crate::types::IdMappingTableInputReferenceProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`id_mapping_table_input_source`](crate::types::builders::IdMappingTableInputReferencePropertiesBuilder::id_mapping_table_input_source)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IdMappingTableInputReferenceProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IdMappingTableInputReferenceProperties {
            id_mapping_table_input_source: self.id_mapping_table_input_source.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id_mapping_table_input_source",
                    "id_mapping_table_input_source was not specified but it is required when building IdMappingTableInputReferenceProperties",
                )
            })?,
        })
    }
}
