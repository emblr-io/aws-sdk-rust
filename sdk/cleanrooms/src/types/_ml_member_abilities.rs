// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The ML member abilities for a collaboration member.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MlMemberAbilities {
    /// <p>The custom ML member abilities for a collaboration member.</p>
    pub custom_ml_member_abilities: ::std::vec::Vec<crate::types::CustomMlMemberAbility>,
}
impl MlMemberAbilities {
    /// <p>The custom ML member abilities for a collaboration member.</p>
    pub fn custom_ml_member_abilities(&self) -> &[crate::types::CustomMlMemberAbility] {
        use std::ops::Deref;
        self.custom_ml_member_abilities.deref()
    }
}
impl MlMemberAbilities {
    /// Creates a new builder-style object to manufacture [`MlMemberAbilities`](crate::types::MlMemberAbilities).
    pub fn builder() -> crate::types::builders::MlMemberAbilitiesBuilder {
        crate::types::builders::MlMemberAbilitiesBuilder::default()
    }
}

/// A builder for [`MlMemberAbilities`](crate::types::MlMemberAbilities).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MlMemberAbilitiesBuilder {
    pub(crate) custom_ml_member_abilities: ::std::option::Option<::std::vec::Vec<crate::types::CustomMlMemberAbility>>,
}
impl MlMemberAbilitiesBuilder {
    /// Appends an item to `custom_ml_member_abilities`.
    ///
    /// To override the contents of this collection use [`set_custom_ml_member_abilities`](Self::set_custom_ml_member_abilities).
    ///
    /// <p>The custom ML member abilities for a collaboration member.</p>
    pub fn custom_ml_member_abilities(mut self, input: crate::types::CustomMlMemberAbility) -> Self {
        let mut v = self.custom_ml_member_abilities.unwrap_or_default();
        v.push(input);
        self.custom_ml_member_abilities = ::std::option::Option::Some(v);
        self
    }
    /// <p>The custom ML member abilities for a collaboration member.</p>
    pub fn set_custom_ml_member_abilities(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CustomMlMemberAbility>>) -> Self {
        self.custom_ml_member_abilities = input;
        self
    }
    /// <p>The custom ML member abilities for a collaboration member.</p>
    pub fn get_custom_ml_member_abilities(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CustomMlMemberAbility>> {
        &self.custom_ml_member_abilities
    }
    /// Consumes the builder and constructs a [`MlMemberAbilities`](crate::types::MlMemberAbilities).
    /// This method will fail if any of the following fields are not set:
    /// - [`custom_ml_member_abilities`](crate::types::builders::MlMemberAbilitiesBuilder::custom_ml_member_abilities)
    pub fn build(self) -> ::std::result::Result<crate::types::MlMemberAbilities, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MlMemberAbilities {
            custom_ml_member_abilities: self.custom_ml_member_abilities.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "custom_ml_member_abilities",
                    "custom_ml_member_abilities was not specified but it is required when building MlMemberAbilities",
                )
            })?,
        })
    }
}
