// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information related to the utilization of resources that have been billed or charged for in a given context, such as a protected query.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BilledResourceUtilization {
    /// <p>The number of Clean Rooms Processing Unit (CRPU) hours that have been billed.</p>
    pub units: f64,
}
impl BilledResourceUtilization {
    /// <p>The number of Clean Rooms Processing Unit (CRPU) hours that have been billed.</p>
    pub fn units(&self) -> f64 {
        self.units
    }
}
impl BilledResourceUtilization {
    /// Creates a new builder-style object to manufacture [`BilledResourceUtilization`](crate::types::BilledResourceUtilization).
    pub fn builder() -> crate::types::builders::BilledResourceUtilizationBuilder {
        crate::types::builders::BilledResourceUtilizationBuilder::default()
    }
}

/// A builder for [`BilledResourceUtilization`](crate::types::BilledResourceUtilization).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BilledResourceUtilizationBuilder {
    pub(crate) units: ::std::option::Option<f64>,
}
impl BilledResourceUtilizationBuilder {
    /// <p>The number of Clean Rooms Processing Unit (CRPU) hours that have been billed.</p>
    /// This field is required.
    pub fn units(mut self, input: f64) -> Self {
        self.units = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Clean Rooms Processing Unit (CRPU) hours that have been billed.</p>
    pub fn set_units(mut self, input: ::std::option::Option<f64>) -> Self {
        self.units = input;
        self
    }
    /// <p>The number of Clean Rooms Processing Unit (CRPU) hours that have been billed.</p>
    pub fn get_units(&self) -> &::std::option::Option<f64> {
        &self.units
    }
    /// Consumes the builder and constructs a [`BilledResourceUtilization`](crate::types::BilledResourceUtilization).
    /// This method will fail if any of the following fields are not set:
    /// - [`units`](crate::types::builders::BilledResourceUtilizationBuilder::units)
    pub fn build(self) -> ::std::result::Result<crate::types::BilledResourceUtilization, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BilledResourceUtilization {
            units: self.units.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "units",
                    "units was not specified but it is required when building BilledResourceUtilization",
                )
            })?,
        })
    }
}
