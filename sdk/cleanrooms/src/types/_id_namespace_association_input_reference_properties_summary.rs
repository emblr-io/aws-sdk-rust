// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detailed information about the ID namespace association input reference properties.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdNamespaceAssociationInputReferencePropertiesSummary {
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub id_namespace_type: crate::types::IdNamespaceType,
}
impl IdNamespaceAssociationInputReferencePropertiesSummary {
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn id_namespace_type(&self) -> &crate::types::IdNamespaceType {
        &self.id_namespace_type
    }
}
impl IdNamespaceAssociationInputReferencePropertiesSummary {
    /// Creates a new builder-style object to manufacture [`IdNamespaceAssociationInputReferencePropertiesSummary`](crate::types::IdNamespaceAssociationInputReferencePropertiesSummary).
    pub fn builder() -> crate::types::builders::IdNamespaceAssociationInputReferencePropertiesSummaryBuilder {
        crate::types::builders::IdNamespaceAssociationInputReferencePropertiesSummaryBuilder::default()
    }
}

/// A builder for [`IdNamespaceAssociationInputReferencePropertiesSummary`](crate::types::IdNamespaceAssociationInputReferencePropertiesSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IdNamespaceAssociationInputReferencePropertiesSummaryBuilder {
    pub(crate) id_namespace_type: ::std::option::Option<crate::types::IdNamespaceType>,
}
impl IdNamespaceAssociationInputReferencePropertiesSummaryBuilder {
    /// <p>The ID namespace type for this ID namespace association.</p>
    /// This field is required.
    pub fn id_namespace_type(mut self, input: crate::types::IdNamespaceType) -> Self {
        self.id_namespace_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn set_id_namespace_type(mut self, input: ::std::option::Option<crate::types::IdNamespaceType>) -> Self {
        self.id_namespace_type = input;
        self
    }
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn get_id_namespace_type(&self) -> &::std::option::Option<crate::types::IdNamespaceType> {
        &self.id_namespace_type
    }
    /// Consumes the builder and constructs a [`IdNamespaceAssociationInputReferencePropertiesSummary`](crate::types::IdNamespaceAssociationInputReferencePropertiesSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id_namespace_type`](crate::types::builders::IdNamespaceAssociationInputReferencePropertiesSummaryBuilder::id_namespace_type)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IdNamespaceAssociationInputReferencePropertiesSummary, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::types::IdNamespaceAssociationInputReferencePropertiesSummary {
            id_namespace_type: self.id_namespace_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id_namespace_type",
                    "id_namespace_type was not specified but it is required when building IdNamespaceAssociationInputReferencePropertiesSummary",
                )
            })?,
        })
    }
}
