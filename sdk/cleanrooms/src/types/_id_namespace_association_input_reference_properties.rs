// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the information for the ID namespace association input reference properties.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdNamespaceAssociationInputReferenceProperties {
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub id_namespace_type: crate::types::IdNamespaceType,
    /// <p>Defines how ID mapping workflows are supported for this ID namespace association.</p>
    pub id_mapping_workflows_supported: ::std::vec::Vec<::aws_smithy_types::Document>,
}
impl IdNamespaceAssociationInputReferenceProperties {
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn id_namespace_type(&self) -> &crate::types::IdNamespaceType {
        &self.id_namespace_type
    }
    /// <p>Defines how ID mapping workflows are supported for this ID namespace association.</p>
    pub fn id_mapping_workflows_supported(&self) -> &[::aws_smithy_types::Document] {
        use std::ops::Deref;
        self.id_mapping_workflows_supported.deref()
    }
}
impl IdNamespaceAssociationInputReferenceProperties {
    /// Creates a new builder-style object to manufacture [`IdNamespaceAssociationInputReferenceProperties`](crate::types::IdNamespaceAssociationInputReferenceProperties).
    pub fn builder() -> crate::types::builders::IdNamespaceAssociationInputReferencePropertiesBuilder {
        crate::types::builders::IdNamespaceAssociationInputReferencePropertiesBuilder::default()
    }
}

/// A builder for [`IdNamespaceAssociationInputReferenceProperties`](crate::types::IdNamespaceAssociationInputReferenceProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IdNamespaceAssociationInputReferencePropertiesBuilder {
    pub(crate) id_namespace_type: ::std::option::Option<crate::types::IdNamespaceType>,
    pub(crate) id_mapping_workflows_supported: ::std::option::Option<::std::vec::Vec<::aws_smithy_types::Document>>,
}
impl IdNamespaceAssociationInputReferencePropertiesBuilder {
    /// <p>The ID namespace type for this ID namespace association.</p>
    /// This field is required.
    pub fn id_namespace_type(mut self, input: crate::types::IdNamespaceType) -> Self {
        self.id_namespace_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn set_id_namespace_type(mut self, input: ::std::option::Option<crate::types::IdNamespaceType>) -> Self {
        self.id_namespace_type = input;
        self
    }
    /// <p>The ID namespace type for this ID namespace association.</p>
    pub fn get_id_namespace_type(&self) -> &::std::option::Option<crate::types::IdNamespaceType> {
        &self.id_namespace_type
    }
    /// Appends an item to `id_mapping_workflows_supported`.
    ///
    /// To override the contents of this collection use [`set_id_mapping_workflows_supported`](Self::set_id_mapping_workflows_supported).
    ///
    /// <p>Defines how ID mapping workflows are supported for this ID namespace association.</p>
    pub fn id_mapping_workflows_supported(mut self, input: ::aws_smithy_types::Document) -> Self {
        let mut v = self.id_mapping_workflows_supported.unwrap_or_default();
        v.push(input);
        self.id_mapping_workflows_supported = ::std::option::Option::Some(v);
        self
    }
    /// <p>Defines how ID mapping workflows are supported for this ID namespace association.</p>
    pub fn set_id_mapping_workflows_supported(mut self, input: ::std::option::Option<::std::vec::Vec<::aws_smithy_types::Document>>) -> Self {
        self.id_mapping_workflows_supported = input;
        self
    }
    /// <p>Defines how ID mapping workflows are supported for this ID namespace association.</p>
    pub fn get_id_mapping_workflows_supported(&self) -> &::std::option::Option<::std::vec::Vec<::aws_smithy_types::Document>> {
        &self.id_mapping_workflows_supported
    }
    /// Consumes the builder and constructs a [`IdNamespaceAssociationInputReferenceProperties`](crate::types::IdNamespaceAssociationInputReferenceProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`id_namespace_type`](crate::types::builders::IdNamespaceAssociationInputReferencePropertiesBuilder::id_namespace_type)
    /// - [`id_mapping_workflows_supported`](crate::types::builders::IdNamespaceAssociationInputReferencePropertiesBuilder::id_mapping_workflows_supported)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IdNamespaceAssociationInputReferenceProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::types::IdNamespaceAssociationInputReferenceProperties {
                id_namespace_type: self.id_namespace_type
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("id_namespace_type", "id_namespace_type was not specified but it is required when building IdNamespaceAssociationInputReferenceProperties")
                    )?
                ,
                id_mapping_workflows_supported: self.id_mapping_workflows_supported
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("id_mapping_workflows_supported", "id_mapping_workflows_supported was not specified but it is required when building IdNamespaceAssociationInputReferenceProperties")
                    )?
                ,
            }
        )
    }
}
