// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The protected job result configuration input.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProtectedJobResultConfigurationInput {
    /// <p>The output configuration for a protected job result.</p>
    pub output_configuration: ::std::option::Option<crate::types::ProtectedJobOutputConfigurationInput>,
}
impl ProtectedJobResultConfigurationInput {
    /// <p>The output configuration for a protected job result.</p>
    pub fn output_configuration(&self) -> ::std::option::Option<&crate::types::ProtectedJobOutputConfigurationInput> {
        self.output_configuration.as_ref()
    }
}
impl ProtectedJobResultConfigurationInput {
    /// Creates a new builder-style object to manufacture [`ProtectedJobResultConfigurationInput`](crate::types::ProtectedJobResultConfigurationInput).
    pub fn builder() -> crate::types::builders::ProtectedJobResultConfigurationInputBuilder {
        crate::types::builders::ProtectedJobResultConfigurationInputBuilder::default()
    }
}

/// A builder for [`ProtectedJobResultConfigurationInput`](crate::types::ProtectedJobResultConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProtectedJobResultConfigurationInputBuilder {
    pub(crate) output_configuration: ::std::option::Option<crate::types::ProtectedJobOutputConfigurationInput>,
}
impl ProtectedJobResultConfigurationInputBuilder {
    /// <p>The output configuration for a protected job result.</p>
    /// This field is required.
    pub fn output_configuration(mut self, input: crate::types::ProtectedJobOutputConfigurationInput) -> Self {
        self.output_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The output configuration for a protected job result.</p>
    pub fn set_output_configuration(mut self, input: ::std::option::Option<crate::types::ProtectedJobOutputConfigurationInput>) -> Self {
        self.output_configuration = input;
        self
    }
    /// <p>The output configuration for a protected job result.</p>
    pub fn get_output_configuration(&self) -> &::std::option::Option<crate::types::ProtectedJobOutputConfigurationInput> {
        &self.output_configuration
    }
    /// Consumes the builder and constructs a [`ProtectedJobResultConfigurationInput`](crate::types::ProtectedJobResultConfigurationInput).
    pub fn build(self) -> crate::types::ProtectedJobResultConfigurationInput {
        crate::types::ProtectedJobResultConfigurationInput {
            output_configuration: self.output_configuration,
        }
    }
}
