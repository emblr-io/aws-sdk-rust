// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for protected job results.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MembershipProtectedJobResultConfiguration {
    /// <p>The output configuration for a protected job result.</p>
    pub output_configuration: ::std::option::Option<crate::types::MembershipProtectedJobOutputConfiguration>,
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected job results to the result location, given by the member who can receive results.</p>
    pub role_arn: ::std::string::String,
}
impl MembershipProtectedJobResultConfiguration {
    /// <p>The output configuration for a protected job result.</p>
    pub fn output_configuration(&self) -> ::std::option::Option<&crate::types::MembershipProtectedJobOutputConfiguration> {
        self.output_configuration.as_ref()
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected job results to the result location, given by the member who can receive results.</p>
    pub fn role_arn(&self) -> &str {
        use std::ops::Deref;
        self.role_arn.deref()
    }
}
impl MembershipProtectedJobResultConfiguration {
    /// Creates a new builder-style object to manufacture [`MembershipProtectedJobResultConfiguration`](crate::types::MembershipProtectedJobResultConfiguration).
    pub fn builder() -> crate::types::builders::MembershipProtectedJobResultConfigurationBuilder {
        crate::types::builders::MembershipProtectedJobResultConfigurationBuilder::default()
    }
}

/// A builder for [`MembershipProtectedJobResultConfiguration`](crate::types::MembershipProtectedJobResultConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MembershipProtectedJobResultConfigurationBuilder {
    pub(crate) output_configuration: ::std::option::Option<crate::types::MembershipProtectedJobOutputConfiguration>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl MembershipProtectedJobResultConfigurationBuilder {
    /// <p>The output configuration for a protected job result.</p>
    /// This field is required.
    pub fn output_configuration(mut self, input: crate::types::MembershipProtectedJobOutputConfiguration) -> Self {
        self.output_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The output configuration for a protected job result.</p>
    pub fn set_output_configuration(mut self, input: ::std::option::Option<crate::types::MembershipProtectedJobOutputConfiguration>) -> Self {
        self.output_configuration = input;
        self
    }
    /// <p>The output configuration for a protected job result.</p>
    pub fn get_output_configuration(&self) -> &::std::option::Option<crate::types::MembershipProtectedJobOutputConfiguration> {
        &self.output_configuration
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected job results to the result location, given by the member who can receive results.</p>
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected job results to the result location, given by the member who can receive results.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected job results to the result location, given by the member who can receive results.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`MembershipProtectedJobResultConfiguration`](crate::types::MembershipProtectedJobResultConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`role_arn`](crate::types::builders::MembershipProtectedJobResultConfigurationBuilder::role_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::MembershipProtectedJobResultConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MembershipProtectedJobResultConfiguration {
            output_configuration: self.output_configuration,
            role_arn: self.role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "role_arn",
                    "role_arn was not specified but it is required when building MembershipProtectedJobResultConfiguration",
                )
            })?,
        })
    }
}
