// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Hash</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Hash {
    /// <p>The SHA-256 hash value.</p>
    pub sha256: ::std::option::Option<::std::string::String>,
}
impl Hash {
    /// <p>The SHA-256 hash value.</p>
    pub fn sha256(&self) -> ::std::option::Option<&str> {
        self.sha256.as_deref()
    }
}
impl Hash {
    /// Creates a new builder-style object to manufacture [`Hash`](crate::types::Hash).
    pub fn builder() -> crate::types::builders::HashBuilder {
        crate::types::builders::HashBuilder::default()
    }
}

/// A builder for [`Hash`](crate::types::Hash).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HashBuilder {
    pub(crate) sha256: ::std::option::Option<::std::string::String>,
}
impl HashBuilder {
    /// <p>The SHA-256 hash value.</p>
    pub fn sha256(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sha256 = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The SHA-256 hash value.</p>
    pub fn set_sha256(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sha256 = input;
        self
    }
    /// <p>The SHA-256 hash value.</p>
    pub fn get_sha256(&self) -> &::std::option::Option<::std::string::String> {
        &self.sha256
    }
    /// Consumes the builder and constructs a [`Hash`](crate::types::Hash).
    pub fn build(self) -> crate::types::Hash {
        crate::types::Hash { sha256: self.sha256 }
    }
}
