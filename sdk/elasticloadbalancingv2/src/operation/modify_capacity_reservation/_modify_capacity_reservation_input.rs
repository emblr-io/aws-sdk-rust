// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyCapacityReservationInput {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub load_balancer_arn: ::std::option::Option<::std::string::String>,
    /// <p>The minimum load balancer capacity reserved.</p>
    pub minimum_load_balancer_capacity: ::std::option::Option<crate::types::MinimumLoadBalancerCapacity>,
    /// <p>Resets the capacity reservation.</p>
    pub reset_capacity_reservation: ::std::option::Option<bool>,
}
impl ModifyCapacityReservationInput {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn load_balancer_arn(&self) -> ::std::option::Option<&str> {
        self.load_balancer_arn.as_deref()
    }
    /// <p>The minimum load balancer capacity reserved.</p>
    pub fn minimum_load_balancer_capacity(&self) -> ::std::option::Option<&crate::types::MinimumLoadBalancerCapacity> {
        self.minimum_load_balancer_capacity.as_ref()
    }
    /// <p>Resets the capacity reservation.</p>
    pub fn reset_capacity_reservation(&self) -> ::std::option::Option<bool> {
        self.reset_capacity_reservation
    }
}
impl ModifyCapacityReservationInput {
    /// Creates a new builder-style object to manufacture [`ModifyCapacityReservationInput`](crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput).
    pub fn builder() -> crate::operation::modify_capacity_reservation::builders::ModifyCapacityReservationInputBuilder {
        crate::operation::modify_capacity_reservation::builders::ModifyCapacityReservationInputBuilder::default()
    }
}

/// A builder for [`ModifyCapacityReservationInput`](crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ModifyCapacityReservationInputBuilder {
    pub(crate) load_balancer_arn: ::std::option::Option<::std::string::String>,
    pub(crate) minimum_load_balancer_capacity: ::std::option::Option<crate::types::MinimumLoadBalancerCapacity>,
    pub(crate) reset_capacity_reservation: ::std::option::Option<bool>,
}
impl ModifyCapacityReservationInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    /// This field is required.
    pub fn load_balancer_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.load_balancer_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn set_load_balancer_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.load_balancer_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn get_load_balancer_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.load_balancer_arn
    }
    /// <p>The minimum load balancer capacity reserved.</p>
    pub fn minimum_load_balancer_capacity(mut self, input: crate::types::MinimumLoadBalancerCapacity) -> Self {
        self.minimum_load_balancer_capacity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum load balancer capacity reserved.</p>
    pub fn set_minimum_load_balancer_capacity(mut self, input: ::std::option::Option<crate::types::MinimumLoadBalancerCapacity>) -> Self {
        self.minimum_load_balancer_capacity = input;
        self
    }
    /// <p>The minimum load balancer capacity reserved.</p>
    pub fn get_minimum_load_balancer_capacity(&self) -> &::std::option::Option<crate::types::MinimumLoadBalancerCapacity> {
        &self.minimum_load_balancer_capacity
    }
    /// <p>Resets the capacity reservation.</p>
    pub fn reset_capacity_reservation(mut self, input: bool) -> Self {
        self.reset_capacity_reservation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Resets the capacity reservation.</p>
    pub fn set_reset_capacity_reservation(mut self, input: ::std::option::Option<bool>) -> Self {
        self.reset_capacity_reservation = input;
        self
    }
    /// <p>Resets the capacity reservation.</p>
    pub fn get_reset_capacity_reservation(&self) -> &::std::option::Option<bool> {
        &self.reset_capacity_reservation
    }
    /// Consumes the builder and constructs a [`ModifyCapacityReservationInput`](crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput {
            load_balancer_arn: self.load_balancer_arn,
            minimum_load_balancer_capacity: self.minimum_load_balancer_capacity,
            reset_capacity_reservation: self.reset_capacity_reservation,
        })
    }
}
