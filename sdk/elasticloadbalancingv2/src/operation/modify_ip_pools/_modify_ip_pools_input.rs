// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyIpPoolsInput {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub load_balancer_arn: ::std::option::Option<::std::string::String>,
    /// <p>The IPAM pools to be modified.</p>
    pub ipam_pools: ::std::option::Option<crate::types::IpamPools>,
    /// <p>Remove the IP pools in use by the load balancer.</p>
    pub remove_ipam_pools: ::std::option::Option<::std::vec::Vec<crate::types::RemoveIpamPoolEnum>>,
}
impl ModifyIpPoolsInput {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn load_balancer_arn(&self) -> ::std::option::Option<&str> {
        self.load_balancer_arn.as_deref()
    }
    /// <p>The IPAM pools to be modified.</p>
    pub fn ipam_pools(&self) -> ::std::option::Option<&crate::types::IpamPools> {
        self.ipam_pools.as_ref()
    }
    /// <p>Remove the IP pools in use by the load balancer.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.remove_ipam_pools.is_none()`.
    pub fn remove_ipam_pools(&self) -> &[crate::types::RemoveIpamPoolEnum] {
        self.remove_ipam_pools.as_deref().unwrap_or_default()
    }
}
impl ModifyIpPoolsInput {
    /// Creates a new builder-style object to manufacture [`ModifyIpPoolsInput`](crate::operation::modify_ip_pools::ModifyIpPoolsInput).
    pub fn builder() -> crate::operation::modify_ip_pools::builders::ModifyIpPoolsInputBuilder {
        crate::operation::modify_ip_pools::builders::ModifyIpPoolsInputBuilder::default()
    }
}

/// A builder for [`ModifyIpPoolsInput`](crate::operation::modify_ip_pools::ModifyIpPoolsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ModifyIpPoolsInputBuilder {
    pub(crate) load_balancer_arn: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_pools: ::std::option::Option<crate::types::IpamPools>,
    pub(crate) remove_ipam_pools: ::std::option::Option<::std::vec::Vec<crate::types::RemoveIpamPoolEnum>>,
}
impl ModifyIpPoolsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    /// This field is required.
    pub fn load_balancer_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.load_balancer_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn set_load_balancer_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.load_balancer_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    pub fn get_load_balancer_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.load_balancer_arn
    }
    /// <p>The IPAM pools to be modified.</p>
    pub fn ipam_pools(mut self, input: crate::types::IpamPools) -> Self {
        self.ipam_pools = ::std::option::Option::Some(input);
        self
    }
    /// <p>The IPAM pools to be modified.</p>
    pub fn set_ipam_pools(mut self, input: ::std::option::Option<crate::types::IpamPools>) -> Self {
        self.ipam_pools = input;
        self
    }
    /// <p>The IPAM pools to be modified.</p>
    pub fn get_ipam_pools(&self) -> &::std::option::Option<crate::types::IpamPools> {
        &self.ipam_pools
    }
    /// Appends an item to `remove_ipam_pools`.
    ///
    /// To override the contents of this collection use [`set_remove_ipam_pools`](Self::set_remove_ipam_pools).
    ///
    /// <p>Remove the IP pools in use by the load balancer.</p>
    pub fn remove_ipam_pools(mut self, input: crate::types::RemoveIpamPoolEnum) -> Self {
        let mut v = self.remove_ipam_pools.unwrap_or_default();
        v.push(input);
        self.remove_ipam_pools = ::std::option::Option::Some(v);
        self
    }
    /// <p>Remove the IP pools in use by the load balancer.</p>
    pub fn set_remove_ipam_pools(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::RemoveIpamPoolEnum>>) -> Self {
        self.remove_ipam_pools = input;
        self
    }
    /// <p>Remove the IP pools in use by the load balancer.</p>
    pub fn get_remove_ipam_pools(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::RemoveIpamPoolEnum>> {
        &self.remove_ipam_pools
    }
    /// Consumes the builder and constructs a [`ModifyIpPoolsInput`](crate::operation::modify_ip_pools::ModifyIpPoolsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::modify_ip_pools::ModifyIpPoolsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::modify_ip_pools::ModifyIpPoolsInput {
            load_balancer_arn: self.load_balancer_arn,
            ipam_pools: self.ipam_pools,
            remove_ipam_pools: self.remove_ipam_pools,
        })
    }
}
