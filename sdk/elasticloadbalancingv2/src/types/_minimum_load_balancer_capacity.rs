// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The minimum capacity for a load balancer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MinimumLoadBalancerCapacity {
    /// <p>The number of capacity units.</p>
    pub capacity_units: ::std::option::Option<i32>,
}
impl MinimumLoadBalancerCapacity {
    /// <p>The number of capacity units.</p>
    pub fn capacity_units(&self) -> ::std::option::Option<i32> {
        self.capacity_units
    }
}
impl MinimumLoadBalancerCapacity {
    /// Creates a new builder-style object to manufacture [`MinimumLoadBalancerCapacity`](crate::types::MinimumLoadBalancerCapacity).
    pub fn builder() -> crate::types::builders::MinimumLoadBalancerCapacityBuilder {
        crate::types::builders::MinimumLoadBalancerCapacityBuilder::default()
    }
}

/// A builder for [`MinimumLoadBalancerCapacity`](crate::types::MinimumLoadBalancerCapacity).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MinimumLoadBalancerCapacityBuilder {
    pub(crate) capacity_units: ::std::option::Option<i32>,
}
impl MinimumLoadBalancerCapacityBuilder {
    /// <p>The number of capacity units.</p>
    pub fn capacity_units(mut self, input: i32) -> Self {
        self.capacity_units = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of capacity units.</p>
    pub fn set_capacity_units(mut self, input: ::std::option::Option<i32>) -> Self {
        self.capacity_units = input;
        self
    }
    /// <p>The number of capacity units.</p>
    pub fn get_capacity_units(&self) -> &::std::option::Option<i32> {
        &self.capacity_units
    }
    /// Consumes the builder and constructs a [`MinimumLoadBalancerCapacity`](crate::types::MinimumLoadBalancerCapacity).
    pub fn build(self) -> crate::types::MinimumLoadBalancerCapacity {
        crate::types::MinimumLoadBalancerCapacity {
            capacity_units: self.capacity_units,
        }
    }
}
