// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An IPAM pool is a collection of IP address CIDRs. IPAM pools enable you to organize your IP addresses according to your routing and security needs.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IpamPools {
    /// <p>The ID of the IPv4 IPAM pool.</p>
    pub ipv4_ipam_pool_id: ::std::option::Option<::std::string::String>,
}
impl IpamPools {
    /// <p>The ID of the IPv4 IPAM pool.</p>
    pub fn ipv4_ipam_pool_id(&self) -> ::std::option::Option<&str> {
        self.ipv4_ipam_pool_id.as_deref()
    }
}
impl IpamPools {
    /// Creates a new builder-style object to manufacture [`IpamPools`](crate::types::IpamPools).
    pub fn builder() -> crate::types::builders::IpamPoolsBuilder {
        crate::types::builders::IpamPoolsBuilder::default()
    }
}

/// A builder for [`IpamPools`](crate::types::IpamPools).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IpamPoolsBuilder {
    pub(crate) ipv4_ipam_pool_id: ::std::option::Option<::std::string::String>,
}
impl IpamPoolsBuilder {
    /// <p>The ID of the IPv4 IPAM pool.</p>
    pub fn ipv4_ipam_pool_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipv4_ipam_pool_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the IPv4 IPAM pool.</p>
    pub fn set_ipv4_ipam_pool_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipv4_ipam_pool_id = input;
        self
    }
    /// <p>The ID of the IPv4 IPAM pool.</p>
    pub fn get_ipv4_ipam_pool_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipv4_ipam_pool_id
    }
    /// Consumes the builder and constructs a [`IpamPools`](crate::types::IpamPools).
    pub fn build(self) -> crate::types::IpamPools {
        crate::types::IpamPools {
            ipv4_ipam_pool_id: self.ipv4_ipam_pool_id,
        }
    }
}
