// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This data type is used as a response element in the operation <code>DescribeDBMajorEngineVersions</code>.</p>
/// <p>You can use the information that this data type returns to plan for upgrades.</p>
/// <p>This data type only returns information for the open source engines Amazon RDS for MariaDB, Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SupportedEngineLifecycle {
    /// <p>The type of lifecycle support that the engine version is in.</p>
    /// <p>This parameter returns the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>open-source-rds-standard-support</code> - Indicates RDS standard support or Aurora standard support.</p></li>
    /// <li>
    /// <p><code>open-source-rds-extended-support</code> - Indicates Amazon RDS Extended Support.</p></li>
    /// </ul>
    /// <p>For Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL, this parameter returns both <code>open-source-rds-standard-support</code> and <code>open-source-rds-extended-support</code>.</p>
    /// <p>For Amazon RDS for MariaDB, this parameter only returns the value <code>open-source-rds-standard-support</code>.</p>
    /// <p>For information about Amazon RDS Extended Support, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Amazon RDS Extended Support with Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Amazon RDS Extended Support with Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub lifecycle_support_name: ::std::option::Option<crate::types::LifecycleSupportName>,
    /// <p>The start date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub lifecycle_support_start_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The end date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub lifecycle_support_end_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl SupportedEngineLifecycle {
    /// <p>The type of lifecycle support that the engine version is in.</p>
    /// <p>This parameter returns the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>open-source-rds-standard-support</code> - Indicates RDS standard support or Aurora standard support.</p></li>
    /// <li>
    /// <p><code>open-source-rds-extended-support</code> - Indicates Amazon RDS Extended Support.</p></li>
    /// </ul>
    /// <p>For Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL, this parameter returns both <code>open-source-rds-standard-support</code> and <code>open-source-rds-extended-support</code>.</p>
    /// <p>For Amazon RDS for MariaDB, this parameter only returns the value <code>open-source-rds-standard-support</code>.</p>
    /// <p>For information about Amazon RDS Extended Support, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Amazon RDS Extended Support with Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Amazon RDS Extended Support with Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn lifecycle_support_name(&self) -> ::std::option::Option<&crate::types::LifecycleSupportName> {
        self.lifecycle_support_name.as_ref()
    }
    /// <p>The start date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn lifecycle_support_start_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.lifecycle_support_start_date.as_ref()
    }
    /// <p>The end date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn lifecycle_support_end_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.lifecycle_support_end_date.as_ref()
    }
}
impl SupportedEngineLifecycle {
    /// Creates a new builder-style object to manufacture [`SupportedEngineLifecycle`](crate::types::SupportedEngineLifecycle).
    pub fn builder() -> crate::types::builders::SupportedEngineLifecycleBuilder {
        crate::types::builders::SupportedEngineLifecycleBuilder::default()
    }
}

/// A builder for [`SupportedEngineLifecycle`](crate::types::SupportedEngineLifecycle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SupportedEngineLifecycleBuilder {
    pub(crate) lifecycle_support_name: ::std::option::Option<crate::types::LifecycleSupportName>,
    pub(crate) lifecycle_support_start_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) lifecycle_support_end_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl SupportedEngineLifecycleBuilder {
    /// <p>The type of lifecycle support that the engine version is in.</p>
    /// <p>This parameter returns the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>open-source-rds-standard-support</code> - Indicates RDS standard support or Aurora standard support.</p></li>
    /// <li>
    /// <p><code>open-source-rds-extended-support</code> - Indicates Amazon RDS Extended Support.</p></li>
    /// </ul>
    /// <p>For Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL, this parameter returns both <code>open-source-rds-standard-support</code> and <code>open-source-rds-extended-support</code>.</p>
    /// <p>For Amazon RDS for MariaDB, this parameter only returns the value <code>open-source-rds-standard-support</code>.</p>
    /// <p>For information about Amazon RDS Extended Support, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Amazon RDS Extended Support with Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Amazon RDS Extended Support with Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
    /// This field is required.
    pub fn lifecycle_support_name(mut self, input: crate::types::LifecycleSupportName) -> Self {
        self.lifecycle_support_name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of lifecycle support that the engine version is in.</p>
    /// <p>This parameter returns the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>open-source-rds-standard-support</code> - Indicates RDS standard support or Aurora standard support.</p></li>
    /// <li>
    /// <p><code>open-source-rds-extended-support</code> - Indicates Amazon RDS Extended Support.</p></li>
    /// </ul>
    /// <p>For Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL, this parameter returns both <code>open-source-rds-standard-support</code> and <code>open-source-rds-extended-support</code>.</p>
    /// <p>For Amazon RDS for MariaDB, this parameter only returns the value <code>open-source-rds-standard-support</code>.</p>
    /// <p>For information about Amazon RDS Extended Support, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Amazon RDS Extended Support with Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Amazon RDS Extended Support with Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn set_lifecycle_support_name(mut self, input: ::std::option::Option<crate::types::LifecycleSupportName>) -> Self {
        self.lifecycle_support_name = input;
        self
    }
    /// <p>The type of lifecycle support that the engine version is in.</p>
    /// <p>This parameter returns the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>open-source-rds-standard-support</code> - Indicates RDS standard support or Aurora standard support.</p></li>
    /// <li>
    /// <p><code>open-source-rds-extended-support</code> - Indicates Amazon RDS Extended Support.</p></li>
    /// </ul>
    /// <p>For Amazon RDS for MySQL, Amazon RDS for PostgreSQL, Aurora MySQL, and Aurora PostgreSQL, this parameter returns both <code>open-source-rds-standard-support</code> and <code>open-source-rds-extended-support</code>.</p>
    /// <p>For Amazon RDS for MariaDB, this parameter only returns the value <code>open-source-rds-standard-support</code>.</p>
    /// <p>For information about Amazon RDS Extended Support, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Amazon RDS Extended Support with Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Amazon RDS Extended Support with Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn get_lifecycle_support_name(&self) -> &::std::option::Option<crate::types::LifecycleSupportName> {
        &self.lifecycle_support_name
    }
    /// <p>The start date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    /// This field is required.
    pub fn lifecycle_support_start_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.lifecycle_support_start_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn set_lifecycle_support_start_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.lifecycle_support_start_date = input;
        self
    }
    /// <p>The start date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn get_lifecycle_support_start_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.lifecycle_support_start_date
    }
    /// <p>The end date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    /// This field is required.
    pub fn lifecycle_support_end_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.lifecycle_support_end_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The end date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn set_lifecycle_support_end_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.lifecycle_support_end_date = input;
        self
    }
    /// <p>The end date for the type of support returned by <code>LifecycleSupportName</code>.</p>
    pub fn get_lifecycle_support_end_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.lifecycle_support_end_date
    }
    /// Consumes the builder and constructs a [`SupportedEngineLifecycle`](crate::types::SupportedEngineLifecycle).
    pub fn build(self) -> crate::types::SupportedEngineLifecycle {
        crate::types::SupportedEngineLifecycle {
            lifecycle_support_name: self.lifecycle_support_name,
            lifecycle_support_start_date: self.lifecycle_support_start_date,
            lifecycle_support_end_date: self.lifecycle_support_end_date,
        }
    }
}
