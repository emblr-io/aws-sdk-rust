// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The number of objects that DataSync fails to prepare, transfer, verify, and delete during your task execution.</p><note>
/// <p>Applies only to <a href="https://docs.aws.amazon.com/datasync/latest/userguide/choosing-task-mode.html">Enhanced mode tasks</a>.</p>
/// </note>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaskExecutionFilesFailedDetail {
    /// <p>The number of objects that DataSync fails to prepare during your task execution.</p>
    pub prepare: i64,
    /// <p>The number of objects that DataSync fails to transfer during your task execution.</p>
    pub transfer: i64,
    /// <p>The number of objects that DataSync fails to verify during your task execution.</p>
    pub verify: i64,
    /// <p>The number of objects that DataSync fails to delete during your task execution.</p>
    pub delete: i64,
}
impl TaskExecutionFilesFailedDetail {
    /// <p>The number of objects that DataSync fails to prepare during your task execution.</p>
    pub fn prepare(&self) -> i64 {
        self.prepare
    }
    /// <p>The number of objects that DataSync fails to transfer during your task execution.</p>
    pub fn transfer(&self) -> i64 {
        self.transfer
    }
    /// <p>The number of objects that DataSync fails to verify during your task execution.</p>
    pub fn verify(&self) -> i64 {
        self.verify
    }
    /// <p>The number of objects that DataSync fails to delete during your task execution.</p>
    pub fn delete(&self) -> i64 {
        self.delete
    }
}
impl TaskExecutionFilesFailedDetail {
    /// Creates a new builder-style object to manufacture [`TaskExecutionFilesFailedDetail`](crate::types::TaskExecutionFilesFailedDetail).
    pub fn builder() -> crate::types::builders::TaskExecutionFilesFailedDetailBuilder {
        crate::types::builders::TaskExecutionFilesFailedDetailBuilder::default()
    }
}

/// A builder for [`TaskExecutionFilesFailedDetail`](crate::types::TaskExecutionFilesFailedDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TaskExecutionFilesFailedDetailBuilder {
    pub(crate) prepare: ::std::option::Option<i64>,
    pub(crate) transfer: ::std::option::Option<i64>,
    pub(crate) verify: ::std::option::Option<i64>,
    pub(crate) delete: ::std::option::Option<i64>,
}
impl TaskExecutionFilesFailedDetailBuilder {
    /// <p>The number of objects that DataSync fails to prepare during your task execution.</p>
    pub fn prepare(mut self, input: i64) -> Self {
        self.prepare = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of objects that DataSync fails to prepare during your task execution.</p>
    pub fn set_prepare(mut self, input: ::std::option::Option<i64>) -> Self {
        self.prepare = input;
        self
    }
    /// <p>The number of objects that DataSync fails to prepare during your task execution.</p>
    pub fn get_prepare(&self) -> &::std::option::Option<i64> {
        &self.prepare
    }
    /// <p>The number of objects that DataSync fails to transfer during your task execution.</p>
    pub fn transfer(mut self, input: i64) -> Self {
        self.transfer = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of objects that DataSync fails to transfer during your task execution.</p>
    pub fn set_transfer(mut self, input: ::std::option::Option<i64>) -> Self {
        self.transfer = input;
        self
    }
    /// <p>The number of objects that DataSync fails to transfer during your task execution.</p>
    pub fn get_transfer(&self) -> &::std::option::Option<i64> {
        &self.transfer
    }
    /// <p>The number of objects that DataSync fails to verify during your task execution.</p>
    pub fn verify(mut self, input: i64) -> Self {
        self.verify = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of objects that DataSync fails to verify during your task execution.</p>
    pub fn set_verify(mut self, input: ::std::option::Option<i64>) -> Self {
        self.verify = input;
        self
    }
    /// <p>The number of objects that DataSync fails to verify during your task execution.</p>
    pub fn get_verify(&self) -> &::std::option::Option<i64> {
        &self.verify
    }
    /// <p>The number of objects that DataSync fails to delete during your task execution.</p>
    pub fn delete(mut self, input: i64) -> Self {
        self.delete = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of objects that DataSync fails to delete during your task execution.</p>
    pub fn set_delete(mut self, input: ::std::option::Option<i64>) -> Self {
        self.delete = input;
        self
    }
    /// <p>The number of objects that DataSync fails to delete during your task execution.</p>
    pub fn get_delete(&self) -> &::std::option::Option<i64> {
        &self.delete
    }
    /// Consumes the builder and constructs a [`TaskExecutionFilesFailedDetail`](crate::types::TaskExecutionFilesFailedDetail).
    pub fn build(self) -> crate::types::TaskExecutionFilesFailedDetail {
        crate::types::TaskExecutionFilesFailedDetail {
            prepare: self.prepare.unwrap_or_default(),
            transfer: self.transfer.unwrap_or_default(),
            verify: self.verify.unwrap_or_default(),
            delete: self.delete.unwrap_or_default(),
        }
    }
}
