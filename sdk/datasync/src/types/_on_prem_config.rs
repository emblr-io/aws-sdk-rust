// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The DataSync agents that can connect to your Network File System (NFS) file server.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OnPremConfig {
    /// <p>The Amazon Resource Names (ARNs) of the DataSync agents that can connect to your NFS file server.</p>
    /// <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents">Using multiple DataSync agents</a>.</p>
    pub agent_arns: ::std::vec::Vec<::std::string::String>,
}
impl OnPremConfig {
    /// <p>The Amazon Resource Names (ARNs) of the DataSync agents that can connect to your NFS file server.</p>
    /// <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents">Using multiple DataSync agents</a>.</p>
    pub fn agent_arns(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.agent_arns.deref()
    }
}
impl OnPremConfig {
    /// Creates a new builder-style object to manufacture [`OnPremConfig`](crate::types::OnPremConfig).
    pub fn builder() -> crate::types::builders::OnPremConfigBuilder {
        crate::types::builders::OnPremConfigBuilder::default()
    }
}

/// A builder for [`OnPremConfig`](crate::types::OnPremConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OnPremConfigBuilder {
    pub(crate) agent_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl OnPremConfigBuilder {
    /// Appends an item to `agent_arns`.
    ///
    /// To override the contents of this collection use [`set_agent_arns`](Self::set_agent_arns).
    ///
    /// <p>The Amazon Resource Names (ARNs) of the DataSync agents that can connect to your NFS file server.</p>
    /// <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents">Using multiple DataSync agents</a>.</p>
    pub fn agent_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.agent_arns.unwrap_or_default();
        v.push(input.into());
        self.agent_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the DataSync agents that can connect to your NFS file server.</p>
    /// <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents">Using multiple DataSync agents</a>.</p>
    pub fn set_agent_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.agent_arns = input;
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the DataSync agents that can connect to your NFS file server.</p>
    /// <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/do-i-need-datasync-agent.html#multiple-agents">Using multiple DataSync agents</a>.</p>
    pub fn get_agent_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.agent_arns
    }
    /// Consumes the builder and constructs a [`OnPremConfig`](crate::types::OnPremConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`agent_arns`](crate::types::builders::OnPremConfigBuilder::agent_arns)
    pub fn build(self) -> ::std::result::Result<crate::types::OnPremConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OnPremConfig {
            agent_arns: self.agent_arns.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_arns",
                    "agent_arns was not specified but it is required when building OnPremConfig",
                )
            })?,
        })
    }
}
