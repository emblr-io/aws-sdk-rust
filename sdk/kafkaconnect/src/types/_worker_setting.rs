// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about worker setting of a connector</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkerSetting {
    /// <p>A description of the connector's capacity.</p>
    pub capacity: ::std::option::Option<crate::types::CapacityDescription>,
}
impl WorkerSetting {
    /// <p>A description of the connector's capacity.</p>
    pub fn capacity(&self) -> ::std::option::Option<&crate::types::CapacityDescription> {
        self.capacity.as_ref()
    }
}
impl WorkerSetting {
    /// Creates a new builder-style object to manufacture [`WorkerSetting`](crate::types::WorkerSetting).
    pub fn builder() -> crate::types::builders::WorkerSettingBuilder {
        crate::types::builders::WorkerSettingBuilder::default()
    }
}

/// A builder for [`WorkerSetting`](crate::types::WorkerSetting).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WorkerSettingBuilder {
    pub(crate) capacity: ::std::option::Option<crate::types::CapacityDescription>,
}
impl WorkerSettingBuilder {
    /// <p>A description of the connector's capacity.</p>
    pub fn capacity(mut self, input: crate::types::CapacityDescription) -> Self {
        self.capacity = ::std::option::Option::Some(input);
        self
    }
    /// <p>A description of the connector's capacity.</p>
    pub fn set_capacity(mut self, input: ::std::option::Option<crate::types::CapacityDescription>) -> Self {
        self.capacity = input;
        self
    }
    /// <p>A description of the connector's capacity.</p>
    pub fn get_capacity(&self) -> &::std::option::Option<crate::types::CapacityDescription> {
        &self.capacity
    }
    /// Consumes the builder and constructs a [`WorkerSetting`](crate::types::WorkerSetting).
    pub fn build(self) -> crate::types::WorkerSetting {
        crate::types::WorkerSetting { capacity: self.capacity }
    }
}
