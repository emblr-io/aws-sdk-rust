// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary of a connector operation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectorOperationSummary {
    /// <p>The Amazon Resource Name (ARN) of the connector operation.</p>
    pub connector_operation_arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of connector operation performed.</p>
    pub connector_operation_type: ::std::option::Option<crate::types::ConnectorOperationType>,
    /// <p>The state of the connector operation.</p>
    pub connector_operation_state: ::std::option::Option<crate::types::ConnectorOperationState>,
    /// <p>The time when operation was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time when operation ended.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConnectorOperationSummary {
    /// <p>The Amazon Resource Name (ARN) of the connector operation.</p>
    pub fn connector_operation_arn(&self) -> ::std::option::Option<&str> {
        self.connector_operation_arn.as_deref()
    }
    /// <p>The type of connector operation performed.</p>
    pub fn connector_operation_type(&self) -> ::std::option::Option<&crate::types::ConnectorOperationType> {
        self.connector_operation_type.as_ref()
    }
    /// <p>The state of the connector operation.</p>
    pub fn connector_operation_state(&self) -> ::std::option::Option<&crate::types::ConnectorOperationState> {
        self.connector_operation_state.as_ref()
    }
    /// <p>The time when operation was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time when operation ended.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
}
impl ConnectorOperationSummary {
    /// Creates a new builder-style object to manufacture [`ConnectorOperationSummary`](crate::types::ConnectorOperationSummary).
    pub fn builder() -> crate::types::builders::ConnectorOperationSummaryBuilder {
        crate::types::builders::ConnectorOperationSummaryBuilder::default()
    }
}

/// A builder for [`ConnectorOperationSummary`](crate::types::ConnectorOperationSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConnectorOperationSummaryBuilder {
    pub(crate) connector_operation_arn: ::std::option::Option<::std::string::String>,
    pub(crate) connector_operation_type: ::std::option::Option<crate::types::ConnectorOperationType>,
    pub(crate) connector_operation_state: ::std::option::Option<crate::types::ConnectorOperationState>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConnectorOperationSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the connector operation.</p>
    pub fn connector_operation_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connector_operation_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the connector operation.</p>
    pub fn set_connector_operation_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connector_operation_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the connector operation.</p>
    pub fn get_connector_operation_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.connector_operation_arn
    }
    /// <p>The type of connector operation performed.</p>
    pub fn connector_operation_type(mut self, input: crate::types::ConnectorOperationType) -> Self {
        self.connector_operation_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of connector operation performed.</p>
    pub fn set_connector_operation_type(mut self, input: ::std::option::Option<crate::types::ConnectorOperationType>) -> Self {
        self.connector_operation_type = input;
        self
    }
    /// <p>The type of connector operation performed.</p>
    pub fn get_connector_operation_type(&self) -> &::std::option::Option<crate::types::ConnectorOperationType> {
        &self.connector_operation_type
    }
    /// <p>The state of the connector operation.</p>
    pub fn connector_operation_state(mut self, input: crate::types::ConnectorOperationState) -> Self {
        self.connector_operation_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of the connector operation.</p>
    pub fn set_connector_operation_state(mut self, input: ::std::option::Option<crate::types::ConnectorOperationState>) -> Self {
        self.connector_operation_state = input;
        self
    }
    /// <p>The state of the connector operation.</p>
    pub fn get_connector_operation_state(&self) -> &::std::option::Option<crate::types::ConnectorOperationState> {
        &self.connector_operation_state
    }
    /// <p>The time when operation was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when operation was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time when operation was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The time when operation ended.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when operation ended.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The time when operation ended.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// Consumes the builder and constructs a [`ConnectorOperationSummary`](crate::types::ConnectorOperationSummary).
    pub fn build(self) -> crate::types::ConnectorOperationSummary {
        crate::types::ConnectorOperationSummary {
            connector_operation_arn: self.connector_operation_arn,
            connector_operation_type: self.connector_operation_type,
            connector_operation_state: self.connector_operation_state,
            creation_time: self.creation_time,
            end_time: self.end_time,
        }
    }
}
