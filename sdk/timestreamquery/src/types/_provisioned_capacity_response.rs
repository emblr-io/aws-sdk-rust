// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response to a request to update the provisioned capacity settings for querying data.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProvisionedCapacityResponse {
    /// <p>The number of Timestream Compute Units (TCUs) provisioned in the account. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub active_query_tcu: ::std::option::Option<i32>,
    /// <p>An object that contains settings for notifications that are sent whenever the provisioned capacity settings are modified. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub notification_configuration: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>,
    /// <p>Information about the last update to the provisioned capacity settings.</p>
    pub last_update: ::std::option::Option<crate::types::LastUpdate>,
}
impl ProvisionedCapacityResponse {
    /// <p>The number of Timestream Compute Units (TCUs) provisioned in the account. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn active_query_tcu(&self) -> ::std::option::Option<i32> {
        self.active_query_tcu
    }
    /// <p>An object that contains settings for notifications that are sent whenever the provisioned capacity settings are modified. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn notification_configuration(&self) -> ::std::option::Option<&crate::types::AccountSettingsNotificationConfiguration> {
        self.notification_configuration.as_ref()
    }
    /// <p>Information about the last update to the provisioned capacity settings.</p>
    pub fn last_update(&self) -> ::std::option::Option<&crate::types::LastUpdate> {
        self.last_update.as_ref()
    }
}
impl ProvisionedCapacityResponse {
    /// Creates a new builder-style object to manufacture [`ProvisionedCapacityResponse`](crate::types::ProvisionedCapacityResponse).
    pub fn builder() -> crate::types::builders::ProvisionedCapacityResponseBuilder {
        crate::types::builders::ProvisionedCapacityResponseBuilder::default()
    }
}

/// A builder for [`ProvisionedCapacityResponse`](crate::types::ProvisionedCapacityResponse).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProvisionedCapacityResponseBuilder {
    pub(crate) active_query_tcu: ::std::option::Option<i32>,
    pub(crate) notification_configuration: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>,
    pub(crate) last_update: ::std::option::Option<crate::types::LastUpdate>,
}
impl ProvisionedCapacityResponseBuilder {
    /// <p>The number of Timestream Compute Units (TCUs) provisioned in the account. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn active_query_tcu(mut self, input: i32) -> Self {
        self.active_query_tcu = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Timestream Compute Units (TCUs) provisioned in the account. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn set_active_query_tcu(mut self, input: ::std::option::Option<i32>) -> Self {
        self.active_query_tcu = input;
        self
    }
    /// <p>The number of Timestream Compute Units (TCUs) provisioned in the account. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn get_active_query_tcu(&self) -> &::std::option::Option<i32> {
        &self.active_query_tcu
    }
    /// <p>An object that contains settings for notifications that are sent whenever the provisioned capacity settings are modified. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn notification_configuration(mut self, input: crate::types::AccountSettingsNotificationConfiguration) -> Self {
        self.notification_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains settings for notifications that are sent whenever the provisioned capacity settings are modified. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn set_notification_configuration(mut self, input: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>) -> Self {
        self.notification_configuration = input;
        self
    }
    /// <p>An object that contains settings for notifications that are sent whenever the provisioned capacity settings are modified. This field is only visible when the compute mode is <code>PROVISIONED</code>.</p>
    pub fn get_notification_configuration(&self) -> &::std::option::Option<crate::types::AccountSettingsNotificationConfiguration> {
        &self.notification_configuration
    }
    /// <p>Information about the last update to the provisioned capacity settings.</p>
    pub fn last_update(mut self, input: crate::types::LastUpdate) -> Self {
        self.last_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the last update to the provisioned capacity settings.</p>
    pub fn set_last_update(mut self, input: ::std::option::Option<crate::types::LastUpdate>) -> Self {
        self.last_update = input;
        self
    }
    /// <p>Information about the last update to the provisioned capacity settings.</p>
    pub fn get_last_update(&self) -> &::std::option::Option<crate::types::LastUpdate> {
        &self.last_update
    }
    /// Consumes the builder and constructs a [`ProvisionedCapacityResponse`](crate::types::ProvisionedCapacityResponse).
    pub fn build(self) -> crate::types::ProvisionedCapacityResponse {
        crate::types::ProvisionedCapacityResponse {
            active_query_tcu: self.active_query_tcu,
            notification_configuration: self.notification_configuration,
            last_update: self.last_update,
        }
    }
}
