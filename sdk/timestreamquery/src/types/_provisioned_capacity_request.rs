// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to update the provisioned capacity settings for querying data.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProvisionedCapacityRequest {
    /// <p>The target compute capacity for querying data, specified in Timestream Compute Units (TCUs).</p>
    pub target_query_tcu: i32,
    /// <p>Configuration settings for notifications related to the provisioned capacity update.</p>
    pub notification_configuration: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>,
}
impl ProvisionedCapacityRequest {
    /// <p>The target compute capacity for querying data, specified in Timestream Compute Units (TCUs).</p>
    pub fn target_query_tcu(&self) -> i32 {
        self.target_query_tcu
    }
    /// <p>Configuration settings for notifications related to the provisioned capacity update.</p>
    pub fn notification_configuration(&self) -> ::std::option::Option<&crate::types::AccountSettingsNotificationConfiguration> {
        self.notification_configuration.as_ref()
    }
}
impl ProvisionedCapacityRequest {
    /// Creates a new builder-style object to manufacture [`ProvisionedCapacityRequest`](crate::types::ProvisionedCapacityRequest).
    pub fn builder() -> crate::types::builders::ProvisionedCapacityRequestBuilder {
        crate::types::builders::ProvisionedCapacityRequestBuilder::default()
    }
}

/// A builder for [`ProvisionedCapacityRequest`](crate::types::ProvisionedCapacityRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProvisionedCapacityRequestBuilder {
    pub(crate) target_query_tcu: ::std::option::Option<i32>,
    pub(crate) notification_configuration: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>,
}
impl ProvisionedCapacityRequestBuilder {
    /// <p>The target compute capacity for querying data, specified in Timestream Compute Units (TCUs).</p>
    /// This field is required.
    pub fn target_query_tcu(mut self, input: i32) -> Self {
        self.target_query_tcu = ::std::option::Option::Some(input);
        self
    }
    /// <p>The target compute capacity for querying data, specified in Timestream Compute Units (TCUs).</p>
    pub fn set_target_query_tcu(mut self, input: ::std::option::Option<i32>) -> Self {
        self.target_query_tcu = input;
        self
    }
    /// <p>The target compute capacity for querying data, specified in Timestream Compute Units (TCUs).</p>
    pub fn get_target_query_tcu(&self) -> &::std::option::Option<i32> {
        &self.target_query_tcu
    }
    /// <p>Configuration settings for notifications related to the provisioned capacity update.</p>
    pub fn notification_configuration(mut self, input: crate::types::AccountSettingsNotificationConfiguration) -> Self {
        self.notification_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings for notifications related to the provisioned capacity update.</p>
    pub fn set_notification_configuration(mut self, input: ::std::option::Option<crate::types::AccountSettingsNotificationConfiguration>) -> Self {
        self.notification_configuration = input;
        self
    }
    /// <p>Configuration settings for notifications related to the provisioned capacity update.</p>
    pub fn get_notification_configuration(&self) -> &::std::option::Option<crate::types::AccountSettingsNotificationConfiguration> {
        &self.notification_configuration
    }
    /// Consumes the builder and constructs a [`ProvisionedCapacityRequest`](crate::types::ProvisionedCapacityRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`target_query_tcu`](crate::types::builders::ProvisionedCapacityRequestBuilder::target_query_tcu)
    pub fn build(self) -> ::std::result::Result<crate::types::ProvisionedCapacityRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ProvisionedCapacityRequest {
            target_query_tcu: self.target_query_tcu.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "target_query_tcu",
                    "target_query_tcu was not specified but it is required when building ProvisionedCapacityRequest",
                )
            })?,
            notification_configuration: self.notification_configuration,
        })
    }
}
