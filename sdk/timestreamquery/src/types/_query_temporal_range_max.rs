// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides insights into the table with the most sub-optimal temporal pruning scanned by your query.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueryTemporalRangeMax {
    /// <p>The maximum duration in nanoseconds between the start and end of the query.</p>
    pub value: i64,
    /// <p>The Amazon Resource Name (ARN) of the table which is queried with the largest time range.</p>
    pub table_arn: ::std::option::Option<::std::string::String>,
}
impl QueryTemporalRangeMax {
    /// <p>The maximum duration in nanoseconds between the start and end of the query.</p>
    pub fn value(&self) -> i64 {
        self.value
    }
    /// <p>The Amazon Resource Name (ARN) of the table which is queried with the largest time range.</p>
    pub fn table_arn(&self) -> ::std::option::Option<&str> {
        self.table_arn.as_deref()
    }
}
impl QueryTemporalRangeMax {
    /// Creates a new builder-style object to manufacture [`QueryTemporalRangeMax`](crate::types::QueryTemporalRangeMax).
    pub fn builder() -> crate::types::builders::QueryTemporalRangeMaxBuilder {
        crate::types::builders::QueryTemporalRangeMaxBuilder::default()
    }
}

/// A builder for [`QueryTemporalRangeMax`](crate::types::QueryTemporalRangeMax).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct QueryTemporalRangeMaxBuilder {
    pub(crate) value: ::std::option::Option<i64>,
    pub(crate) table_arn: ::std::option::Option<::std::string::String>,
}
impl QueryTemporalRangeMaxBuilder {
    /// <p>The maximum duration in nanoseconds between the start and end of the query.</p>
    pub fn value(mut self, input: i64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum duration in nanoseconds between the start and end of the query.</p>
    pub fn set_value(mut self, input: ::std::option::Option<i64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The maximum duration in nanoseconds between the start and end of the query.</p>
    pub fn get_value(&self) -> &::std::option::Option<i64> {
        &self.value
    }
    /// <p>The Amazon Resource Name (ARN) of the table which is queried with the largest time range.</p>
    pub fn table_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table which is queried with the largest time range.</p>
    pub fn set_table_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the table which is queried with the largest time range.</p>
    pub fn get_table_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.table_arn
    }
    /// Consumes the builder and constructs a [`QueryTemporalRangeMax`](crate::types::QueryTemporalRangeMax).
    pub fn build(self) -> crate::types::QueryTemporalRangeMax {
        crate::types::QueryTemporalRangeMax {
            value: self.value.unwrap_or_default(),
            table_arn: self.table_arn,
        }
    }
}
