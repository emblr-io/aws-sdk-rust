// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateIdentityCenterApplicationInput {
    /// <p>The name of the IAM Identity Center application.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub instance_arn: ::std::option::Option<::std::string::String>,
    /// <p>The idempotency token associated with the request.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl CreateIdentityCenterApplicationInput {
    /// <p>The name of the IAM Identity Center application.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_arn(&self) -> ::std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>The idempotency token associated with the request.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl CreateIdentityCenterApplicationInput {
    /// Creates a new builder-style object to manufacture [`CreateIdentityCenterApplicationInput`](crate::operation::create_identity_center_application::CreateIdentityCenterApplicationInput).
    pub fn builder() -> crate::operation::create_identity_center_application::builders::CreateIdentityCenterApplicationInputBuilder {
        crate::operation::create_identity_center_application::builders::CreateIdentityCenterApplicationInputBuilder::default()
    }
}

/// A builder for [`CreateIdentityCenterApplicationInput`](crate::operation::create_identity_center_application::CreateIdentityCenterApplicationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateIdentityCenterApplicationInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl CreateIdentityCenterApplicationInputBuilder {
    /// <p>The name of the IAM Identity Center application.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the IAM Identity Center application.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the IAM Identity Center application.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_arn
    }
    /// <p>The idempotency token associated with the request.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The idempotency token associated with the request.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>The idempotency token associated with the request.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`CreateIdentityCenterApplicationInput`](crate::operation::create_identity_center_application::CreateIdentityCenterApplicationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_identity_center_application::CreateIdentityCenterApplicationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_identity_center_application::CreateIdentityCenterApplicationInput {
                name: self.name,
                instance_arn: self.instance_arn,
                client_token: self.client_token,
            },
        )
    }
}
