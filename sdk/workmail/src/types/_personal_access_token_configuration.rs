// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Displays the Personal Access Token status.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PersonalAccessTokenConfiguration {
    /// <p>The status of the Personal Access Token allowed for the organization.</p>
    /// <ul>
    /// <li>
    /// <p><i>Active</i> - Mailbox users can login to the web application and choose <i>Settings</i> to see the new <i>Personal Access Tokens</i> page to create and delete the Personal Access Tokens. Mailbox users can use the Personal Access Tokens to set up mailbox connection from desktop or mobile email clients.</p></li>
    /// <li>
    /// <p><i>Inactive</i> - Personal Access Tokens are disabled for your organization. Mailbox users can’t create, list, or delete Personal Access Tokens and can’t use them to connect to their mailboxes from desktop or mobile email clients.</p></li>
    /// </ul>
    pub status: crate::types::PersonalAccessTokenConfigurationStatus,
    /// <p>The validity of the Personal Access Token status in days.</p>
    pub lifetime_in_days: ::std::option::Option<i32>,
}
impl PersonalAccessTokenConfiguration {
    /// <p>The status of the Personal Access Token allowed for the organization.</p>
    /// <ul>
    /// <li>
    /// <p><i>Active</i> - Mailbox users can login to the web application and choose <i>Settings</i> to see the new <i>Personal Access Tokens</i> page to create and delete the Personal Access Tokens. Mailbox users can use the Personal Access Tokens to set up mailbox connection from desktop or mobile email clients.</p></li>
    /// <li>
    /// <p><i>Inactive</i> - Personal Access Tokens are disabled for your organization. Mailbox users can’t create, list, or delete Personal Access Tokens and can’t use them to connect to their mailboxes from desktop or mobile email clients.</p></li>
    /// </ul>
    pub fn status(&self) -> &crate::types::PersonalAccessTokenConfigurationStatus {
        &self.status
    }
    /// <p>The validity of the Personal Access Token status in days.</p>
    pub fn lifetime_in_days(&self) -> ::std::option::Option<i32> {
        self.lifetime_in_days
    }
}
impl PersonalAccessTokenConfiguration {
    /// Creates a new builder-style object to manufacture [`PersonalAccessTokenConfiguration`](crate::types::PersonalAccessTokenConfiguration).
    pub fn builder() -> crate::types::builders::PersonalAccessTokenConfigurationBuilder {
        crate::types::builders::PersonalAccessTokenConfigurationBuilder::default()
    }
}

/// A builder for [`PersonalAccessTokenConfiguration`](crate::types::PersonalAccessTokenConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PersonalAccessTokenConfigurationBuilder {
    pub(crate) status: ::std::option::Option<crate::types::PersonalAccessTokenConfigurationStatus>,
    pub(crate) lifetime_in_days: ::std::option::Option<i32>,
}
impl PersonalAccessTokenConfigurationBuilder {
    /// <p>The status of the Personal Access Token allowed for the organization.</p>
    /// <ul>
    /// <li>
    /// <p><i>Active</i> - Mailbox users can login to the web application and choose <i>Settings</i> to see the new <i>Personal Access Tokens</i> page to create and delete the Personal Access Tokens. Mailbox users can use the Personal Access Tokens to set up mailbox connection from desktop or mobile email clients.</p></li>
    /// <li>
    /// <p><i>Inactive</i> - Personal Access Tokens are disabled for your organization. Mailbox users can’t create, list, or delete Personal Access Tokens and can’t use them to connect to their mailboxes from desktop or mobile email clients.</p></li>
    /// </ul>
    /// This field is required.
    pub fn status(mut self, input: crate::types::PersonalAccessTokenConfigurationStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the Personal Access Token allowed for the organization.</p>
    /// <ul>
    /// <li>
    /// <p><i>Active</i> - Mailbox users can login to the web application and choose <i>Settings</i> to see the new <i>Personal Access Tokens</i> page to create and delete the Personal Access Tokens. Mailbox users can use the Personal Access Tokens to set up mailbox connection from desktop or mobile email clients.</p></li>
    /// <li>
    /// <p><i>Inactive</i> - Personal Access Tokens are disabled for your organization. Mailbox users can’t create, list, or delete Personal Access Tokens and can’t use them to connect to their mailboxes from desktop or mobile email clients.</p></li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::PersonalAccessTokenConfigurationStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the Personal Access Token allowed for the organization.</p>
    /// <ul>
    /// <li>
    /// <p><i>Active</i> - Mailbox users can login to the web application and choose <i>Settings</i> to see the new <i>Personal Access Tokens</i> page to create and delete the Personal Access Tokens. Mailbox users can use the Personal Access Tokens to set up mailbox connection from desktop or mobile email clients.</p></li>
    /// <li>
    /// <p><i>Inactive</i> - Personal Access Tokens are disabled for your organization. Mailbox users can’t create, list, or delete Personal Access Tokens and can’t use them to connect to their mailboxes from desktop or mobile email clients.</p></li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::PersonalAccessTokenConfigurationStatus> {
        &self.status
    }
    /// <p>The validity of the Personal Access Token status in days.</p>
    pub fn lifetime_in_days(mut self, input: i32) -> Self {
        self.lifetime_in_days = ::std::option::Option::Some(input);
        self
    }
    /// <p>The validity of the Personal Access Token status in days.</p>
    pub fn set_lifetime_in_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.lifetime_in_days = input;
        self
    }
    /// <p>The validity of the Personal Access Token status in days.</p>
    pub fn get_lifetime_in_days(&self) -> &::std::option::Option<i32> {
        &self.lifetime_in_days
    }
    /// Consumes the builder and constructs a [`PersonalAccessTokenConfiguration`](crate::types::PersonalAccessTokenConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`status`](crate::types::builders::PersonalAccessTokenConfigurationBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::PersonalAccessTokenConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PersonalAccessTokenConfiguration {
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building PersonalAccessTokenConfiguration",
                )
            })?,
            lifetime_in_days: self.lifetime_in_days,
        })
    }
}
