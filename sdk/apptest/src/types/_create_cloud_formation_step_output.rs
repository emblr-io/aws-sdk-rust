// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Creates a CloudFormation step output.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateCloudFormationStepOutput {
    /// <p>The stack ID of the CloudFormation step output.</p>
    pub stack_id: ::std::string::String,
    /// <p>The exports of the CloudFormation step output.</p>
    pub exports: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl CreateCloudFormationStepOutput {
    /// <p>The stack ID of the CloudFormation step output.</p>
    pub fn stack_id(&self) -> &str {
        use std::ops::Deref;
        self.stack_id.deref()
    }
    /// <p>The exports of the CloudFormation step output.</p>
    pub fn exports(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.exports.as_ref()
    }
}
impl CreateCloudFormationStepOutput {
    /// Creates a new builder-style object to manufacture [`CreateCloudFormationStepOutput`](crate::types::CreateCloudFormationStepOutput).
    pub fn builder() -> crate::types::builders::CreateCloudFormationStepOutputBuilder {
        crate::types::builders::CreateCloudFormationStepOutputBuilder::default()
    }
}

/// A builder for [`CreateCloudFormationStepOutput`](crate::types::CreateCloudFormationStepOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateCloudFormationStepOutputBuilder {
    pub(crate) stack_id: ::std::option::Option<::std::string::String>,
    pub(crate) exports: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl CreateCloudFormationStepOutputBuilder {
    /// <p>The stack ID of the CloudFormation step output.</p>
    /// This field is required.
    pub fn stack_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stack_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The stack ID of the CloudFormation step output.</p>
    pub fn set_stack_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stack_id = input;
        self
    }
    /// <p>The stack ID of the CloudFormation step output.</p>
    pub fn get_stack_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.stack_id
    }
    /// Adds a key-value pair to `exports`.
    ///
    /// To override the contents of this collection use [`set_exports`](Self::set_exports).
    ///
    /// <p>The exports of the CloudFormation step output.</p>
    pub fn exports(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.exports.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.exports = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The exports of the CloudFormation step output.</p>
    pub fn set_exports(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.exports = input;
        self
    }
    /// <p>The exports of the CloudFormation step output.</p>
    pub fn get_exports(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.exports
    }
    /// Consumes the builder and constructs a [`CreateCloudFormationStepOutput`](crate::types::CreateCloudFormationStepOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`stack_id`](crate::types::builders::CreateCloudFormationStepOutputBuilder::stack_id)
    pub fn build(self) -> ::std::result::Result<crate::types::CreateCloudFormationStepOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CreateCloudFormationStepOutput {
            stack_id: self.stack_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "stack_id",
                    "stack_id was not specified but it is required when building CreateCloudFormationStepOutput",
                )
            })?,
            exports: self.exports,
        })
    }
}
