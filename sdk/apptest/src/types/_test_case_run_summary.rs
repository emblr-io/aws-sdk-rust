// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the test case run summary.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TestCaseRunSummary {
    /// <p>The test case id of the test case run summary.</p>
    pub test_case_id: ::std::string::String,
    /// <p>The test case version of the test case run summary.</p>
    pub test_case_version: i32,
    /// <p>The test run id of the test case run summary.</p>
    pub test_run_id: ::std::string::String,
    /// <p>The status of the test case run summary.</p>
    pub status: crate::types::TestCaseRunStatus,
    /// <p>The status reason of the test case run summary.</p>
    pub status_reason: ::std::option::Option<::std::string::String>,
    /// <p>The run start time of the test case run summary.</p>
    pub run_start_time: ::aws_smithy_types::DateTime,
    /// <p>The run end time of the test case run summary.</p>
    pub run_end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TestCaseRunSummary {
    /// <p>The test case id of the test case run summary.</p>
    pub fn test_case_id(&self) -> &str {
        use std::ops::Deref;
        self.test_case_id.deref()
    }
    /// <p>The test case version of the test case run summary.</p>
    pub fn test_case_version(&self) -> i32 {
        self.test_case_version
    }
    /// <p>The test run id of the test case run summary.</p>
    pub fn test_run_id(&self) -> &str {
        use std::ops::Deref;
        self.test_run_id.deref()
    }
    /// <p>The status of the test case run summary.</p>
    pub fn status(&self) -> &crate::types::TestCaseRunStatus {
        &self.status
    }
    /// <p>The status reason of the test case run summary.</p>
    pub fn status_reason(&self) -> ::std::option::Option<&str> {
        self.status_reason.as_deref()
    }
    /// <p>The run start time of the test case run summary.</p>
    pub fn run_start_time(&self) -> &::aws_smithy_types::DateTime {
        &self.run_start_time
    }
    /// <p>The run end time of the test case run summary.</p>
    pub fn run_end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.run_end_time.as_ref()
    }
}
impl TestCaseRunSummary {
    /// Creates a new builder-style object to manufacture [`TestCaseRunSummary`](crate::types::TestCaseRunSummary).
    pub fn builder() -> crate::types::builders::TestCaseRunSummaryBuilder {
        crate::types::builders::TestCaseRunSummaryBuilder::default()
    }
}

/// A builder for [`TestCaseRunSummary`](crate::types::TestCaseRunSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TestCaseRunSummaryBuilder {
    pub(crate) test_case_id: ::std::option::Option<::std::string::String>,
    pub(crate) test_case_version: ::std::option::Option<i32>,
    pub(crate) test_run_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::TestCaseRunStatus>,
    pub(crate) status_reason: ::std::option::Option<::std::string::String>,
    pub(crate) run_start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) run_end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TestCaseRunSummaryBuilder {
    /// <p>The test case id of the test case run summary.</p>
    /// This field is required.
    pub fn test_case_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.test_case_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The test case id of the test case run summary.</p>
    pub fn set_test_case_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.test_case_id = input;
        self
    }
    /// <p>The test case id of the test case run summary.</p>
    pub fn get_test_case_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.test_case_id
    }
    /// <p>The test case version of the test case run summary.</p>
    /// This field is required.
    pub fn test_case_version(mut self, input: i32) -> Self {
        self.test_case_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The test case version of the test case run summary.</p>
    pub fn set_test_case_version(mut self, input: ::std::option::Option<i32>) -> Self {
        self.test_case_version = input;
        self
    }
    /// <p>The test case version of the test case run summary.</p>
    pub fn get_test_case_version(&self) -> &::std::option::Option<i32> {
        &self.test_case_version
    }
    /// <p>The test run id of the test case run summary.</p>
    /// This field is required.
    pub fn test_run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.test_run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The test run id of the test case run summary.</p>
    pub fn set_test_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.test_run_id = input;
        self
    }
    /// <p>The test run id of the test case run summary.</p>
    pub fn get_test_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.test_run_id
    }
    /// <p>The status of the test case run summary.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::TestCaseRunStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the test case run summary.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::TestCaseRunStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the test case run summary.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::TestCaseRunStatus> {
        &self.status
    }
    /// <p>The status reason of the test case run summary.</p>
    pub fn status_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status reason of the test case run summary.</p>
    pub fn set_status_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The status reason of the test case run summary.</p>
    pub fn get_status_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_reason
    }
    /// <p>The run start time of the test case run summary.</p>
    /// This field is required.
    pub fn run_start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.run_start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The run start time of the test case run summary.</p>
    pub fn set_run_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.run_start_time = input;
        self
    }
    /// <p>The run start time of the test case run summary.</p>
    pub fn get_run_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.run_start_time
    }
    /// <p>The run end time of the test case run summary.</p>
    pub fn run_end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.run_end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The run end time of the test case run summary.</p>
    pub fn set_run_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.run_end_time = input;
        self
    }
    /// <p>The run end time of the test case run summary.</p>
    pub fn get_run_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.run_end_time
    }
    /// Consumes the builder and constructs a [`TestCaseRunSummary`](crate::types::TestCaseRunSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`test_case_id`](crate::types::builders::TestCaseRunSummaryBuilder::test_case_id)
    /// - [`test_case_version`](crate::types::builders::TestCaseRunSummaryBuilder::test_case_version)
    /// - [`test_run_id`](crate::types::builders::TestCaseRunSummaryBuilder::test_run_id)
    /// - [`status`](crate::types::builders::TestCaseRunSummaryBuilder::status)
    /// - [`run_start_time`](crate::types::builders::TestCaseRunSummaryBuilder::run_start_time)
    pub fn build(self) -> ::std::result::Result<crate::types::TestCaseRunSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TestCaseRunSummary {
            test_case_id: self.test_case_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "test_case_id",
                    "test_case_id was not specified but it is required when building TestCaseRunSummary",
                )
            })?,
            test_case_version: self.test_case_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "test_case_version",
                    "test_case_version was not specified but it is required when building TestCaseRunSummary",
                )
            })?,
            test_run_id: self.test_run_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "test_run_id",
                    "test_run_id was not specified but it is required when building TestCaseRunSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building TestCaseRunSummary",
                )
            })?,
            status_reason: self.status_reason,
            run_start_time: self.run_start_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "run_start_time",
                    "run_start_time was not specified but it is required when building TestCaseRunSummary",
                )
            })?,
            run_end_time: self.run_end_time,
        })
    }
}
