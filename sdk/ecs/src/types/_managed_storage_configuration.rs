// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The managed storage configuration for the cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ManagedStorageConfiguration {
    /// <p>Specify a Key Management Service key ID to encrypt Amazon ECS managed storage.</p>
    /// <p>When you specify a <code>kmsKeyId</code>, Amazon ECS uses the key to encrypt data volumes managed by Amazon ECS that are attached to tasks in the cluster. The following data volumes are managed by Amazon ECS: Amazon EBS. For more information about encryption of Amazon EBS volumes attached to Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html">Encrypt data stored in Amazon EBS volumes for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub kms_key_id: ::std::option::Option<::std::string::String>,
    /// <p>Specify the Key Management Service key ID for Fargate ephemeral storage.</p>
    /// <p>When you specify a <code>fargateEphemeralStorageKmsKeyId</code>, Amazon Web Services Fargate uses the key to encrypt data at rest in ephemeral storage. For more information about Fargate ephemeral storage encryption, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-storage-encryption.html">Customer managed keys for Amazon Web Services Fargate ephemeral storage for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fargate_ephemeral_storage_kms_key_id: ::std::option::Option<::std::string::String>,
}
impl ManagedStorageConfiguration {
    /// <p>Specify a Key Management Service key ID to encrypt Amazon ECS managed storage.</p>
    /// <p>When you specify a <code>kmsKeyId</code>, Amazon ECS uses the key to encrypt data volumes managed by Amazon ECS that are attached to tasks in the cluster. The following data volumes are managed by Amazon ECS: Amazon EBS. For more information about encryption of Amazon EBS volumes attached to Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html">Encrypt data stored in Amazon EBS volumes for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn kms_key_id(&self) -> ::std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
    /// <p>Specify the Key Management Service key ID for Fargate ephemeral storage.</p>
    /// <p>When you specify a <code>fargateEphemeralStorageKmsKeyId</code>, Amazon Web Services Fargate uses the key to encrypt data at rest in ephemeral storage. For more information about Fargate ephemeral storage encryption, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-storage-encryption.html">Customer managed keys for Amazon Web Services Fargate ephemeral storage for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn fargate_ephemeral_storage_kms_key_id(&self) -> ::std::option::Option<&str> {
        self.fargate_ephemeral_storage_kms_key_id.as_deref()
    }
}
impl ManagedStorageConfiguration {
    /// Creates a new builder-style object to manufacture [`ManagedStorageConfiguration`](crate::types::ManagedStorageConfiguration).
    pub fn builder() -> crate::types::builders::ManagedStorageConfigurationBuilder {
        crate::types::builders::ManagedStorageConfigurationBuilder::default()
    }
}

/// A builder for [`ManagedStorageConfiguration`](crate::types::ManagedStorageConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ManagedStorageConfigurationBuilder {
    pub(crate) kms_key_id: ::std::option::Option<::std::string::String>,
    pub(crate) fargate_ephemeral_storage_kms_key_id: ::std::option::Option<::std::string::String>,
}
impl ManagedStorageConfigurationBuilder {
    /// <p>Specify a Key Management Service key ID to encrypt Amazon ECS managed storage.</p>
    /// <p>When you specify a <code>kmsKeyId</code>, Amazon ECS uses the key to encrypt data volumes managed by Amazon ECS that are attached to tasks in the cluster. The following data volumes are managed by Amazon ECS: Amazon EBS. For more information about encryption of Amazon EBS volumes attached to Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html">Encrypt data stored in Amazon EBS volumes for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specify a Key Management Service key ID to encrypt Amazon ECS managed storage.</p>
    /// <p>When you specify a <code>kmsKeyId</code>, Amazon ECS uses the key to encrypt data volumes managed by Amazon ECS that are attached to tasks in the cluster. The following data volumes are managed by Amazon ECS: Amazon EBS. For more information about encryption of Amazon EBS volumes attached to Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html">Encrypt data stored in Amazon EBS volumes for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn set_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// <p>Specify a Key Management Service key ID to encrypt Amazon ECS managed storage.</p>
    /// <p>When you specify a <code>kmsKeyId</code>, Amazon ECS uses the key to encrypt data volumes managed by Amazon ECS that are attached to tasks in the cluster. The following data volumes are managed by Amazon ECS: Amazon EBS. For more information about encryption of Amazon EBS volumes attached to Amazon ECS tasks, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html">Encrypt data stored in Amazon EBS volumes for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn get_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key_id
    }
    /// <p>Specify the Key Management Service key ID for Fargate ephemeral storage.</p>
    /// <p>When you specify a <code>fargateEphemeralStorageKmsKeyId</code>, Amazon Web Services Fargate uses the key to encrypt data at rest in ephemeral storage. For more information about Fargate ephemeral storage encryption, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-storage-encryption.html">Customer managed keys for Amazon Web Services Fargate ephemeral storage for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn fargate_ephemeral_storage_kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fargate_ephemeral_storage_kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specify the Key Management Service key ID for Fargate ephemeral storage.</p>
    /// <p>When you specify a <code>fargateEphemeralStorageKmsKeyId</code>, Amazon Web Services Fargate uses the key to encrypt data at rest in ephemeral storage. For more information about Fargate ephemeral storage encryption, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-storage-encryption.html">Customer managed keys for Amazon Web Services Fargate ephemeral storage for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn set_fargate_ephemeral_storage_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fargate_ephemeral_storage_kms_key_id = input;
        self
    }
    /// <p>Specify the Key Management Service key ID for Fargate ephemeral storage.</p>
    /// <p>When you specify a <code>fargateEphemeralStorageKmsKeyId</code>, Amazon Web Services Fargate uses the key to encrypt data at rest in ephemeral storage. For more information about Fargate ephemeral storage encryption, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-storage-encryption.html">Customer managed keys for Amazon Web Services Fargate ephemeral storage for Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    /// <p>The key must be a single Region key.</p>
    pub fn get_fargate_ephemeral_storage_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.fargate_ephemeral_storage_kms_key_id
    }
    /// Consumes the builder and constructs a [`ManagedStorageConfiguration`](crate::types::ManagedStorageConfiguration).
    pub fn build(self) -> crate::types::ManagedStorageConfiguration {
        crate::types::ManagedStorageConfiguration {
            kms_key_id: self.kms_key_id,
            fargate_ephemeral_storage_kms_key_id: self.fargate_ephemeral_storage_kms_key_id,
        }
    }
}
