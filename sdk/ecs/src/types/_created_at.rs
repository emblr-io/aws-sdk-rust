// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The optional filter to narrow the <code>ListServiceDeployment</code> results.</p>
/// <p>If you do not specify a value, service deployments that were created before the current time are included in the result.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreatedAt {
    /// <p>Include service deployments in the result that were created before this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub before: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Include service deployments in the result that were created after this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub after: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CreatedAt {
    /// <p>Include service deployments in the result that were created before this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn before(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.before.as_ref()
    }
    /// <p>Include service deployments in the result that were created after this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn after(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.after.as_ref()
    }
}
impl CreatedAt {
    /// Creates a new builder-style object to manufacture [`CreatedAt`](crate::types::CreatedAt).
    pub fn builder() -> crate::types::builders::CreatedAtBuilder {
        crate::types::builders::CreatedAtBuilder::default()
    }
}

/// A builder for [`CreatedAt`](crate::types::CreatedAt).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreatedAtBuilder {
    pub(crate) before: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) after: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CreatedAtBuilder {
    /// <p>Include service deployments in the result that were created before this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn before(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.before = ::std::option::Option::Some(input);
        self
    }
    /// <p>Include service deployments in the result that were created before this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn set_before(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.before = input;
        self
    }
    /// <p>Include service deployments in the result that were created before this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn get_before(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.before
    }
    /// <p>Include service deployments in the result that were created after this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn after(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.after = ::std::option::Option::Some(input);
        self
    }
    /// <p>Include service deployments in the result that were created after this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn set_after(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.after = input;
        self
    }
    /// <p>Include service deployments in the result that were created after this time. The format is yyyy-MM-dd HH:mm:ss.SSSSSS.</p>
    pub fn get_after(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.after
    }
    /// Consumes the builder and constructs a [`CreatedAt`](crate::types::CreatedAt).
    pub fn build(self) -> crate::types::CreatedAt {
        crate::types::CreatedAt {
            before: self.before,
            after: self.after,
        }
    }
}
