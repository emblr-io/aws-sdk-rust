// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the difference between historical and estimated costs.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CostDifference {
    /// <p>The historical cost amount.</p>
    pub historical_cost: ::std::option::Option<crate::types::CostAmount>,
    /// <p>The estimated cost amount.</p>
    pub estimated_cost: ::std::option::Option<crate::types::CostAmount>,
}
impl CostDifference {
    /// <p>The historical cost amount.</p>
    pub fn historical_cost(&self) -> ::std::option::Option<&crate::types::CostAmount> {
        self.historical_cost.as_ref()
    }
    /// <p>The estimated cost amount.</p>
    pub fn estimated_cost(&self) -> ::std::option::Option<&crate::types::CostAmount> {
        self.estimated_cost.as_ref()
    }
}
impl CostDifference {
    /// Creates a new builder-style object to manufacture [`CostDifference`](crate::types::CostDifference).
    pub fn builder() -> crate::types::builders::CostDifferenceBuilder {
        crate::types::builders::CostDifferenceBuilder::default()
    }
}

/// A builder for [`CostDifference`](crate::types::CostDifference).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CostDifferenceBuilder {
    pub(crate) historical_cost: ::std::option::Option<crate::types::CostAmount>,
    pub(crate) estimated_cost: ::std::option::Option<crate::types::CostAmount>,
}
impl CostDifferenceBuilder {
    /// <p>The historical cost amount.</p>
    pub fn historical_cost(mut self, input: crate::types::CostAmount) -> Self {
        self.historical_cost = ::std::option::Option::Some(input);
        self
    }
    /// <p>The historical cost amount.</p>
    pub fn set_historical_cost(mut self, input: ::std::option::Option<crate::types::CostAmount>) -> Self {
        self.historical_cost = input;
        self
    }
    /// <p>The historical cost amount.</p>
    pub fn get_historical_cost(&self) -> &::std::option::Option<crate::types::CostAmount> {
        &self.historical_cost
    }
    /// <p>The estimated cost amount.</p>
    pub fn estimated_cost(mut self, input: crate::types::CostAmount) -> Self {
        self.estimated_cost = ::std::option::Option::Some(input);
        self
    }
    /// <p>The estimated cost amount.</p>
    pub fn set_estimated_cost(mut self, input: ::std::option::Option<crate::types::CostAmount>) -> Self {
        self.estimated_cost = input;
        self
    }
    /// <p>The estimated cost amount.</p>
    pub fn get_estimated_cost(&self) -> &::std::option::Option<crate::types::CostAmount> {
        &self.estimated_cost
    }
    /// Consumes the builder and constructs a [`CostDifference`](crate::types::CostDifference).
    pub fn build(self) -> crate::types::CostDifference {
        crate::types::CostDifference {
            historical_cost: self.historical_cost,
            estimated_cost: self.estimated_cost,
        }
    }
}
