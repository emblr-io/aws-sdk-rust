// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents an error that occurred when updating a commitment in a Bill Scenario.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchUpdateBillScenarioCommitmentModificationError {
    /// <p>The ID of the error.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The code associated with the error.</p>
    pub error_code: ::std::option::Option<crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode>,
    /// <p>The message that describes the error.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
}
impl BatchUpdateBillScenarioCommitmentModificationError {
    /// <p>The ID of the error.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The code associated with the error.</p>
    pub fn error_code(&self) -> ::std::option::Option<&crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode> {
        self.error_code.as_ref()
    }
    /// <p>The message that describes the error.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl BatchUpdateBillScenarioCommitmentModificationError {
    /// Creates a new builder-style object to manufacture [`BatchUpdateBillScenarioCommitmentModificationError`](crate::types::BatchUpdateBillScenarioCommitmentModificationError).
    pub fn builder() -> crate::types::builders::BatchUpdateBillScenarioCommitmentModificationErrorBuilder {
        crate::types::builders::BatchUpdateBillScenarioCommitmentModificationErrorBuilder::default()
    }
}

/// A builder for [`BatchUpdateBillScenarioCommitmentModificationError`](crate::types::BatchUpdateBillScenarioCommitmentModificationError).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchUpdateBillScenarioCommitmentModificationErrorBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) error_code: ::std::option::Option<crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
}
impl BatchUpdateBillScenarioCommitmentModificationErrorBuilder {
    /// <p>The ID of the error.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the error.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the error.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The code associated with the error.</p>
    pub fn error_code(mut self, input: crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode) -> Self {
        self.error_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The code associated with the error.</p>
    pub fn set_error_code(mut self, input: ::std::option::Option<crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The code associated with the error.</p>
    pub fn get_error_code(&self) -> &::std::option::Option<crate::types::BatchUpdateBillScenarioCommitmentModificationErrorCode> {
        &self.error_code
    }
    /// <p>The message that describes the error.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The message that describes the error.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The message that describes the error.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// Consumes the builder and constructs a [`BatchUpdateBillScenarioCommitmentModificationError`](crate::types::BatchUpdateBillScenarioCommitmentModificationError).
    pub fn build(self) -> crate::types::BatchUpdateBillScenarioCommitmentModificationError {
        crate::types::BatchUpdateBillScenarioCommitmentModificationError {
            id: self.id,
            error_code: self.error_code,
            error_message: self.error_message,
        }
    }
}
