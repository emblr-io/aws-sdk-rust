// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents an action to add a Savings Plan to a bill scenario.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddSavingsPlanAction {
    /// <p>The ID of the Savings Plan offering to add. For more information, see <a href="https://docs.aws.amazon.com/savingsplans/latest/APIReference/API_DescribeSavingsPlansOfferings.html"> DescribeSavingsPlansOfferings</a>.</p>
    pub savings_plan_offering_id: ::std::option::Option<::std::string::String>,
    /// <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>. This is a value between 0.001 and 1 million. You cannot specify more than five digits after the decimal point.</p>
    pub commitment: ::std::option::Option<f64>,
}
impl AddSavingsPlanAction {
    /// <p>The ID of the Savings Plan offering to add. For more information, see <a href="https://docs.aws.amazon.com/savingsplans/latest/APIReference/API_DescribeSavingsPlansOfferings.html"> DescribeSavingsPlansOfferings</a>.</p>
    pub fn savings_plan_offering_id(&self) -> ::std::option::Option<&str> {
        self.savings_plan_offering_id.as_deref()
    }
    /// <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>. This is a value between 0.001 and 1 million. You cannot specify more than five digits after the decimal point.</p>
    pub fn commitment(&self) -> ::std::option::Option<f64> {
        self.commitment
    }
}
impl AddSavingsPlanAction {
    /// Creates a new builder-style object to manufacture [`AddSavingsPlanAction`](crate::types::AddSavingsPlanAction).
    pub fn builder() -> crate::types::builders::AddSavingsPlanActionBuilder {
        crate::types::builders::AddSavingsPlanActionBuilder::default()
    }
}

/// A builder for [`AddSavingsPlanAction`](crate::types::AddSavingsPlanAction).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AddSavingsPlanActionBuilder {
    pub(crate) savings_plan_offering_id: ::std::option::Option<::std::string::String>,
    pub(crate) commitment: ::std::option::Option<f64>,
}
impl AddSavingsPlanActionBuilder {
    /// <p>The ID of the Savings Plan offering to add. For more information, see <a href="https://docs.aws.amazon.com/savingsplans/latest/APIReference/API_DescribeSavingsPlansOfferings.html"> DescribeSavingsPlansOfferings</a>.</p>
    pub fn savings_plan_offering_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.savings_plan_offering_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Savings Plan offering to add. For more information, see <a href="https://docs.aws.amazon.com/savingsplans/latest/APIReference/API_DescribeSavingsPlansOfferings.html"> DescribeSavingsPlansOfferings</a>.</p>
    pub fn set_savings_plan_offering_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.savings_plan_offering_id = input;
        self
    }
    /// <p>The ID of the Savings Plan offering to add. For more information, see <a href="https://docs.aws.amazon.com/savingsplans/latest/APIReference/API_DescribeSavingsPlansOfferings.html"> DescribeSavingsPlansOfferings</a>.</p>
    pub fn get_savings_plan_offering_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.savings_plan_offering_id
    }
    /// <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>. This is a value between 0.001 and 1 million. You cannot specify more than five digits after the decimal point.</p>
    pub fn commitment(mut self, input: f64) -> Self {
        self.commitment = ::std::option::Option::Some(input);
        self
    }
    /// <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>. This is a value between 0.001 and 1 million. You cannot specify more than five digits after the decimal point.</p>
    pub fn set_commitment(mut self, input: ::std::option::Option<f64>) -> Self {
        self.commitment = input;
        self
    }
    /// <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>. This is a value between 0.001 and 1 million. You cannot specify more than five digits after the decimal point.</p>
    pub fn get_commitment(&self) -> &::std::option::Option<f64> {
        &self.commitment
    }
    /// Consumes the builder and constructs a [`AddSavingsPlanAction`](crate::types::AddSavingsPlanAction).
    pub fn build(self) -> crate::types::AddSavingsPlanAction {
        crate::types::AddSavingsPlanAction {
            savings_plan_offering_id: self.savings_plan_offering_id,
            commitment: self.commitment,
        }
    }
}
