// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents an action to remove a Reserved Instance from a bill scenario.</p>
/// <p>This is the ID of an existing Reserved Instance in your account.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NegateReservedInstanceAction {
    /// <p>The ID of the Reserved Instance to remove.</p>
    pub reserved_instances_id: ::std::option::Option<::std::string::String>,
}
impl NegateReservedInstanceAction {
    /// <p>The ID of the Reserved Instance to remove.</p>
    pub fn reserved_instances_id(&self) -> ::std::option::Option<&str> {
        self.reserved_instances_id.as_deref()
    }
}
impl NegateReservedInstanceAction {
    /// Creates a new builder-style object to manufacture [`NegateReservedInstanceAction`](crate::types::NegateReservedInstanceAction).
    pub fn builder() -> crate::types::builders::NegateReservedInstanceActionBuilder {
        crate::types::builders::NegateReservedInstanceActionBuilder::default()
    }
}

/// A builder for [`NegateReservedInstanceAction`](crate::types::NegateReservedInstanceAction).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NegateReservedInstanceActionBuilder {
    pub(crate) reserved_instances_id: ::std::option::Option<::std::string::String>,
}
impl NegateReservedInstanceActionBuilder {
    /// <p>The ID of the Reserved Instance to remove.</p>
    pub fn reserved_instances_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.reserved_instances_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Reserved Instance to remove.</p>
    pub fn set_reserved_instances_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.reserved_instances_id = input;
        self
    }
    /// <p>The ID of the Reserved Instance to remove.</p>
    pub fn get_reserved_instances_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.reserved_instances_id
    }
    /// Consumes the builder and constructs a [`NegateReservedInstanceAction`](crate::types::NegateReservedInstanceAction).
    pub fn build(self) -> crate::types::NegateReservedInstanceAction {
        crate::types::NegateReservedInstanceAction {
            reserved_instances_id: self.reserved_instances_id,
        }
    }
}
