// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateBillScenarioInput {
    /// <p>The unique identifier of the bill scenario to update.</p>
    pub identifier: ::std::option::Option<::std::string::String>,
    /// <p>The new name for the bill scenario.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The new expiration date for the bill scenario.</p>
    pub expires_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl UpdateBillScenarioInput {
    /// <p>The unique identifier of the bill scenario to update.</p>
    pub fn identifier(&self) -> ::std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p>The new name for the bill scenario.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The new expiration date for the bill scenario.</p>
    pub fn expires_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expires_at.as_ref()
    }
}
impl UpdateBillScenarioInput {
    /// Creates a new builder-style object to manufacture [`UpdateBillScenarioInput`](crate::operation::update_bill_scenario::UpdateBillScenarioInput).
    pub fn builder() -> crate::operation::update_bill_scenario::builders::UpdateBillScenarioInputBuilder {
        crate::operation::update_bill_scenario::builders::UpdateBillScenarioInputBuilder::default()
    }
}

/// A builder for [`UpdateBillScenarioInput`](crate::operation::update_bill_scenario::UpdateBillScenarioInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateBillScenarioInputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) expires_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl UpdateBillScenarioInputBuilder {
    /// <p>The unique identifier of the bill scenario to update.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the bill scenario to update.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The unique identifier of the bill scenario to update.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// <p>The new name for the bill scenario.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new name for the bill scenario.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The new name for the bill scenario.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The new expiration date for the bill scenario.</p>
    pub fn expires_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expires_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The new expiration date for the bill scenario.</p>
    pub fn set_expires_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expires_at = input;
        self
    }
    /// <p>The new expiration date for the bill scenario.</p>
    pub fn get_expires_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expires_at
    }
    /// Consumes the builder and constructs a [`UpdateBillScenarioInput`](crate::operation::update_bill_scenario::UpdateBillScenarioInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_bill_scenario::UpdateBillScenarioInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_bill_scenario::UpdateBillScenarioInput {
            identifier: self.identifier,
            name: self.name,
            expires_at: self.expires_at,
        })
    }
}
