// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains options specific to processing inbound X12 EDI files.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct X12InboundEdiOptions {
    /// <p>Specifies acknowledgment options for inbound X12 EDI files. These options control how functional and technical acknowledgments are handled.</p>
    pub acknowledgment_options: ::std::option::Option<crate::types::X12AcknowledgmentOptions>,
}
impl X12InboundEdiOptions {
    /// <p>Specifies acknowledgment options for inbound X12 EDI files. These options control how functional and technical acknowledgments are handled.</p>
    pub fn acknowledgment_options(&self) -> ::std::option::Option<&crate::types::X12AcknowledgmentOptions> {
        self.acknowledgment_options.as_ref()
    }
}
impl X12InboundEdiOptions {
    /// Creates a new builder-style object to manufacture [`X12InboundEdiOptions`](crate::types::X12InboundEdiOptions).
    pub fn builder() -> crate::types::builders::X12InboundEdiOptionsBuilder {
        crate::types::builders::X12InboundEdiOptionsBuilder::default()
    }
}

/// A builder for [`X12InboundEdiOptions`](crate::types::X12InboundEdiOptions).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct X12InboundEdiOptionsBuilder {
    pub(crate) acknowledgment_options: ::std::option::Option<crate::types::X12AcknowledgmentOptions>,
}
impl X12InboundEdiOptionsBuilder {
    /// <p>Specifies acknowledgment options for inbound X12 EDI files. These options control how functional and technical acknowledgments are handled.</p>
    pub fn acknowledgment_options(mut self, input: crate::types::X12AcknowledgmentOptions) -> Self {
        self.acknowledgment_options = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies acknowledgment options for inbound X12 EDI files. These options control how functional and technical acknowledgments are handled.</p>
    pub fn set_acknowledgment_options(mut self, input: ::std::option::Option<crate::types::X12AcknowledgmentOptions>) -> Self {
        self.acknowledgment_options = input;
        self
    }
    /// <p>Specifies acknowledgment options for inbound X12 EDI files. These options control how functional and technical acknowledgments are handled.</p>
    pub fn get_acknowledgment_options(&self) -> &::std::option::Option<crate::types::X12AcknowledgmentOptions> {
        &self.acknowledgment_options
    }
    /// Consumes the builder and constructs a [`X12InboundEdiOptions`](crate::types::X12InboundEdiOptions).
    pub fn build(self) -> crate::types::X12InboundEdiOptions {
        crate::types::X12InboundEdiOptions {
            acknowledgment_options: self.acknowledgment_options,
        }
    }
}
