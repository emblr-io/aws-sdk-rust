// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// All possible error types for this service.
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub enum Error {
    /// <p>You do not have sufficient access to perform this action.</p>
    AccessDeniedException(crate::types::error::AccessDeniedException),
    /// <p>The input you provided is invalid.</p>
    BadRequestException(crate::types::error::BadRequestException),
    /// <p>An internal service error occurred.</p>
    InternalServerException(crate::types::error::InternalServerException),
    /// <p>The requested resource does not exist, or access was denied.</p>
    ResourceNotFoundException(crate::types::error::ResourceNotFoundException),
    /// <p>You exceeded the maximum number of requests.</p>
    ThrottlingException(crate::types::error::ThrottlingException),
    /// An unexpected error occurred (e.g., invalid JSON returned by the service or an unknown error code).
    #[deprecated(note = "Matching `Unhandled` directly is not forwards compatible. Instead, match using a \
    variable wildcard pattern and check `.code()`:
     \
    &nbsp;&nbsp;&nbsp;`err if err.code() == Some(\"SpecificExceptionCode\") => { /* handle the error */ }`
     \
    See [`ProvideErrorMetadata`](#impl-ProvideErrorMetadata-for-Error) for what information is available for the error.")]
    Unhandled(crate::error::sealed_unhandled::Unhandled),
}
impl ::std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AccessDeniedException(inner) => inner.fmt(f),
            Error::BadRequestException(inner) => inner.fmt(f),
            Error::InternalServerException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::ThrottlingException(inner) => inner.fmt(f),
            Error::Unhandled(_) => {
                if let ::std::option::Option::Some(code) = ::aws_smithy_types::error::metadata::ProvideErrorMetadata::code(self) {
                    write!(f, "unhandled error ({code})")
                } else {
                    f.write_str("unhandled error")
                }
            }
        }
    }
}
impl From<::aws_smithy_types::error::operation::BuildError> for Error {
    fn from(value: ::aws_smithy_types::error::operation::BuildError) -> Self {
        Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
            source: value.into(),
            meta: ::std::default::Default::default(),
        })
    }
}
impl ::aws_smithy_types::error::metadata::ProvideErrorMetadata for Error {
    fn meta(&self) -> &::aws_smithy_types::error::metadata::ErrorMetadata {
        match self {
            Self::AccessDeniedException(inner) => inner.meta(),
            Self::BadRequestException(inner) => inner.meta(),
            Self::InternalServerException(inner) => inner.meta(),
            Self::ResourceNotFoundException(inner) => inner.meta(),
            Self::ThrottlingException(inner) => inner.meta(),
            Self::Unhandled(inner) => &inner.meta,
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::add_profile_key::AddProfileKeyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::add_profile_key::AddProfileKeyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::add_profile_key::AddProfileKeyError> for Error {
    fn from(err: crate::operation::add_profile_key::AddProfileKeyError) -> Self {
        match err {
            crate::operation::add_profile_key::AddProfileKeyError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::add_profile_key::AddProfileKeyError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::add_profile_key::AddProfileKeyError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::add_profile_key::AddProfileKeyError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::add_profile_key::AddProfileKeyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::add_profile_key::AddProfileKeyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError> for Error {
    fn from(err: crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError) -> Self {
        match err {
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::AccessDeniedException(
                inner,
            ) => Error::AccessDeniedException(inner),
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::InternalServerException(
                inner,
            ) => Error::InternalServerException(inner),
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::ResourceNotFoundException(
                inner,
            ) => Error::ResourceNotFoundException(inner),
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::batch_get_calculated_attribute_for_profile::BatchGetCalculatedAttributeForProfileError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_get_profile::BatchGetProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_get_profile::BatchGetProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::batch_get_profile::BatchGetProfileError> for Error {
    fn from(err: crate::operation::batch_get_profile::BatchGetProfileError) -> Self {
        match err {
            crate::operation::batch_get_profile::BatchGetProfileError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::batch_get_profile::BatchGetProfileError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::batch_get_profile::BatchGetProfileError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::batch_get_profile::BatchGetProfileError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::batch_get_profile::BatchGetProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::batch_get_profile::BatchGetProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError> for Error {
    fn from(err: crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError) -> Self {
        match err {
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_calculated_attribute_definition::CreateCalculatedAttributeDefinitionError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_domain::CreateDomainError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_domain::CreateDomainError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_domain::CreateDomainError> for Error {
    fn from(err: crate::operation::create_domain::CreateDomainError) -> Self {
        match err {
            crate::operation::create_domain::CreateDomainError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_domain::CreateDomainError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_domain::CreateDomainError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_domain::CreateDomainError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_domain::CreateDomainError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_domain::CreateDomainError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_domain_layout::CreateDomainLayoutError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_domain_layout::CreateDomainLayoutError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_domain_layout::CreateDomainLayoutError> for Error {
    fn from(err: crate::operation::create_domain_layout::CreateDomainLayoutError) -> Self {
        match err {
            crate::operation::create_domain_layout::CreateDomainLayoutError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_domain_layout::CreateDomainLayoutError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_domain_layout::CreateDomainLayoutError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_domain_layout::CreateDomainLayoutError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_domain_layout::CreateDomainLayoutError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_domain_layout::CreateDomainLayoutError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_event_stream::CreateEventStreamError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_event_stream::CreateEventStreamError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_event_stream::CreateEventStreamError> for Error {
    fn from(err: crate::operation::create_event_stream::CreateEventStreamError) -> Self {
        match err {
            crate::operation::create_event_stream::CreateEventStreamError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_event_stream::CreateEventStreamError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_event_stream::CreateEventStreamError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_event_stream::CreateEventStreamError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_event_stream::CreateEventStreamError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_event_stream::CreateEventStreamError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_event_trigger::CreateEventTriggerError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_event_trigger::CreateEventTriggerError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_event_trigger::CreateEventTriggerError> for Error {
    fn from(err: crate::operation::create_event_trigger::CreateEventTriggerError) -> Self {
        match err {
            crate::operation::create_event_trigger::CreateEventTriggerError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_event_trigger::CreateEventTriggerError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_event_trigger::CreateEventTriggerError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_event_trigger::CreateEventTriggerError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_event_trigger::CreateEventTriggerError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_event_trigger::CreateEventTriggerError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_integration_workflow::CreateIntegrationWorkflowError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_integration_workflow::CreateIntegrationWorkflowError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_integration_workflow::CreateIntegrationWorkflowError> for Error {
    fn from(err: crate::operation::create_integration_workflow::CreateIntegrationWorkflowError) -> Self {
        match err {
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_integration_workflow::CreateIntegrationWorkflowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_profile::CreateProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_profile::CreateProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_profile::CreateProfileError> for Error {
    fn from(err: crate::operation::create_profile::CreateProfileError) -> Self {
        match err {
            crate::operation::create_profile::CreateProfileError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_profile::CreateProfileError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_profile::CreateProfileError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_profile::CreateProfileError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_profile::CreateProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_profile::CreateProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_definition::CreateSegmentDefinitionError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_definition::CreateSegmentDefinitionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_segment_definition::CreateSegmentDefinitionError> for Error {
    fn from(err: crate::operation::create_segment_definition::CreateSegmentDefinitionError) -> Self {
        match err {
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_segment_definition::CreateSegmentDefinitionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_estimate::CreateSegmentEstimateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_estimate::CreateSegmentEstimateError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_segment_estimate::CreateSegmentEstimateError> for Error {
    fn from(err: crate::operation::create_segment_estimate::CreateSegmentEstimateError) -> Self {
        match err {
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_segment_estimate::CreateSegmentEstimateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_snapshot::CreateSegmentSnapshotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_segment_snapshot::CreateSegmentSnapshotError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_segment_snapshot::CreateSegmentSnapshotError> for Error {
    fn from(err: crate::operation::create_segment_snapshot::CreateSegmentSnapshotError) -> Self {
        match err {
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_segment_snapshot::CreateSegmentSnapshotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_upload_job::CreateUploadJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_upload_job::CreateUploadJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_upload_job::CreateUploadJobError> for Error {
    fn from(err: crate::operation::create_upload_job::CreateUploadJobError) -> Self {
        match err {
            crate::operation::create_upload_job::CreateUploadJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_upload_job::CreateUploadJobError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::create_upload_job::CreateUploadJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_upload_job::CreateUploadJobError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_upload_job::CreateUploadJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_upload_job::CreateUploadJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError> for Error {
    fn from(err: crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError) -> Self {
        match err {
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_calculated_attribute_definition::DeleteCalculatedAttributeDefinitionError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_domain::DeleteDomainError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_domain::DeleteDomainError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_domain::DeleteDomainError> for Error {
    fn from(err: crate::operation::delete_domain::DeleteDomainError) -> Self {
        match err {
            crate::operation::delete_domain::DeleteDomainError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_domain::DeleteDomainError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_domain::DeleteDomainError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_domain::DeleteDomainError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_domain::DeleteDomainError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_domain::DeleteDomainError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_domain_layout::DeleteDomainLayoutError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_domain_layout::DeleteDomainLayoutError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_domain_layout::DeleteDomainLayoutError> for Error {
    fn from(err: crate::operation::delete_domain_layout::DeleteDomainLayoutError) -> Self {
        match err {
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_domain_layout::DeleteDomainLayoutError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_event_stream::DeleteEventStreamError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_event_stream::DeleteEventStreamError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_event_stream::DeleteEventStreamError> for Error {
    fn from(err: crate::operation::delete_event_stream::DeleteEventStreamError) -> Self {
        match err {
            crate::operation::delete_event_stream::DeleteEventStreamError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_event_stream::DeleteEventStreamError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_event_stream::DeleteEventStreamError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_event_stream::DeleteEventStreamError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_event_stream::DeleteEventStreamError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_event_stream::DeleteEventStreamError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_event_trigger::DeleteEventTriggerError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_event_trigger::DeleteEventTriggerError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_event_trigger::DeleteEventTriggerError> for Error {
    fn from(err: crate::operation::delete_event_trigger::DeleteEventTriggerError) -> Self {
        match err {
            crate::operation::delete_event_trigger::DeleteEventTriggerError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_event_trigger::DeleteEventTriggerError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_event_trigger::DeleteEventTriggerError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_event_trigger::DeleteEventTriggerError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_event_trigger::DeleteEventTriggerError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_event_trigger::DeleteEventTriggerError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_integration::DeleteIntegrationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_integration::DeleteIntegrationError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_integration::DeleteIntegrationError> for Error {
    fn from(err: crate::operation::delete_integration::DeleteIntegrationError) -> Self {
        match err {
            crate::operation::delete_integration::DeleteIntegrationError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_integration::DeleteIntegrationError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_integration::DeleteIntegrationError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_integration::DeleteIntegrationError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_integration::DeleteIntegrationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_integration::DeleteIntegrationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile::DeleteProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile::DeleteProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_profile::DeleteProfileError> for Error {
    fn from(err: crate::operation::delete_profile::DeleteProfileError) -> Self {
        match err {
            crate::operation::delete_profile::DeleteProfileError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_profile::DeleteProfileError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_profile::DeleteProfileError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_profile::DeleteProfileError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_profile::DeleteProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_profile::DeleteProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_key::DeleteProfileKeyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_key::DeleteProfileKeyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_profile_key::DeleteProfileKeyError> for Error {
    fn from(err: crate::operation::delete_profile_key::DeleteProfileKeyError) -> Self {
        match err {
            crate::operation::delete_profile_key::DeleteProfileKeyError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_profile_key::DeleteProfileKeyError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_profile_key::DeleteProfileKeyError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_profile_key::DeleteProfileKeyError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_profile_key::DeleteProfileKeyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_profile_key::DeleteProfileKeyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_object::DeleteProfileObjectError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_object::DeleteProfileObjectError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_profile_object::DeleteProfileObjectError> for Error {
    fn from(err: crate::operation::delete_profile_object::DeleteProfileObjectError) -> Self {
        match err {
            crate::operation::delete_profile_object::DeleteProfileObjectError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_profile_object::DeleteProfileObjectError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_profile_object::DeleteProfileObjectError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::delete_profile_object::DeleteProfileObjectError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_profile_object::DeleteProfileObjectError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_profile_object::DeleteProfileObjectError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError> for Error {
    fn from(err: crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError) -> Self {
        match err {
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_profile_object_type::DeleteProfileObjectTypeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_segment_definition::DeleteSegmentDefinitionError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_segment_definition::DeleteSegmentDefinitionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_segment_definition::DeleteSegmentDefinitionError> for Error {
    fn from(err: crate::operation::delete_segment_definition::DeleteSegmentDefinitionError) -> Self {
        match err {
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_segment_definition::DeleteSegmentDefinitionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_workflow::DeleteWorkflowError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_workflow::DeleteWorkflowError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_workflow::DeleteWorkflowError> for Error {
    fn from(err: crate::operation::delete_workflow::DeleteWorkflowError) -> Self {
        match err {
            crate::operation::delete_workflow::DeleteWorkflowError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_workflow::DeleteWorkflowError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::delete_workflow::DeleteWorkflowError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_workflow::DeleteWorkflowError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_workflow::DeleteWorkflowError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_workflow::DeleteWorkflowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::detect_profile_object_type::DetectProfileObjectTypeError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::detect_profile_object_type::DetectProfileObjectTypeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::detect_profile_object_type::DetectProfileObjectTypeError> for Error {
    fn from(err: crate::operation::detect_profile_object_type::DetectProfileObjectTypeError) -> Self {
        match err {
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::detect_profile_object_type::DetectProfileObjectTypeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError> for Error {
    fn from(err: crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError) -> Self {
        match err {
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_auto_merging_preview::GetAutoMergingPreviewError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError> for Error {
    fn from(err: crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError) -> Self {
        match err {
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_calculated_attribute_definition::GetCalculatedAttributeDefinitionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError> for Error {
    fn from(err: crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError) -> Self {
        match err {
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_calculated_attribute_for_profile::GetCalculatedAttributeForProfileError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_domain::GetDomainError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_domain::GetDomainError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_domain::GetDomainError> for Error {
    fn from(err: crate::operation::get_domain::GetDomainError) -> Self {
        match err {
            crate::operation::get_domain::GetDomainError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_domain::GetDomainError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_domain::GetDomainError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_domain::GetDomainError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_domain::GetDomainError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_domain::GetDomainError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_domain_layout::GetDomainLayoutError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_domain_layout::GetDomainLayoutError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_domain_layout::GetDomainLayoutError> for Error {
    fn from(err: crate::operation::get_domain_layout::GetDomainLayoutError) -> Self {
        match err {
            crate::operation::get_domain_layout::GetDomainLayoutError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_domain_layout::GetDomainLayoutError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_domain_layout::GetDomainLayoutError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_domain_layout::GetDomainLayoutError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_domain_layout::GetDomainLayoutError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_domain_layout::GetDomainLayoutError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_event_stream::GetEventStreamError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_event_stream::GetEventStreamError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_event_stream::GetEventStreamError> for Error {
    fn from(err: crate::operation::get_event_stream::GetEventStreamError) -> Self {
        match err {
            crate::operation::get_event_stream::GetEventStreamError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_event_stream::GetEventStreamError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_event_stream::GetEventStreamError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_event_stream::GetEventStreamError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_event_stream::GetEventStreamError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_event_stream::GetEventStreamError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_event_trigger::GetEventTriggerError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_event_trigger::GetEventTriggerError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_event_trigger::GetEventTriggerError> for Error {
    fn from(err: crate::operation::get_event_trigger::GetEventTriggerError) -> Self {
        match err {
            crate::operation::get_event_trigger::GetEventTriggerError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_event_trigger::GetEventTriggerError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_event_trigger::GetEventTriggerError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_event_trigger::GetEventTriggerError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_event_trigger::GetEventTriggerError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_event_trigger::GetEventTriggerError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError> for Error {
    fn from(err: crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError) -> Self {
        match err {
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_identity_resolution_job::GetIdentityResolutionJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_integration::GetIntegrationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_integration::GetIntegrationError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_integration::GetIntegrationError> for Error {
    fn from(err: crate::operation::get_integration::GetIntegrationError) -> Self {
        match err {
            crate::operation::get_integration::GetIntegrationError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_integration::GetIntegrationError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_integration::GetIntegrationError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_integration::GetIntegrationError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_integration::GetIntegrationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_integration::GetIntegrationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_matches::GetMatchesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_matches::GetMatchesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_matches::GetMatchesError> for Error {
    fn from(err: crate::operation::get_matches::GetMatchesError) -> Self {
        match err {
            crate::operation::get_matches::GetMatchesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_matches::GetMatchesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_matches::GetMatchesError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_matches::GetMatchesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_matches::GetMatchesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_matches::GetMatchesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_profile_object_type::GetProfileObjectTypeError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_profile_object_type::GetProfileObjectTypeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_profile_object_type::GetProfileObjectTypeError> for Error {
    fn from(err: crate::operation::get_profile_object_type::GetProfileObjectTypeError) -> Self {
        match err {
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_profile_object_type::GetProfileObjectTypeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError> for Error {
    fn from(err: crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError) -> Self {
        match err {
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_profile_object_type_template::GetProfileObjectTypeTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_definition::GetSegmentDefinitionError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_definition::GetSegmentDefinitionError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_segment_definition::GetSegmentDefinitionError> for Error {
    fn from(err: crate::operation::get_segment_definition::GetSegmentDefinitionError) -> Self {
        match err {
            crate::operation::get_segment_definition::GetSegmentDefinitionError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_segment_definition::GetSegmentDefinitionError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_segment_definition::GetSegmentDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_segment_definition::GetSegmentDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_segment_definition::GetSegmentDefinitionError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_segment_definition::GetSegmentDefinitionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_estimate::GetSegmentEstimateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_estimate::GetSegmentEstimateError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_segment_estimate::GetSegmentEstimateError> for Error {
    fn from(err: crate::operation::get_segment_estimate::GetSegmentEstimateError) -> Self {
        match err {
            crate::operation::get_segment_estimate::GetSegmentEstimateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_segment_estimate::GetSegmentEstimateError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_segment_estimate::GetSegmentEstimateError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_segment_estimate::GetSegmentEstimateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_segment_estimate::GetSegmentEstimateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_segment_estimate::GetSegmentEstimateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_membership::GetSegmentMembershipError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_membership::GetSegmentMembershipError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_segment_membership::GetSegmentMembershipError> for Error {
    fn from(err: crate::operation::get_segment_membership::GetSegmentMembershipError) -> Self {
        match err {
            crate::operation::get_segment_membership::GetSegmentMembershipError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_segment_membership::GetSegmentMembershipError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_segment_membership::GetSegmentMembershipError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_segment_membership::GetSegmentMembershipError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_segment_membership::GetSegmentMembershipError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_segment_membership::GetSegmentMembershipError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_snapshot::GetSegmentSnapshotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_segment_snapshot::GetSegmentSnapshotError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_segment_snapshot::GetSegmentSnapshotError> for Error {
    fn from(err: crate::operation::get_segment_snapshot::GetSegmentSnapshotError) -> Self {
        match err {
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_segment_snapshot::GetSegmentSnapshotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_similar_profiles::GetSimilarProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_similar_profiles::GetSimilarProfilesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_similar_profiles::GetSimilarProfilesError> for Error {
    fn from(err: crate::operation::get_similar_profiles::GetSimilarProfilesError) -> Self {
        match err {
            crate::operation::get_similar_profiles::GetSimilarProfilesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_similar_profiles::GetSimilarProfilesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_similar_profiles::GetSimilarProfilesError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_similar_profiles::GetSimilarProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_similar_profiles::GetSimilarProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_similar_profiles::GetSimilarProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_upload_job::GetUploadJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_upload_job::GetUploadJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_upload_job::GetUploadJobError> for Error {
    fn from(err: crate::operation::get_upload_job::GetUploadJobError) -> Self {
        match err {
            crate::operation::get_upload_job::GetUploadJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_upload_job::GetUploadJobError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_upload_job::GetUploadJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_upload_job::GetUploadJobError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_upload_job::GetUploadJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_upload_job::GetUploadJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_upload_job_path::GetUploadJobPathError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_upload_job_path::GetUploadJobPathError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_upload_job_path::GetUploadJobPathError> for Error {
    fn from(err: crate::operation::get_upload_job_path::GetUploadJobPathError) -> Self {
        match err {
            crate::operation::get_upload_job_path::GetUploadJobPathError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_upload_job_path::GetUploadJobPathError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_upload_job_path::GetUploadJobPathError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_upload_job_path::GetUploadJobPathError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_upload_job_path::GetUploadJobPathError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_upload_job_path::GetUploadJobPathError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_workflow::GetWorkflowError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_workflow::GetWorkflowError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_workflow::GetWorkflowError> for Error {
    fn from(err: crate::operation::get_workflow::GetWorkflowError) -> Self {
        match err {
            crate::operation::get_workflow::GetWorkflowError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_workflow::GetWorkflowError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_workflow::GetWorkflowError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_workflow::GetWorkflowError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_workflow::GetWorkflowError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_workflow::GetWorkflowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_workflow_steps::GetWorkflowStepsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_workflow_steps::GetWorkflowStepsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_workflow_steps::GetWorkflowStepsError> for Error {
    fn from(err: crate::operation::get_workflow_steps::GetWorkflowStepsError) -> Self {
        match err {
            crate::operation::get_workflow_steps::GetWorkflowStepsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_workflow_steps::GetWorkflowStepsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::get_workflow_steps::GetWorkflowStepsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_workflow_steps::GetWorkflowStepsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_workflow_steps::GetWorkflowStepsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_workflow_steps::GetWorkflowStepsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_account_integrations::ListAccountIntegrationsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_account_integrations::ListAccountIntegrationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_account_integrations::ListAccountIntegrationsError> for Error {
    fn from(err: crate::operation::list_account_integrations::ListAccountIntegrationsError) -> Self {
        match err {
            crate::operation::list_account_integrations::ListAccountIntegrationsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_account_integrations::ListAccountIntegrationsError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_account_integrations::ListAccountIntegrationsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_account_integrations::ListAccountIntegrationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_account_integrations::ListAccountIntegrationsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_account_integrations::ListAccountIntegrationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError> for Error {
    fn from(err: crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError) -> Self {
        match err {
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_calculated_attribute_definitions::ListCalculatedAttributeDefinitionsError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError> for Error {
    fn from(err: crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError) -> Self {
        match err {
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_calculated_attributes_for_profile::ListCalculatedAttributesForProfileError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_domain_layouts::ListDomainLayoutsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_domain_layouts::ListDomainLayoutsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_domain_layouts::ListDomainLayoutsError> for Error {
    fn from(err: crate::operation::list_domain_layouts::ListDomainLayoutsError) -> Self {
        match err {
            crate::operation::list_domain_layouts::ListDomainLayoutsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_domain_layouts::ListDomainLayoutsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_domain_layouts::ListDomainLayoutsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_domain_layouts::ListDomainLayoutsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_domain_layouts::ListDomainLayoutsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_domain_layouts::ListDomainLayoutsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_domains::ListDomainsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_domains::ListDomainsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_domains::ListDomainsError> for Error {
    fn from(err: crate::operation::list_domains::ListDomainsError) -> Self {
        match err {
            crate::operation::list_domains::ListDomainsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_domains::ListDomainsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_domains::ListDomainsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_domains::ListDomainsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_domains::ListDomainsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_domains::ListDomainsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_event_streams::ListEventStreamsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_event_streams::ListEventStreamsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_event_streams::ListEventStreamsError> for Error {
    fn from(err: crate::operation::list_event_streams::ListEventStreamsError) -> Self {
        match err {
            crate::operation::list_event_streams::ListEventStreamsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_event_streams::ListEventStreamsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_event_streams::ListEventStreamsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_event_streams::ListEventStreamsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_event_streams::ListEventStreamsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_event_streams::ListEventStreamsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_event_triggers::ListEventTriggersError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_event_triggers::ListEventTriggersError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_event_triggers::ListEventTriggersError> for Error {
    fn from(err: crate::operation::list_event_triggers::ListEventTriggersError) -> Self {
        match err {
            crate::operation::list_event_triggers::ListEventTriggersError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_event_triggers::ListEventTriggersError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_event_triggers::ListEventTriggersError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_event_triggers::ListEventTriggersError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_event_triggers::ListEventTriggersError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_event_triggers::ListEventTriggersError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError> for Error {
    fn from(err: crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError) -> Self {
        match err {
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_identity_resolution_jobs::ListIdentityResolutionJobsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_integrations::ListIntegrationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_integrations::ListIntegrationsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_integrations::ListIntegrationsError> for Error {
    fn from(err: crate::operation::list_integrations::ListIntegrationsError) -> Self {
        match err {
            crate::operation::list_integrations::ListIntegrationsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_integrations::ListIntegrationsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_integrations::ListIntegrationsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_integrations::ListIntegrationsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_integrations::ListIntegrationsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_integrations::ListIntegrationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_object_type_attributes::ListObjectTypeAttributesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_object_type_attributes::ListObjectTypeAttributesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_object_type_attributes::ListObjectTypeAttributesError> for Error {
    fn from(err: crate::operation::list_object_type_attributes::ListObjectTypeAttributesError) -> Self {
        match err {
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_object_type_attributes::ListObjectTypeAttributesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError> for Error {
    fn from(err: crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError) -> Self {
        match err {
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_profile_attribute_values::ListProfileAttributeValuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_objects::ListProfileObjectsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_objects::ListProfileObjectsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_profile_objects::ListProfileObjectsError> for Error {
    fn from(err: crate::operation::list_profile_objects::ListProfileObjectsError) -> Self {
        match err {
            crate::operation::list_profile_objects::ListProfileObjectsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_profile_objects::ListProfileObjectsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_profile_objects::ListProfileObjectsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_profile_objects::ListProfileObjectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_profile_objects::ListProfileObjectsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_profile_objects::ListProfileObjectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_object_types::ListProfileObjectTypesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_profile_object_types::ListProfileObjectTypesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_profile_object_types::ListProfileObjectTypesError> for Error {
    fn from(err: crate::operation::list_profile_object_types::ListProfileObjectTypesError) -> Self {
        match err {
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_profile_object_types::ListProfileObjectTypesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError> for Error {
    fn from(err: crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError) -> Self {
        match err {
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_profile_object_type_templates::ListProfileObjectTypeTemplatesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_rule_based_matches::ListRuleBasedMatchesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_rule_based_matches::ListRuleBasedMatchesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_rule_based_matches::ListRuleBasedMatchesError> for Error {
    fn from(err: crate::operation::list_rule_based_matches::ListRuleBasedMatchesError) -> Self {
        match err {
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_rule_based_matches::ListRuleBasedMatchesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_segment_definitions::ListSegmentDefinitionsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_segment_definitions::ListSegmentDefinitionsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_segment_definitions::ListSegmentDefinitionsError> for Error {
    fn from(err: crate::operation::list_segment_definitions::ListSegmentDefinitionsError) -> Self {
        match err {
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_segment_definitions::ListSegmentDefinitionsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_tags_for_resource::ListTagsForResourceError> for Error {
    fn from(err: crate::operation::list_tags_for_resource::ListTagsForResourceError) -> Self {
        match err {
            crate::operation::list_tags_for_resource::ListTagsForResourceError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_upload_jobs::ListUploadJobsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_upload_jobs::ListUploadJobsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_upload_jobs::ListUploadJobsError> for Error {
    fn from(err: crate::operation::list_upload_jobs::ListUploadJobsError) -> Self {
        match err {
            crate::operation::list_upload_jobs::ListUploadJobsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_upload_jobs::ListUploadJobsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_upload_jobs::ListUploadJobsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_upload_jobs::ListUploadJobsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_upload_jobs::ListUploadJobsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_upload_jobs::ListUploadJobsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_workflows::ListWorkflowsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_workflows::ListWorkflowsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_workflows::ListWorkflowsError> for Error {
    fn from(err: crate::operation::list_workflows::ListWorkflowsError) -> Self {
        match err {
            crate::operation::list_workflows::ListWorkflowsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_workflows::ListWorkflowsError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::list_workflows::ListWorkflowsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_workflows::ListWorkflowsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_workflows::ListWorkflowsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_workflows::ListWorkflowsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::merge_profiles::MergeProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::merge_profiles::MergeProfilesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::merge_profiles::MergeProfilesError> for Error {
    fn from(err: crate::operation::merge_profiles::MergeProfilesError) -> Self {
        match err {
            crate::operation::merge_profiles::MergeProfilesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::merge_profiles::MergeProfilesError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::merge_profiles::MergeProfilesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::merge_profiles::MergeProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::merge_profiles::MergeProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_integration::PutIntegrationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_integration::PutIntegrationError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::put_integration::PutIntegrationError> for Error {
    fn from(err: crate::operation::put_integration::PutIntegrationError) -> Self {
        match err {
            crate::operation::put_integration::PutIntegrationError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::put_integration::PutIntegrationError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::put_integration::PutIntegrationError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::put_integration::PutIntegrationError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::put_integration::PutIntegrationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::put_integration::PutIntegrationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_profile_object::PutProfileObjectError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_profile_object::PutProfileObjectError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::put_profile_object::PutProfileObjectError> for Error {
    fn from(err: crate::operation::put_profile_object::PutProfileObjectError) -> Self {
        match err {
            crate::operation::put_profile_object::PutProfileObjectError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::put_profile_object::PutProfileObjectError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::put_profile_object::PutProfileObjectError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::put_profile_object::PutProfileObjectError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::put_profile_object::PutProfileObjectError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::put_profile_object::PutProfileObjectError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_profile_object_type::PutProfileObjectTypeError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_profile_object_type::PutProfileObjectTypeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::put_profile_object_type::PutProfileObjectTypeError> for Error {
    fn from(err: crate::operation::put_profile_object_type::PutProfileObjectTypeError) -> Self {
        match err {
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::put_profile_object_type::PutProfileObjectTypeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_profiles::SearchProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_profiles::SearchProfilesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::search_profiles::SearchProfilesError> for Error {
    fn from(err: crate::operation::search_profiles::SearchProfilesError) -> Self {
        match err {
            crate::operation::search_profiles::SearchProfilesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::search_profiles::SearchProfilesError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::search_profiles::SearchProfilesError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::search_profiles::SearchProfilesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::search_profiles::SearchProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_profiles::SearchProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_upload_job::StartUploadJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_upload_job::StartUploadJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::start_upload_job::StartUploadJobError> for Error {
    fn from(err: crate::operation::start_upload_job::StartUploadJobError) -> Self {
        match err {
            crate::operation::start_upload_job::StartUploadJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::start_upload_job::StartUploadJobError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::start_upload_job::StartUploadJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::start_upload_job::StartUploadJobError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::start_upload_job::StartUploadJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::start_upload_job::StartUploadJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_upload_job::StopUploadJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_upload_job::StopUploadJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::stop_upload_job::StopUploadJobError> for Error {
    fn from(err: crate::operation::stop_upload_job::StopUploadJobError) -> Self {
        match err {
            crate::operation::stop_upload_job::StopUploadJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::stop_upload_job::StopUploadJobError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::stop_upload_job::StopUploadJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::stop_upload_job::StopUploadJobError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::stop_upload_job::StopUploadJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::stop_upload_job::StopUploadJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::tag_resource::TagResourceError> for Error {
    fn from(err: crate::operation::tag_resource::TagResourceError) -> Self {
        match err {
            crate::operation::tag_resource::TagResourceError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::tag_resource::TagResourceError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::tag_resource::TagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::tag_resource::TagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::untag_resource::UntagResourceError> for Error {
    fn from(err: crate::operation::untag_resource::UntagResourceError) -> Self {
        match err {
            crate::operation::untag_resource::UntagResourceError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::untag_resource::UntagResourceError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::untag_resource::UntagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::untag_resource::UntagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError> for Error {
    fn from(err: crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError) -> Self {
        match err {
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::BadRequestException(inner) => {
                Error::BadRequestException(inner)
            }
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_calculated_attribute_definition::UpdateCalculatedAttributeDefinitionError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_domain::UpdateDomainError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_domain::UpdateDomainError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_domain::UpdateDomainError> for Error {
    fn from(err: crate::operation::update_domain::UpdateDomainError) -> Self {
        match err {
            crate::operation::update_domain::UpdateDomainError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_domain::UpdateDomainError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::update_domain::UpdateDomainError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::update_domain::UpdateDomainError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_domain::UpdateDomainError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_domain::UpdateDomainError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_domain_layout::UpdateDomainLayoutError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_domain_layout::UpdateDomainLayoutError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_domain_layout::UpdateDomainLayoutError> for Error {
    fn from(err: crate::operation::update_domain_layout::UpdateDomainLayoutError) -> Self {
        match err {
            crate::operation::update_domain_layout::UpdateDomainLayoutError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_domain_layout::UpdateDomainLayoutError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::update_domain_layout::UpdateDomainLayoutError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::update_domain_layout::UpdateDomainLayoutError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_domain_layout::UpdateDomainLayoutError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_domain_layout::UpdateDomainLayoutError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_event_trigger::UpdateEventTriggerError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_event_trigger::UpdateEventTriggerError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_event_trigger::UpdateEventTriggerError> for Error {
    fn from(err: crate::operation::update_event_trigger::UpdateEventTriggerError) -> Self {
        match err {
            crate::operation::update_event_trigger::UpdateEventTriggerError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_event_trigger::UpdateEventTriggerError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::update_event_trigger::UpdateEventTriggerError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::update_event_trigger::UpdateEventTriggerError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_event_trigger::UpdateEventTriggerError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_event_trigger::UpdateEventTriggerError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_profile::UpdateProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_profile::UpdateProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_profile::UpdateProfileError> for Error {
    fn from(err: crate::operation::update_profile::UpdateProfileError) -> Self {
        match err {
            crate::operation::update_profile::UpdateProfileError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_profile::UpdateProfileError::BadRequestException(inner) => Error::BadRequestException(inner),
            crate::operation::update_profile::UpdateProfileError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::update_profile::UpdateProfileError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_profile::UpdateProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_profile::UpdateProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl ::std::error::Error for Error {
    fn source(&self) -> std::option::Option<&(dyn ::std::error::Error + 'static)> {
        match self {
            Error::AccessDeniedException(inner) => inner.source(),
            Error::BadRequestException(inner) => inner.source(),
            Error::InternalServerException(inner) => inner.source(),
            Error::ResourceNotFoundException(inner) => inner.source(),
            Error::ThrottlingException(inner) => inner.source(),
            Error::Unhandled(inner) => ::std::option::Option::Some(&*inner.source),
        }
    }
}
impl ::aws_types::request_id::RequestId for Error {
    fn request_id(&self) -> Option<&str> {
        match self {
            Self::AccessDeniedException(e) => e.request_id(),
            Self::BadRequestException(e) => e.request_id(),
            Self::InternalServerException(e) => e.request_id(),
            Self::ResourceNotFoundException(e) => e.request_id(),
            Self::ThrottlingException(e) => e.request_id(),
            Self::Unhandled(e) => e.meta.request_id(),
        }
    }
}
