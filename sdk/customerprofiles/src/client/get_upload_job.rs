// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetUploadJob`](crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder::set_domain_name):<br>required: **true**<br><p>The unique name of the domain containing the upload job.</p><br>
    ///   - [`job_id(impl Into<String>)`](crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder::set_job_id):<br>required: **true**<br><p>The unique identifier of the upload job to retrieve.</p><br>
    /// - On success, responds with [`GetUploadJobOutput`](crate::operation::get_upload_job::GetUploadJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::operation::get_upload_job::GetUploadJobOutput::job_id): <p>The unique identifier of the upload job.</p>
    ///   - [`display_name(Option<String>)`](crate::operation::get_upload_job::GetUploadJobOutput::display_name): <p>The unique name of the upload job. Could be a file name to identify the upload job.</p>
    ///   - [`status(Option<UploadJobStatus>)`](crate::operation::get_upload_job::GetUploadJobOutput::status): <p>The status describing the status for the upload job. The following are Valid Values:</p> <ul>  <li>   <p><b>CREATED</b>: The upload job has been created, but has not started processing yet.</p></li>  <li>   <p><b>IN_PROGRESS</b>: The upload job is currently in progress, ingesting and processing the profile data.</p></li>  <li>   <p><b>PARTIALLY_SUCCEEDED</b>: The upload job has successfully completed the ingestion and processing of all profile data.</p></li>  <li>   <p><b>SUCCEEDED</b>: The upload job has successfully completed the ingestion and processing of all profile data.</p></li>  <li>   <p><b>FAILED</b>: The upload job has failed to complete.</p></li>  <li>   <p><b>STOPPED</b>: The upload job has been manually stopped or terminated before completion.</p></li> </ul>
    ///   - [`status_reason(Option<StatusReason>)`](crate::operation::get_upload_job::GetUploadJobOutput::status_reason): <p>The reason for the current status of the upload job. Possible reasons:</p> <ul>  <li>   <p><b>VALIDATION_FAILURE</b>: The upload job has encountered an error or issue and was unable to complete the profile data ingestion.</p></li>  <li>   <p><b>INTERNAL_FAILURE</b>: Failure caused from service side</p></li> </ul>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_upload_job::GetUploadJobOutput::created_at): <p>The timestamp when the upload job was created.</p>
    ///   - [`completed_at(Option<DateTime>)`](crate::operation::get_upload_job::GetUploadJobOutput::completed_at): <p>The timestamp when the upload job was completed.</p>
    ///   - [`fields(Option<HashMap::<String, ObjectTypeField>>)`](crate::operation::get_upload_job::GetUploadJobOutput::fields): <p>The mapping between CSV Columns and Profile Object attributes for the upload job.</p>
    ///   - [`unique_key(Option<String>)`](crate::operation::get_upload_job::GetUploadJobOutput::unique_key): <p>The unique key columns used for de-duping the keys in the upload job.</p>
    ///   - [`results_summary(Option<ResultsSummary>)`](crate::operation::get_upload_job::GetUploadJobOutput::results_summary): <p>The summary of results for the upload job, including the number of updated, created, and failed records.</p>
    ///   - [`data_expiry(Option<i32>)`](crate::operation::get_upload_job::GetUploadJobOutput::data_expiry): <p>The expiry duration for the profiles ingested with the upload job.</p>
    /// - On failure, responds with [`SdkError<GetUploadJobError>`](crate::operation::get_upload_job::GetUploadJobError)
    pub fn get_upload_job(&self) -> crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder {
        crate::operation::get_upload_job::builders::GetUploadJobFluentBuilder::new(self.handle.clone())
    }
}
