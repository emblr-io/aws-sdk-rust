// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of results for an upload job, including the number of updated, created, and failed records.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResultsSummary {
    /// <p>The number of records that were updated during the upload job.</p>
    pub updated_records: ::std::option::Option<i64>,
    /// <p>The number of records that were newly created during the upload job.</p>
    pub created_records: ::std::option::Option<i64>,
    /// <p>The number of records that failed to be processed during the upload job.</p>
    pub failed_records: ::std::option::Option<i64>,
}
impl ResultsSummary {
    /// <p>The number of records that were updated during the upload job.</p>
    pub fn updated_records(&self) -> ::std::option::Option<i64> {
        self.updated_records
    }
    /// <p>The number of records that were newly created during the upload job.</p>
    pub fn created_records(&self) -> ::std::option::Option<i64> {
        self.created_records
    }
    /// <p>The number of records that failed to be processed during the upload job.</p>
    pub fn failed_records(&self) -> ::std::option::Option<i64> {
        self.failed_records
    }
}
impl ResultsSummary {
    /// Creates a new builder-style object to manufacture [`ResultsSummary`](crate::types::ResultsSummary).
    pub fn builder() -> crate::types::builders::ResultsSummaryBuilder {
        crate::types::builders::ResultsSummaryBuilder::default()
    }
}

/// A builder for [`ResultsSummary`](crate::types::ResultsSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResultsSummaryBuilder {
    pub(crate) updated_records: ::std::option::Option<i64>,
    pub(crate) created_records: ::std::option::Option<i64>,
    pub(crate) failed_records: ::std::option::Option<i64>,
}
impl ResultsSummaryBuilder {
    /// <p>The number of records that were updated during the upload job.</p>
    pub fn updated_records(mut self, input: i64) -> Self {
        self.updated_records = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of records that were updated during the upload job.</p>
    pub fn set_updated_records(mut self, input: ::std::option::Option<i64>) -> Self {
        self.updated_records = input;
        self
    }
    /// <p>The number of records that were updated during the upload job.</p>
    pub fn get_updated_records(&self) -> &::std::option::Option<i64> {
        &self.updated_records
    }
    /// <p>The number of records that were newly created during the upload job.</p>
    pub fn created_records(mut self, input: i64) -> Self {
        self.created_records = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of records that were newly created during the upload job.</p>
    pub fn set_created_records(mut self, input: ::std::option::Option<i64>) -> Self {
        self.created_records = input;
        self
    }
    /// <p>The number of records that were newly created during the upload job.</p>
    pub fn get_created_records(&self) -> &::std::option::Option<i64> {
        &self.created_records
    }
    /// <p>The number of records that failed to be processed during the upload job.</p>
    pub fn failed_records(mut self, input: i64) -> Self {
        self.failed_records = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of records that failed to be processed during the upload job.</p>
    pub fn set_failed_records(mut self, input: ::std::option::Option<i64>) -> Self {
        self.failed_records = input;
        self
    }
    /// <p>The number of records that failed to be processed during the upload job.</p>
    pub fn get_failed_records(&self) -> &::std::option::Option<i64> {
        &self.failed_records
    }
    /// Consumes the builder and constructs a [`ResultsSummary`](crate::types::ResultsSummary).
    pub fn build(self) -> crate::types::ResultsSummary {
        crate::types::ResultsSummary {
            updated_records: self.updated_records,
            created_records: self.created_records,
            failed_records: self.failed_records,
        }
    }
}
