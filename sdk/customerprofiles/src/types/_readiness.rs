// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information indicating if the Calculated Attribute is ready for use by confirming all historical data has been processed and reflected.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Readiness {
    /// <p>Approximately how far the Calculated Attribute creation is from completion.</p>
    pub progress_percentage: ::std::option::Option<i32>,
    /// <p>Any customer messaging.</p>
    pub message: ::std::option::Option<::std::string::String>,
}
impl Readiness {
    /// <p>Approximately how far the Calculated Attribute creation is from completion.</p>
    pub fn progress_percentage(&self) -> ::std::option::Option<i32> {
        self.progress_percentage
    }
    /// <p>Any customer messaging.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl Readiness {
    /// Creates a new builder-style object to manufacture [`Readiness`](crate::types::Readiness).
    pub fn builder() -> crate::types::builders::ReadinessBuilder {
        crate::types::builders::ReadinessBuilder::default()
    }
}

/// A builder for [`Readiness`](crate::types::Readiness).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ReadinessBuilder {
    pub(crate) progress_percentage: ::std::option::Option<i32>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl ReadinessBuilder {
    /// <p>Approximately how far the Calculated Attribute creation is from completion.</p>
    pub fn progress_percentage(mut self, input: i32) -> Self {
        self.progress_percentage = ::std::option::Option::Some(input);
        self
    }
    /// <p>Approximately how far the Calculated Attribute creation is from completion.</p>
    pub fn set_progress_percentage(mut self, input: ::std::option::Option<i32>) -> Self {
        self.progress_percentage = input;
        self
    }
    /// <p>Approximately how far the Calculated Attribute creation is from completion.</p>
    pub fn get_progress_percentage(&self) -> &::std::option::Option<i32> {
        &self.progress_percentage
    }
    /// <p>Any customer messaging.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Any customer messaging.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>Any customer messaging.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`Readiness`](crate::types::Readiness).
    pub fn build(self) -> crate::types::Readiness {
        crate::types::Readiness {
            progress_percentage: self.progress_percentage,
            message: self.message,
        }
    }
}
