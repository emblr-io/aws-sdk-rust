// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the event trigger.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EventTriggerSummaryItem {
    /// <p>The unique name of the object type.</p>
    pub object_type_name: ::std::option::Option<::std::string::String>,
    /// <p>The unique name of the event trigger.</p>
    pub event_trigger_name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the event trigger.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp of when the event trigger was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of when the event trigger was most recently updated.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>An array of key-value pairs to apply to this resource.</p>
    pub tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl EventTriggerSummaryItem {
    /// <p>The unique name of the object type.</p>
    pub fn object_type_name(&self) -> ::std::option::Option<&str> {
        self.object_type_name.as_deref()
    }
    /// <p>The unique name of the event trigger.</p>
    pub fn event_trigger_name(&self) -> ::std::option::Option<&str> {
        self.event_trigger_name.as_deref()
    }
    /// <p>The description of the event trigger.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The timestamp of when the event trigger was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp of when the event trigger was most recently updated.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
    /// <p>An array of key-value pairs to apply to this resource.</p>
    pub fn tags(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.tags.as_ref()
    }
}
impl EventTriggerSummaryItem {
    /// Creates a new builder-style object to manufacture [`EventTriggerSummaryItem`](crate::types::EventTriggerSummaryItem).
    pub fn builder() -> crate::types::builders::EventTriggerSummaryItemBuilder {
        crate::types::builders::EventTriggerSummaryItemBuilder::default()
    }
}

/// A builder for [`EventTriggerSummaryItem`](crate::types::EventTriggerSummaryItem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EventTriggerSummaryItemBuilder {
    pub(crate) object_type_name: ::std::option::Option<::std::string::String>,
    pub(crate) event_trigger_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl EventTriggerSummaryItemBuilder {
    /// <p>The unique name of the object type.</p>
    pub fn object_type_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_type_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique name of the object type.</p>
    pub fn set_object_type_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_type_name = input;
        self
    }
    /// <p>The unique name of the object type.</p>
    pub fn get_object_type_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_type_name
    }
    /// <p>The unique name of the event trigger.</p>
    pub fn event_trigger_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_trigger_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique name of the event trigger.</p>
    pub fn set_event_trigger_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_trigger_name = input;
        self
    }
    /// <p>The unique name of the event trigger.</p>
    pub fn get_event_trigger_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_trigger_name
    }
    /// <p>The description of the event trigger.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the event trigger.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the event trigger.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The timestamp of when the event trigger was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the event trigger was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp of when the event trigger was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp of when the event trigger was most recently updated.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the event trigger was most recently updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp of when the event trigger was most recently updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>An array of key-value pairs to apply to this resource.</p>
    pub fn tags(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>An array of key-value pairs to apply to this resource.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>An array of key-value pairs to apply to this resource.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.tags
    }
    /// Consumes the builder and constructs a [`EventTriggerSummaryItem`](crate::types::EventTriggerSummaryItem).
    pub fn build(self) -> crate::types::EventTriggerSummaryItem {
        crate::types::EventTriggerSummaryItem {
            object_type_name: self.object_type_name,
            event_trigger_name: self.event_trigger_name,
            description: self.description,
            created_at: self.created_at,
            last_updated_at: self.last_updated_at,
            tags: self.tags,
        }
    }
}
