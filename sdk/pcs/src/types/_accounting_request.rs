// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The accounting configuration includes configurable settings for Slurm accounting. It's a property of the <b>ClusterSlurmConfiguration</b> object.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccountingRequest {
    /// <p>The default value for <code>mode</code> is <code>STANDARD</code>. A value of <code>STANDARD</code> means Slurm accounting is enabled.</p>
    pub mode: crate::types::AccountingMode,
    /// <p>The default value for all purge settings for <code>slurmdbd.conf</code>. For more information, see the <a href="https://slurm.schedmd.com/slurmdbd.conf.html">slurmdbd.conf documentation at SchedMD</a>.</p>
    /// <p>The default value for <code>defaultPurgeTimeInDays</code> is <code>-1</code>.</p>
    /// <p>A value of <code>-1</code> means there is no purge time and records persist as long as the cluster exists.</p><important>
    /// <p><code>0</code> isn't a valid value.</p>
    /// </important>
    pub default_purge_time_in_days: ::std::option::Option<i32>,
}
impl AccountingRequest {
    /// <p>The default value for <code>mode</code> is <code>STANDARD</code>. A value of <code>STANDARD</code> means Slurm accounting is enabled.</p>
    pub fn mode(&self) -> &crate::types::AccountingMode {
        &self.mode
    }
    /// <p>The default value for all purge settings for <code>slurmdbd.conf</code>. For more information, see the <a href="https://slurm.schedmd.com/slurmdbd.conf.html">slurmdbd.conf documentation at SchedMD</a>.</p>
    /// <p>The default value for <code>defaultPurgeTimeInDays</code> is <code>-1</code>.</p>
    /// <p>A value of <code>-1</code> means there is no purge time and records persist as long as the cluster exists.</p><important>
    /// <p><code>0</code> isn't a valid value.</p>
    /// </important>
    pub fn default_purge_time_in_days(&self) -> ::std::option::Option<i32> {
        self.default_purge_time_in_days
    }
}
impl AccountingRequest {
    /// Creates a new builder-style object to manufacture [`AccountingRequest`](crate::types::AccountingRequest).
    pub fn builder() -> crate::types::builders::AccountingRequestBuilder {
        crate::types::builders::AccountingRequestBuilder::default()
    }
}

/// A builder for [`AccountingRequest`](crate::types::AccountingRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AccountingRequestBuilder {
    pub(crate) mode: ::std::option::Option<crate::types::AccountingMode>,
    pub(crate) default_purge_time_in_days: ::std::option::Option<i32>,
}
impl AccountingRequestBuilder {
    /// <p>The default value for <code>mode</code> is <code>STANDARD</code>. A value of <code>STANDARD</code> means Slurm accounting is enabled.</p>
    /// This field is required.
    pub fn mode(mut self, input: crate::types::AccountingMode) -> Self {
        self.mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The default value for <code>mode</code> is <code>STANDARD</code>. A value of <code>STANDARD</code> means Slurm accounting is enabled.</p>
    pub fn set_mode(mut self, input: ::std::option::Option<crate::types::AccountingMode>) -> Self {
        self.mode = input;
        self
    }
    /// <p>The default value for <code>mode</code> is <code>STANDARD</code>. A value of <code>STANDARD</code> means Slurm accounting is enabled.</p>
    pub fn get_mode(&self) -> &::std::option::Option<crate::types::AccountingMode> {
        &self.mode
    }
    /// <p>The default value for all purge settings for <code>slurmdbd.conf</code>. For more information, see the <a href="https://slurm.schedmd.com/slurmdbd.conf.html">slurmdbd.conf documentation at SchedMD</a>.</p>
    /// <p>The default value for <code>defaultPurgeTimeInDays</code> is <code>-1</code>.</p>
    /// <p>A value of <code>-1</code> means there is no purge time and records persist as long as the cluster exists.</p><important>
    /// <p><code>0</code> isn't a valid value.</p>
    /// </important>
    pub fn default_purge_time_in_days(mut self, input: i32) -> Self {
        self.default_purge_time_in_days = ::std::option::Option::Some(input);
        self
    }
    /// <p>The default value for all purge settings for <code>slurmdbd.conf</code>. For more information, see the <a href="https://slurm.schedmd.com/slurmdbd.conf.html">slurmdbd.conf documentation at SchedMD</a>.</p>
    /// <p>The default value for <code>defaultPurgeTimeInDays</code> is <code>-1</code>.</p>
    /// <p>A value of <code>-1</code> means there is no purge time and records persist as long as the cluster exists.</p><important>
    /// <p><code>0</code> isn't a valid value.</p>
    /// </important>
    pub fn set_default_purge_time_in_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.default_purge_time_in_days = input;
        self
    }
    /// <p>The default value for all purge settings for <code>slurmdbd.conf</code>. For more information, see the <a href="https://slurm.schedmd.com/slurmdbd.conf.html">slurmdbd.conf documentation at SchedMD</a>.</p>
    /// <p>The default value for <code>defaultPurgeTimeInDays</code> is <code>-1</code>.</p>
    /// <p>A value of <code>-1</code> means there is no purge time and records persist as long as the cluster exists.</p><important>
    /// <p><code>0</code> isn't a valid value.</p>
    /// </important>
    pub fn get_default_purge_time_in_days(&self) -> &::std::option::Option<i32> {
        &self.default_purge_time_in_days
    }
    /// Consumes the builder and constructs a [`AccountingRequest`](crate::types::AccountingRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`mode`](crate::types::builders::AccountingRequestBuilder::mode)
    pub fn build(self) -> ::std::result::Result<crate::types::AccountingRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AccountingRequest {
            mode: self.mode.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "mode",
                    "mode was not specified but it is required when building AccountingRequest",
                )
            })?,
            default_purge_time_in_days: self.default_purge_time_in_days,
        })
    }
}
