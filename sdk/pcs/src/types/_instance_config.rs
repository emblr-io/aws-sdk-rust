// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An EC2 instance configuration Amazon Web Services PCS uses to launch compute nodes.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceConfig {
    /// <p>The EC2 instance type that Amazon Web Services PCS can provision in the compute node group.</p>
    /// <p>Example: <code>t2.xlarge</code></p>
    pub instance_type: ::std::option::Option<::std::string::String>,
}
impl InstanceConfig {
    /// <p>The EC2 instance type that Amazon Web Services PCS can provision in the compute node group.</p>
    /// <p>Example: <code>t2.xlarge</code></p>
    pub fn instance_type(&self) -> ::std::option::Option<&str> {
        self.instance_type.as_deref()
    }
}
impl InstanceConfig {
    /// Creates a new builder-style object to manufacture [`InstanceConfig`](crate::types::InstanceConfig).
    pub fn builder() -> crate::types::builders::InstanceConfigBuilder {
        crate::types::builders::InstanceConfigBuilder::default()
    }
}

/// A builder for [`InstanceConfig`](crate::types::InstanceConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InstanceConfigBuilder {
    pub(crate) instance_type: ::std::option::Option<::std::string::String>,
}
impl InstanceConfigBuilder {
    /// <p>The EC2 instance type that Amazon Web Services PCS can provision in the compute node group.</p>
    /// <p>Example: <code>t2.xlarge</code></p>
    pub fn instance_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The EC2 instance type that Amazon Web Services PCS can provision in the compute node group.</p>
    /// <p>Example: <code>t2.xlarge</code></p>
    pub fn set_instance_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_type = input;
        self
    }
    /// <p>The EC2 instance type that Amazon Web Services PCS can provision in the compute node group.</p>
    /// <p>Example: <code>t2.xlarge</code></p>
    pub fn get_instance_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_type
    }
    /// Consumes the builder and constructs a [`InstanceConfig`](crate::types::InstanceConfig).
    pub fn build(self) -> crate::types::InstanceConfig {
        crate::types::InstanceConfig {
            instance_type: self.instance_type,
        }
    }
}
