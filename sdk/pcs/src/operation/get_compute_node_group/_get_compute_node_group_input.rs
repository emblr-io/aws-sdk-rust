// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetComputeNodeGroupInput {
    /// <p>The name or ID of the cluster.</p>
    pub cluster_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The name or ID of the compute node group.</p>
    pub compute_node_group_identifier: ::std::option::Option<::std::string::String>,
}
impl GetComputeNodeGroupInput {
    /// <p>The name or ID of the cluster.</p>
    pub fn cluster_identifier(&self) -> ::std::option::Option<&str> {
        self.cluster_identifier.as_deref()
    }
    /// <p>The name or ID of the compute node group.</p>
    pub fn compute_node_group_identifier(&self) -> ::std::option::Option<&str> {
        self.compute_node_group_identifier.as_deref()
    }
}
impl GetComputeNodeGroupInput {
    /// Creates a new builder-style object to manufacture [`GetComputeNodeGroupInput`](crate::operation::get_compute_node_group::GetComputeNodeGroupInput).
    pub fn builder() -> crate::operation::get_compute_node_group::builders::GetComputeNodeGroupInputBuilder {
        crate::operation::get_compute_node_group::builders::GetComputeNodeGroupInputBuilder::default()
    }
}

/// A builder for [`GetComputeNodeGroupInput`](crate::operation::get_compute_node_group::GetComputeNodeGroupInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetComputeNodeGroupInputBuilder {
    pub(crate) cluster_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) compute_node_group_identifier: ::std::option::Option<::std::string::String>,
}
impl GetComputeNodeGroupInputBuilder {
    /// <p>The name or ID of the cluster.</p>
    /// This field is required.
    pub fn cluster_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or ID of the cluster.</p>
    pub fn set_cluster_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_identifier = input;
        self
    }
    /// <p>The name or ID of the cluster.</p>
    pub fn get_cluster_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_identifier
    }
    /// <p>The name or ID of the compute node group.</p>
    /// This field is required.
    pub fn compute_node_group_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.compute_node_group_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or ID of the compute node group.</p>
    pub fn set_compute_node_group_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.compute_node_group_identifier = input;
        self
    }
    /// <p>The name or ID of the compute node group.</p>
    pub fn get_compute_node_group_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.compute_node_group_identifier
    }
    /// Consumes the builder and constructs a [`GetComputeNodeGroupInput`](crate::operation::get_compute_node_group::GetComputeNodeGroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_compute_node_group::GetComputeNodeGroupInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_compute_node_group::GetComputeNodeGroupInput {
            cluster_identifier: self.cluster_identifier,
            compute_node_group_identifier: self.compute_node_group_identifier,
        })
    }
}
