// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateMarketplaceModelEndpointInput {
    /// <p>The Amazon Resource Name (ARN) of the endpoint you want to update.</p>
    pub endpoint_arn: ::std::option::Option<::std::string::String>,
    /// <p>The new configuration for the endpoint, including the number and type of instances to use.</p>
    pub endpoint_config: ::std::option::Option<crate::types::EndpointConfig>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This token is listed as not required because Amazon Web Services SDKs automatically generate it for you and set this parameter. If you're not using the Amazon Web Services SDK or the CLI, you must provide this token or the action will fail.</p>
    pub client_request_token: ::std::option::Option<::std::string::String>,
}
impl UpdateMarketplaceModelEndpointInput {
    /// <p>The Amazon Resource Name (ARN) of the endpoint you want to update.</p>
    pub fn endpoint_arn(&self) -> ::std::option::Option<&str> {
        self.endpoint_arn.as_deref()
    }
    /// <p>The new configuration for the endpoint, including the number and type of instances to use.</p>
    pub fn endpoint_config(&self) -> ::std::option::Option<&crate::types::EndpointConfig> {
        self.endpoint_config.as_ref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This token is listed as not required because Amazon Web Services SDKs automatically generate it for you and set this parameter. If you're not using the Amazon Web Services SDK or the CLI, you must provide this token or the action will fail.</p>
    pub fn client_request_token(&self) -> ::std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
}
impl UpdateMarketplaceModelEndpointInput {
    /// Creates a new builder-style object to manufacture [`UpdateMarketplaceModelEndpointInput`](crate::operation::update_marketplace_model_endpoint::UpdateMarketplaceModelEndpointInput).
    pub fn builder() -> crate::operation::update_marketplace_model_endpoint::builders::UpdateMarketplaceModelEndpointInputBuilder {
        crate::operation::update_marketplace_model_endpoint::builders::UpdateMarketplaceModelEndpointInputBuilder::default()
    }
}

/// A builder for [`UpdateMarketplaceModelEndpointInput`](crate::operation::update_marketplace_model_endpoint::UpdateMarketplaceModelEndpointInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateMarketplaceModelEndpointInputBuilder {
    pub(crate) endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_config: ::std::option::Option<crate::types::EndpointConfig>,
    pub(crate) client_request_token: ::std::option::Option<::std::string::String>,
}
impl UpdateMarketplaceModelEndpointInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the endpoint you want to update.</p>
    /// This field is required.
    pub fn endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint you want to update.</p>
    pub fn set_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint you want to update.</p>
    pub fn get_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_arn
    }
    /// <p>The new configuration for the endpoint, including the number and type of instances to use.</p>
    /// This field is required.
    pub fn endpoint_config(mut self, input: crate::types::EndpointConfig) -> Self {
        self.endpoint_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The new configuration for the endpoint, including the number and type of instances to use.</p>
    pub fn set_endpoint_config(mut self, input: ::std::option::Option<crate::types::EndpointConfig>) -> Self {
        self.endpoint_config = input;
        self
    }
    /// <p>The new configuration for the endpoint, including the number and type of instances to use.</p>
    pub fn get_endpoint_config(&self) -> &::std::option::Option<crate::types::EndpointConfig> {
        &self.endpoint_config
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This token is listed as not required because Amazon Web Services SDKs automatically generate it for you and set this parameter. If you're not using the Amazon Web Services SDK or the CLI, you must provide this token or the action will fail.</p>
    pub fn client_request_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_request_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This token is listed as not required because Amazon Web Services SDKs automatically generate it for you and set this parameter. If you're not using the Amazon Web Services SDK or the CLI, you must provide this token or the action will fail.</p>
    pub fn set_client_request_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_request_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This token is listed as not required because Amazon Web Services SDKs automatically generate it for you and set this parameter. If you're not using the Amazon Web Services SDK or the CLI, you must provide this token or the action will fail.</p>
    pub fn get_client_request_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_request_token
    }
    /// Consumes the builder and constructs a [`UpdateMarketplaceModelEndpointInput`](crate::operation::update_marketplace_model_endpoint::UpdateMarketplaceModelEndpointInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_marketplace_model_endpoint::UpdateMarketplaceModelEndpointInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_marketplace_model_endpoint::UpdateMarketplaceModelEndpointInput {
            endpoint_arn: self.endpoint_arn,
            endpoint_config: self.endpoint_config,
            client_request_token: self.client_request_token,
        })
    }
}
