// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDeleteEvaluationJobOutput {
    /// <p>A JSON object containing the HTTP status codes and the ARNs of evaluation jobs that failed to be deleted.</p>
    pub errors: ::std::vec::Vec<crate::types::BatchDeleteEvaluationJobError>,
    /// <p>The list of evaluation jobs for deletion.</p>
    pub evaluation_jobs: ::std::vec::Vec<crate::types::BatchDeleteEvaluationJobItem>,
    _request_id: Option<String>,
}
impl BatchDeleteEvaluationJobOutput {
    /// <p>A JSON object containing the HTTP status codes and the ARNs of evaluation jobs that failed to be deleted.</p>
    pub fn errors(&self) -> &[crate::types::BatchDeleteEvaluationJobError] {
        use std::ops::Deref;
        self.errors.deref()
    }
    /// <p>The list of evaluation jobs for deletion.</p>
    pub fn evaluation_jobs(&self) -> &[crate::types::BatchDeleteEvaluationJobItem] {
        use std::ops::Deref;
        self.evaluation_jobs.deref()
    }
}
impl ::aws_types::request_id::RequestId for BatchDeleteEvaluationJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchDeleteEvaluationJobOutput {
    /// Creates a new builder-style object to manufacture [`BatchDeleteEvaluationJobOutput`](crate::operation::batch_delete_evaluation_job::BatchDeleteEvaluationJobOutput).
    pub fn builder() -> crate::operation::batch_delete_evaluation_job::builders::BatchDeleteEvaluationJobOutputBuilder {
        crate::operation::batch_delete_evaluation_job::builders::BatchDeleteEvaluationJobOutputBuilder::default()
    }
}

/// A builder for [`BatchDeleteEvaluationJobOutput`](crate::operation::batch_delete_evaluation_job::BatchDeleteEvaluationJobOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchDeleteEvaluationJobOutputBuilder {
    pub(crate) errors: ::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobError>>,
    pub(crate) evaluation_jobs: ::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobItem>>,
    _request_id: Option<String>,
}
impl BatchDeleteEvaluationJobOutputBuilder {
    /// Appends an item to `errors`.
    ///
    /// To override the contents of this collection use [`set_errors`](Self::set_errors).
    ///
    /// <p>A JSON object containing the HTTP status codes and the ARNs of evaluation jobs that failed to be deleted.</p>
    pub fn errors(mut self, input: crate::types::BatchDeleteEvaluationJobError) -> Self {
        let mut v = self.errors.unwrap_or_default();
        v.push(input);
        self.errors = ::std::option::Option::Some(v);
        self
    }
    /// <p>A JSON object containing the HTTP status codes and the ARNs of evaluation jobs that failed to be deleted.</p>
    pub fn set_errors(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobError>>) -> Self {
        self.errors = input;
        self
    }
    /// <p>A JSON object containing the HTTP status codes and the ARNs of evaluation jobs that failed to be deleted.</p>
    pub fn get_errors(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobError>> {
        &self.errors
    }
    /// Appends an item to `evaluation_jobs`.
    ///
    /// To override the contents of this collection use [`set_evaluation_jobs`](Self::set_evaluation_jobs).
    ///
    /// <p>The list of evaluation jobs for deletion.</p>
    pub fn evaluation_jobs(mut self, input: crate::types::BatchDeleteEvaluationJobItem) -> Self {
        let mut v = self.evaluation_jobs.unwrap_or_default();
        v.push(input);
        self.evaluation_jobs = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of evaluation jobs for deletion.</p>
    pub fn set_evaluation_jobs(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobItem>>) -> Self {
        self.evaluation_jobs = input;
        self
    }
    /// <p>The list of evaluation jobs for deletion.</p>
    pub fn get_evaluation_jobs(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BatchDeleteEvaluationJobItem>> {
        &self.evaluation_jobs
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchDeleteEvaluationJobOutput`](crate::operation::batch_delete_evaluation_job::BatchDeleteEvaluationJobOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`errors`](crate::operation::batch_delete_evaluation_job::builders::BatchDeleteEvaluationJobOutputBuilder::errors)
    /// - [`evaluation_jobs`](crate::operation::batch_delete_evaluation_job::builders::BatchDeleteEvaluationJobOutputBuilder::evaluation_jobs)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_delete_evaluation_job::BatchDeleteEvaluationJobOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::batch_delete_evaluation_job::BatchDeleteEvaluationJobOutput {
            errors: self.errors.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "errors",
                    "errors was not specified but it is required when building BatchDeleteEvaluationJobOutput",
                )
            })?,
            evaluation_jobs: self.evaluation_jobs.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "evaluation_jobs",
                    "evaluation_jobs was not specified but it is required when building BatchDeleteEvaluationJobOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
