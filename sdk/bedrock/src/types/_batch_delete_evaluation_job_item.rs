// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An evaluation job for deletion, and itâ€™s current status.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct BatchDeleteEvaluationJobItem {
    /// <p>The Amazon Resource Name (ARN) of the evaluation job for deletion.</p>
    pub job_identifier: ::std::string::String,
    /// <p>The status of the evaluation job for deletion.</p>
    pub job_status: crate::types::EvaluationJobStatus,
}
impl BatchDeleteEvaluationJobItem {
    /// <p>The Amazon Resource Name (ARN) of the evaluation job for deletion.</p>
    pub fn job_identifier(&self) -> &str {
        use std::ops::Deref;
        self.job_identifier.deref()
    }
    /// <p>The status of the evaluation job for deletion.</p>
    pub fn job_status(&self) -> &crate::types::EvaluationJobStatus {
        &self.job_status
    }
}
impl ::std::fmt::Debug for BatchDeleteEvaluationJobItem {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("BatchDeleteEvaluationJobItem");
        formatter.field("job_identifier", &"*** Sensitive Data Redacted ***");
        formatter.field("job_status", &self.job_status);
        formatter.finish()
    }
}
impl BatchDeleteEvaluationJobItem {
    /// Creates a new builder-style object to manufacture [`BatchDeleteEvaluationJobItem`](crate::types::BatchDeleteEvaluationJobItem).
    pub fn builder() -> crate::types::builders::BatchDeleteEvaluationJobItemBuilder {
        crate::types::builders::BatchDeleteEvaluationJobItemBuilder::default()
    }
}

/// A builder for [`BatchDeleteEvaluationJobItem`](crate::types::BatchDeleteEvaluationJobItem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct BatchDeleteEvaluationJobItemBuilder {
    pub(crate) job_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) job_status: ::std::option::Option<crate::types::EvaluationJobStatus>,
}
impl BatchDeleteEvaluationJobItemBuilder {
    /// <p>The Amazon Resource Name (ARN) of the evaluation job for deletion.</p>
    /// This field is required.
    pub fn job_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the evaluation job for deletion.</p>
    pub fn set_job_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_identifier = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the evaluation job for deletion.</p>
    pub fn get_job_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_identifier
    }
    /// <p>The status of the evaluation job for deletion.</p>
    /// This field is required.
    pub fn job_status(mut self, input: crate::types::EvaluationJobStatus) -> Self {
        self.job_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the evaluation job for deletion.</p>
    pub fn set_job_status(mut self, input: ::std::option::Option<crate::types::EvaluationJobStatus>) -> Self {
        self.job_status = input;
        self
    }
    /// <p>The status of the evaluation job for deletion.</p>
    pub fn get_job_status(&self) -> &::std::option::Option<crate::types::EvaluationJobStatus> {
        &self.job_status
    }
    /// Consumes the builder and constructs a [`BatchDeleteEvaluationJobItem`](crate::types::BatchDeleteEvaluationJobItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`job_identifier`](crate::types::builders::BatchDeleteEvaluationJobItemBuilder::job_identifier)
    /// - [`job_status`](crate::types::builders::BatchDeleteEvaluationJobItemBuilder::job_status)
    pub fn build(self) -> ::std::result::Result<crate::types::BatchDeleteEvaluationJobItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchDeleteEvaluationJobItem {
            job_identifier: self.job_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "job_identifier",
                    "job_identifier was not specified but it is required when building BatchDeleteEvaluationJobItem",
                )
            })?,
            job_status: self.job_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "job_status",
                    "job_status was not specified but it is required when building BatchDeleteEvaluationJobItem",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for BatchDeleteEvaluationJobItemBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("BatchDeleteEvaluationJobItemBuilder");
        formatter.field("job_identifier", &"*** Sensitive Data Redacted ***");
        formatter.field("job_status", &self.job_status);
        formatter.finish()
    }
}
