// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A <code>CustomModelUnit</code> (CMU) is an abstract view of the hardware utilization that Amazon Bedrock needs to host a single copy of your custom model. A model copy represents a single instance of your imported model that is ready to serve inference requests. Amazon Bedrock determines the number of custom model units that a model copy needs when you import the custom model.</p>
/// <p>You can use <code>CustomModelUnits</code> to estimate the cost of running your custom model. For more information, see Calculate the cost of running a custom model in the Amazon Bedrock user guide.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomModelUnits {
    /// <p>The number of custom model units used to host a model copy.</p>
    pub custom_model_units_per_model_copy: ::std::option::Option<i32>,
    /// <p>The version of the custom model unit. Use to determine the billing rate for the custom model unit.</p>
    pub custom_model_units_version: ::std::option::Option<::std::string::String>,
}
impl CustomModelUnits {
    /// <p>The number of custom model units used to host a model copy.</p>
    pub fn custom_model_units_per_model_copy(&self) -> ::std::option::Option<i32> {
        self.custom_model_units_per_model_copy
    }
    /// <p>The version of the custom model unit. Use to determine the billing rate for the custom model unit.</p>
    pub fn custom_model_units_version(&self) -> ::std::option::Option<&str> {
        self.custom_model_units_version.as_deref()
    }
}
impl CustomModelUnits {
    /// Creates a new builder-style object to manufacture [`CustomModelUnits`](crate::types::CustomModelUnits).
    pub fn builder() -> crate::types::builders::CustomModelUnitsBuilder {
        crate::types::builders::CustomModelUnitsBuilder::default()
    }
}

/// A builder for [`CustomModelUnits`](crate::types::CustomModelUnits).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomModelUnitsBuilder {
    pub(crate) custom_model_units_per_model_copy: ::std::option::Option<i32>,
    pub(crate) custom_model_units_version: ::std::option::Option<::std::string::String>,
}
impl CustomModelUnitsBuilder {
    /// <p>The number of custom model units used to host a model copy.</p>
    pub fn custom_model_units_per_model_copy(mut self, input: i32) -> Self {
        self.custom_model_units_per_model_copy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of custom model units used to host a model copy.</p>
    pub fn set_custom_model_units_per_model_copy(mut self, input: ::std::option::Option<i32>) -> Self {
        self.custom_model_units_per_model_copy = input;
        self
    }
    /// <p>The number of custom model units used to host a model copy.</p>
    pub fn get_custom_model_units_per_model_copy(&self) -> &::std::option::Option<i32> {
        &self.custom_model_units_per_model_copy
    }
    /// <p>The version of the custom model unit. Use to determine the billing rate for the custom model unit.</p>
    pub fn custom_model_units_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_model_units_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the custom model unit. Use to determine the billing rate for the custom model unit.</p>
    pub fn set_custom_model_units_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_model_units_version = input;
        self
    }
    /// <p>The version of the custom model unit. Use to determine the billing rate for the custom model unit.</p>
    pub fn get_custom_model_units_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_model_units_version
    }
    /// Consumes the builder and constructs a [`CustomModelUnits`](crate::types::CustomModelUnits).
    pub fn build(self) -> crate::types::CustomModelUnits {
        crate::types::CustomModelUnits {
            custom_model_units_per_model_copy: self.custom_model_units_per_model_copy,
            custom_model_units_version: self.custom_model_units_version,
        }
    }
}
