// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies the models, Knowledge Bases, or other RAG sources evaluated in a model or Knowledge Base evaluation job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EvaluationInferenceConfigSummary {
    /// <p>A summary of the models used in an Amazon Bedrock model evaluation job. These resources can be models in Amazon Bedrock or models outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub model_config_summary: ::std::option::Option<crate::types::EvaluationModelConfigSummary>,
    /// <p>A summary of the RAG resources used in an Amazon Bedrock Knowledge Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock or RAG sources outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub rag_config_summary: ::std::option::Option<crate::types::EvaluationRagConfigSummary>,
}
impl EvaluationInferenceConfigSummary {
    /// <p>A summary of the models used in an Amazon Bedrock model evaluation job. These resources can be models in Amazon Bedrock or models outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn model_config_summary(&self) -> ::std::option::Option<&crate::types::EvaluationModelConfigSummary> {
        self.model_config_summary.as_ref()
    }
    /// <p>A summary of the RAG resources used in an Amazon Bedrock Knowledge Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock or RAG sources outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn rag_config_summary(&self) -> ::std::option::Option<&crate::types::EvaluationRagConfigSummary> {
        self.rag_config_summary.as_ref()
    }
}
impl EvaluationInferenceConfigSummary {
    /// Creates a new builder-style object to manufacture [`EvaluationInferenceConfigSummary`](crate::types::EvaluationInferenceConfigSummary).
    pub fn builder() -> crate::types::builders::EvaluationInferenceConfigSummaryBuilder {
        crate::types::builders::EvaluationInferenceConfigSummaryBuilder::default()
    }
}

/// A builder for [`EvaluationInferenceConfigSummary`](crate::types::EvaluationInferenceConfigSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EvaluationInferenceConfigSummaryBuilder {
    pub(crate) model_config_summary: ::std::option::Option<crate::types::EvaluationModelConfigSummary>,
    pub(crate) rag_config_summary: ::std::option::Option<crate::types::EvaluationRagConfigSummary>,
}
impl EvaluationInferenceConfigSummaryBuilder {
    /// <p>A summary of the models used in an Amazon Bedrock model evaluation job. These resources can be models in Amazon Bedrock or models outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn model_config_summary(mut self, input: crate::types::EvaluationModelConfigSummary) -> Self {
        self.model_config_summary = ::std::option::Option::Some(input);
        self
    }
    /// <p>A summary of the models used in an Amazon Bedrock model evaluation job. These resources can be models in Amazon Bedrock or models outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn set_model_config_summary(mut self, input: ::std::option::Option<crate::types::EvaluationModelConfigSummary>) -> Self {
        self.model_config_summary = input;
        self
    }
    /// <p>A summary of the models used in an Amazon Bedrock model evaluation job. These resources can be models in Amazon Bedrock or models outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn get_model_config_summary(&self) -> &::std::option::Option<crate::types::EvaluationModelConfigSummary> {
        &self.model_config_summary
    }
    /// <p>A summary of the RAG resources used in an Amazon Bedrock Knowledge Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock or RAG sources outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn rag_config_summary(mut self, input: crate::types::EvaluationRagConfigSummary) -> Self {
        self.rag_config_summary = ::std::option::Option::Some(input);
        self
    }
    /// <p>A summary of the RAG resources used in an Amazon Bedrock Knowledge Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock or RAG sources outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn set_rag_config_summary(mut self, input: ::std::option::Option<crate::types::EvaluationRagConfigSummary>) -> Self {
        self.rag_config_summary = input;
        self
    }
    /// <p>A summary of the RAG resources used in an Amazon Bedrock Knowledge Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock or RAG sources outside of Amazon Bedrock that you use to generate your own inference response data.</p>
    pub fn get_rag_config_summary(&self) -> &::std::option::Option<crate::types::EvaluationRagConfigSummary> {
        &self.rag_config_summary
    }
    /// Consumes the builder and constructs a [`EvaluationInferenceConfigSummary`](crate::types::EvaluationInferenceConfigSummary).
    pub fn build(self) -> crate::types::EvaluationInferenceConfigSummary {
        crate::types::EvaluationInferenceConfigSummary {
            model_config_summary: self.model_config_summary,
            rag_config_summary: self.rag_config_summary,
        }
    }
}
