// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the import job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModelImportJobSummary {
    /// <p>The Amazon Resource Name (ARN) of the import job.</p>
    pub job_arn: ::std::string::String,
    /// <p>The name of the import job.</p>
    pub job_name: ::std::string::String,
    /// <p>The status of the imported job.</p>
    pub status: crate::types::ModelImportJobStatus,
    /// <p>The time when the import job was last modified.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time import job was created.</p>
    pub creation_time: ::aws_smithy_types::DateTime,
    /// <p>The time when import job ended.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Amazon resource Name (ARN) of the imported model.</p>
    pub imported_model_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the imported model.</p>
    pub imported_model_name: ::std::option::Option<::std::string::String>,
}
impl ModelImportJobSummary {
    /// <p>The Amazon Resource Name (ARN) of the import job.</p>
    pub fn job_arn(&self) -> &str {
        use std::ops::Deref;
        self.job_arn.deref()
    }
    /// <p>The name of the import job.</p>
    pub fn job_name(&self) -> &str {
        use std::ops::Deref;
        self.job_name.deref()
    }
    /// <p>The status of the imported job.</p>
    pub fn status(&self) -> &crate::types::ModelImportJobStatus {
        &self.status
    }
    /// <p>The time when the import job was last modified.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The time import job was created.</p>
    pub fn creation_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_time
    }
    /// <p>The time when import job ended.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The Amazon resource Name (ARN) of the imported model.</p>
    pub fn imported_model_arn(&self) -> ::std::option::Option<&str> {
        self.imported_model_arn.as_deref()
    }
    /// <p>The name of the imported model.</p>
    pub fn imported_model_name(&self) -> ::std::option::Option<&str> {
        self.imported_model_name.as_deref()
    }
}
impl ModelImportJobSummary {
    /// Creates a new builder-style object to manufacture [`ModelImportJobSummary`](crate::types::ModelImportJobSummary).
    pub fn builder() -> crate::types::builders::ModelImportJobSummaryBuilder {
        crate::types::builders::ModelImportJobSummaryBuilder::default()
    }
}

/// A builder for [`ModelImportJobSummary`](crate::types::ModelImportJobSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ModelImportJobSummaryBuilder {
    pub(crate) job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) job_name: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ModelImportJobStatus>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) imported_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) imported_model_name: ::std::option::Option<::std::string::String>,
}
impl ModelImportJobSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the import job.</p>
    /// This field is required.
    pub fn job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the import job.</p>
    pub fn set_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the import job.</p>
    pub fn get_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_arn
    }
    /// <p>The name of the import job.</p>
    /// This field is required.
    pub fn job_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the import job.</p>
    pub fn set_job_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_name = input;
        self
    }
    /// <p>The name of the import job.</p>
    pub fn get_job_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_name
    }
    /// <p>The status of the imported job.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::ModelImportJobStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the imported job.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ModelImportJobStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the imported job.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ModelImportJobStatus> {
        &self.status
    }
    /// <p>The time when the import job was last modified.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the import job was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The time when the import job was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The time import job was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time import job was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time import job was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The time when import job ended.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when import job ended.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The time when import job ended.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The Amazon resource Name (ARN) of the imported model.</p>
    pub fn imported_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.imported_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon resource Name (ARN) of the imported model.</p>
    pub fn set_imported_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.imported_model_arn = input;
        self
    }
    /// <p>The Amazon resource Name (ARN) of the imported model.</p>
    pub fn get_imported_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.imported_model_arn
    }
    /// <p>The name of the imported model.</p>
    pub fn imported_model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.imported_model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the imported model.</p>
    pub fn set_imported_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.imported_model_name = input;
        self
    }
    /// <p>The name of the imported model.</p>
    pub fn get_imported_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.imported_model_name
    }
    /// Consumes the builder and constructs a [`ModelImportJobSummary`](crate::types::ModelImportJobSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`job_arn`](crate::types::builders::ModelImportJobSummaryBuilder::job_arn)
    /// - [`job_name`](crate::types::builders::ModelImportJobSummaryBuilder::job_name)
    /// - [`status`](crate::types::builders::ModelImportJobSummaryBuilder::status)
    /// - [`creation_time`](crate::types::builders::ModelImportJobSummaryBuilder::creation_time)
    pub fn build(self) -> ::std::result::Result<crate::types::ModelImportJobSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ModelImportJobSummary {
            job_arn: self.job_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "job_arn",
                    "job_arn was not specified but it is required when building ModelImportJobSummary",
                )
            })?,
            job_name: self.job_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "job_name",
                    "job_name was not specified but it is required when building ModelImportJobSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building ModelImportJobSummary",
                )
            })?,
            last_modified_time: self.last_modified_time,
            creation_time: self.creation_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_time",
                    "creation_time was not specified but it is required when building ModelImportJobSummary",
                )
            })?,
            end_time: self.end_time,
            imported_model_arn: self.imported_model_arn,
            imported_model_name: self.imported_model_name,
        })
    }
}
