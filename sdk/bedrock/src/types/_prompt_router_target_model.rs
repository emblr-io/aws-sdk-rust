// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The target model for a prompt router.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PromptRouterTargetModel {
    /// <p>The target model's ARN.</p>
    pub model_arn: ::std::option::Option<::std::string::String>,
}
impl PromptRouterTargetModel {
    /// <p>The target model's ARN.</p>
    pub fn model_arn(&self) -> ::std::option::Option<&str> {
        self.model_arn.as_deref()
    }
}
impl PromptRouterTargetModel {
    /// Creates a new builder-style object to manufacture [`PromptRouterTargetModel`](crate::types::PromptRouterTargetModel).
    pub fn builder() -> crate::types::builders::PromptRouterTargetModelBuilder {
        crate::types::builders::PromptRouterTargetModelBuilder::default()
    }
}

/// A builder for [`PromptRouterTargetModel`](crate::types::PromptRouterTargetModel).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PromptRouterTargetModelBuilder {
    pub(crate) model_arn: ::std::option::Option<::std::string::String>,
}
impl PromptRouterTargetModelBuilder {
    /// <p>The target model's ARN.</p>
    /// This field is required.
    pub fn model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The target model's ARN.</p>
    pub fn set_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_arn = input;
        self
    }
    /// <p>The target model's ARN.</p>
    pub fn get_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_arn
    }
    /// Consumes the builder and constructs a [`PromptRouterTargetModel`](crate::types::PromptRouterTargetModel).
    pub fn build(self) -> crate::types::PromptRouterTargetModel {
        crate::types::PromptRouterTargetModel { model_arn: self.model_arn }
    }
}
