// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the imported model.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImportedModelSummary {
    /// <p>The Amazon Resource Name (ARN) of the imported model.</p>
    pub model_arn: ::std::string::String,
    /// <p>Name of the imported model.</p>
    pub model_name: ::std::string::String,
    /// <p>Creation time of the imported model.</p>
    pub creation_time: ::aws_smithy_types::DateTime,
    /// <p>Specifies if the imported model supports converse.</p>
    pub instruct_supported: ::std::option::Option<bool>,
    /// <p>The architecture of the imported model.</p>
    pub model_architecture: ::std::option::Option<::std::string::String>,
}
impl ImportedModelSummary {
    /// <p>The Amazon Resource Name (ARN) of the imported model.</p>
    pub fn model_arn(&self) -> &str {
        use std::ops::Deref;
        self.model_arn.deref()
    }
    /// <p>Name of the imported model.</p>
    pub fn model_name(&self) -> &str {
        use std::ops::Deref;
        self.model_name.deref()
    }
    /// <p>Creation time of the imported model.</p>
    pub fn creation_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_time
    }
    /// <p>Specifies if the imported model supports converse.</p>
    pub fn instruct_supported(&self) -> ::std::option::Option<bool> {
        self.instruct_supported
    }
    /// <p>The architecture of the imported model.</p>
    pub fn model_architecture(&self) -> ::std::option::Option<&str> {
        self.model_architecture.as_deref()
    }
}
impl ImportedModelSummary {
    /// Creates a new builder-style object to manufacture [`ImportedModelSummary`](crate::types::ImportedModelSummary).
    pub fn builder() -> crate::types::builders::ImportedModelSummaryBuilder {
        crate::types::builders::ImportedModelSummaryBuilder::default()
    }
}

/// A builder for [`ImportedModelSummary`](crate::types::ImportedModelSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImportedModelSummaryBuilder {
    pub(crate) model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) model_name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) instruct_supported: ::std::option::Option<bool>,
    pub(crate) model_architecture: ::std::option::Option<::std::string::String>,
}
impl ImportedModelSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the imported model.</p>
    /// This field is required.
    pub fn model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the imported model.</p>
    pub fn set_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the imported model.</p>
    pub fn get_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_arn
    }
    /// <p>Name of the imported model.</p>
    /// This field is required.
    pub fn model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the imported model.</p>
    pub fn set_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_name = input;
        self
    }
    /// <p>Name of the imported model.</p>
    pub fn get_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_name
    }
    /// <p>Creation time of the imported model.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Creation time of the imported model.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Creation time of the imported model.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Specifies if the imported model supports converse.</p>
    pub fn instruct_supported(mut self, input: bool) -> Self {
        self.instruct_supported = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies if the imported model supports converse.</p>
    pub fn set_instruct_supported(mut self, input: ::std::option::Option<bool>) -> Self {
        self.instruct_supported = input;
        self
    }
    /// <p>Specifies if the imported model supports converse.</p>
    pub fn get_instruct_supported(&self) -> &::std::option::Option<bool> {
        &self.instruct_supported
    }
    /// <p>The architecture of the imported model.</p>
    pub fn model_architecture(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_architecture = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The architecture of the imported model.</p>
    pub fn set_model_architecture(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_architecture = input;
        self
    }
    /// <p>The architecture of the imported model.</p>
    pub fn get_model_architecture(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_architecture
    }
    /// Consumes the builder and constructs a [`ImportedModelSummary`](crate::types::ImportedModelSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`model_arn`](crate::types::builders::ImportedModelSummaryBuilder::model_arn)
    /// - [`model_name`](crate::types::builders::ImportedModelSummaryBuilder::model_name)
    /// - [`creation_time`](crate::types::builders::ImportedModelSummaryBuilder::creation_time)
    pub fn build(self) -> ::std::result::Result<crate::types::ImportedModelSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ImportedModelSummary {
            model_arn: self.model_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "model_arn",
                    "model_arn was not specified but it is required when building ImportedModelSummary",
                )
            })?,
            model_name: self.model_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "model_name",
                    "model_name was not specified but it is required when building ImportedModelSummary",
                )
            })?,
            creation_time: self.creation_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_time",
                    "creation_time was not specified but it is required when building ImportedModelSummary",
                )
            })?,
            instruct_supported: self.instruct_supported,
            model_architecture: self.model_architecture,
        })
    }
}
