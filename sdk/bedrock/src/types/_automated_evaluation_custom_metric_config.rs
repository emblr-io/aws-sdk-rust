// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the configuration of custom metrics to be used in an evaluation job. To learn more about using custom metrics in Amazon Bedrock evaluation jobs, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-custom-metrics-prompt-formats.html">Create a prompt for a custom metrics (LLM-as-a-judge model evaluations)</a> and <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/kb-evaluation-custom-metrics-prompt-formats.html">Create a prompt for a custom metrics (RAG evaluations)</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomatedEvaluationCustomMetricConfig {
    /// <p>Defines a list of custom metrics to be used in an Amazon Bedrock evaluation job.</p>
    pub custom_metrics: ::std::vec::Vec<crate::types::AutomatedEvaluationCustomMetricSource>,
    /// <p>Configuration of the evaluator model you want to use to evaluate custom metrics in an Amazon Bedrock evaluation job.</p>
    pub evaluator_model_config: ::std::option::Option<crate::types::CustomMetricEvaluatorModelConfig>,
}
impl AutomatedEvaluationCustomMetricConfig {
    /// <p>Defines a list of custom metrics to be used in an Amazon Bedrock evaluation job.</p>
    pub fn custom_metrics(&self) -> &[crate::types::AutomatedEvaluationCustomMetricSource] {
        use std::ops::Deref;
        self.custom_metrics.deref()
    }
    /// <p>Configuration of the evaluator model you want to use to evaluate custom metrics in an Amazon Bedrock evaluation job.</p>
    pub fn evaluator_model_config(&self) -> ::std::option::Option<&crate::types::CustomMetricEvaluatorModelConfig> {
        self.evaluator_model_config.as_ref()
    }
}
impl AutomatedEvaluationCustomMetricConfig {
    /// Creates a new builder-style object to manufacture [`AutomatedEvaluationCustomMetricConfig`](crate::types::AutomatedEvaluationCustomMetricConfig).
    pub fn builder() -> crate::types::builders::AutomatedEvaluationCustomMetricConfigBuilder {
        crate::types::builders::AutomatedEvaluationCustomMetricConfigBuilder::default()
    }
}

/// A builder for [`AutomatedEvaluationCustomMetricConfig`](crate::types::AutomatedEvaluationCustomMetricConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomatedEvaluationCustomMetricConfigBuilder {
    pub(crate) custom_metrics: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedEvaluationCustomMetricSource>>,
    pub(crate) evaluator_model_config: ::std::option::Option<crate::types::CustomMetricEvaluatorModelConfig>,
}
impl AutomatedEvaluationCustomMetricConfigBuilder {
    /// Appends an item to `custom_metrics`.
    ///
    /// To override the contents of this collection use [`set_custom_metrics`](Self::set_custom_metrics).
    ///
    /// <p>Defines a list of custom metrics to be used in an Amazon Bedrock evaluation job.</p>
    pub fn custom_metrics(mut self, input: crate::types::AutomatedEvaluationCustomMetricSource) -> Self {
        let mut v = self.custom_metrics.unwrap_or_default();
        v.push(input);
        self.custom_metrics = ::std::option::Option::Some(v);
        self
    }
    /// <p>Defines a list of custom metrics to be used in an Amazon Bedrock evaluation job.</p>
    pub fn set_custom_metrics(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedEvaluationCustomMetricSource>>) -> Self {
        self.custom_metrics = input;
        self
    }
    /// <p>Defines a list of custom metrics to be used in an Amazon Bedrock evaluation job.</p>
    pub fn get_custom_metrics(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutomatedEvaluationCustomMetricSource>> {
        &self.custom_metrics
    }
    /// <p>Configuration of the evaluator model you want to use to evaluate custom metrics in an Amazon Bedrock evaluation job.</p>
    /// This field is required.
    pub fn evaluator_model_config(mut self, input: crate::types::CustomMetricEvaluatorModelConfig) -> Self {
        self.evaluator_model_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration of the evaluator model you want to use to evaluate custom metrics in an Amazon Bedrock evaluation job.</p>
    pub fn set_evaluator_model_config(mut self, input: ::std::option::Option<crate::types::CustomMetricEvaluatorModelConfig>) -> Self {
        self.evaluator_model_config = input;
        self
    }
    /// <p>Configuration of the evaluator model you want to use to evaluate custom metrics in an Amazon Bedrock evaluation job.</p>
    pub fn get_evaluator_model_config(&self) -> &::std::option::Option<crate::types::CustomMetricEvaluatorModelConfig> {
        &self.evaluator_model_config
    }
    /// Consumes the builder and constructs a [`AutomatedEvaluationCustomMetricConfig`](crate::types::AutomatedEvaluationCustomMetricConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`custom_metrics`](crate::types::builders::AutomatedEvaluationCustomMetricConfigBuilder::custom_metrics)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AutomatedEvaluationCustomMetricConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutomatedEvaluationCustomMetricConfig {
            custom_metrics: self.custom_metrics.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "custom_metrics",
                    "custom_metrics was not specified but it is required when building AutomatedEvaluationCustomMetricConfig",
                )
            })?,
            evaluator_model_config: self.evaluator_model_config,
        })
    }
}
