// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides a summary of an endpoint for a model from Amazon Bedrock Marketplace.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MarketplaceModelEndpointSummary {
    /// <p>The Amazon Resource Name (ARN) of the endpoint.</p>
    pub endpoint_arn: ::std::string::String,
    /// <p>The ARN of the model from Amazon Bedrock Marketplace that is deployed on this endpoint.</p>
    pub model_source_identifier: ::std::string::String,
    /// <p>The overall status of the endpoint in Amazon Bedrock Marketplace.</p>
    pub status: ::std::option::Option<crate::types::Status>,
    /// <p>Additional information about the overall status, if available.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp when the endpoint was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp when the endpoint was last updated.</p>
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl MarketplaceModelEndpointSummary {
    /// <p>The Amazon Resource Name (ARN) of the endpoint.</p>
    pub fn endpoint_arn(&self) -> &str {
        use std::ops::Deref;
        self.endpoint_arn.deref()
    }
    /// <p>The ARN of the model from Amazon Bedrock Marketplace that is deployed on this endpoint.</p>
    pub fn model_source_identifier(&self) -> &str {
        use std::ops::Deref;
        self.model_source_identifier.deref()
    }
    /// <p>The overall status of the endpoint in Amazon Bedrock Marketplace.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::Status> {
        self.status.as_ref()
    }
    /// <p>Additional information about the overall status, if available.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The timestamp when the endpoint was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp when the endpoint was last updated.</p>
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl MarketplaceModelEndpointSummary {
    /// Creates a new builder-style object to manufacture [`MarketplaceModelEndpointSummary`](crate::types::MarketplaceModelEndpointSummary).
    pub fn builder() -> crate::types::builders::MarketplaceModelEndpointSummaryBuilder {
        crate::types::builders::MarketplaceModelEndpointSummaryBuilder::default()
    }
}

/// A builder for [`MarketplaceModelEndpointSummary`](crate::types::MarketplaceModelEndpointSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MarketplaceModelEndpointSummaryBuilder {
    pub(crate) endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) model_source_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::Status>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MarketplaceModelEndpointSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the endpoint.</p>
    /// This field is required.
    pub fn endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint.</p>
    pub fn set_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint.</p>
    pub fn get_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_arn
    }
    /// <p>The ARN of the model from Amazon Bedrock Marketplace that is deployed on this endpoint.</p>
    /// This field is required.
    pub fn model_source_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_source_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the model from Amazon Bedrock Marketplace that is deployed on this endpoint.</p>
    pub fn set_model_source_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_source_identifier = input;
        self
    }
    /// <p>The ARN of the model from Amazon Bedrock Marketplace that is deployed on this endpoint.</p>
    pub fn get_model_source_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_source_identifier
    }
    /// <p>The overall status of the endpoint in Amazon Bedrock Marketplace.</p>
    pub fn status(mut self, input: crate::types::Status) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The overall status of the endpoint in Amazon Bedrock Marketplace.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::Status>) -> Self {
        self.status = input;
        self
    }
    /// <p>The overall status of the endpoint in Amazon Bedrock Marketplace.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::Status> {
        &self.status
    }
    /// <p>Additional information about the overall status, if available.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Additional information about the overall status, if available.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>Additional information about the overall status, if available.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>The timestamp when the endpoint was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the endpoint was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the endpoint was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the endpoint was last updated.</p>
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the endpoint was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp when the endpoint was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`MarketplaceModelEndpointSummary`](crate::types::MarketplaceModelEndpointSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`endpoint_arn`](crate::types::builders::MarketplaceModelEndpointSummaryBuilder::endpoint_arn)
    /// - [`model_source_identifier`](crate::types::builders::MarketplaceModelEndpointSummaryBuilder::model_source_identifier)
    /// - [`created_at`](crate::types::builders::MarketplaceModelEndpointSummaryBuilder::created_at)
    /// - [`updated_at`](crate::types::builders::MarketplaceModelEndpointSummaryBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::MarketplaceModelEndpointSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MarketplaceModelEndpointSummary {
            endpoint_arn: self.endpoint_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "endpoint_arn",
                    "endpoint_arn was not specified but it is required when building MarketplaceModelEndpointSummary",
                )
            })?,
            model_source_identifier: self.model_source_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "model_source_identifier",
                    "model_source_identifier was not specified but it is required when building MarketplaceModelEndpointSummary",
                )
            })?,
            status: self.status,
            status_message: self.status_message,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building MarketplaceModelEndpointSummary",
                )
            })?,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building MarketplaceModelEndpointSummary",
                )
            })?,
        })
    }
}
