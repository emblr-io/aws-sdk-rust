// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The website links that display in the catalog page footer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ThemeFooterLink {
    /// <p>The name of the websites that display in the catalog page footer.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The URL of the websites that display in the catalog page footer.</p>
    pub footer_link_url: ::std::option::Option<::std::string::String>,
}
impl ThemeFooterLink {
    /// <p>The name of the websites that display in the catalog page footer.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The URL of the websites that display in the catalog page footer.</p>
    pub fn footer_link_url(&self) -> ::std::option::Option<&str> {
        self.footer_link_url.as_deref()
    }
}
impl ThemeFooterLink {
    /// Creates a new builder-style object to manufacture [`ThemeFooterLink`](crate::types::ThemeFooterLink).
    pub fn builder() -> crate::types::builders::ThemeFooterLinkBuilder {
        crate::types::builders::ThemeFooterLinkBuilder::default()
    }
}

/// A builder for [`ThemeFooterLink`](crate::types::ThemeFooterLink).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ThemeFooterLinkBuilder {
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) footer_link_url: ::std::option::Option<::std::string::String>,
}
impl ThemeFooterLinkBuilder {
    /// <p>The name of the websites that display in the catalog page footer.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the websites that display in the catalog page footer.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The name of the websites that display in the catalog page footer.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The URL of the websites that display in the catalog page footer.</p>
    pub fn footer_link_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.footer_link_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL of the websites that display in the catalog page footer.</p>
    pub fn set_footer_link_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.footer_link_url = input;
        self
    }
    /// <p>The URL of the websites that display in the catalog page footer.</p>
    pub fn get_footer_link_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.footer_link_url
    }
    /// Consumes the builder and constructs a [`ThemeFooterLink`](crate::types::ThemeFooterLink).
    pub fn build(self) -> crate::types::ThemeFooterLink {
        crate::types::ThemeFooterLink {
            display_name: self.display_name,
            footer_link_url: self.footer_link_url,
        }
    }
}
