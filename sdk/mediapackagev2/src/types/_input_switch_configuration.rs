// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for input switching based on the media quality confidence score (MQCS) as provided from AWS Elemental MediaLive.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputSwitchConfiguration {
    /// <p>When true, AWS Elemental MediaPackage performs input switching based on the MQCS. Default is true. This setting is valid only when <code>InputType</code> is <code>CMAF</code>.</p>
    pub mqcs_input_switching: ::std::option::Option<bool>,
}
impl InputSwitchConfiguration {
    /// <p>When true, AWS Elemental MediaPackage performs input switching based on the MQCS. Default is true. This setting is valid only when <code>InputType</code> is <code>CMAF</code>.</p>
    pub fn mqcs_input_switching(&self) -> ::std::option::Option<bool> {
        self.mqcs_input_switching
    }
}
impl InputSwitchConfiguration {
    /// Creates a new builder-style object to manufacture [`InputSwitchConfiguration`](crate::types::InputSwitchConfiguration).
    pub fn builder() -> crate::types::builders::InputSwitchConfigurationBuilder {
        crate::types::builders::InputSwitchConfigurationBuilder::default()
    }
}

/// A builder for [`InputSwitchConfiguration`](crate::types::InputSwitchConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InputSwitchConfigurationBuilder {
    pub(crate) mqcs_input_switching: ::std::option::Option<bool>,
}
impl InputSwitchConfigurationBuilder {
    /// <p>When true, AWS Elemental MediaPackage performs input switching based on the MQCS. Default is true. This setting is valid only when <code>InputType</code> is <code>CMAF</code>.</p>
    pub fn mqcs_input_switching(mut self, input: bool) -> Self {
        self.mqcs_input_switching = ::std::option::Option::Some(input);
        self
    }
    /// <p>When true, AWS Elemental MediaPackage performs input switching based on the MQCS. Default is true. This setting is valid only when <code>InputType</code> is <code>CMAF</code>.</p>
    pub fn set_mqcs_input_switching(mut self, input: ::std::option::Option<bool>) -> Self {
        self.mqcs_input_switching = input;
        self
    }
    /// <p>When true, AWS Elemental MediaPackage performs input switching based on the MQCS. Default is true. This setting is valid only when <code>InputType</code> is <code>CMAF</code>.</p>
    pub fn get_mqcs_input_switching(&self) -> &::std::option::Option<bool> {
        &self.mqcs_input_switching
    }
    /// Consumes the builder and constructs a [`InputSwitchConfiguration`](crate::types::InputSwitchConfiguration).
    pub fn build(self) -> crate::types::InputSwitchConfiguration {
        crate::types::InputSwitchConfiguration {
            mqcs_input_switching: self.mqcs_input_switching,
        }
    }
}
