// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResetChannelStateInput {
    /// <p>The name of the channel group that contains the channel that you are resetting.</p>
    pub channel_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the channel that you are resetting.</p>
    pub channel_name: ::std::option::Option<::std::string::String>,
}
impl ResetChannelStateInput {
    /// <p>The name of the channel group that contains the channel that you are resetting.</p>
    pub fn channel_group_name(&self) -> ::std::option::Option<&str> {
        self.channel_group_name.as_deref()
    }
    /// <p>The name of the channel that you are resetting.</p>
    pub fn channel_name(&self) -> ::std::option::Option<&str> {
        self.channel_name.as_deref()
    }
}
impl ResetChannelStateInput {
    /// Creates a new builder-style object to manufacture [`ResetChannelStateInput`](crate::operation::reset_channel_state::ResetChannelStateInput).
    pub fn builder() -> crate::operation::reset_channel_state::builders::ResetChannelStateInputBuilder {
        crate::operation::reset_channel_state::builders::ResetChannelStateInputBuilder::default()
    }
}

/// A builder for [`ResetChannelStateInput`](crate::operation::reset_channel_state::ResetChannelStateInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResetChannelStateInputBuilder {
    pub(crate) channel_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) channel_name: ::std::option::Option<::std::string::String>,
}
impl ResetChannelStateInputBuilder {
    /// <p>The name of the channel group that contains the channel that you are resetting.</p>
    /// This field is required.
    pub fn channel_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the channel group that contains the channel that you are resetting.</p>
    pub fn set_channel_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_group_name = input;
        self
    }
    /// <p>The name of the channel group that contains the channel that you are resetting.</p>
    pub fn get_channel_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_group_name
    }
    /// <p>The name of the channel that you are resetting.</p>
    /// This field is required.
    pub fn channel_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the channel that you are resetting.</p>
    pub fn set_channel_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_name = input;
        self
    }
    /// <p>The name of the channel that you are resetting.</p>
    pub fn get_channel_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_name
    }
    /// Consumes the builder and constructs a [`ResetChannelStateInput`](crate::operation::reset_channel_state::ResetChannelStateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::reset_channel_state::ResetChannelStateInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::reset_channel_state::ResetChannelStateInput {
            channel_group_name: self.channel_group_name,
            channel_name: self.channel_name,
        })
    }
}
