// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImpactedAwsRegion {
    /// <p></p>
    pub region: crate::types::AwsRegion,
}
impl ImpactedAwsRegion {
    /// <p></p>
    pub fn region(&self) -> &crate::types::AwsRegion {
        &self.region
    }
}
impl ImpactedAwsRegion {
    /// Creates a new builder-style object to manufacture [`ImpactedAwsRegion`](crate::types::ImpactedAwsRegion).
    pub fn builder() -> crate::types::builders::ImpactedAwsRegionBuilder {
        crate::types::builders::ImpactedAwsRegionBuilder::default()
    }
}

/// A builder for [`ImpactedAwsRegion`](crate::types::ImpactedAwsRegion).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImpactedAwsRegionBuilder {
    pub(crate) region: ::std::option::Option<crate::types::AwsRegion>,
}
impl ImpactedAwsRegionBuilder {
    /// <p></p>
    /// This field is required.
    pub fn region(mut self, input: crate::types::AwsRegion) -> Self {
        self.region = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_region(mut self, input: ::std::option::Option<crate::types::AwsRegion>) -> Self {
        self.region = input;
        self
    }
    /// <p></p>
    pub fn get_region(&self) -> &::std::option::Option<crate::types::AwsRegion> {
        &self.region
    }
    /// Consumes the builder and constructs a [`ImpactedAwsRegion`](crate::types::ImpactedAwsRegion).
    /// This method will fail if any of the following fields are not set:
    /// - [`region`](crate::types::builders::ImpactedAwsRegionBuilder::region)
    pub fn build(self) -> ::std::result::Result<crate::types::ImpactedAwsRegion, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ImpactedAwsRegion {
            region: self.region.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "region",
                    "region was not specified but it is required when building ImpactedAwsRegion",
                )
            })?,
        })
    }
}
