// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GetCaseAttachmentUploadUrlOutput {
    /// <p>Response element providing the Amazon S3 presigned UTL to upload the attachment.</p>
    pub attachment_presigned_url: ::std::string::String,
    _request_id: Option<String>,
}
impl GetCaseAttachmentUploadUrlOutput {
    /// <p>Response element providing the Amazon S3 presigned UTL to upload the attachment.</p>
    pub fn attachment_presigned_url(&self) -> &str {
        use std::ops::Deref;
        self.attachment_presigned_url.deref()
    }
}
impl ::std::fmt::Debug for GetCaseAttachmentUploadUrlOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetCaseAttachmentUploadUrlOutput");
        formatter.field("attachment_presigned_url", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_types::request_id::RequestId for GetCaseAttachmentUploadUrlOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetCaseAttachmentUploadUrlOutput {
    /// Creates a new builder-style object to manufacture [`GetCaseAttachmentUploadUrlOutput`](crate::operation::get_case_attachment_upload_url::GetCaseAttachmentUploadUrlOutput).
    pub fn builder() -> crate::operation::get_case_attachment_upload_url::builders::GetCaseAttachmentUploadUrlOutputBuilder {
        crate::operation::get_case_attachment_upload_url::builders::GetCaseAttachmentUploadUrlOutputBuilder::default()
    }
}

/// A builder for [`GetCaseAttachmentUploadUrlOutput`](crate::operation::get_case_attachment_upload_url::GetCaseAttachmentUploadUrlOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GetCaseAttachmentUploadUrlOutputBuilder {
    pub(crate) attachment_presigned_url: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetCaseAttachmentUploadUrlOutputBuilder {
    /// <p>Response element providing the Amazon S3 presigned UTL to upload the attachment.</p>
    /// This field is required.
    pub fn attachment_presigned_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attachment_presigned_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Response element providing the Amazon S3 presigned UTL to upload the attachment.</p>
    pub fn set_attachment_presigned_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attachment_presigned_url = input;
        self
    }
    /// <p>Response element providing the Amazon S3 presigned UTL to upload the attachment.</p>
    pub fn get_attachment_presigned_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.attachment_presigned_url
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetCaseAttachmentUploadUrlOutput`](crate::operation::get_case_attachment_upload_url::GetCaseAttachmentUploadUrlOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`attachment_presigned_url`](crate::operation::get_case_attachment_upload_url::builders::GetCaseAttachmentUploadUrlOutputBuilder::attachment_presigned_url)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_case_attachment_upload_url::GetCaseAttachmentUploadUrlOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_case_attachment_upload_url::GetCaseAttachmentUploadUrlOutput {
            attachment_presigned_url: self.attachment_presigned_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attachment_presigned_url",
                    "attachment_presigned_url was not specified but it is required when building GetCaseAttachmentUploadUrlOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
impl ::std::fmt::Debug for GetCaseAttachmentUploadUrlOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetCaseAttachmentUploadUrlOutputBuilder");
        formatter.field("attachment_presigned_url", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
