// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSearchResultExportJobOutput {
    /// <p>This is the unique string that identifies the specified export job.</p>
    pub export_job_identifier: ::std::string::String,
    /// <p>The unique Amazon Resource Name (ARN) that uniquely identifies the export job.</p>
    pub export_job_arn: ::std::option::Option<::std::string::String>,
    /// <p>This is the current status of the export job.</p>
    pub status: ::std::option::Option<crate::types::ExportJobStatus>,
    /// <p>The date and time that an export job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that an export job completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A status message is a string that is returned for search job with a status of <code>FAILED</code>, along with steps to remedy and retry the operation.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>The export specification consists of the destination S3 bucket to which the search results were exported, along with the destination prefix.</p>
    pub export_specification: ::std::option::Option<crate::types::ExportSpecification>,
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub search_job_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetSearchResultExportJobOutput {
    /// <p>This is the unique string that identifies the specified export job.</p>
    pub fn export_job_identifier(&self) -> &str {
        use std::ops::Deref;
        self.export_job_identifier.deref()
    }
    /// <p>The unique Amazon Resource Name (ARN) that uniquely identifies the export job.</p>
    pub fn export_job_arn(&self) -> ::std::option::Option<&str> {
        self.export_job_arn.as_deref()
    }
    /// <p>This is the current status of the export job.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ExportJobStatus> {
        self.status.as_ref()
    }
    /// <p>The date and time that an export job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The date and time that an export job completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn completion_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.completion_time.as_ref()
    }
    /// <p>A status message is a string that is returned for search job with a status of <code>FAILED</code>, along with steps to remedy and retry the operation.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The export specification consists of the destination S3 bucket to which the search results were exported, along with the destination prefix.</p>
    pub fn export_specification(&self) -> ::std::option::Option<&crate::types::ExportSpecification> {
        self.export_specification.as_ref()
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(&self) -> ::std::option::Option<&str> {
        self.search_job_arn.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetSearchResultExportJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetSearchResultExportJobOutput {
    /// Creates a new builder-style object to manufacture [`GetSearchResultExportJobOutput`](crate::operation::get_search_result_export_job::GetSearchResultExportJobOutput).
    pub fn builder() -> crate::operation::get_search_result_export_job::builders::GetSearchResultExportJobOutputBuilder {
        crate::operation::get_search_result_export_job::builders::GetSearchResultExportJobOutputBuilder::default()
    }
}

/// A builder for [`GetSearchResultExportJobOutput`](crate::operation::get_search_result_export_job::GetSearchResultExportJobOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetSearchResultExportJobOutputBuilder {
    pub(crate) export_job_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) export_job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ExportJobStatus>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) export_specification: ::std::option::Option<crate::types::ExportSpecification>,
    pub(crate) search_job_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetSearchResultExportJobOutputBuilder {
    /// <p>This is the unique string that identifies the specified export job.</p>
    /// This field is required.
    pub fn export_job_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.export_job_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This is the unique string that identifies the specified export job.</p>
    pub fn set_export_job_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.export_job_identifier = input;
        self
    }
    /// <p>This is the unique string that identifies the specified export job.</p>
    pub fn get_export_job_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.export_job_identifier
    }
    /// <p>The unique Amazon Resource Name (ARN) that uniquely identifies the export job.</p>
    pub fn export_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.export_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique Amazon Resource Name (ARN) that uniquely identifies the export job.</p>
    pub fn set_export_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.export_job_arn = input;
        self
    }
    /// <p>The unique Amazon Resource Name (ARN) that uniquely identifies the export job.</p>
    pub fn get_export_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.export_job_arn
    }
    /// <p>This is the current status of the export job.</p>
    pub fn status(mut self, input: crate::types::ExportJobStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is the current status of the export job.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ExportJobStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>This is the current status of the export job.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ExportJobStatus> {
        &self.status
    }
    /// <p>The date and time that an export job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that an export job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The date and time that an export job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The date and time that an export job completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn completion_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completion_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that an export job completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_completion_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completion_time = input;
        self
    }
    /// <p>The date and time that an export job completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_completion_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completion_time
    }
    /// <p>A status message is a string that is returned for search job with a status of <code>FAILED</code>, along with steps to remedy and retry the operation.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A status message is a string that is returned for search job with a status of <code>FAILED</code>, along with steps to remedy and retry the operation.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>A status message is a string that is returned for search job with a status of <code>FAILED</code>, along with steps to remedy and retry the operation.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>The export specification consists of the destination S3 bucket to which the search results were exported, along with the destination prefix.</p>
    pub fn export_specification(mut self, input: crate::types::ExportSpecification) -> Self {
        self.export_specification = ::std::option::Option::Some(input);
        self
    }
    /// <p>The export specification consists of the destination S3 bucket to which the search results were exported, along with the destination prefix.</p>
    pub fn set_export_specification(mut self, input: ::std::option::Option<crate::types::ExportSpecification>) -> Self {
        self.export_specification = input;
        self
    }
    /// <p>The export specification consists of the destination S3 bucket to which the search results were exported, along with the destination prefix.</p>
    pub fn get_export_specification(&self) -> &::std::option::Option<crate::types::ExportSpecification> {
        &self.export_specification
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.search_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn set_search_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.search_job_arn = input;
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn get_search_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.search_job_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetSearchResultExportJobOutput`](crate::operation::get_search_result_export_job::GetSearchResultExportJobOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`export_job_identifier`](crate::operation::get_search_result_export_job::builders::GetSearchResultExportJobOutputBuilder::export_job_identifier)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_search_result_export_job::GetSearchResultExportJobOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_search_result_export_job::GetSearchResultExportJobOutput {
            export_job_identifier: self.export_job_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "export_job_identifier",
                    "export_job_identifier was not specified but it is required when building GetSearchResultExportJobOutput",
                )
            })?,
            export_job_arn: self.export_job_arn,
            status: self.status,
            creation_time: self.creation_time,
            completion_time: self.completion_time,
            status_message: self.status_message,
            export_specification: self.export_specification,
            search_job_arn: self.search_job_arn,
            _request_id: self._request_id,
        })
    }
}
