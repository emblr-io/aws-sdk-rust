// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartSearchJobOutput {
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub search_job_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that a job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The unique string that specifies the search job.</p>
    pub search_job_identifier: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl StartSearchJobOutput {
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(&self) -> ::std::option::Option<&str> {
        self.search_job_arn.as_deref()
    }
    /// <p>The date and time that a job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The unique string that specifies the search job.</p>
    pub fn search_job_identifier(&self) -> ::std::option::Option<&str> {
        self.search_job_identifier.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for StartSearchJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartSearchJobOutput {
    /// Creates a new builder-style object to manufacture [`StartSearchJobOutput`](crate::operation::start_search_job::StartSearchJobOutput).
    pub fn builder() -> crate::operation::start_search_job::builders::StartSearchJobOutputBuilder {
        crate::operation::start_search_job::builders::StartSearchJobOutputBuilder::default()
    }
}

/// A builder for [`StartSearchJobOutput`](crate::operation::start_search_job::StartSearchJobOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartSearchJobOutputBuilder {
    pub(crate) search_job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) search_job_identifier: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl StartSearchJobOutputBuilder {
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.search_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn set_search_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.search_job_arn = input;
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn get_search_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.search_job_arn
    }
    /// <p>The date and time that a job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The date and time that a job was created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The unique string that specifies the search job.</p>
    pub fn search_job_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.search_job_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique string that specifies the search job.</p>
    pub fn set_search_job_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.search_job_identifier = input;
        self
    }
    /// <p>The unique string that specifies the search job.</p>
    pub fn get_search_job_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.search_job_identifier
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartSearchJobOutput`](crate::operation::start_search_job::StartSearchJobOutput).
    pub fn build(self) -> crate::operation::start_search_job::StartSearchJobOutput {
        crate::operation::start_search_job::StartSearchJobOutput {
            search_job_arn: self.search_job_arn,
            creation_time: self.creation_time,
            search_job_identifier: self.search_job_identifier,
            _request_id: self._request_id,
        }
    }
}
