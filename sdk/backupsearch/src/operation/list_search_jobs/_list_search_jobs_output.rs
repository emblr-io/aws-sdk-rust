// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListSearchJobsOutput {
    /// <p>The search jobs among the list, with details of the returned search jobs.</p>
    pub search_jobs: ::std::vec::Vec<crate::types::SearchJobSummary>,
    /// <p>The next item following a partial list of returned backups included in a search job.</p>
    /// <p>For example, if a request is made to return <code>MaxResults</code> number of backups, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListSearchJobsOutput {
    /// <p>The search jobs among the list, with details of the returned search jobs.</p>
    pub fn search_jobs(&self) -> &[crate::types::SearchJobSummary] {
        use std::ops::Deref;
        self.search_jobs.deref()
    }
    /// <p>The next item following a partial list of returned backups included in a search job.</p>
    /// <p>For example, if a request is made to return <code>MaxResults</code> number of backups, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListSearchJobsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListSearchJobsOutput {
    /// Creates a new builder-style object to manufacture [`ListSearchJobsOutput`](crate::operation::list_search_jobs::ListSearchJobsOutput).
    pub fn builder() -> crate::operation::list_search_jobs::builders::ListSearchJobsOutputBuilder {
        crate::operation::list_search_jobs::builders::ListSearchJobsOutputBuilder::default()
    }
}

/// A builder for [`ListSearchJobsOutput`](crate::operation::list_search_jobs::ListSearchJobsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListSearchJobsOutputBuilder {
    pub(crate) search_jobs: ::std::option::Option<::std::vec::Vec<crate::types::SearchJobSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListSearchJobsOutputBuilder {
    /// Appends an item to `search_jobs`.
    ///
    /// To override the contents of this collection use [`set_search_jobs`](Self::set_search_jobs).
    ///
    /// <p>The search jobs among the list, with details of the returned search jobs.</p>
    pub fn search_jobs(mut self, input: crate::types::SearchJobSummary) -> Self {
        let mut v = self.search_jobs.unwrap_or_default();
        v.push(input);
        self.search_jobs = ::std::option::Option::Some(v);
        self
    }
    /// <p>The search jobs among the list, with details of the returned search jobs.</p>
    pub fn set_search_jobs(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SearchJobSummary>>) -> Self {
        self.search_jobs = input;
        self
    }
    /// <p>The search jobs among the list, with details of the returned search jobs.</p>
    pub fn get_search_jobs(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SearchJobSummary>> {
        &self.search_jobs
    }
    /// <p>The next item following a partial list of returned backups included in a search job.</p>
    /// <p>For example, if a request is made to return <code>MaxResults</code> number of backups, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next item following a partial list of returned backups included in a search job.</p>
    /// <p>For example, if a request is made to return <code>MaxResults</code> number of backups, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next item following a partial list of returned backups included in a search job.</p>
    /// <p>For example, if a request is made to return <code>MaxResults</code> number of backups, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListSearchJobsOutput`](crate::operation::list_search_jobs::ListSearchJobsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`search_jobs`](crate::operation::list_search_jobs::builders::ListSearchJobsOutputBuilder::search_jobs)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_search_jobs::ListSearchJobsOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::list_search_jobs::ListSearchJobsOutput {
            search_jobs: self.search_jobs.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "search_jobs",
                    "search_jobs was not specified but it is required when building ListSearchJobsOutput",
                )
            })?,
            next_token: self.next_token,
            _request_id: self._request_id,
        })
    }
}
