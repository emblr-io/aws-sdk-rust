// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This is the summary of an export job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportJobSummary {
    /// <p>This is the unique string that identifies a specific export job.</p>
    pub export_job_identifier: ::std::string::String,
    /// <p>This is the unique ARN (Amazon Resource Name) that belongs to the new export job.</p>
    pub export_job_arn: ::std::option::Option<::std::string::String>,
    /// <p>The status of the export job is one of the following:</p>
    /// <p><code>CREATED</code>; <code>RUNNING</code>; <code>FAILED</code>; or <code>COMPLETED</code>.</p>
    pub status: ::std::option::Option<crate::types::ExportJobStatus>,
    /// <p>This is a timestamp of the time the export job was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>This is a timestamp of the time the export job compeleted.</p>
    pub completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A status message is a string that is returned for an export job.</p>
    /// <p>A status message is included for any status other than <code>COMPLETED</code> without issues.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub search_job_arn: ::std::option::Option<::std::string::String>,
}
impl ExportJobSummary {
    /// <p>This is the unique string that identifies a specific export job.</p>
    pub fn export_job_identifier(&self) -> &str {
        use std::ops::Deref;
        self.export_job_identifier.deref()
    }
    /// <p>This is the unique ARN (Amazon Resource Name) that belongs to the new export job.</p>
    pub fn export_job_arn(&self) -> ::std::option::Option<&str> {
        self.export_job_arn.as_deref()
    }
    /// <p>The status of the export job is one of the following:</p>
    /// <p><code>CREATED</code>; <code>RUNNING</code>; <code>FAILED</code>; or <code>COMPLETED</code>.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ExportJobStatus> {
        self.status.as_ref()
    }
    /// <p>This is a timestamp of the time the export job was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>This is a timestamp of the time the export job compeleted.</p>
    pub fn completion_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.completion_time.as_ref()
    }
    /// <p>A status message is a string that is returned for an export job.</p>
    /// <p>A status message is included for any status other than <code>COMPLETED</code> without issues.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(&self) -> ::std::option::Option<&str> {
        self.search_job_arn.as_deref()
    }
}
impl ExportJobSummary {
    /// Creates a new builder-style object to manufacture [`ExportJobSummary`](crate::types::ExportJobSummary).
    pub fn builder() -> crate::types::builders::ExportJobSummaryBuilder {
        crate::types::builders::ExportJobSummaryBuilder::default()
    }
}

/// A builder for [`ExportJobSummary`](crate::types::ExportJobSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExportJobSummaryBuilder {
    pub(crate) export_job_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) export_job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ExportJobStatus>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completion_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) search_job_arn: ::std::option::Option<::std::string::String>,
}
impl ExportJobSummaryBuilder {
    /// <p>This is the unique string that identifies a specific export job.</p>
    /// This field is required.
    pub fn export_job_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.export_job_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This is the unique string that identifies a specific export job.</p>
    pub fn set_export_job_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.export_job_identifier = input;
        self
    }
    /// <p>This is the unique string that identifies a specific export job.</p>
    pub fn get_export_job_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.export_job_identifier
    }
    /// <p>This is the unique ARN (Amazon Resource Name) that belongs to the new export job.</p>
    pub fn export_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.export_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This is the unique ARN (Amazon Resource Name) that belongs to the new export job.</p>
    pub fn set_export_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.export_job_arn = input;
        self
    }
    /// <p>This is the unique ARN (Amazon Resource Name) that belongs to the new export job.</p>
    pub fn get_export_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.export_job_arn
    }
    /// <p>The status of the export job is one of the following:</p>
    /// <p><code>CREATED</code>; <code>RUNNING</code>; <code>FAILED</code>; or <code>COMPLETED</code>.</p>
    pub fn status(mut self, input: crate::types::ExportJobStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the export job is one of the following:</p>
    /// <p><code>CREATED</code>; <code>RUNNING</code>; <code>FAILED</code>; or <code>COMPLETED</code>.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ExportJobStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the export job is one of the following:</p>
    /// <p><code>CREATED</code>; <code>RUNNING</code>; <code>FAILED</code>; or <code>COMPLETED</code>.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ExportJobStatus> {
        &self.status
    }
    /// <p>This is a timestamp of the time the export job was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is a timestamp of the time the export job was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>This is a timestamp of the time the export job was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>This is a timestamp of the time the export job compeleted.</p>
    pub fn completion_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completion_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>This is a timestamp of the time the export job compeleted.</p>
    pub fn set_completion_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completion_time = input;
        self
    }
    /// <p>This is a timestamp of the time the export job compeleted.</p>
    pub fn get_completion_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completion_time
    }
    /// <p>A status message is a string that is returned for an export job.</p>
    /// <p>A status message is included for any status other than <code>COMPLETED</code> without issues.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A status message is a string that is returned for an export job.</p>
    /// <p>A status message is included for any status other than <code>COMPLETED</code> without issues.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>A status message is a string that is returned for an export job.</p>
    /// <p>A status message is included for any status other than <code>COMPLETED</code> without issues.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn search_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.search_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn set_search_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.search_job_arn = input;
        self
    }
    /// <p>The unique string that identifies the Amazon Resource Name (ARN) of the specified search job.</p>
    pub fn get_search_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.search_job_arn
    }
    /// Consumes the builder and constructs a [`ExportJobSummary`](crate::types::ExportJobSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`export_job_identifier`](crate::types::builders::ExportJobSummaryBuilder::export_job_identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::ExportJobSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ExportJobSummary {
            export_job_identifier: self.export_job_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "export_job_identifier",
                    "export_job_identifier was not specified but it is required when building ExportJobSummary",
                )
            })?,
            export_job_arn: self.export_job_arn,
            status: self.status,
            creation_time: self.creation_time,
            completion_time: self.completion_time,
            status_message: self.status_message,
            search_job_arn: self.search_job_arn,
        })
    }
}
