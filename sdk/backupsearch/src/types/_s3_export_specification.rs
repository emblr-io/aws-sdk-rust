// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This specification contains a required string of the destination bucket; optionally, you can include the destination prefix.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3ExportSpecification {
    /// <p>This specifies the destination Amazon S3 bucket for the export job.</p>
    pub destination_bucket: ::std::string::String,
    /// <p>This specifies the prefix for the destination Amazon S3 bucket for the export job.</p>
    pub destination_prefix: ::std::option::Option<::std::string::String>,
}
impl S3ExportSpecification {
    /// <p>This specifies the destination Amazon S3 bucket for the export job.</p>
    pub fn destination_bucket(&self) -> &str {
        use std::ops::Deref;
        self.destination_bucket.deref()
    }
    /// <p>This specifies the prefix for the destination Amazon S3 bucket for the export job.</p>
    pub fn destination_prefix(&self) -> ::std::option::Option<&str> {
        self.destination_prefix.as_deref()
    }
}
impl S3ExportSpecification {
    /// Creates a new builder-style object to manufacture [`S3ExportSpecification`](crate::types::S3ExportSpecification).
    pub fn builder() -> crate::types::builders::S3ExportSpecificationBuilder {
        crate::types::builders::S3ExportSpecificationBuilder::default()
    }
}

/// A builder for [`S3ExportSpecification`](crate::types::S3ExportSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct S3ExportSpecificationBuilder {
    pub(crate) destination_bucket: ::std::option::Option<::std::string::String>,
    pub(crate) destination_prefix: ::std::option::Option<::std::string::String>,
}
impl S3ExportSpecificationBuilder {
    /// <p>This specifies the destination Amazon S3 bucket for the export job.</p>
    /// This field is required.
    pub fn destination_bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_bucket = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This specifies the destination Amazon S3 bucket for the export job.</p>
    pub fn set_destination_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_bucket = input;
        self
    }
    /// <p>This specifies the destination Amazon S3 bucket for the export job.</p>
    pub fn get_destination_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_bucket
    }
    /// <p>This specifies the prefix for the destination Amazon S3 bucket for the export job.</p>
    pub fn destination_prefix(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_prefix = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This specifies the prefix for the destination Amazon S3 bucket for the export job.</p>
    pub fn set_destination_prefix(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_prefix = input;
        self
    }
    /// <p>This specifies the prefix for the destination Amazon S3 bucket for the export job.</p>
    pub fn get_destination_prefix(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_prefix
    }
    /// Consumes the builder and constructs a [`S3ExportSpecification`](crate::types::S3ExportSpecification).
    /// This method will fail if any of the following fields are not set:
    /// - [`destination_bucket`](crate::types::builders::S3ExportSpecificationBuilder::destination_bucket)
    pub fn build(self) -> ::std::result::Result<crate::types::S3ExportSpecification, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::S3ExportSpecification {
            destination_bucket: self.destination_bucket.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "destination_bucket",
                    "destination_bucket was not specified but it is required when building S3ExportSpecification",
                )
            })?,
            destination_prefix: self.destination_prefix,
        })
    }
}
