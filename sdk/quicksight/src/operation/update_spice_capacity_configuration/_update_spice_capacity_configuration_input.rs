// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateSpiceCapacityConfigurationInput {
    /// <p>The ID of the Amazon Web Services account that contains the SPICE configuration that you want to update.</p>
    pub aws_account_id: ::std::option::Option<::std::string::String>,
    /// <p>Determines how SPICE capacity can be purchased. The following options are available.</p>
    /// <ul>
    /// <li>
    /// <p><code>MANUAL</code>: SPICE capacity can only be purchased manually.</p></li>
    /// <li>
    /// <p><code>AUTO_PURCHASE</code>: Extra SPICE capacity is automatically purchased on your behalf as needed. SPICE capacity can also be purchased manually with this option.</p></li>
    /// </ul>
    pub purchase_mode: ::std::option::Option<crate::types::PurchaseMode>,
}
impl UpdateSpiceCapacityConfigurationInput {
    /// <p>The ID of the Amazon Web Services account that contains the SPICE configuration that you want to update.</p>
    pub fn aws_account_id(&self) -> ::std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>Determines how SPICE capacity can be purchased. The following options are available.</p>
    /// <ul>
    /// <li>
    /// <p><code>MANUAL</code>: SPICE capacity can only be purchased manually.</p></li>
    /// <li>
    /// <p><code>AUTO_PURCHASE</code>: Extra SPICE capacity is automatically purchased on your behalf as needed. SPICE capacity can also be purchased manually with this option.</p></li>
    /// </ul>
    pub fn purchase_mode(&self) -> ::std::option::Option<&crate::types::PurchaseMode> {
        self.purchase_mode.as_ref()
    }
}
impl UpdateSpiceCapacityConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateSpiceCapacityConfigurationInput`](crate::operation::update_spice_capacity_configuration::UpdateSpiceCapacityConfigurationInput).
    pub fn builder() -> crate::operation::update_spice_capacity_configuration::builders::UpdateSpiceCapacityConfigurationInputBuilder {
        crate::operation::update_spice_capacity_configuration::builders::UpdateSpiceCapacityConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateSpiceCapacityConfigurationInput`](crate::operation::update_spice_capacity_configuration::UpdateSpiceCapacityConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateSpiceCapacityConfigurationInputBuilder {
    pub(crate) aws_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) purchase_mode: ::std::option::Option<crate::types::PurchaseMode>,
}
impl UpdateSpiceCapacityConfigurationInputBuilder {
    /// <p>The ID of the Amazon Web Services account that contains the SPICE configuration that you want to update.</p>
    /// This field is required.
    pub fn aws_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the SPICE configuration that you want to update.</p>
    pub fn set_aws_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the SPICE configuration that you want to update.</p>
    pub fn get_aws_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_account_id
    }
    /// <p>Determines how SPICE capacity can be purchased. The following options are available.</p>
    /// <ul>
    /// <li>
    /// <p><code>MANUAL</code>: SPICE capacity can only be purchased manually.</p></li>
    /// <li>
    /// <p><code>AUTO_PURCHASE</code>: Extra SPICE capacity is automatically purchased on your behalf as needed. SPICE capacity can also be purchased manually with this option.</p></li>
    /// </ul>
    /// This field is required.
    pub fn purchase_mode(mut self, input: crate::types::PurchaseMode) -> Self {
        self.purchase_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Determines how SPICE capacity can be purchased. The following options are available.</p>
    /// <ul>
    /// <li>
    /// <p><code>MANUAL</code>: SPICE capacity can only be purchased manually.</p></li>
    /// <li>
    /// <p><code>AUTO_PURCHASE</code>: Extra SPICE capacity is automatically purchased on your behalf as needed. SPICE capacity can also be purchased manually with this option.</p></li>
    /// </ul>
    pub fn set_purchase_mode(mut self, input: ::std::option::Option<crate::types::PurchaseMode>) -> Self {
        self.purchase_mode = input;
        self
    }
    /// <p>Determines how SPICE capacity can be purchased. The following options are available.</p>
    /// <ul>
    /// <li>
    /// <p><code>MANUAL</code>: SPICE capacity can only be purchased manually.</p></li>
    /// <li>
    /// <p><code>AUTO_PURCHASE</code>: Extra SPICE capacity is automatically purchased on your behalf as needed. SPICE capacity can also be purchased manually with this option.</p></li>
    /// </ul>
    pub fn get_purchase_mode(&self) -> &::std::option::Option<crate::types::PurchaseMode> {
        &self.purchase_mode
    }
    /// Consumes the builder and constructs a [`UpdateSpiceCapacityConfigurationInput`](crate::operation::update_spice_capacity_configuration::UpdateSpiceCapacityConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_spice_capacity_configuration::UpdateSpiceCapacityConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_spice_capacity_configuration::UpdateSpiceCapacityConfigurationInput {
                aws_account_id: self.aws_account_id,
                purchase_mode: self.purchase_mode,
            },
        )
    }
}
