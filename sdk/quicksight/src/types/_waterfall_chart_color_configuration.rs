// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The color configuration of a waterfall visual.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WaterfallChartColorConfiguration {
    /// <p>The color configuration for individual groups within a waterfall visual.</p>
    pub group_color_configuration: ::std::option::Option<crate::types::WaterfallChartGroupColorConfiguration>,
}
impl WaterfallChartColorConfiguration {
    /// <p>The color configuration for individual groups within a waterfall visual.</p>
    pub fn group_color_configuration(&self) -> ::std::option::Option<&crate::types::WaterfallChartGroupColorConfiguration> {
        self.group_color_configuration.as_ref()
    }
}
impl WaterfallChartColorConfiguration {
    /// Creates a new builder-style object to manufacture [`WaterfallChartColorConfiguration`](crate::types::WaterfallChartColorConfiguration).
    pub fn builder() -> crate::types::builders::WaterfallChartColorConfigurationBuilder {
        crate::types::builders::WaterfallChartColorConfigurationBuilder::default()
    }
}

/// A builder for [`WaterfallChartColorConfiguration`](crate::types::WaterfallChartColorConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WaterfallChartColorConfigurationBuilder {
    pub(crate) group_color_configuration: ::std::option::Option<crate::types::WaterfallChartGroupColorConfiguration>,
}
impl WaterfallChartColorConfigurationBuilder {
    /// <p>The color configuration for individual groups within a waterfall visual.</p>
    pub fn group_color_configuration(mut self, input: crate::types::WaterfallChartGroupColorConfiguration) -> Self {
        self.group_color_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The color configuration for individual groups within a waterfall visual.</p>
    pub fn set_group_color_configuration(mut self, input: ::std::option::Option<crate::types::WaterfallChartGroupColorConfiguration>) -> Self {
        self.group_color_configuration = input;
        self
    }
    /// <p>The color configuration for individual groups within a waterfall visual.</p>
    pub fn get_group_color_configuration(&self) -> &::std::option::Option<crate::types::WaterfallChartGroupColorConfiguration> {
        &self.group_color_configuration
    }
    /// Consumes the builder and constructs a [`WaterfallChartColorConfiguration`](crate::types::WaterfallChartColorConfiguration).
    pub fn build(self) -> crate::types::WaterfallChartColorConfiguration {
        crate::types::WaterfallChartColorConfiguration {
            group_color_configuration: self.group_color_configuration,
        }
    }
}
