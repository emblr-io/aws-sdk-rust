// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source of the image.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SheetImageSource {
    /// <p>The source of the static file that contains the image.</p>
    pub sheet_image_static_file_source: ::std::option::Option<crate::types::SheetImageStaticFileSource>,
}
impl SheetImageSource {
    /// <p>The source of the static file that contains the image.</p>
    pub fn sheet_image_static_file_source(&self) -> ::std::option::Option<&crate::types::SheetImageStaticFileSource> {
        self.sheet_image_static_file_source.as_ref()
    }
}
impl SheetImageSource {
    /// Creates a new builder-style object to manufacture [`SheetImageSource`](crate::types::SheetImageSource).
    pub fn builder() -> crate::types::builders::SheetImageSourceBuilder {
        crate::types::builders::SheetImageSourceBuilder::default()
    }
}

/// A builder for [`SheetImageSource`](crate::types::SheetImageSource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SheetImageSourceBuilder {
    pub(crate) sheet_image_static_file_source: ::std::option::Option<crate::types::SheetImageStaticFileSource>,
}
impl SheetImageSourceBuilder {
    /// <p>The source of the static file that contains the image.</p>
    pub fn sheet_image_static_file_source(mut self, input: crate::types::SheetImageStaticFileSource) -> Self {
        self.sheet_image_static_file_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source of the static file that contains the image.</p>
    pub fn set_sheet_image_static_file_source(mut self, input: ::std::option::Option<crate::types::SheetImageStaticFileSource>) -> Self {
        self.sheet_image_static_file_source = input;
        self
    }
    /// <p>The source of the static file that contains the image.</p>
    pub fn get_sheet_image_static_file_source(&self) -> &::std::option::Option<crate::types::SheetImageStaticFileSource> {
        &self.sheet_image_static_file_source
    }
    /// Consumes the builder and constructs a [`SheetImageSource`](crate::types::SheetImageSource).
    pub fn build(self) -> crate::types::SheetImageSource {
        crate::types::SheetImageSource {
            sheet_image_static_file_source: self.sheet_image_static_file_source,
        }
    }
}
