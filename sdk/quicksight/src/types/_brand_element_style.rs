// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The element style.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BrandElementStyle {
    /// <p>The navigation bar style.</p>
    pub navbar_style: ::std::option::Option<crate::types::NavbarStyle>,
}
impl BrandElementStyle {
    /// <p>The navigation bar style.</p>
    pub fn navbar_style(&self) -> ::std::option::Option<&crate::types::NavbarStyle> {
        self.navbar_style.as_ref()
    }
}
impl BrandElementStyle {
    /// Creates a new builder-style object to manufacture [`BrandElementStyle`](crate::types::BrandElementStyle).
    pub fn builder() -> crate::types::builders::BrandElementStyleBuilder {
        crate::types::builders::BrandElementStyleBuilder::default()
    }
}

/// A builder for [`BrandElementStyle`](crate::types::BrandElementStyle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BrandElementStyleBuilder {
    pub(crate) navbar_style: ::std::option::Option<crate::types::NavbarStyle>,
}
impl BrandElementStyleBuilder {
    /// <p>The navigation bar style.</p>
    pub fn navbar_style(mut self, input: crate::types::NavbarStyle) -> Self {
        self.navbar_style = ::std::option::Option::Some(input);
        self
    }
    /// <p>The navigation bar style.</p>
    pub fn set_navbar_style(mut self, input: ::std::option::Option<crate::types::NavbarStyle>) -> Self {
        self.navbar_style = input;
        self
    }
    /// <p>The navigation bar style.</p>
    pub fn get_navbar_style(&self) -> &::std::option::Option<crate::types::NavbarStyle> {
        &self.navbar_style
    }
    /// Consumes the builder and constructs a [`BrandElementStyle`](crate::types::BrandElementStyle).
    pub fn build(self) -> crate::types::BrandElementStyle {
        crate::types::BrandElementStyle {
            navbar_style: self.navbar_style,
        }
    }
}
