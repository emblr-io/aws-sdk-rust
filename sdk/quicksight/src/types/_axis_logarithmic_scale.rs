// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The logarithmic axis scale setup.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AxisLogarithmicScale {
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub base: ::std::option::Option<f64>,
}
impl AxisLogarithmicScale {
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn base(&self) -> ::std::option::Option<f64> {
        self.base
    }
}
impl AxisLogarithmicScale {
    /// Creates a new builder-style object to manufacture [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
    pub fn builder() -> crate::types::builders::AxisLogarithmicScaleBuilder {
        crate::types::builders::AxisLogarithmicScaleBuilder::default()
    }
}

/// A builder for [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AxisLogarithmicScaleBuilder {
    pub(crate) base: ::std::option::Option<f64>,
}
impl AxisLogarithmicScaleBuilder {
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn base(mut self, input: f64) -> Self {
        self.base = ::std::option::Option::Some(input);
        self
    }
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn set_base(mut self, input: ::std::option::Option<f64>) -> Self {
        self.base = input;
        self
    }
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn get_base(&self) -> &::std::option::Option<f64> {
        &self.base
    }
    /// Consumes the builder and constructs a [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
    pub fn build(self) -> crate::types::AxisLogarithmicScale {
        crate::types::AxisLogarithmicScale { base: self.base }
    }
}
