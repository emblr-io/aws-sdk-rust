// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The geospatial Line layer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GeospatialLineLayer {
    /// <p>The visualization style for a line layer.</p>
    pub style: ::std::option::Option<crate::types::GeospatialLineStyle>,
}
impl GeospatialLineLayer {
    /// <p>The visualization style for a line layer.</p>
    pub fn style(&self) -> ::std::option::Option<&crate::types::GeospatialLineStyle> {
        self.style.as_ref()
    }
}
impl GeospatialLineLayer {
    /// Creates a new builder-style object to manufacture [`GeospatialLineLayer`](crate::types::GeospatialLineLayer).
    pub fn builder() -> crate::types::builders::GeospatialLineLayerBuilder {
        crate::types::builders::GeospatialLineLayerBuilder::default()
    }
}

/// A builder for [`GeospatialLineLayer`](crate::types::GeospatialLineLayer).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GeospatialLineLayerBuilder {
    pub(crate) style: ::std::option::Option<crate::types::GeospatialLineStyle>,
}
impl GeospatialLineLayerBuilder {
    /// <p>The visualization style for a line layer.</p>
    /// This field is required.
    pub fn style(mut self, input: crate::types::GeospatialLineStyle) -> Self {
        self.style = ::std::option::Option::Some(input);
        self
    }
    /// <p>The visualization style for a line layer.</p>
    pub fn set_style(mut self, input: ::std::option::Option<crate::types::GeospatialLineStyle>) -> Self {
        self.style = input;
        self
    }
    /// <p>The visualization style for a line layer.</p>
    pub fn get_style(&self) -> &::std::option::Option<crate::types::GeospatialLineStyle> {
        &self.style
    }
    /// Consumes the builder and constructs a [`GeospatialLineLayer`](crate::types::GeospatialLineLayer).
    pub fn build(self) -> crate::types::GeospatialLineLayer {
        crate::types::GeospatialLineLayer { style: self.style }
    }
}
