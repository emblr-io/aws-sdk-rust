// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The width properties for a line.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GeospatialLineWidth {
    /// <p>The positive value for the width of a line.</p>
    pub line_width: ::std::option::Option<f64>,
}
impl GeospatialLineWidth {
    /// <p>The positive value for the width of a line.</p>
    pub fn line_width(&self) -> ::std::option::Option<f64> {
        self.line_width
    }
}
impl GeospatialLineWidth {
    /// Creates a new builder-style object to manufacture [`GeospatialLineWidth`](crate::types::GeospatialLineWidth).
    pub fn builder() -> crate::types::builders::GeospatialLineWidthBuilder {
        crate::types::builders::GeospatialLineWidthBuilder::default()
    }
}

/// A builder for [`GeospatialLineWidth`](crate::types::GeospatialLineWidth).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GeospatialLineWidthBuilder {
    pub(crate) line_width: ::std::option::Option<f64>,
}
impl GeospatialLineWidthBuilder {
    /// <p>The positive value for the width of a line.</p>
    pub fn line_width(mut self, input: f64) -> Self {
        self.line_width = ::std::option::Option::Some(input);
        self
    }
    /// <p>The positive value for the width of a line.</p>
    pub fn set_line_width(mut self, input: ::std::option::Option<f64>) -> Self {
        self.line_width = input;
        self
    }
    /// <p>The positive value for the width of a line.</p>
    pub fn get_line_width(&self) -> &::std::option::Option<f64> {
        &self.line_width
    }
    /// Consumes the builder and constructs a [`GeospatialLineWidth`](crate::types::GeospatialLineWidth).
    pub fn build(self) -> crate::types::GeospatialLineWidth {
        crate::types::GeospatialLineWidth { line_width: self.line_width }
    }
}
