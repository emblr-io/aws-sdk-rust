// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The general image interactions setup for image publish options.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageInteractionOptions {
    /// <p>The menu options for the image.</p>
    pub image_menu_option: ::std::option::Option<crate::types::ImageMenuOption>,
}
impl ImageInteractionOptions {
    /// <p>The menu options for the image.</p>
    pub fn image_menu_option(&self) -> ::std::option::Option<&crate::types::ImageMenuOption> {
        self.image_menu_option.as_ref()
    }
}
impl ImageInteractionOptions {
    /// Creates a new builder-style object to manufacture [`ImageInteractionOptions`](crate::types::ImageInteractionOptions).
    pub fn builder() -> crate::types::builders::ImageInteractionOptionsBuilder {
        crate::types::builders::ImageInteractionOptionsBuilder::default()
    }
}

/// A builder for [`ImageInteractionOptions`](crate::types::ImageInteractionOptions).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImageInteractionOptionsBuilder {
    pub(crate) image_menu_option: ::std::option::Option<crate::types::ImageMenuOption>,
}
impl ImageInteractionOptionsBuilder {
    /// <p>The menu options for the image.</p>
    pub fn image_menu_option(mut self, input: crate::types::ImageMenuOption) -> Self {
        self.image_menu_option = ::std::option::Option::Some(input);
        self
    }
    /// <p>The menu options for the image.</p>
    pub fn set_image_menu_option(mut self, input: ::std::option::Option<crate::types::ImageMenuOption>) -> Self {
        self.image_menu_option = input;
        self
    }
    /// <p>The menu options for the image.</p>
    pub fn get_image_menu_option(&self) -> &::std::option::Option<crate::types::ImageMenuOption> {
        &self.image_menu_option
    }
    /// Consumes the builder and constructs a [`ImageInteractionOptions`](crate::types::ImageInteractionOptions).
    pub fn build(self) -> crate::types::ImageInteractionOptions {
        crate::types::ImageInteractionOptions {
            image_menu_option: self.image_menu_option,
        }
    }
}
