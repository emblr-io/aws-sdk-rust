// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The navigation bar style.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NavbarStyle {
    /// <p>The global navigation bar style.</p>
    pub global_navbar: ::std::option::Option<crate::types::Palette>,
    /// <p>The contextual navigation bar style.</p>
    pub contextual_navbar: ::std::option::Option<crate::types::Palette>,
}
impl NavbarStyle {
    /// <p>The global navigation bar style.</p>
    pub fn global_navbar(&self) -> ::std::option::Option<&crate::types::Palette> {
        self.global_navbar.as_ref()
    }
    /// <p>The contextual navigation bar style.</p>
    pub fn contextual_navbar(&self) -> ::std::option::Option<&crate::types::Palette> {
        self.contextual_navbar.as_ref()
    }
}
impl NavbarStyle {
    /// Creates a new builder-style object to manufacture [`NavbarStyle`](crate::types::NavbarStyle).
    pub fn builder() -> crate::types::builders::NavbarStyleBuilder {
        crate::types::builders::NavbarStyleBuilder::default()
    }
}

/// A builder for [`NavbarStyle`](crate::types::NavbarStyle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NavbarStyleBuilder {
    pub(crate) global_navbar: ::std::option::Option<crate::types::Palette>,
    pub(crate) contextual_navbar: ::std::option::Option<crate::types::Palette>,
}
impl NavbarStyleBuilder {
    /// <p>The global navigation bar style.</p>
    pub fn global_navbar(mut self, input: crate::types::Palette) -> Self {
        self.global_navbar = ::std::option::Option::Some(input);
        self
    }
    /// <p>The global navigation bar style.</p>
    pub fn set_global_navbar(mut self, input: ::std::option::Option<crate::types::Palette>) -> Self {
        self.global_navbar = input;
        self
    }
    /// <p>The global navigation bar style.</p>
    pub fn get_global_navbar(&self) -> &::std::option::Option<crate::types::Palette> {
        &self.global_navbar
    }
    /// <p>The contextual navigation bar style.</p>
    pub fn contextual_navbar(mut self, input: crate::types::Palette) -> Self {
        self.contextual_navbar = ::std::option::Option::Some(input);
        self
    }
    /// <p>The contextual navigation bar style.</p>
    pub fn set_contextual_navbar(mut self, input: ::std::option::Option<crate::types::Palette>) -> Self {
        self.contextual_navbar = input;
        self
    }
    /// <p>The contextual navigation bar style.</p>
    pub fn get_contextual_navbar(&self) -> &::std::option::Option<crate::types::Palette> {
        &self.contextual_navbar
    }
    /// Consumes the builder and constructs a [`NavbarStyle`](crate::types::NavbarStyle).
    pub fn build(self) -> crate::types::NavbarStyle {
        crate::types::NavbarStyle {
            global_navbar: self.global_navbar,
            contextual_navbar: self.contextual_navbar,
        }
    }
}
