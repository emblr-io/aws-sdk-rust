// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The failure configuration of a dataset.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RefreshFailureConfiguration {
    /// <p>The email alert configuration for a dataset refresh failure.</p>
    pub email_alert: ::std::option::Option<crate::types::RefreshFailureEmailAlert>,
}
impl RefreshFailureConfiguration {
    /// <p>The email alert configuration for a dataset refresh failure.</p>
    pub fn email_alert(&self) -> ::std::option::Option<&crate::types::RefreshFailureEmailAlert> {
        self.email_alert.as_ref()
    }
}
impl RefreshFailureConfiguration {
    /// Creates a new builder-style object to manufacture [`RefreshFailureConfiguration`](crate::types::RefreshFailureConfiguration).
    pub fn builder() -> crate::types::builders::RefreshFailureConfigurationBuilder {
        crate::types::builders::RefreshFailureConfigurationBuilder::default()
    }
}

/// A builder for [`RefreshFailureConfiguration`](crate::types::RefreshFailureConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RefreshFailureConfigurationBuilder {
    pub(crate) email_alert: ::std::option::Option<crate::types::RefreshFailureEmailAlert>,
}
impl RefreshFailureConfigurationBuilder {
    /// <p>The email alert configuration for a dataset refresh failure.</p>
    pub fn email_alert(mut self, input: crate::types::RefreshFailureEmailAlert) -> Self {
        self.email_alert = ::std::option::Option::Some(input);
        self
    }
    /// <p>The email alert configuration for a dataset refresh failure.</p>
    pub fn set_email_alert(mut self, input: ::std::option::Option<crate::types::RefreshFailureEmailAlert>) -> Self {
        self.email_alert = input;
        self
    }
    /// <p>The email alert configuration for a dataset refresh failure.</p>
    pub fn get_email_alert(&self) -> &::std::option::Option<crate::types::RefreshFailureEmailAlert> {
        &self.email_alert
    }
    /// Consumes the builder and constructs a [`RefreshFailureConfiguration`](crate::types::RefreshFailureConfiguration).
    pub fn build(self) -> crate::types::RefreshFailureConfiguration {
        crate::types::RefreshFailureConfiguration {
            email_alert: self.email_alert,
        }
    }
}
