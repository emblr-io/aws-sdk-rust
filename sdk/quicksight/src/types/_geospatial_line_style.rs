// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The visualization style for a line layer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GeospatialLineStyle {
    /// <p>The symbol style for a line style.</p>
    pub line_symbol_style: ::std::option::Option<crate::types::GeospatialLineSymbolStyle>,
}
impl GeospatialLineStyle {
    /// <p>The symbol style for a line style.</p>
    pub fn line_symbol_style(&self) -> ::std::option::Option<&crate::types::GeospatialLineSymbolStyle> {
        self.line_symbol_style.as_ref()
    }
}
impl GeospatialLineStyle {
    /// Creates a new builder-style object to manufacture [`GeospatialLineStyle`](crate::types::GeospatialLineStyle).
    pub fn builder() -> crate::types::builders::GeospatialLineStyleBuilder {
        crate::types::builders::GeospatialLineStyleBuilder::default()
    }
}

/// A builder for [`GeospatialLineStyle`](crate::types::GeospatialLineStyle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GeospatialLineStyleBuilder {
    pub(crate) line_symbol_style: ::std::option::Option<crate::types::GeospatialLineSymbolStyle>,
}
impl GeospatialLineStyleBuilder {
    /// <p>The symbol style for a line style.</p>
    pub fn line_symbol_style(mut self, input: crate::types::GeospatialLineSymbolStyle) -> Self {
        self.line_symbol_style = ::std::option::Option::Some(input);
        self
    }
    /// <p>The symbol style for a line style.</p>
    pub fn set_line_symbol_style(mut self, input: ::std::option::Option<crate::types::GeospatialLineSymbolStyle>) -> Self {
        self.line_symbol_style = input;
        self
    }
    /// <p>The symbol style for a line style.</p>
    pub fn get_line_symbol_style(&self) -> &::std::option::Option<crate::types::GeospatialLineSymbolStyle> {
        &self.line_symbol_style
    }
    /// Consumes the builder and constructs a [`GeospatialLineStyle`](crate::types::GeospatialLineStyle).
    pub fn build(self) -> crate::types::GeospatialLineStyle {
        crate::types::GeospatialLineStyle {
            line_symbol_style: self.line_symbol_style,
        }
    }
}
