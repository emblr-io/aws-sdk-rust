// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The point style for a point layer.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GeospatialPointStyle {
    /// <p>The circle symbol style for a point layer.</p>
    pub circle_symbol_style: ::std::option::Option<crate::types::GeospatialCircleSymbolStyle>,
}
impl GeospatialPointStyle {
    /// <p>The circle symbol style for a point layer.</p>
    pub fn circle_symbol_style(&self) -> ::std::option::Option<&crate::types::GeospatialCircleSymbolStyle> {
        self.circle_symbol_style.as_ref()
    }
}
impl GeospatialPointStyle {
    /// Creates a new builder-style object to manufacture [`GeospatialPointStyle`](crate::types::GeospatialPointStyle).
    pub fn builder() -> crate::types::builders::GeospatialPointStyleBuilder {
        crate::types::builders::GeospatialPointStyleBuilder::default()
    }
}

/// A builder for [`GeospatialPointStyle`](crate::types::GeospatialPointStyle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GeospatialPointStyleBuilder {
    pub(crate) circle_symbol_style: ::std::option::Option<crate::types::GeospatialCircleSymbolStyle>,
}
impl GeospatialPointStyleBuilder {
    /// <p>The circle symbol style for a point layer.</p>
    pub fn circle_symbol_style(mut self, input: crate::types::GeospatialCircleSymbolStyle) -> Self {
        self.circle_symbol_style = ::std::option::Option::Some(input);
        self
    }
    /// <p>The circle symbol style for a point layer.</p>
    pub fn set_circle_symbol_style(mut self, input: ::std::option::Option<crate::types::GeospatialCircleSymbolStyle>) -> Self {
        self.circle_symbol_style = input;
        self
    }
    /// <p>The circle symbol style for a point layer.</p>
    pub fn get_circle_symbol_style(&self) -> &::std::option::Option<crate::types::GeospatialCircleSymbolStyle> {
        &self.circle_symbol_style
    }
    /// Consumes the builder and constructs a [`GeospatialPointStyle`](crate::types::GeospatialPointStyle).
    pub fn build(self) -> crate::types::GeospatialPointStyle {
        crate::types::GeospatialPointStyle {
            circle_symbol_style: self.circle_symbol_style,
        }
    }
}
