// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that provides information about the configuration of a Generative Q&amp;A experience.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegisteredUserGenerativeQnAEmbeddingConfiguration {
    /// <p>The ID of the new Q reader experience topic that you want to make the starting topic in the Generative Q&amp;A experience. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p>
    /// <p>If you don't specify an initial topic or you specify a legacy topic, a list of all shared new reader experience topics is shown in the Generative Q&amp;A experience for your readers. When you select an initial new reader experience topic, you can specify whether or not readers are allowed to select other new reader experience topics from the available ones in the list.</p>
    pub initial_topic_id: ::std::option::Option<::std::string::String>,
}
impl RegisteredUserGenerativeQnAEmbeddingConfiguration {
    /// <p>The ID of the new Q reader experience topic that you want to make the starting topic in the Generative Q&amp;A experience. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p>
    /// <p>If you don't specify an initial topic or you specify a legacy topic, a list of all shared new reader experience topics is shown in the Generative Q&amp;A experience for your readers. When you select an initial new reader experience topic, you can specify whether or not readers are allowed to select other new reader experience topics from the available ones in the list.</p>
    pub fn initial_topic_id(&self) -> ::std::option::Option<&str> {
        self.initial_topic_id.as_deref()
    }
}
impl RegisteredUserGenerativeQnAEmbeddingConfiguration {
    /// Creates a new builder-style object to manufacture [`RegisteredUserGenerativeQnAEmbeddingConfiguration`](crate::types::RegisteredUserGenerativeQnAEmbeddingConfiguration).
    pub fn builder() -> crate::types::builders::RegisteredUserGenerativeQnAEmbeddingConfigurationBuilder {
        crate::types::builders::RegisteredUserGenerativeQnAEmbeddingConfigurationBuilder::default()
    }
}

/// A builder for [`RegisteredUserGenerativeQnAEmbeddingConfiguration`](crate::types::RegisteredUserGenerativeQnAEmbeddingConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RegisteredUserGenerativeQnAEmbeddingConfigurationBuilder {
    pub(crate) initial_topic_id: ::std::option::Option<::std::string::String>,
}
impl RegisteredUserGenerativeQnAEmbeddingConfigurationBuilder {
    /// <p>The ID of the new Q reader experience topic that you want to make the starting topic in the Generative Q&amp;A experience. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p>
    /// <p>If you don't specify an initial topic or you specify a legacy topic, a list of all shared new reader experience topics is shown in the Generative Q&amp;A experience for your readers. When you select an initial new reader experience topic, you can specify whether or not readers are allowed to select other new reader experience topics from the available ones in the list.</p>
    pub fn initial_topic_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.initial_topic_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the new Q reader experience topic that you want to make the starting topic in the Generative Q&amp;A experience. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p>
    /// <p>If you don't specify an initial topic or you specify a legacy topic, a list of all shared new reader experience topics is shown in the Generative Q&amp;A experience for your readers. When you select an initial new reader experience topic, you can specify whether or not readers are allowed to select other new reader experience topics from the available ones in the list.</p>
    pub fn set_initial_topic_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.initial_topic_id = input;
        self
    }
    /// <p>The ID of the new Q reader experience topic that you want to make the starting topic in the Generative Q&amp;A experience. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p>
    /// <p>If you don't specify an initial topic or you specify a legacy topic, a list of all shared new reader experience topics is shown in the Generative Q&amp;A experience for your readers. When you select an initial new reader experience topic, you can specify whether or not readers are allowed to select other new reader experience topics from the available ones in the list.</p>
    pub fn get_initial_topic_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.initial_topic_id
    }
    /// Consumes the builder and constructs a [`RegisteredUserGenerativeQnAEmbeddingConfiguration`](crate::types::RegisteredUserGenerativeQnAEmbeddingConfiguration).
    pub fn build(self) -> crate::types::RegisteredUserGenerativeQnAEmbeddingConfiguration {
        crate::types::RegisteredUserGenerativeQnAEmbeddingConfiguration {
            initial_topic_id: self.initial_topic_id,
        }
    }
}
