// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Controls how a specific <code>Folder</code> resource is parameterized in the returned CloudFormation template.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetBundleExportJobFolderOverrideProperties {
    /// <p>The ARN of the specific <code>Folder</code> resource whose override properties are configured in this structure.</p>
    pub arn: ::std::string::String,
    /// <p>A list of <code>Folder</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub properties: ::std::vec::Vec<crate::types::AssetBundleExportJobFolderPropertyToOverride>,
}
impl AssetBundleExportJobFolderOverrideProperties {
    /// <p>The ARN of the specific <code>Folder</code> resource whose override properties are configured in this structure.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>A list of <code>Folder</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn properties(&self) -> &[crate::types::AssetBundleExportJobFolderPropertyToOverride] {
        use std::ops::Deref;
        self.properties.deref()
    }
}
impl AssetBundleExportJobFolderOverrideProperties {
    /// Creates a new builder-style object to manufacture [`AssetBundleExportJobFolderOverrideProperties`](crate::types::AssetBundleExportJobFolderOverrideProperties).
    pub fn builder() -> crate::types::builders::AssetBundleExportJobFolderOverridePropertiesBuilder {
        crate::types::builders::AssetBundleExportJobFolderOverridePropertiesBuilder::default()
    }
}

/// A builder for [`AssetBundleExportJobFolderOverrideProperties`](crate::types::AssetBundleExportJobFolderOverrideProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssetBundleExportJobFolderOverridePropertiesBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) properties: ::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobFolderPropertyToOverride>>,
}
impl AssetBundleExportJobFolderOverridePropertiesBuilder {
    /// <p>The ARN of the specific <code>Folder</code> resource whose override properties are configured in this structure.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the specific <code>Folder</code> resource whose override properties are configured in this structure.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the specific <code>Folder</code> resource whose override properties are configured in this structure.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// Appends an item to `properties`.
    ///
    /// To override the contents of this collection use [`set_properties`](Self::set_properties).
    ///
    /// <p>A list of <code>Folder</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn properties(mut self, input: crate::types::AssetBundleExportJobFolderPropertyToOverride) -> Self {
        let mut v = self.properties.unwrap_or_default();
        v.push(input);
        self.properties = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>Folder</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn set_properties(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobFolderPropertyToOverride>>,
    ) -> Self {
        self.properties = input;
        self
    }
    /// <p>A list of <code>Folder</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn get_properties(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobFolderPropertyToOverride>> {
        &self.properties
    }
    /// Consumes the builder and constructs a [`AssetBundleExportJobFolderOverrideProperties`](crate::types::AssetBundleExportJobFolderOverrideProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::AssetBundleExportJobFolderOverridePropertiesBuilder::arn)
    /// - [`properties`](crate::types::builders::AssetBundleExportJobFolderOverridePropertiesBuilder::properties)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AssetBundleExportJobFolderOverrideProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssetBundleExportJobFolderOverrideProperties {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building AssetBundleExportJobFolderOverrideProperties",
                )
            })?,
            properties: self.properties.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "properties",
                    "properties was not specified but it is required when building AssetBundleExportJobFolderOverrideProperties",
                )
            })?,
        })
    }
}
