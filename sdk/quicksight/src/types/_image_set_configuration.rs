// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The image set configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageSetConfiguration {
    /// <p>The original image.</p>
    pub original: ::std::option::Option<crate::types::ImageConfiguration>,
}
impl ImageSetConfiguration {
    /// <p>The original image.</p>
    pub fn original(&self) -> ::std::option::Option<&crate::types::ImageConfiguration> {
        self.original.as_ref()
    }
}
impl ImageSetConfiguration {
    /// Creates a new builder-style object to manufacture [`ImageSetConfiguration`](crate::types::ImageSetConfiguration).
    pub fn builder() -> crate::types::builders::ImageSetConfigurationBuilder {
        crate::types::builders::ImageSetConfigurationBuilder::default()
    }
}

/// A builder for [`ImageSetConfiguration`](crate::types::ImageSetConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImageSetConfigurationBuilder {
    pub(crate) original: ::std::option::Option<crate::types::ImageConfiguration>,
}
impl ImageSetConfigurationBuilder {
    /// <p>The original image.</p>
    /// This field is required.
    pub fn original(mut self, input: crate::types::ImageConfiguration) -> Self {
        self.original = ::std::option::Option::Some(input);
        self
    }
    /// <p>The original image.</p>
    pub fn set_original(mut self, input: ::std::option::Option<crate::types::ImageConfiguration>) -> Self {
        self.original = input;
        self
    }
    /// <p>The original image.</p>
    pub fn get_original(&self) -> &::std::option::Option<crate::types::ImageConfiguration> {
        &self.original
    }
    /// Consumes the builder and constructs a [`ImageSetConfiguration`](crate::types::ImageSetConfiguration).
    pub fn build(self) -> crate::types::ImageSetConfiguration {
        crate::types::ImageSetConfiguration { original: self.original }
    }
}
