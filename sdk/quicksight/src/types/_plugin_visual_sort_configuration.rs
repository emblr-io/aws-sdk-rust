// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines how the plugin visual sorts the data during query.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PluginVisualSortConfiguration {
    /// <p>The table query sorting options for the plugin visual.</p>
    pub plugin_visual_table_query_sort: ::std::option::Option<crate::types::PluginVisualTableQuerySort>,
}
impl PluginVisualSortConfiguration {
    /// <p>The table query sorting options for the plugin visual.</p>
    pub fn plugin_visual_table_query_sort(&self) -> ::std::option::Option<&crate::types::PluginVisualTableQuerySort> {
        self.plugin_visual_table_query_sort.as_ref()
    }
}
impl PluginVisualSortConfiguration {
    /// Creates a new builder-style object to manufacture [`PluginVisualSortConfiguration`](crate::types::PluginVisualSortConfiguration).
    pub fn builder() -> crate::types::builders::PluginVisualSortConfigurationBuilder {
        crate::types::builders::PluginVisualSortConfigurationBuilder::default()
    }
}

/// A builder for [`PluginVisualSortConfiguration`](crate::types::PluginVisualSortConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PluginVisualSortConfigurationBuilder {
    pub(crate) plugin_visual_table_query_sort: ::std::option::Option<crate::types::PluginVisualTableQuerySort>,
}
impl PluginVisualSortConfigurationBuilder {
    /// <p>The table query sorting options for the plugin visual.</p>
    pub fn plugin_visual_table_query_sort(mut self, input: crate::types::PluginVisualTableQuerySort) -> Self {
        self.plugin_visual_table_query_sort = ::std::option::Option::Some(input);
        self
    }
    /// <p>The table query sorting options for the plugin visual.</p>
    pub fn set_plugin_visual_table_query_sort(mut self, input: ::std::option::Option<crate::types::PluginVisualTableQuerySort>) -> Self {
        self.plugin_visual_table_query_sort = input;
        self
    }
    /// <p>The table query sorting options for the plugin visual.</p>
    pub fn get_plugin_visual_table_query_sort(&self) -> &::std::option::Option<crate::types::PluginVisualTableQuerySort> {
        &self.plugin_visual_table_query_sort
    }
    /// Consumes the builder and constructs a [`PluginVisualSortConfiguration`](crate::types::PluginVisualSortConfiguration).
    pub fn build(self) -> crate::types::PluginVisualSortConfiguration {
        crate::types::PluginVisualSortConfiguration {
            plugin_visual_table_query_sort: self.plugin_visual_table_query_sort,
        }
    }
}
