// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The definition for the <code>ContributionAnalysisTimeRanges</code>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContributionAnalysisTimeRanges {
    /// <p>The start range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub start_range: ::std::option::Option<crate::types::TopicIrFilterOption>,
    /// <p>The end range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub end_range: ::std::option::Option<crate::types::TopicIrFilterOption>,
}
impl ContributionAnalysisTimeRanges {
    /// <p>The start range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn start_range(&self) -> ::std::option::Option<&crate::types::TopicIrFilterOption> {
        self.start_range.as_ref()
    }
    /// <p>The end range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn end_range(&self) -> ::std::option::Option<&crate::types::TopicIrFilterOption> {
        self.end_range.as_ref()
    }
}
impl ContributionAnalysisTimeRanges {
    /// Creates a new builder-style object to manufacture [`ContributionAnalysisTimeRanges`](crate::types::ContributionAnalysisTimeRanges).
    pub fn builder() -> crate::types::builders::ContributionAnalysisTimeRangesBuilder {
        crate::types::builders::ContributionAnalysisTimeRangesBuilder::default()
    }
}

/// A builder for [`ContributionAnalysisTimeRanges`](crate::types::ContributionAnalysisTimeRanges).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ContributionAnalysisTimeRangesBuilder {
    pub(crate) start_range: ::std::option::Option<crate::types::TopicIrFilterOption>,
    pub(crate) end_range: ::std::option::Option<crate::types::TopicIrFilterOption>,
}
impl ContributionAnalysisTimeRangesBuilder {
    /// <p>The start range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn start_range(mut self, input: crate::types::TopicIrFilterOption) -> Self {
        self.start_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn set_start_range(mut self, input: ::std::option::Option<crate::types::TopicIrFilterOption>) -> Self {
        self.start_range = input;
        self
    }
    /// <p>The start range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn get_start_range(&self) -> &::std::option::Option<crate::types::TopicIrFilterOption> {
        &self.start_range
    }
    /// <p>The end range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn end_range(mut self, input: crate::types::TopicIrFilterOption) -> Self {
        self.end_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>The end range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn set_end_range(mut self, input: ::std::option::Option<crate::types::TopicIrFilterOption>) -> Self {
        self.end_range = input;
        self
    }
    /// <p>The end range for the <code>ContributionAnalysisTimeRanges</code>.</p>
    pub fn get_end_range(&self) -> &::std::option::Option<crate::types::TopicIrFilterOption> {
        &self.end_range
    }
    /// Consumes the builder and constructs a [`ContributionAnalysisTimeRanges`](crate::types::ContributionAnalysisTimeRanges).
    pub fn build(self) -> crate::types::ContributionAnalysisTimeRanges {
        crate::types::ContributionAnalysisTimeRanges {
            start_range: self.start_range,
            end_range: self.end_range,
        }
    }
}
