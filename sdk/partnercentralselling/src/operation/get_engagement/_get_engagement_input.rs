// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetEngagementInput {
    /// <p>Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>.</p>
    pub catalog: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the identifier of the Engagement record to retrieve.</p>
    pub identifier: ::std::option::Option<::std::string::String>,
}
impl GetEngagementInput {
    /// <p>Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>.</p>
    pub fn catalog(&self) -> ::std::option::Option<&str> {
        self.catalog.as_deref()
    }
    /// <p>Specifies the identifier of the Engagement record to retrieve.</p>
    pub fn identifier(&self) -> ::std::option::Option<&str> {
        self.identifier.as_deref()
    }
}
impl GetEngagementInput {
    /// Creates a new builder-style object to manufacture [`GetEngagementInput`](crate::operation::get_engagement::GetEngagementInput).
    pub fn builder() -> crate::operation::get_engagement::builders::GetEngagementInputBuilder {
        crate::operation::get_engagement::builders::GetEngagementInputBuilder::default()
    }
}

/// A builder for [`GetEngagementInput`](crate::operation::get_engagement::GetEngagementInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetEngagementInputBuilder {
    pub(crate) catalog: ::std::option::Option<::std::string::String>,
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
}
impl GetEngagementInputBuilder {
    /// <p>Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>.</p>
    /// This field is required.
    pub fn catalog(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.catalog = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>.</p>
    pub fn set_catalog(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.catalog = input;
        self
    }
    /// <p>Specifies the catalog related to the engagement request. Valid values are <code>AWS</code> and <code>Sandbox</code>.</p>
    pub fn get_catalog(&self) -> &::std::option::Option<::std::string::String> {
        &self.catalog
    }
    /// <p>Specifies the identifier of the Engagement record to retrieve.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the identifier of the Engagement record to retrieve.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>Specifies the identifier of the Engagement record to retrieve.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// Consumes the builder and constructs a [`GetEngagementInput`](crate::operation::get_engagement::GetEngagementInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_engagement::GetEngagementInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_engagement::GetEngagementInput {
            catalog: self.catalog,
            identifier: self.identifier,
        })
    }
}
