// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StopResourceSnapshotJobInput {
    /// <p>Specifies the catalog related to the request. Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p>AWS: Stops the request from the production AWS environment.</p></li>
    /// <li>
    /// <p>Sandbox: Stops the request from a sandbox environment used for testing or development purposes.</p></li>
    /// </ul>
    pub catalog: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the job to stop.</p>
    pub resource_snapshot_job_identifier: ::std::option::Option<::std::string::String>,
}
impl StopResourceSnapshotJobInput {
    /// <p>Specifies the catalog related to the request. Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p>AWS: Stops the request from the production AWS environment.</p></li>
    /// <li>
    /// <p>Sandbox: Stops the request from a sandbox environment used for testing or development purposes.</p></li>
    /// </ul>
    pub fn catalog(&self) -> ::std::option::Option<&str> {
        self.catalog.as_deref()
    }
    /// <p>The identifier of the job to stop.</p>
    pub fn resource_snapshot_job_identifier(&self) -> ::std::option::Option<&str> {
        self.resource_snapshot_job_identifier.as_deref()
    }
}
impl StopResourceSnapshotJobInput {
    /// Creates a new builder-style object to manufacture [`StopResourceSnapshotJobInput`](crate::operation::stop_resource_snapshot_job::StopResourceSnapshotJobInput).
    pub fn builder() -> crate::operation::stop_resource_snapshot_job::builders::StopResourceSnapshotJobInputBuilder {
        crate::operation::stop_resource_snapshot_job::builders::StopResourceSnapshotJobInputBuilder::default()
    }
}

/// A builder for [`StopResourceSnapshotJobInput`](crate::operation::stop_resource_snapshot_job::StopResourceSnapshotJobInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StopResourceSnapshotJobInputBuilder {
    pub(crate) catalog: ::std::option::Option<::std::string::String>,
    pub(crate) resource_snapshot_job_identifier: ::std::option::Option<::std::string::String>,
}
impl StopResourceSnapshotJobInputBuilder {
    /// <p>Specifies the catalog related to the request. Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p>AWS: Stops the request from the production AWS environment.</p></li>
    /// <li>
    /// <p>Sandbox: Stops the request from a sandbox environment used for testing or development purposes.</p></li>
    /// </ul>
    /// This field is required.
    pub fn catalog(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.catalog = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the catalog related to the request. Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p>AWS: Stops the request from the production AWS environment.</p></li>
    /// <li>
    /// <p>Sandbox: Stops the request from a sandbox environment used for testing or development purposes.</p></li>
    /// </ul>
    pub fn set_catalog(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.catalog = input;
        self
    }
    /// <p>Specifies the catalog related to the request. Valid values are:</p>
    /// <ul>
    /// <li>
    /// <p>AWS: Stops the request from the production AWS environment.</p></li>
    /// <li>
    /// <p>Sandbox: Stops the request from a sandbox environment used for testing or development purposes.</p></li>
    /// </ul>
    pub fn get_catalog(&self) -> &::std::option::Option<::std::string::String> {
        &self.catalog
    }
    /// <p>The identifier of the job to stop.</p>
    /// This field is required.
    pub fn resource_snapshot_job_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_snapshot_job_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the job to stop.</p>
    pub fn set_resource_snapshot_job_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_snapshot_job_identifier = input;
        self
    }
    /// <p>The identifier of the job to stop.</p>
    pub fn get_resource_snapshot_job_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_snapshot_job_identifier
    }
    /// Consumes the builder and constructs a [`StopResourceSnapshotJobInput`](crate::operation::stop_resource_snapshot_job::StopResourceSnapshotJobInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::stop_resource_snapshot_job::StopResourceSnapshotJobInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::stop_resource_snapshot_job::StopResourceSnapshotJobInput {
            catalog: self.catalog,
            resource_snapshot_job_identifier: self.resource_snapshot_job_identifier,
        })
    }
}
