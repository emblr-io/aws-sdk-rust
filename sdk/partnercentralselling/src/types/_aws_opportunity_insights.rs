// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains insights provided by AWS for the opportunity, offering recommendations and analysis that can help the partner optimize their engagement and strategy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsOpportunityInsights {
    /// <p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>
    pub next_best_actions: ::std::option::Option<::std::string::String>,
    /// <p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>
    pub engagement_score: ::std::option::Option<crate::types::EngagementScore>,
}
impl AwsOpportunityInsights {
    /// <p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>
    pub fn next_best_actions(&self) -> ::std::option::Option<&str> {
        self.next_best_actions.as_deref()
    }
    /// <p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>
    pub fn engagement_score(&self) -> ::std::option::Option<&crate::types::EngagementScore> {
        self.engagement_score.as_ref()
    }
}
impl AwsOpportunityInsights {
    /// Creates a new builder-style object to manufacture [`AwsOpportunityInsights`](crate::types::AwsOpportunityInsights).
    pub fn builder() -> crate::types::builders::AwsOpportunityInsightsBuilder {
        crate::types::builders::AwsOpportunityInsightsBuilder::default()
    }
}

/// A builder for [`AwsOpportunityInsights`](crate::types::AwsOpportunityInsights).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AwsOpportunityInsightsBuilder {
    pub(crate) next_best_actions: ::std::option::Option<::std::string::String>,
    pub(crate) engagement_score: ::std::option::Option<crate::types::EngagementScore>,
}
impl AwsOpportunityInsightsBuilder {
    /// <p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>
    pub fn next_best_actions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_best_actions = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>
    pub fn set_next_best_actions(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_best_actions = input;
        self
    }
    /// <p>Provides recommendations from AWS on the next best actions to take in order to move the opportunity forward and increase the likelihood of success.</p>
    pub fn get_next_best_actions(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_best_actions
    }
    /// <p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>
    pub fn engagement_score(mut self, input: crate::types::EngagementScore) -> Self {
        self.engagement_score = ::std::option::Option::Some(input);
        self
    }
    /// <p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>
    pub fn set_engagement_score(mut self, input: ::std::option::Option<crate::types::EngagementScore>) -> Self {
        self.engagement_score = input;
        self
    }
    /// <p>Represents a score assigned by AWS to indicate the level of engagement and potential success for the opportunity. This score helps partners prioritize their efforts.</p>
    pub fn get_engagement_score(&self) -> &::std::option::Option<crate::types::EngagementScore> {
        &self.engagement_score
    }
    /// Consumes the builder and constructs a [`AwsOpportunityInsights`](crate::types::AwsOpportunityInsights).
    pub fn build(self) -> crate::types::AwsOpportunityInsights {
        crate::types::AwsOpportunityInsights {
            next_best_actions: self.next_best_actions,
            engagement_score: self.engagement_score,
        }
    }
}
