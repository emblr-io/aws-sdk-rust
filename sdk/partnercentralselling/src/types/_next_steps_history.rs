// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Read-only; shows the last 50 values and change dates for the <code>NextSteps</code> field.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NextStepsHistory {
    /// <p>Indicates the step's execution details.</p>
    pub value: ::std::string::String,
    /// <p>Indicates the step execution time.</p>
    pub time: ::aws_smithy_types::DateTime,
}
impl NextStepsHistory {
    /// <p>Indicates the step's execution details.</p>
    pub fn value(&self) -> &str {
        use std::ops::Deref;
        self.value.deref()
    }
    /// <p>Indicates the step execution time.</p>
    pub fn time(&self) -> &::aws_smithy_types::DateTime {
        &self.time
    }
}
impl NextStepsHistory {
    /// Creates a new builder-style object to manufacture [`NextStepsHistory`](crate::types::NextStepsHistory).
    pub fn builder() -> crate::types::builders::NextStepsHistoryBuilder {
        crate::types::builders::NextStepsHistoryBuilder::default()
    }
}

/// A builder for [`NextStepsHistory`](crate::types::NextStepsHistory).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NextStepsHistoryBuilder {
    pub(crate) value: ::std::option::Option<::std::string::String>,
    pub(crate) time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl NextStepsHistoryBuilder {
    /// <p>Indicates the step's execution details.</p>
    /// This field is required.
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the step's execution details.</p>
    pub fn set_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>Indicates the step's execution details.</p>
    pub fn get_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.value
    }
    /// <p>Indicates the step execution time.</p>
    /// This field is required.
    pub fn time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates the step execution time.</p>
    pub fn set_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.time = input;
        self
    }
    /// <p>Indicates the step execution time.</p>
    pub fn get_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.time
    }
    /// Consumes the builder and constructs a [`NextStepsHistory`](crate::types::NextStepsHistory).
    /// This method will fail if any of the following fields are not set:
    /// - [`value`](crate::types::builders::NextStepsHistoryBuilder::value)
    /// - [`time`](crate::types::builders::NextStepsHistoryBuilder::time)
    pub fn build(self) -> ::std::result::Result<crate::types::NextStepsHistory, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::NextStepsHistory {
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building NextStepsHistory",
                )
            })?,
            time: self.time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "time",
                    "time was not specified but it is required when building NextStepsHistory",
                )
            })?,
        })
    }
}
