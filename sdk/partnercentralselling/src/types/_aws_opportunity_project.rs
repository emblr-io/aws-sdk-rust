// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Captures details about the project associated with the opportunity, including objectives, scope, and customer requirements.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsOpportunityProject {
    /// <p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href="https://calculator.aws/#/">AWS Pricing Calculator</a> to create an estimate of the customer’s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>
    pub expected_customer_spend: ::std::option::Option<::std::vec::Vec<crate::types::ExpectedCustomerSpend>>,
}
impl AwsOpportunityProject {
    /// <p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href="https://calculator.aws/#/">AWS Pricing Calculator</a> to create an estimate of the customer’s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.expected_customer_spend.is_none()`.
    pub fn expected_customer_spend(&self) -> &[crate::types::ExpectedCustomerSpend] {
        self.expected_customer_spend.as_deref().unwrap_or_default()
    }
}
impl AwsOpportunityProject {
    /// Creates a new builder-style object to manufacture [`AwsOpportunityProject`](crate::types::AwsOpportunityProject).
    pub fn builder() -> crate::types::builders::AwsOpportunityProjectBuilder {
        crate::types::builders::AwsOpportunityProjectBuilder::default()
    }
}

/// A builder for [`AwsOpportunityProject`](crate::types::AwsOpportunityProject).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AwsOpportunityProjectBuilder {
    pub(crate) expected_customer_spend: ::std::option::Option<::std::vec::Vec<crate::types::ExpectedCustomerSpend>>,
}
impl AwsOpportunityProjectBuilder {
    /// Appends an item to `expected_customer_spend`.
    ///
    /// To override the contents of this collection use [`set_expected_customer_spend`](Self::set_expected_customer_spend).
    ///
    /// <p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href="https://calculator.aws/#/">AWS Pricing Calculator</a> to create an estimate of the customer’s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>
    pub fn expected_customer_spend(mut self, input: crate::types::ExpectedCustomerSpend) -> Self {
        let mut v = self.expected_customer_spend.unwrap_or_default();
        v.push(input);
        self.expected_customer_spend = ::std::option::Option::Some(v);
        self
    }
    /// <p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href="https://calculator.aws/#/">AWS Pricing Calculator</a> to create an estimate of the customer’s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>
    pub fn set_expected_customer_spend(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ExpectedCustomerSpend>>) -> Self {
        self.expected_customer_spend = input;
        self
    }
    /// <p>Indicates the expected spending by the customer over the course of the project. This value helps partners and AWS estimate the financial impact of the opportunity. Use the <a href="https://calculator.aws/#/">AWS Pricing Calculator</a> to create an estimate of the customer’s total spend. If only annual recurring revenue (ARR) is available, distribute it across 12 months to provide an average monthly value.</p>
    pub fn get_expected_customer_spend(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ExpectedCustomerSpend>> {
        &self.expected_customer_spend
    }
    /// Consumes the builder and constructs a [`AwsOpportunityProject`](crate::types::AwsOpportunityProject).
    pub fn build(self) -> crate::types::AwsOpportunityProject {
        crate::types::AwsOpportunityProject {
            expected_customer_spend: self.expected_customer_spend,
        }
    }
}
