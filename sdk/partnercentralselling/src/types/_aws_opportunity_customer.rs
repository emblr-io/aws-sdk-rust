// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the customer associated with the AWS opportunity. This field captures key details about the customer that are necessary for managing the opportunity.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsOpportunityCustomer {
    /// <p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>
    pub contacts: ::std::option::Option<::std::vec::Vec<crate::types::Contact>>,
}
impl AwsOpportunityCustomer {
    /// <p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.contacts.is_none()`.
    pub fn contacts(&self) -> &[crate::types::Contact] {
        self.contacts.as_deref().unwrap_or_default()
    }
}
impl AwsOpportunityCustomer {
    /// Creates a new builder-style object to manufacture [`AwsOpportunityCustomer`](crate::types::AwsOpportunityCustomer).
    pub fn builder() -> crate::types::builders::AwsOpportunityCustomerBuilder {
        crate::types::builders::AwsOpportunityCustomerBuilder::default()
    }
}

/// A builder for [`AwsOpportunityCustomer`](crate::types::AwsOpportunityCustomer).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AwsOpportunityCustomerBuilder {
    pub(crate) contacts: ::std::option::Option<::std::vec::Vec<crate::types::Contact>>,
}
impl AwsOpportunityCustomerBuilder {
    /// Appends an item to `contacts`.
    ///
    /// To override the contents of this collection use [`set_contacts`](Self::set_contacts).
    ///
    /// <p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>
    pub fn contacts(mut self, input: crate::types::Contact) -> Self {
        let mut v = self.contacts.unwrap_or_default();
        v.push(input);
        self.contacts = ::std::option::Option::Some(v);
        self
    }
    /// <p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>
    pub fn set_contacts(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Contact>>) -> Self {
        self.contacts = input;
        self
    }
    /// <p>Provides a list of customer contacts involved in the opportunity. These contacts may include decision makers, influencers, and other stakeholders within the customer's organization.</p>
    pub fn get_contacts(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Contact>> {
        &self.contacts
    }
    /// Consumes the builder and constructs a [`AwsOpportunityCustomer`](crate::types::AwsOpportunityCustomer).
    pub fn build(self) -> crate::types::AwsOpportunityCustomer {
        crate::types::AwsOpportunityCustomer { contacts: self.contacts }
    }
}
