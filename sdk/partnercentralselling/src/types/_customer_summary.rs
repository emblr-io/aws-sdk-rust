// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains a <code>Customer</code> object's subset of fields.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomerSummary {
    /// <p>An object that contains a customer's account details.</p>
    pub account: ::std::option::Option<crate::types::AccountSummary>,
}
impl CustomerSummary {
    /// <p>An object that contains a customer's account details.</p>
    pub fn account(&self) -> ::std::option::Option<&crate::types::AccountSummary> {
        self.account.as_ref()
    }
}
impl CustomerSummary {
    /// Creates a new builder-style object to manufacture [`CustomerSummary`](crate::types::CustomerSummary).
    pub fn builder() -> crate::types::builders::CustomerSummaryBuilder {
        crate::types::builders::CustomerSummaryBuilder::default()
    }
}

/// A builder for [`CustomerSummary`](crate::types::CustomerSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomerSummaryBuilder {
    pub(crate) account: ::std::option::Option<crate::types::AccountSummary>,
}
impl CustomerSummaryBuilder {
    /// <p>An object that contains a customer's account details.</p>
    pub fn account(mut self, input: crate::types::AccountSummary) -> Self {
        self.account = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains a customer's account details.</p>
    pub fn set_account(mut self, input: ::std::option::Option<crate::types::AccountSummary>) -> Self {
        self.account = input;
        self
    }
    /// <p>An object that contains a customer's account details.</p>
    pub fn get_account(&self) -> &::std::option::Option<crate::types::AccountSummary> {
        &self.account
    }
    /// Consumes the builder and constructs a [`CustomerSummary`](crate::types::CustomerSummary).
    pub fn build(self) -> crate::types::CustomerSummary {
        crate::types::CustomerSummary { account: self.account }
    }
}
