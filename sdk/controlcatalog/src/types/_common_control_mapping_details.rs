// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains details about a common control mapping. In particular, it returns the Amazon Resource Name (ARN) of the common control.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CommonControlMappingDetails {
    /// <p>The Amazon Resource Name (ARN) that identifies the common control in the mapping.</p>
    pub common_control_arn: ::std::string::String,
}
impl CommonControlMappingDetails {
    /// <p>The Amazon Resource Name (ARN) that identifies the common control in the mapping.</p>
    pub fn common_control_arn(&self) -> &str {
        use std::ops::Deref;
        self.common_control_arn.deref()
    }
}
impl CommonControlMappingDetails {
    /// Creates a new builder-style object to manufacture [`CommonControlMappingDetails`](crate::types::CommonControlMappingDetails).
    pub fn builder() -> crate::types::builders::CommonControlMappingDetailsBuilder {
        crate::types::builders::CommonControlMappingDetailsBuilder::default()
    }
}

/// A builder for [`CommonControlMappingDetails`](crate::types::CommonControlMappingDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CommonControlMappingDetailsBuilder {
    pub(crate) common_control_arn: ::std::option::Option<::std::string::String>,
}
impl CommonControlMappingDetailsBuilder {
    /// <p>The Amazon Resource Name (ARN) that identifies the common control in the mapping.</p>
    /// This field is required.
    pub fn common_control_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.common_control_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies the common control in the mapping.</p>
    pub fn set_common_control_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.common_control_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies the common control in the mapping.</p>
    pub fn get_common_control_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.common_control_arn
    }
    /// Consumes the builder and constructs a [`CommonControlMappingDetails`](crate::types::CommonControlMappingDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`common_control_arn`](crate::types::builders::CommonControlMappingDetailsBuilder::common_control_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::CommonControlMappingDetails, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CommonControlMappingDetails {
            common_control_arn: self.common_control_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "common_control_arn",
                    "common_control_arn was not specified but it is required when building CommonControlMappingDetails",
                )
            })?,
        })
    }
}
