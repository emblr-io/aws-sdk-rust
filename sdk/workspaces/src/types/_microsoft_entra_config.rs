// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the configurations of the Microsoft Entra.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MicrosoftEntraConfig {
    /// <p>The identifier of the tenant.</p>
    pub tenant_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the application config.</p>
    pub application_config_secret_arn: ::std::option::Option<::std::string::String>,
}
impl MicrosoftEntraConfig {
    /// <p>The identifier of the tenant.</p>
    pub fn tenant_id(&self) -> ::std::option::Option<&str> {
        self.tenant_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the application config.</p>
    pub fn application_config_secret_arn(&self) -> ::std::option::Option<&str> {
        self.application_config_secret_arn.as_deref()
    }
}
impl MicrosoftEntraConfig {
    /// Creates a new builder-style object to manufacture [`MicrosoftEntraConfig`](crate::types::MicrosoftEntraConfig).
    pub fn builder() -> crate::types::builders::MicrosoftEntraConfigBuilder {
        crate::types::builders::MicrosoftEntraConfigBuilder::default()
    }
}

/// A builder for [`MicrosoftEntraConfig`](crate::types::MicrosoftEntraConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MicrosoftEntraConfigBuilder {
    pub(crate) tenant_id: ::std::option::Option<::std::string::String>,
    pub(crate) application_config_secret_arn: ::std::option::Option<::std::string::String>,
}
impl MicrosoftEntraConfigBuilder {
    /// <p>The identifier of the tenant.</p>
    pub fn tenant_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the tenant.</p>
    pub fn set_tenant_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_id = input;
        self
    }
    /// <p>The identifier of the tenant.</p>
    pub fn get_tenant_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_id
    }
    /// <p>The Amazon Resource Name (ARN) of the application config.</p>
    pub fn application_config_secret_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_config_secret_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application config.</p>
    pub fn set_application_config_secret_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_config_secret_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application config.</p>
    pub fn get_application_config_secret_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_config_secret_arn
    }
    /// Consumes the builder and constructs a [`MicrosoftEntraConfig`](crate::types::MicrosoftEntraConfig).
    pub fn build(self) -> crate::types::MicrosoftEntraConfig {
        crate::types::MicrosoftEntraConfig {
            tenant_id: self.tenant_id,
            application_config_secret_arn: self.application_config_secret_arn,
        }
    }
}
