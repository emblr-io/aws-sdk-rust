// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the storage connector.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StorageConnector {
    /// <p>The type of connector used to save user files.</p>
    pub connector_type: crate::types::StorageConnectorTypeEnum,
    /// <p>Indicates if the storage connetor is enabled or disabled.</p>
    pub status: crate::types::StorageConnectorStatusEnum,
}
impl StorageConnector {
    /// <p>The type of connector used to save user files.</p>
    pub fn connector_type(&self) -> &crate::types::StorageConnectorTypeEnum {
        &self.connector_type
    }
    /// <p>Indicates if the storage connetor is enabled or disabled.</p>
    pub fn status(&self) -> &crate::types::StorageConnectorStatusEnum {
        &self.status
    }
}
impl StorageConnector {
    /// Creates a new builder-style object to manufacture [`StorageConnector`](crate::types::StorageConnector).
    pub fn builder() -> crate::types::builders::StorageConnectorBuilder {
        crate::types::builders::StorageConnectorBuilder::default()
    }
}

/// A builder for [`StorageConnector`](crate::types::StorageConnector).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StorageConnectorBuilder {
    pub(crate) connector_type: ::std::option::Option<crate::types::StorageConnectorTypeEnum>,
    pub(crate) status: ::std::option::Option<crate::types::StorageConnectorStatusEnum>,
}
impl StorageConnectorBuilder {
    /// <p>The type of connector used to save user files.</p>
    /// This field is required.
    pub fn connector_type(mut self, input: crate::types::StorageConnectorTypeEnum) -> Self {
        self.connector_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of connector used to save user files.</p>
    pub fn set_connector_type(mut self, input: ::std::option::Option<crate::types::StorageConnectorTypeEnum>) -> Self {
        self.connector_type = input;
        self
    }
    /// <p>The type of connector used to save user files.</p>
    pub fn get_connector_type(&self) -> &::std::option::Option<crate::types::StorageConnectorTypeEnum> {
        &self.connector_type
    }
    /// <p>Indicates if the storage connetor is enabled or disabled.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::StorageConnectorStatusEnum) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates if the storage connetor is enabled or disabled.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::StorageConnectorStatusEnum>) -> Self {
        self.status = input;
        self
    }
    /// <p>Indicates if the storage connetor is enabled or disabled.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::StorageConnectorStatusEnum> {
        &self.status
    }
    /// Consumes the builder and constructs a [`StorageConnector`](crate::types::StorageConnector).
    /// This method will fail if any of the following fields are not set:
    /// - [`connector_type`](crate::types::builders::StorageConnectorBuilder::connector_type)
    /// - [`status`](crate::types::builders::StorageConnectorBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::StorageConnector, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StorageConnector {
            connector_type: self.connector_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "connector_type",
                    "connector_type was not specified but it is required when building StorageConnector",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building StorageConnector",
                )
            })?,
        })
    }
}
