// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the user capacity for a pool of WorkSpaces.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Capacity {
    /// <p>The desired number of user sessions for the WorkSpaces in the pool.</p>
    pub desired_user_sessions: i32,
}
impl Capacity {
    /// <p>The desired number of user sessions for the WorkSpaces in the pool.</p>
    pub fn desired_user_sessions(&self) -> i32 {
        self.desired_user_sessions
    }
}
impl Capacity {
    /// Creates a new builder-style object to manufacture [`Capacity`](crate::types::Capacity).
    pub fn builder() -> crate::types::builders::CapacityBuilder {
        crate::types::builders::CapacityBuilder::default()
    }
}

/// A builder for [`Capacity`](crate::types::Capacity).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CapacityBuilder {
    pub(crate) desired_user_sessions: ::std::option::Option<i32>,
}
impl CapacityBuilder {
    /// <p>The desired number of user sessions for the WorkSpaces in the pool.</p>
    /// This field is required.
    pub fn desired_user_sessions(mut self, input: i32) -> Self {
        self.desired_user_sessions = ::std::option::Option::Some(input);
        self
    }
    /// <p>The desired number of user sessions for the WorkSpaces in the pool.</p>
    pub fn set_desired_user_sessions(mut self, input: ::std::option::Option<i32>) -> Self {
        self.desired_user_sessions = input;
        self
    }
    /// <p>The desired number of user sessions for the WorkSpaces in the pool.</p>
    pub fn get_desired_user_sessions(&self) -> &::std::option::Option<i32> {
        &self.desired_user_sessions
    }
    /// Consumes the builder and constructs a [`Capacity`](crate::types::Capacity).
    /// This method will fail if any of the following fields are not set:
    /// - [`desired_user_sessions`](crate::types::builders::CapacityBuilder::desired_user_sessions)
    pub fn build(self) -> ::std::result::Result<crate::types::Capacity, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::Capacity {
            desired_user_sessions: self.desired_user_sessions.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "desired_user_sessions",
                    "desired_user_sessions was not specified but it is required when building Capacity",
                )
            })?,
        })
    }
}
