// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyEndpointEncryptionModeInput {
    /// <p>The identifier of the directory.</p>
    pub directory_id: ::std::option::Option<::std::string::String>,
    /// <p>The encryption mode used for endpoint connections when streaming to WorkSpaces Personal or WorkSpace Pools.</p>
    pub endpoint_encryption_mode: ::std::option::Option<crate::types::EndpointEncryptionMode>,
}
impl ModifyEndpointEncryptionModeInput {
    /// <p>The identifier of the directory.</p>
    pub fn directory_id(&self) -> ::std::option::Option<&str> {
        self.directory_id.as_deref()
    }
    /// <p>The encryption mode used for endpoint connections when streaming to WorkSpaces Personal or WorkSpace Pools.</p>
    pub fn endpoint_encryption_mode(&self) -> ::std::option::Option<&crate::types::EndpointEncryptionMode> {
        self.endpoint_encryption_mode.as_ref()
    }
}
impl ModifyEndpointEncryptionModeInput {
    /// Creates a new builder-style object to manufacture [`ModifyEndpointEncryptionModeInput`](crate::operation::modify_endpoint_encryption_mode::ModifyEndpointEncryptionModeInput).
    pub fn builder() -> crate::operation::modify_endpoint_encryption_mode::builders::ModifyEndpointEncryptionModeInputBuilder {
        crate::operation::modify_endpoint_encryption_mode::builders::ModifyEndpointEncryptionModeInputBuilder::default()
    }
}

/// A builder for [`ModifyEndpointEncryptionModeInput`](crate::operation::modify_endpoint_encryption_mode::ModifyEndpointEncryptionModeInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ModifyEndpointEncryptionModeInputBuilder {
    pub(crate) directory_id: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_encryption_mode: ::std::option::Option<crate::types::EndpointEncryptionMode>,
}
impl ModifyEndpointEncryptionModeInputBuilder {
    /// <p>The identifier of the directory.</p>
    /// This field is required.
    pub fn directory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the directory.</p>
    pub fn set_directory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>The identifier of the directory.</p>
    pub fn get_directory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_id
    }
    /// <p>The encryption mode used for endpoint connections when streaming to WorkSpaces Personal or WorkSpace Pools.</p>
    /// This field is required.
    pub fn endpoint_encryption_mode(mut self, input: crate::types::EndpointEncryptionMode) -> Self {
        self.endpoint_encryption_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The encryption mode used for endpoint connections when streaming to WorkSpaces Personal or WorkSpace Pools.</p>
    pub fn set_endpoint_encryption_mode(mut self, input: ::std::option::Option<crate::types::EndpointEncryptionMode>) -> Self {
        self.endpoint_encryption_mode = input;
        self
    }
    /// <p>The encryption mode used for endpoint connections when streaming to WorkSpaces Personal or WorkSpace Pools.</p>
    pub fn get_endpoint_encryption_mode(&self) -> &::std::option::Option<crate::types::EndpointEncryptionMode> {
        &self.endpoint_encryption_mode
    }
    /// Consumes the builder and constructs a [`ModifyEndpointEncryptionModeInput`](crate::operation::modify_endpoint_encryption_mode::ModifyEndpointEncryptionModeInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::modify_endpoint_encryption_mode::ModifyEndpointEncryptionModeInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::modify_endpoint_encryption_mode::ModifyEndpointEncryptionModeInput {
            directory_id: self.directory_id,
            endpoint_encryption_mode: self.endpoint_encryption_mode,
        })
    }
}
