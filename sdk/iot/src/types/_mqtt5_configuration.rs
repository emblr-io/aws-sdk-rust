// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration to add user-defined properties to enrich MQTT 5 messages.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Mqtt5Configuration {
    /// <p>An object that represents the propagating thing attributes and the connection attributes.</p>
    pub propagating_attributes: ::std::option::Option<::std::vec::Vec<crate::types::PropagatingAttribute>>,
}
impl Mqtt5Configuration {
    /// <p>An object that represents the propagating thing attributes and the connection attributes.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.propagating_attributes.is_none()`.
    pub fn propagating_attributes(&self) -> &[crate::types::PropagatingAttribute] {
        self.propagating_attributes.as_deref().unwrap_or_default()
    }
}
impl Mqtt5Configuration {
    /// Creates a new builder-style object to manufacture [`Mqtt5Configuration`](crate::types::Mqtt5Configuration).
    pub fn builder() -> crate::types::builders::Mqtt5ConfigurationBuilder {
        crate::types::builders::Mqtt5ConfigurationBuilder::default()
    }
}

/// A builder for [`Mqtt5Configuration`](crate::types::Mqtt5Configuration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct Mqtt5ConfigurationBuilder {
    pub(crate) propagating_attributes: ::std::option::Option<::std::vec::Vec<crate::types::PropagatingAttribute>>,
}
impl Mqtt5ConfigurationBuilder {
    /// Appends an item to `propagating_attributes`.
    ///
    /// To override the contents of this collection use [`set_propagating_attributes`](Self::set_propagating_attributes).
    ///
    /// <p>An object that represents the propagating thing attributes and the connection attributes.</p>
    pub fn propagating_attributes(mut self, input: crate::types::PropagatingAttribute) -> Self {
        let mut v = self.propagating_attributes.unwrap_or_default();
        v.push(input);
        self.propagating_attributes = ::std::option::Option::Some(v);
        self
    }
    /// <p>An object that represents the propagating thing attributes and the connection attributes.</p>
    pub fn set_propagating_attributes(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::PropagatingAttribute>>) -> Self {
        self.propagating_attributes = input;
        self
    }
    /// <p>An object that represents the propagating thing attributes and the connection attributes.</p>
    pub fn get_propagating_attributes(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PropagatingAttribute>> {
        &self.propagating_attributes
    }
    /// Consumes the builder and constructs a [`Mqtt5Configuration`](crate::types::Mqtt5Configuration).
    pub fn build(self) -> crate::types::Mqtt5Configuration {
        crate::types::Mqtt5Configuration {
            propagating_attributes: self.propagating_attributes,
        }
    }
}
