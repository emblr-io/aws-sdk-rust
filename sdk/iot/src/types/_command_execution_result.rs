// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result value of the command execution. The device can use the result field to share additional details about the execution such as a return value of a remote function call.</p><note>
/// <p>This field is not applicable if you use the <code>AWS-IoT-FleetWise</code> namespace.</p>
/// </note>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CommandExecutionResult {
    /// <p>An attribute of type String. For example:</p>
    /// <p><code>"S": "Hello"</code></p>
    pub s: ::std::option::Option<::std::string::String>,
    /// <p>An attribute of type Boolean. For example:</p>
    /// <p><code>"BOOL": true</code></p>
    pub b: ::std::option::Option<bool>,
    /// <p>An attribute of type Binary.</p>
    pub bin: ::std::option::Option<::aws_smithy_types::Blob>,
}
impl CommandExecutionResult {
    /// <p>An attribute of type String. For example:</p>
    /// <p><code>"S": "Hello"</code></p>
    pub fn s(&self) -> ::std::option::Option<&str> {
        self.s.as_deref()
    }
    /// <p>An attribute of type Boolean. For example:</p>
    /// <p><code>"BOOL": true</code></p>
    pub fn b(&self) -> ::std::option::Option<bool> {
        self.b
    }
    /// <p>An attribute of type Binary.</p>
    pub fn bin(&self) -> ::std::option::Option<&::aws_smithy_types::Blob> {
        self.bin.as_ref()
    }
}
impl CommandExecutionResult {
    /// Creates a new builder-style object to manufacture [`CommandExecutionResult`](crate::types::CommandExecutionResult).
    pub fn builder() -> crate::types::builders::CommandExecutionResultBuilder {
        crate::types::builders::CommandExecutionResultBuilder::default()
    }
}

/// A builder for [`CommandExecutionResult`](crate::types::CommandExecutionResult).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CommandExecutionResultBuilder {
    pub(crate) s: ::std::option::Option<::std::string::String>,
    pub(crate) b: ::std::option::Option<bool>,
    pub(crate) bin: ::std::option::Option<::aws_smithy_types::Blob>,
}
impl CommandExecutionResultBuilder {
    /// <p>An attribute of type String. For example:</p>
    /// <p><code>"S": "Hello"</code></p>
    pub fn s(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An attribute of type String. For example:</p>
    /// <p><code>"S": "Hello"</code></p>
    pub fn set_s(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s = input;
        self
    }
    /// <p>An attribute of type String. For example:</p>
    /// <p><code>"S": "Hello"</code></p>
    pub fn get_s(&self) -> &::std::option::Option<::std::string::String> {
        &self.s
    }
    /// <p>An attribute of type Boolean. For example:</p>
    /// <p><code>"BOOL": true</code></p>
    pub fn b(mut self, input: bool) -> Self {
        self.b = ::std::option::Option::Some(input);
        self
    }
    /// <p>An attribute of type Boolean. For example:</p>
    /// <p><code>"BOOL": true</code></p>
    pub fn set_b(mut self, input: ::std::option::Option<bool>) -> Self {
        self.b = input;
        self
    }
    /// <p>An attribute of type Boolean. For example:</p>
    /// <p><code>"BOOL": true</code></p>
    pub fn get_b(&self) -> &::std::option::Option<bool> {
        &self.b
    }
    /// <p>An attribute of type Binary.</p>
    pub fn bin(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.bin = ::std::option::Option::Some(input);
        self
    }
    /// <p>An attribute of type Binary.</p>
    pub fn set_bin(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.bin = input;
        self
    }
    /// <p>An attribute of type Binary.</p>
    pub fn get_bin(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.bin
    }
    /// Consumes the builder and constructs a [`CommandExecutionResult`](crate::types::CommandExecutionResult).
    pub fn build(self) -> crate::types::CommandExecutionResult {
        crate::types::CommandExecutionResult {
            s: self.s,
            b: self.b,
            bin: self.bin,
        }
    }
}
