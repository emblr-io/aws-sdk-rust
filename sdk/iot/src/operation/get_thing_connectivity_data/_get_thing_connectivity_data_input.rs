// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GetThingConnectivityDataInput {
    /// <p>The name of your IoT thing.</p>
    pub thing_name: ::std::option::Option<::std::string::String>,
}
impl GetThingConnectivityDataInput {
    /// <p>The name of your IoT thing.</p>
    pub fn thing_name(&self) -> ::std::option::Option<&str> {
        self.thing_name.as_deref()
    }
}
impl ::std::fmt::Debug for GetThingConnectivityDataInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetThingConnectivityDataInput");
        formatter.field("thing_name", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl GetThingConnectivityDataInput {
    /// Creates a new builder-style object to manufacture [`GetThingConnectivityDataInput`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataInput).
    pub fn builder() -> crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataInputBuilder {
        crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataInputBuilder::default()
    }
}

/// A builder for [`GetThingConnectivityDataInput`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GetThingConnectivityDataInputBuilder {
    pub(crate) thing_name: ::std::option::Option<::std::string::String>,
}
impl GetThingConnectivityDataInputBuilder {
    /// <p>The name of your IoT thing.</p>
    /// This field is required.
    pub fn thing_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.thing_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of your IoT thing.</p>
    pub fn set_thing_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.thing_name = input;
        self
    }
    /// <p>The name of your IoT thing.</p>
    pub fn get_thing_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.thing_name
    }
    /// Consumes the builder and constructs a [`GetThingConnectivityDataInput`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_thing_connectivity_data::GetThingConnectivityDataInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_thing_connectivity_data::GetThingConnectivityDataInput { thing_name: self.thing_name })
    }
}
impl ::std::fmt::Debug for GetThingConnectivityDataInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetThingConnectivityDataInputBuilder");
        formatter.field("thing_name", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
