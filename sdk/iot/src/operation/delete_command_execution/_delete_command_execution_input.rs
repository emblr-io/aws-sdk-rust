// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteCommandExecutionInput {
    /// <p>The unique identifier of the command execution that you want to delete from your account.</p>
    pub execution_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Number (ARN) of the target device for which you want to delete command executions.</p>
    pub target_arn: ::std::option::Option<::std::string::String>,
}
impl DeleteCommandExecutionInput {
    /// <p>The unique identifier of the command execution that you want to delete from your account.</p>
    pub fn execution_id(&self) -> ::std::option::Option<&str> {
        self.execution_id.as_deref()
    }
    /// <p>The Amazon Resource Number (ARN) of the target device for which you want to delete command executions.</p>
    pub fn target_arn(&self) -> ::std::option::Option<&str> {
        self.target_arn.as_deref()
    }
}
impl DeleteCommandExecutionInput {
    /// Creates a new builder-style object to manufacture [`DeleteCommandExecutionInput`](crate::operation::delete_command_execution::DeleteCommandExecutionInput).
    pub fn builder() -> crate::operation::delete_command_execution::builders::DeleteCommandExecutionInputBuilder {
        crate::operation::delete_command_execution::builders::DeleteCommandExecutionInputBuilder::default()
    }
}

/// A builder for [`DeleteCommandExecutionInput`](crate::operation::delete_command_execution::DeleteCommandExecutionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteCommandExecutionInputBuilder {
    pub(crate) execution_id: ::std::option::Option<::std::string::String>,
    pub(crate) target_arn: ::std::option::Option<::std::string::String>,
}
impl DeleteCommandExecutionInputBuilder {
    /// <p>The unique identifier of the command execution that you want to delete from your account.</p>
    /// This field is required.
    pub fn execution_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the command execution that you want to delete from your account.</p>
    pub fn set_execution_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_id = input;
        self
    }
    /// <p>The unique identifier of the command execution that you want to delete from your account.</p>
    pub fn get_execution_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_id
    }
    /// <p>The Amazon Resource Number (ARN) of the target device for which you want to delete command executions.</p>
    /// This field is required.
    pub fn target_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Number (ARN) of the target device for which you want to delete command executions.</p>
    pub fn set_target_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_arn = input;
        self
    }
    /// <p>The Amazon Resource Number (ARN) of the target device for which you want to delete command executions.</p>
    pub fn get_target_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_arn
    }
    /// Consumes the builder and constructs a [`DeleteCommandExecutionInput`](crate::operation::delete_command_execution::DeleteCommandExecutionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_command_execution::DeleteCommandExecutionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_command_execution::DeleteCommandExecutionInput {
            execution_id: self.execution_id,
            target_arn: self.target_arn,
        })
    }
}
