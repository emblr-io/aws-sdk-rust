// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateCommandOutput {
    /// <p>The unique identifier for the command.</p>
    pub command_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Number (ARN) of the command. For example, <code>arn:aws:iot:<region>
    /// :
    /// <accountid>
    /// :command/
    /// <commandid></commandid>
    /// </accountid>
    /// </region></code></p>
    pub command_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateCommandOutput {
    /// <p>The unique identifier for the command.</p>
    pub fn command_id(&self) -> ::std::option::Option<&str> {
        self.command_id.as_deref()
    }
    /// <p>The Amazon Resource Number (ARN) of the command. For example, <code>arn:aws:iot:<region>
    /// :
    /// <accountid>
    /// :command/
    /// <commandid></commandid>
    /// </accountid>
    /// </region></code></p>
    pub fn command_arn(&self) -> ::std::option::Option<&str> {
        self.command_arn.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateCommandOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateCommandOutput {
    /// Creates a new builder-style object to manufacture [`CreateCommandOutput`](crate::operation::create_command::CreateCommandOutput).
    pub fn builder() -> crate::operation::create_command::builders::CreateCommandOutputBuilder {
        crate::operation::create_command::builders::CreateCommandOutputBuilder::default()
    }
}

/// A builder for [`CreateCommandOutput`](crate::operation::create_command::CreateCommandOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateCommandOutputBuilder {
    pub(crate) command_id: ::std::option::Option<::std::string::String>,
    pub(crate) command_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateCommandOutputBuilder {
    /// <p>The unique identifier for the command.</p>
    pub fn command_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.command_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the command.</p>
    pub fn set_command_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.command_id = input;
        self
    }
    /// <p>The unique identifier for the command.</p>
    pub fn get_command_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.command_id
    }
    /// <p>The Amazon Resource Number (ARN) of the command. For example, <code>arn:aws:iot:<region>
    /// :
    /// <accountid>
    /// :command/
    /// <commandid></commandid>
    /// </accountid>
    /// </region></code></p>
    pub fn command_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.command_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Number (ARN) of the command. For example, <code>arn:aws:iot:<region>
    /// :
    /// <accountid>
    /// :command/
    /// <commandid></commandid>
    /// </accountid>
    /// </region></code></p>
    pub fn set_command_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.command_arn = input;
        self
    }
    /// <p>The Amazon Resource Number (ARN) of the command. For example, <code>arn:aws:iot:<region>
    /// :
    /// <accountid>
    /// :command/
    /// <commandid></commandid>
    /// </accountid>
    /// </region></code></p>
    pub fn get_command_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.command_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateCommandOutput`](crate::operation::create_command::CreateCommandOutput).
    pub fn build(self) -> crate::operation::create_command::CreateCommandOutput {
        crate::operation::create_command::CreateCommandOutput {
            command_id: self.command_id,
            command_arn: self.command_arn,
            _request_id: self._request_id,
        }
    }
}
