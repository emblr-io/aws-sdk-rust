// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateThingTypeInput {
    /// <p>The name of a thing type.</p>
    pub thing_type_name: ::std::option::Option<::std::string::String>,
    /// <p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>
    pub thing_type_properties: ::std::option::Option<crate::types::ThingTypeProperties>,
}
impl UpdateThingTypeInput {
    /// <p>The name of a thing type.</p>
    pub fn thing_type_name(&self) -> ::std::option::Option<&str> {
        self.thing_type_name.as_deref()
    }
    /// <p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>
    pub fn thing_type_properties(&self) -> ::std::option::Option<&crate::types::ThingTypeProperties> {
        self.thing_type_properties.as_ref()
    }
}
impl UpdateThingTypeInput {
    /// Creates a new builder-style object to manufacture [`UpdateThingTypeInput`](crate::operation::update_thing_type::UpdateThingTypeInput).
    pub fn builder() -> crate::operation::update_thing_type::builders::UpdateThingTypeInputBuilder {
        crate::operation::update_thing_type::builders::UpdateThingTypeInputBuilder::default()
    }
}

/// A builder for [`UpdateThingTypeInput`](crate::operation::update_thing_type::UpdateThingTypeInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateThingTypeInputBuilder {
    pub(crate) thing_type_name: ::std::option::Option<::std::string::String>,
    pub(crate) thing_type_properties: ::std::option::Option<crate::types::ThingTypeProperties>,
}
impl UpdateThingTypeInputBuilder {
    /// <p>The name of a thing type.</p>
    /// This field is required.
    pub fn thing_type_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.thing_type_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a thing type.</p>
    pub fn set_thing_type_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.thing_type_name = input;
        self
    }
    /// <p>The name of a thing type.</p>
    pub fn get_thing_type_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.thing_type_name
    }
    /// <p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>
    pub fn thing_type_properties(mut self, input: crate::types::ThingTypeProperties) -> Self {
        self.thing_type_properties = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>
    pub fn set_thing_type_properties(mut self, input: ::std::option::Option<crate::types::ThingTypeProperties>) -> Self {
        self.thing_type_properties = input;
        self
    }
    /// <p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>
    pub fn get_thing_type_properties(&self) -> &::std::option::Option<crate::types::ThingTypeProperties> {
        &self.thing_type_properties
    }
    /// Consumes the builder and constructs a [`UpdateThingTypeInput`](crate::operation::update_thing_type::UpdateThingTypeInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_thing_type::UpdateThingTypeInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_thing_type::UpdateThingTypeInput {
            thing_type_name: self.thing_type_name,
            thing_type_properties: self.thing_type_properties,
        })
    }
}
