// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddStreamGroupLocationsOutput {
    /// <p>This value is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html">Amazon Resource Name (ARN)</a> or ID that uniquely identifies the stream group resource. Example ARN: <code>arn:aws:gameliftstreams:us-west-2:111122223333:streamgroup/sg-1AB2C3De4</code>. Example ID: <code>sg-1AB2C3De4</code>.</p>
    pub identifier: ::std::string::String,
    /// <p>This value is set of locations, including their name, current status, and capacities.</p>
    /// <p>A location can be in one of the following states:</p>
    /// <ul>
    /// <li>
    /// <p><b>ACTIVATING</b>: Amazon GameLift Streams is preparing the location. You cannot stream from, scale the capacity of, or remove this location yet.</p></li>
    /// <li>
    /// <p><b>ACTIVE</b>: The location is provisioned with initial capacity. You can now stream from, scale the capacity of, or remove this location.</p></li>
    /// <li>
    /// <p><b>ERROR</b>: Amazon GameLift Streams failed to set up this location. The StatusReason field describes the error. You can remove this location and try to add it again.</p></li>
    /// <li>
    /// <p><b>REMOVING</b>: Amazon GameLift Streams is working to remove this location. It releases all provisioned capacity for this location in this stream group.</p></li>
    /// </ul>
    pub locations: ::std::vec::Vec<crate::types::LocationState>,
    _request_id: Option<String>,
}
impl AddStreamGroupLocationsOutput {
    /// <p>This value is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html">Amazon Resource Name (ARN)</a> or ID that uniquely identifies the stream group resource. Example ARN: <code>arn:aws:gameliftstreams:us-west-2:111122223333:streamgroup/sg-1AB2C3De4</code>. Example ID: <code>sg-1AB2C3De4</code>.</p>
    pub fn identifier(&self) -> &str {
        use std::ops::Deref;
        self.identifier.deref()
    }
    /// <p>This value is set of locations, including their name, current status, and capacities.</p>
    /// <p>A location can be in one of the following states:</p>
    /// <ul>
    /// <li>
    /// <p><b>ACTIVATING</b>: Amazon GameLift Streams is preparing the location. You cannot stream from, scale the capacity of, or remove this location yet.</p></li>
    /// <li>
    /// <p><b>ACTIVE</b>: The location is provisioned with initial capacity. You can now stream from, scale the capacity of, or remove this location.</p></li>
    /// <li>
    /// <p><b>ERROR</b>: Amazon GameLift Streams failed to set up this location. The StatusReason field describes the error. You can remove this location and try to add it again.</p></li>
    /// <li>
    /// <p><b>REMOVING</b>: Amazon GameLift Streams is working to remove this location. It releases all provisioned capacity for this location in this stream group.</p></li>
    /// </ul>
    pub fn locations(&self) -> &[crate::types::LocationState] {
        use std::ops::Deref;
        self.locations.deref()
    }
}
impl ::aws_types::request_id::RequestId for AddStreamGroupLocationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AddStreamGroupLocationsOutput {
    /// Creates a new builder-style object to manufacture [`AddStreamGroupLocationsOutput`](crate::operation::add_stream_group_locations::AddStreamGroupLocationsOutput).
    pub fn builder() -> crate::operation::add_stream_group_locations::builders::AddStreamGroupLocationsOutputBuilder {
        crate::operation::add_stream_group_locations::builders::AddStreamGroupLocationsOutputBuilder::default()
    }
}

/// A builder for [`AddStreamGroupLocationsOutput`](crate::operation::add_stream_group_locations::AddStreamGroupLocationsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AddStreamGroupLocationsOutputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
    pub(crate) locations: ::std::option::Option<::std::vec::Vec<crate::types::LocationState>>,
    _request_id: Option<String>,
}
impl AddStreamGroupLocationsOutputBuilder {
    /// <p>This value is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html">Amazon Resource Name (ARN)</a> or ID that uniquely identifies the stream group resource. Example ARN: <code>arn:aws:gameliftstreams:us-west-2:111122223333:streamgroup/sg-1AB2C3De4</code>. Example ID: <code>sg-1AB2C3De4</code>.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This value is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html">Amazon Resource Name (ARN)</a> or ID that uniquely identifies the stream group resource. Example ARN: <code>arn:aws:gameliftstreams:us-west-2:111122223333:streamgroup/sg-1AB2C3De4</code>. Example ID: <code>sg-1AB2C3De4</code>.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>This value is an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html">Amazon Resource Name (ARN)</a> or ID that uniquely identifies the stream group resource. Example ARN: <code>arn:aws:gameliftstreams:us-west-2:111122223333:streamgroup/sg-1AB2C3De4</code>. Example ID: <code>sg-1AB2C3De4</code>.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// Appends an item to `locations`.
    ///
    /// To override the contents of this collection use [`set_locations`](Self::set_locations).
    ///
    /// <p>This value is set of locations, including their name, current status, and capacities.</p>
    /// <p>A location can be in one of the following states:</p>
    /// <ul>
    /// <li>
    /// <p><b>ACTIVATING</b>: Amazon GameLift Streams is preparing the location. You cannot stream from, scale the capacity of, or remove this location yet.</p></li>
    /// <li>
    /// <p><b>ACTIVE</b>: The location is provisioned with initial capacity. You can now stream from, scale the capacity of, or remove this location.</p></li>
    /// <li>
    /// <p><b>ERROR</b>: Amazon GameLift Streams failed to set up this location. The StatusReason field describes the error. You can remove this location and try to add it again.</p></li>
    /// <li>
    /// <p><b>REMOVING</b>: Amazon GameLift Streams is working to remove this location. It releases all provisioned capacity for this location in this stream group.</p></li>
    /// </ul>
    pub fn locations(mut self, input: crate::types::LocationState) -> Self {
        let mut v = self.locations.unwrap_or_default();
        v.push(input);
        self.locations = ::std::option::Option::Some(v);
        self
    }
    /// <p>This value is set of locations, including their name, current status, and capacities.</p>
    /// <p>A location can be in one of the following states:</p>
    /// <ul>
    /// <li>
    /// <p><b>ACTIVATING</b>: Amazon GameLift Streams is preparing the location. You cannot stream from, scale the capacity of, or remove this location yet.</p></li>
    /// <li>
    /// <p><b>ACTIVE</b>: The location is provisioned with initial capacity. You can now stream from, scale the capacity of, or remove this location.</p></li>
    /// <li>
    /// <p><b>ERROR</b>: Amazon GameLift Streams failed to set up this location. The StatusReason field describes the error. You can remove this location and try to add it again.</p></li>
    /// <li>
    /// <p><b>REMOVING</b>: Amazon GameLift Streams is working to remove this location. It releases all provisioned capacity for this location in this stream group.</p></li>
    /// </ul>
    pub fn set_locations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::LocationState>>) -> Self {
        self.locations = input;
        self
    }
    /// <p>This value is set of locations, including their name, current status, and capacities.</p>
    /// <p>A location can be in one of the following states:</p>
    /// <ul>
    /// <li>
    /// <p><b>ACTIVATING</b>: Amazon GameLift Streams is preparing the location. You cannot stream from, scale the capacity of, or remove this location yet.</p></li>
    /// <li>
    /// <p><b>ACTIVE</b>: The location is provisioned with initial capacity. You can now stream from, scale the capacity of, or remove this location.</p></li>
    /// <li>
    /// <p><b>ERROR</b>: Amazon GameLift Streams failed to set up this location. The StatusReason field describes the error. You can remove this location and try to add it again.</p></li>
    /// <li>
    /// <p><b>REMOVING</b>: Amazon GameLift Streams is working to remove this location. It releases all provisioned capacity for this location in this stream group.</p></li>
    /// </ul>
    pub fn get_locations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::LocationState>> {
        &self.locations
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AddStreamGroupLocationsOutput`](crate::operation::add_stream_group_locations::AddStreamGroupLocationsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`identifier`](crate::operation::add_stream_group_locations::builders::AddStreamGroupLocationsOutputBuilder::identifier)
    /// - [`locations`](crate::operation::add_stream_group_locations::builders::AddStreamGroupLocationsOutputBuilder::locations)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::add_stream_group_locations::AddStreamGroupLocationsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::add_stream_group_locations::AddStreamGroupLocationsOutput {
            identifier: self.identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "identifier",
                    "identifier was not specified but it is required when building AddStreamGroupLocationsOutput",
                )
            })?,
            locations: self.locations.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "locations",
                    "locations was not specified but it is required when building AddStreamGroupLocationsOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
