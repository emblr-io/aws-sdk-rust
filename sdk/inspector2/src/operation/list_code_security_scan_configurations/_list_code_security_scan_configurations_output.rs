// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCodeSecurityScanConfigurationsOutput {
    /// <p>A list of code security scan configuration summaries.</p>
    pub configurations: ::std::option::Option<::std::vec::Vec<crate::types::CodeSecurityScanConfigurationSummary>>,
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListCodeSecurityScanConfigurationsOutput {
    /// <p>A list of code security scan configuration summaries.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.configurations.is_none()`.
    pub fn configurations(&self) -> &[crate::types::CodeSecurityScanConfigurationSummary] {
        self.configurations.as_deref().unwrap_or_default()
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListCodeSecurityScanConfigurationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCodeSecurityScanConfigurationsOutput {
    /// Creates a new builder-style object to manufacture [`ListCodeSecurityScanConfigurationsOutput`](crate::operation::list_code_security_scan_configurations::ListCodeSecurityScanConfigurationsOutput).
    pub fn builder() -> crate::operation::list_code_security_scan_configurations::builders::ListCodeSecurityScanConfigurationsOutputBuilder {
        crate::operation::list_code_security_scan_configurations::builders::ListCodeSecurityScanConfigurationsOutputBuilder::default()
    }
}

/// A builder for [`ListCodeSecurityScanConfigurationsOutput`](crate::operation::list_code_security_scan_configurations::ListCodeSecurityScanConfigurationsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListCodeSecurityScanConfigurationsOutputBuilder {
    pub(crate) configurations: ::std::option::Option<::std::vec::Vec<crate::types::CodeSecurityScanConfigurationSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListCodeSecurityScanConfigurationsOutputBuilder {
    /// Appends an item to `configurations`.
    ///
    /// To override the contents of this collection use [`set_configurations`](Self::set_configurations).
    ///
    /// <p>A list of code security scan configuration summaries.</p>
    pub fn configurations(mut self, input: crate::types::CodeSecurityScanConfigurationSummary) -> Self {
        let mut v = self.configurations.unwrap_or_default();
        v.push(input);
        self.configurations = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of code security scan configuration summaries.</p>
    pub fn set_configurations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CodeSecurityScanConfigurationSummary>>) -> Self {
        self.configurations = input;
        self
    }
    /// <p>A list of code security scan configuration summaries.</p>
    pub fn get_configurations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CodeSecurityScanConfigurationSummary>> {
        &self.configurations
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCodeSecurityScanConfigurationsOutput`](crate::operation::list_code_security_scan_configurations::ListCodeSecurityScanConfigurationsOutput).
    pub fn build(self) -> crate::operation::list_code_security_scan_configurations::ListCodeSecurityScanConfigurationsOutput {
        crate::operation::list_code_security_scan_configurations::ListCodeSecurityScanConfigurationsOutput {
            configurations: self.configurations,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
