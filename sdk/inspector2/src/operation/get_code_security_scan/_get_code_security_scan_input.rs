// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCodeSecurityScanInput {
    /// <p>The resource identifier for the code repository that was scanned.</p>
    pub resource: ::std::option::Option<crate::types::CodeSecurityResource>,
    /// <p>The unique identifier of the scan to retrieve.</p>
    pub scan_id: ::std::option::Option<::std::string::String>,
}
impl GetCodeSecurityScanInput {
    /// <p>The resource identifier for the code repository that was scanned.</p>
    pub fn resource(&self) -> ::std::option::Option<&crate::types::CodeSecurityResource> {
        self.resource.as_ref()
    }
    /// <p>The unique identifier of the scan to retrieve.</p>
    pub fn scan_id(&self) -> ::std::option::Option<&str> {
        self.scan_id.as_deref()
    }
}
impl GetCodeSecurityScanInput {
    /// Creates a new builder-style object to manufacture [`GetCodeSecurityScanInput`](crate::operation::get_code_security_scan::GetCodeSecurityScanInput).
    pub fn builder() -> crate::operation::get_code_security_scan::builders::GetCodeSecurityScanInputBuilder {
        crate::operation::get_code_security_scan::builders::GetCodeSecurityScanInputBuilder::default()
    }
}

/// A builder for [`GetCodeSecurityScanInput`](crate::operation::get_code_security_scan::GetCodeSecurityScanInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetCodeSecurityScanInputBuilder {
    pub(crate) resource: ::std::option::Option<crate::types::CodeSecurityResource>,
    pub(crate) scan_id: ::std::option::Option<::std::string::String>,
}
impl GetCodeSecurityScanInputBuilder {
    /// <p>The resource identifier for the code repository that was scanned.</p>
    /// This field is required.
    pub fn resource(mut self, input: crate::types::CodeSecurityResource) -> Self {
        self.resource = ::std::option::Option::Some(input);
        self
    }
    /// <p>The resource identifier for the code repository that was scanned.</p>
    pub fn set_resource(mut self, input: ::std::option::Option<crate::types::CodeSecurityResource>) -> Self {
        self.resource = input;
        self
    }
    /// <p>The resource identifier for the code repository that was scanned.</p>
    pub fn get_resource(&self) -> &::std::option::Option<crate::types::CodeSecurityResource> {
        &self.resource
    }
    /// <p>The unique identifier of the scan to retrieve.</p>
    /// This field is required.
    pub fn scan_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scan_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the scan to retrieve.</p>
    pub fn set_scan_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scan_id = input;
        self
    }
    /// <p>The unique identifier of the scan to retrieve.</p>
    pub fn get_scan_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.scan_id
    }
    /// Consumes the builder and constructs a [`GetCodeSecurityScanInput`](crate::operation::get_code_security_scan::GetCodeSecurityScanInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_code_security_scan::GetCodeSecurityScanInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_code_security_scan::GetCodeSecurityScanInput {
            resource: self.resource,
            scan_id: self.scan_id,
        })
    }
}
