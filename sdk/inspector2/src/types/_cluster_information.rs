// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterInformation {
    /// <p>The cluster ARN.</p>
    pub cluster_arn: ::std::string::String,
    /// <p>Details about the cluster.</p>
    pub cluster_details: ::std::option::Option<::std::vec::Vec<crate::types::ClusterDetails>>,
}
impl ClusterInformation {
    /// <p>The cluster ARN.</p>
    pub fn cluster_arn(&self) -> &str {
        use std::ops::Deref;
        self.cluster_arn.deref()
    }
    /// <p>Details about the cluster.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.cluster_details.is_none()`.
    pub fn cluster_details(&self) -> &[crate::types::ClusterDetails] {
        self.cluster_details.as_deref().unwrap_or_default()
    }
}
impl ClusterInformation {
    /// Creates a new builder-style object to manufacture [`ClusterInformation`](crate::types::ClusterInformation).
    pub fn builder() -> crate::types::builders::ClusterInformationBuilder {
        crate::types::builders::ClusterInformationBuilder::default()
    }
}

/// A builder for [`ClusterInformation`](crate::types::ClusterInformation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClusterInformationBuilder {
    pub(crate) cluster_arn: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_details: ::std::option::Option<::std::vec::Vec<crate::types::ClusterDetails>>,
}
impl ClusterInformationBuilder {
    /// <p>The cluster ARN.</p>
    /// This field is required.
    pub fn cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The cluster ARN.</p>
    pub fn set_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>The cluster ARN.</p>
    pub fn get_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_arn
    }
    /// Appends an item to `cluster_details`.
    ///
    /// To override the contents of this collection use [`set_cluster_details`](Self::set_cluster_details).
    ///
    /// <p>Details about the cluster.</p>
    pub fn cluster_details(mut self, input: crate::types::ClusterDetails) -> Self {
        let mut v = self.cluster_details.unwrap_or_default();
        v.push(input);
        self.cluster_details = ::std::option::Option::Some(v);
        self
    }
    /// <p>Details about the cluster.</p>
    pub fn set_cluster_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ClusterDetails>>) -> Self {
        self.cluster_details = input;
        self
    }
    /// <p>Details about the cluster.</p>
    pub fn get_cluster_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ClusterDetails>> {
        &self.cluster_details
    }
    /// Consumes the builder and constructs a [`ClusterInformation`](crate::types::ClusterInformation).
    /// This method will fail if any of the following fields are not set:
    /// - [`cluster_arn`](crate::types::builders::ClusterInformationBuilder::cluster_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::ClusterInformation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ClusterInformation {
            cluster_arn: self.cluster_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cluster_arn",
                    "cluster_arn was not specified but it is required when building ClusterInformation",
                )
            })?,
            cluster_details: self.cluster_details,
        })
    }
}
