// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about a request to disassociate a code repository from a scan configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateConfigurationRequest {
    /// <p>The Amazon Resource Name (ARN) of the scan configuration to disassociate from a code repository.</p>
    pub scan_configuration_arn: ::std::string::String,
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub resource: ::std::option::Option<crate::types::CodeSecurityResource>,
}
impl DisassociateConfigurationRequest {
    /// <p>The Amazon Resource Name (ARN) of the scan configuration to disassociate from a code repository.</p>
    pub fn scan_configuration_arn(&self) -> &str {
        use std::ops::Deref;
        self.scan_configuration_arn.deref()
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn resource(&self) -> ::std::option::Option<&crate::types::CodeSecurityResource> {
        self.resource.as_ref()
    }
}
impl DisassociateConfigurationRequest {
    /// Creates a new builder-style object to manufacture [`DisassociateConfigurationRequest`](crate::types::DisassociateConfigurationRequest).
    pub fn builder() -> crate::types::builders::DisassociateConfigurationRequestBuilder {
        crate::types::builders::DisassociateConfigurationRequestBuilder::default()
    }
}

/// A builder for [`DisassociateConfigurationRequest`](crate::types::DisassociateConfigurationRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DisassociateConfigurationRequestBuilder {
    pub(crate) scan_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource: ::std::option::Option<crate::types::CodeSecurityResource>,
}
impl DisassociateConfigurationRequestBuilder {
    /// <p>The Amazon Resource Name (ARN) of the scan configuration to disassociate from a code repository.</p>
    /// This field is required.
    pub fn scan_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scan_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the scan configuration to disassociate from a code repository.</p>
    pub fn set_scan_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scan_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the scan configuration to disassociate from a code repository.</p>
    pub fn get_scan_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.scan_configuration_arn
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    /// This field is required.
    pub fn resource(mut self, input: crate::types::CodeSecurityResource) -> Self {
        self.resource = ::std::option::Option::Some(input);
        self
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn set_resource(mut self, input: ::std::option::Option<crate::types::CodeSecurityResource>) -> Self {
        self.resource = input;
        self
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn get_resource(&self) -> &::std::option::Option<crate::types::CodeSecurityResource> {
        &self.resource
    }
    /// Consumes the builder and constructs a [`DisassociateConfigurationRequest`](crate::types::DisassociateConfigurationRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`scan_configuration_arn`](crate::types::builders::DisassociateConfigurationRequestBuilder::scan_configuration_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::DisassociateConfigurationRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DisassociateConfigurationRequest {
            scan_configuration_arn: self.scan_configuration_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "scan_configuration_arn",
                    "scan_configuration_arn was not specified but it is required when building DisassociateConfigurationRequest",
                )
            })?,
            resource: self.resource,
        })
    }
}
