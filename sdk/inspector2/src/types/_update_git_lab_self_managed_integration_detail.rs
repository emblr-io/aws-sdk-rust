// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details required to update an integration with a self-managed GitLab instance.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateGitLabSelfManagedIntegrationDetail {
    /// <p>The authorization code received from the self-managed GitLab instance to update the integration.</p>
    pub auth_code: ::std::string::String,
}
impl UpdateGitLabSelfManagedIntegrationDetail {
    /// <p>The authorization code received from the self-managed GitLab instance to update the integration.</p>
    pub fn auth_code(&self) -> &str {
        use std::ops::Deref;
        self.auth_code.deref()
    }
}
impl ::std::fmt::Debug for UpdateGitLabSelfManagedIntegrationDetail {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateGitLabSelfManagedIntegrationDetail");
        formatter.field("auth_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl UpdateGitLabSelfManagedIntegrationDetail {
    /// Creates a new builder-style object to manufacture [`UpdateGitLabSelfManagedIntegrationDetail`](crate::types::UpdateGitLabSelfManagedIntegrationDetail).
    pub fn builder() -> crate::types::builders::UpdateGitLabSelfManagedIntegrationDetailBuilder {
        crate::types::builders::UpdateGitLabSelfManagedIntegrationDetailBuilder::default()
    }
}

/// A builder for [`UpdateGitLabSelfManagedIntegrationDetail`](crate::types::UpdateGitLabSelfManagedIntegrationDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UpdateGitLabSelfManagedIntegrationDetailBuilder {
    pub(crate) auth_code: ::std::option::Option<::std::string::String>,
}
impl UpdateGitLabSelfManagedIntegrationDetailBuilder {
    /// <p>The authorization code received from the self-managed GitLab instance to update the integration.</p>
    /// This field is required.
    pub fn auth_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.auth_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The authorization code received from the self-managed GitLab instance to update the integration.</p>
    pub fn set_auth_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.auth_code = input;
        self
    }
    /// <p>The authorization code received from the self-managed GitLab instance to update the integration.</p>
    pub fn get_auth_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.auth_code
    }
    /// Consumes the builder and constructs a [`UpdateGitLabSelfManagedIntegrationDetail`](crate::types::UpdateGitLabSelfManagedIntegrationDetail).
    /// This method will fail if any of the following fields are not set:
    /// - [`auth_code`](crate::types::builders::UpdateGitLabSelfManagedIntegrationDetailBuilder::auth_code)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::UpdateGitLabSelfManagedIntegrationDetail, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UpdateGitLabSelfManagedIntegrationDetail {
            auth_code: self.auth_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "auth_code",
                    "auth_code was not specified but it is required when building UpdateGitLabSelfManagedIntegrationDetail",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for UpdateGitLabSelfManagedIntegrationDetailBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateGitLabSelfManagedIntegrationDetailBuilder");
        formatter.field("auth_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
