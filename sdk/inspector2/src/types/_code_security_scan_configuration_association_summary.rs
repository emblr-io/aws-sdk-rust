// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of an association between a code repository and a scan configuration.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CodeSecurityScanConfigurationAssociationSummary {
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub resource: ::std::option::Option<crate::types::CodeSecurityResource>,
}
impl CodeSecurityScanConfigurationAssociationSummary {
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn resource(&self) -> ::std::option::Option<&crate::types::CodeSecurityResource> {
        self.resource.as_ref()
    }
}
impl CodeSecurityScanConfigurationAssociationSummary {
    /// Creates a new builder-style object to manufacture [`CodeSecurityScanConfigurationAssociationSummary`](crate::types::CodeSecurityScanConfigurationAssociationSummary).
    pub fn builder() -> crate::types::builders::CodeSecurityScanConfigurationAssociationSummaryBuilder {
        crate::types::builders::CodeSecurityScanConfigurationAssociationSummaryBuilder::default()
    }
}

/// A builder for [`CodeSecurityScanConfigurationAssociationSummary`](crate::types::CodeSecurityScanConfigurationAssociationSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CodeSecurityScanConfigurationAssociationSummaryBuilder {
    pub(crate) resource: ::std::option::Option<crate::types::CodeSecurityResource>,
}
impl CodeSecurityScanConfigurationAssociationSummaryBuilder {
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn resource(mut self, input: crate::types::CodeSecurityResource) -> Self {
        self.resource = ::std::option::Option::Some(input);
        self
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn set_resource(mut self, input: ::std::option::Option<crate::types::CodeSecurityResource>) -> Self {
        self.resource = input;
        self
    }
    /// <p>Identifies a specific resource in a code repository that will be scanned.</p>
    pub fn get_resource(&self) -> &::std::option::Option<crate::types::CodeSecurityResource> {
        &self.resource
    }
    /// Consumes the builder and constructs a [`CodeSecurityScanConfigurationAssociationSummary`](crate::types::CodeSecurityScanConfigurationAssociationSummary).
    pub fn build(self) -> crate::types::CodeSecurityScanConfigurationAssociationSummary {
        crate::types::CodeSecurityScanConfigurationAssociationSummary { resource: self.resource }
    }
}
