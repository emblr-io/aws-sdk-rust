// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains your WhatsApp registration status and details of any unregistered WhatsApp phone number.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LinkedWhatsAppBusinessAccountIdMetaData {
    /// <p>The name of your account.</p>
    pub account_name: ::std::option::Option<::std::string::String>,
    /// <p>The registration status of the linked WhatsApp Business Account.</p>
    pub registration_status: ::std::option::Option<crate::types::RegistrationStatus>,
    /// <p>The details for unregistered WhatsApp phone numbers.</p>
    pub unregistered_whats_app_phone_numbers: ::std::option::Option<::std::vec::Vec<crate::types::WhatsAppPhoneNumberDetail>>,
    /// <p>The Amazon Resource Name (ARN) of the WhatsApp Business Account ID.</p>
    pub waba_id: ::std::option::Option<::std::string::String>,
}
impl LinkedWhatsAppBusinessAccountIdMetaData {
    /// <p>The name of your account.</p>
    pub fn account_name(&self) -> ::std::option::Option<&str> {
        self.account_name.as_deref()
    }
    /// <p>The registration status of the linked WhatsApp Business Account.</p>
    pub fn registration_status(&self) -> ::std::option::Option<&crate::types::RegistrationStatus> {
        self.registration_status.as_ref()
    }
    /// <p>The details for unregistered WhatsApp phone numbers.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.unregistered_whats_app_phone_numbers.is_none()`.
    pub fn unregistered_whats_app_phone_numbers(&self) -> &[crate::types::WhatsAppPhoneNumberDetail] {
        self.unregistered_whats_app_phone_numbers.as_deref().unwrap_or_default()
    }
    /// <p>The Amazon Resource Name (ARN) of the WhatsApp Business Account ID.</p>
    pub fn waba_id(&self) -> ::std::option::Option<&str> {
        self.waba_id.as_deref()
    }
}
impl LinkedWhatsAppBusinessAccountIdMetaData {
    /// Creates a new builder-style object to manufacture [`LinkedWhatsAppBusinessAccountIdMetaData`](crate::types::LinkedWhatsAppBusinessAccountIdMetaData).
    pub fn builder() -> crate::types::builders::LinkedWhatsAppBusinessAccountIdMetaDataBuilder {
        crate::types::builders::LinkedWhatsAppBusinessAccountIdMetaDataBuilder::default()
    }
}

/// A builder for [`LinkedWhatsAppBusinessAccountIdMetaData`](crate::types::LinkedWhatsAppBusinessAccountIdMetaData).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LinkedWhatsAppBusinessAccountIdMetaDataBuilder {
    pub(crate) account_name: ::std::option::Option<::std::string::String>,
    pub(crate) registration_status: ::std::option::Option<crate::types::RegistrationStatus>,
    pub(crate) unregistered_whats_app_phone_numbers: ::std::option::Option<::std::vec::Vec<crate::types::WhatsAppPhoneNumberDetail>>,
    pub(crate) waba_id: ::std::option::Option<::std::string::String>,
}
impl LinkedWhatsAppBusinessAccountIdMetaDataBuilder {
    /// <p>The name of your account.</p>
    pub fn account_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of your account.</p>
    pub fn set_account_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_name = input;
        self
    }
    /// <p>The name of your account.</p>
    pub fn get_account_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_name
    }
    /// <p>The registration status of the linked WhatsApp Business Account.</p>
    pub fn registration_status(mut self, input: crate::types::RegistrationStatus) -> Self {
        self.registration_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The registration status of the linked WhatsApp Business Account.</p>
    pub fn set_registration_status(mut self, input: ::std::option::Option<crate::types::RegistrationStatus>) -> Self {
        self.registration_status = input;
        self
    }
    /// <p>The registration status of the linked WhatsApp Business Account.</p>
    pub fn get_registration_status(&self) -> &::std::option::Option<crate::types::RegistrationStatus> {
        &self.registration_status
    }
    /// Appends an item to `unregistered_whats_app_phone_numbers`.
    ///
    /// To override the contents of this collection use [`set_unregistered_whats_app_phone_numbers`](Self::set_unregistered_whats_app_phone_numbers).
    ///
    /// <p>The details for unregistered WhatsApp phone numbers.</p>
    pub fn unregistered_whats_app_phone_numbers(mut self, input: crate::types::WhatsAppPhoneNumberDetail) -> Self {
        let mut v = self.unregistered_whats_app_phone_numbers.unwrap_or_default();
        v.push(input);
        self.unregistered_whats_app_phone_numbers = ::std::option::Option::Some(v);
        self
    }
    /// <p>The details for unregistered WhatsApp phone numbers.</p>
    pub fn set_unregistered_whats_app_phone_numbers(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::WhatsAppPhoneNumberDetail>>,
    ) -> Self {
        self.unregistered_whats_app_phone_numbers = input;
        self
    }
    /// <p>The details for unregistered WhatsApp phone numbers.</p>
    pub fn get_unregistered_whats_app_phone_numbers(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::WhatsAppPhoneNumberDetail>> {
        &self.unregistered_whats_app_phone_numbers
    }
    /// <p>The Amazon Resource Name (ARN) of the WhatsApp Business Account ID.</p>
    pub fn waba_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.waba_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the WhatsApp Business Account ID.</p>
    pub fn set_waba_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.waba_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the WhatsApp Business Account ID.</p>
    pub fn get_waba_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.waba_id
    }
    /// Consumes the builder and constructs a [`LinkedWhatsAppBusinessAccountIdMetaData`](crate::types::LinkedWhatsAppBusinessAccountIdMetaData).
    pub fn build(self) -> crate::types::LinkedWhatsAppBusinessAccountIdMetaData {
        crate::types::LinkedWhatsAppBusinessAccountIdMetaData {
            account_name: self.account_name,
            registration_status: self.registration_status,
            unregistered_whats_app_phone_numbers: self.unregistered_whats_app_phone_numbers,
            waba_id: self.waba_id,
        }
    }
}
