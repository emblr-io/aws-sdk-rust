// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information on the event destination.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WhatsAppBusinessAccountEventDestination {
    /// <p>The ARN of the event destination.</p>
    pub event_destination_arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that is able to import phone numbers and write events.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
}
impl WhatsAppBusinessAccountEventDestination {
    /// <p>The ARN of the event destination.</p>
    pub fn event_destination_arn(&self) -> &str {
        use std::ops::Deref;
        self.event_destination_arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that is able to import phone numbers and write events.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl WhatsAppBusinessAccountEventDestination {
    /// Creates a new builder-style object to manufacture [`WhatsAppBusinessAccountEventDestination`](crate::types::WhatsAppBusinessAccountEventDestination).
    pub fn builder() -> crate::types::builders::WhatsAppBusinessAccountEventDestinationBuilder {
        crate::types::builders::WhatsAppBusinessAccountEventDestinationBuilder::default()
    }
}

/// A builder for [`WhatsAppBusinessAccountEventDestination`](crate::types::WhatsAppBusinessAccountEventDestination).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WhatsAppBusinessAccountEventDestinationBuilder {
    pub(crate) event_destination_arn: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl WhatsAppBusinessAccountEventDestinationBuilder {
    /// <p>The ARN of the event destination.</p>
    /// This field is required.
    pub fn event_destination_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_destination_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the event destination.</p>
    pub fn set_event_destination_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_destination_arn = input;
        self
    }
    /// <p>The ARN of the event destination.</p>
    pub fn get_event_destination_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_destination_arn
    }
    /// <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that is able to import phone numbers and write events.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that is able to import phone numbers and write events.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that is able to import phone numbers and write events.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`WhatsAppBusinessAccountEventDestination`](crate::types::WhatsAppBusinessAccountEventDestination).
    /// This method will fail if any of the following fields are not set:
    /// - [`event_destination_arn`](crate::types::builders::WhatsAppBusinessAccountEventDestinationBuilder::event_destination_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::WhatsAppBusinessAccountEventDestination, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WhatsAppBusinessAccountEventDestination {
            event_destination_arn: self.event_destination_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "event_destination_arn",
                    "event_destination_arn was not specified but it is required when building WhatsAppBusinessAccountEventDestination",
                )
            })?,
            role_arn: self.role_arn,
        })
    }
}
