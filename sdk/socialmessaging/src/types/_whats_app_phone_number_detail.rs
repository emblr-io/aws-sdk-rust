// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of your WhatsApp phone number.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WhatsAppPhoneNumberDetail {
    /// <p>The ARN of the WhatsApp phone number.</p>
    pub arn: ::std::string::String,
    /// <p>The phone number for sending WhatsApp.</p>
    pub phone_number: ::std::string::String,
    /// <p>The phone number ID. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>.</p>
    pub phone_number_id: ::std::string::String,
    /// <p>The phone number ID from Meta.</p>
    pub meta_phone_number_id: ::std::string::String,
    /// <p>The display name for this phone number.</p>
    pub display_phone_number_name: ::std::string::String,
    /// <p>The phone number that appears in the recipients display.</p>
    pub display_phone_number: ::std::string::String,
    /// <p>The quality rating of the phone number.</p>
    pub quality_rating: ::std::string::String,
}
impl WhatsAppPhoneNumberDetail {
    /// <p>The ARN of the WhatsApp phone number.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The phone number for sending WhatsApp.</p>
    pub fn phone_number(&self) -> &str {
        use std::ops::Deref;
        self.phone_number.deref()
    }
    /// <p>The phone number ID. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>.</p>
    pub fn phone_number_id(&self) -> &str {
        use std::ops::Deref;
        self.phone_number_id.deref()
    }
    /// <p>The phone number ID from Meta.</p>
    pub fn meta_phone_number_id(&self) -> &str {
        use std::ops::Deref;
        self.meta_phone_number_id.deref()
    }
    /// <p>The display name for this phone number.</p>
    pub fn display_phone_number_name(&self) -> &str {
        use std::ops::Deref;
        self.display_phone_number_name.deref()
    }
    /// <p>The phone number that appears in the recipients display.</p>
    pub fn display_phone_number(&self) -> &str {
        use std::ops::Deref;
        self.display_phone_number.deref()
    }
    /// <p>The quality rating of the phone number.</p>
    pub fn quality_rating(&self) -> &str {
        use std::ops::Deref;
        self.quality_rating.deref()
    }
}
impl WhatsAppPhoneNumberDetail {
    /// Creates a new builder-style object to manufacture [`WhatsAppPhoneNumberDetail`](crate::types::WhatsAppPhoneNumberDetail).
    pub fn builder() -> crate::types::builders::WhatsAppPhoneNumberDetailBuilder {
        crate::types::builders::WhatsAppPhoneNumberDetailBuilder::default()
    }
}

/// A builder for [`WhatsAppPhoneNumberDetail`](crate::types::WhatsAppPhoneNumberDetail).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WhatsAppPhoneNumberDetailBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) phone_number_id: ::std::option::Option<::std::string::String>,
    pub(crate) meta_phone_number_id: ::std::option::Option<::std::string::String>,
    pub(crate) display_phone_number_name: ::std::option::Option<::std::string::String>,
    pub(crate) display_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) quality_rating: ::std::option::Option<::std::string::String>,
}
impl WhatsAppPhoneNumberDetailBuilder {
    /// <p>The ARN of the WhatsApp phone number.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the WhatsApp phone number.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the WhatsApp phone number.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The phone number for sending WhatsApp.</p>
    /// This field is required.
    pub fn phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The phone number for sending WhatsApp.</p>
    pub fn set_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.phone_number = input;
        self
    }
    /// <p>The phone number for sending WhatsApp.</p>
    pub fn get_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.phone_number
    }
    /// <p>The phone number ID. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>.</p>
    /// This field is required.
    pub fn phone_number_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.phone_number_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The phone number ID. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>.</p>
    pub fn set_phone_number_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.phone_number_id = input;
        self
    }
    /// <p>The phone number ID. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>.</p>
    pub fn get_phone_number_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.phone_number_id
    }
    /// <p>The phone number ID from Meta.</p>
    /// This field is required.
    pub fn meta_phone_number_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.meta_phone_number_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The phone number ID from Meta.</p>
    pub fn set_meta_phone_number_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.meta_phone_number_id = input;
        self
    }
    /// <p>The phone number ID from Meta.</p>
    pub fn get_meta_phone_number_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.meta_phone_number_id
    }
    /// <p>The display name for this phone number.</p>
    /// This field is required.
    pub fn display_phone_number_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_phone_number_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name for this phone number.</p>
    pub fn set_display_phone_number_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_phone_number_name = input;
        self
    }
    /// <p>The display name for this phone number.</p>
    pub fn get_display_phone_number_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_phone_number_name
    }
    /// <p>The phone number that appears in the recipients display.</p>
    /// This field is required.
    pub fn display_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The phone number that appears in the recipients display.</p>
    pub fn set_display_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_phone_number = input;
        self
    }
    /// <p>The phone number that appears in the recipients display.</p>
    pub fn get_display_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_phone_number
    }
    /// <p>The quality rating of the phone number.</p>
    /// This field is required.
    pub fn quality_rating(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.quality_rating = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The quality rating of the phone number.</p>
    pub fn set_quality_rating(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.quality_rating = input;
        self
    }
    /// <p>The quality rating of the phone number.</p>
    pub fn get_quality_rating(&self) -> &::std::option::Option<::std::string::String> {
        &self.quality_rating
    }
    /// Consumes the builder and constructs a [`WhatsAppPhoneNumberDetail`](crate::types::WhatsAppPhoneNumberDetail).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::arn)
    /// - [`phone_number`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::phone_number)
    /// - [`phone_number_id`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::phone_number_id)
    /// - [`meta_phone_number_id`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::meta_phone_number_id)
    /// - [`display_phone_number_name`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::display_phone_number_name)
    /// - [`display_phone_number`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::display_phone_number)
    /// - [`quality_rating`](crate::types::builders::WhatsAppPhoneNumberDetailBuilder::quality_rating)
    pub fn build(self) -> ::std::result::Result<crate::types::WhatsAppPhoneNumberDetail, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WhatsAppPhoneNumberDetail {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            phone_number: self.phone_number.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "phone_number",
                    "phone_number was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            phone_number_id: self.phone_number_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "phone_number_id",
                    "phone_number_id was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            meta_phone_number_id: self.meta_phone_number_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "meta_phone_number_id",
                    "meta_phone_number_id was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            display_phone_number_name: self.display_phone_number_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "display_phone_number_name",
                    "display_phone_number_name was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            display_phone_number: self.display_phone_number.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "display_phone_number",
                    "display_phone_number was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
            quality_rating: self.quality_rating.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "quality_rating",
                    "quality_rating was not specified but it is required when building WhatsAppPhoneNumberDetail",
                )
            })?,
        })
    }
}
