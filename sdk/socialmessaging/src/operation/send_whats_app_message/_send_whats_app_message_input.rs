// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct SendWhatsAppMessageInput {
    /// <p>The ID of the phone number used to send the WhatsApp message. If you are sending a media file only the <code>originationPhoneNumberId</code> used to upload the file can be used. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>. Use <a href="https://docs.aws.amazon.com/social-messaging/latest/APIReference/API_GetLinkedWhatsAppBusinessAccountPhoneNumber.html">GetLinkedWhatsAppBusinessAccount</a> to find a phone number's id.</p>
    pub origination_phone_number_id: ::std::option::Option<::std::string::String>,
    /// <p>The message to send through WhatsApp. The length is in KB. The message field passes through a WhatsApp Message object, see <a href="https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages">Messages</a> in the <i>WhatsApp Business Platform Cloud API Reference</i>.</p>
    pub message: ::std::option::Option<::aws_smithy_types::Blob>,
    /// <p>The API version for the request formatted as <code>v{VersionNumber}</code>. For a list of supported API versions and Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/end-user-messaging.html"> <i>Amazon Web Services End User Messaging Social API</i> Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub meta_api_version: ::std::option::Option<::std::string::String>,
}
impl SendWhatsAppMessageInput {
    /// <p>The ID of the phone number used to send the WhatsApp message. If you are sending a media file only the <code>originationPhoneNumberId</code> used to upload the file can be used. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>. Use <a href="https://docs.aws.amazon.com/social-messaging/latest/APIReference/API_GetLinkedWhatsAppBusinessAccountPhoneNumber.html">GetLinkedWhatsAppBusinessAccount</a> to find a phone number's id.</p>
    pub fn origination_phone_number_id(&self) -> ::std::option::Option<&str> {
        self.origination_phone_number_id.as_deref()
    }
    /// <p>The message to send through WhatsApp. The length is in KB. The message field passes through a WhatsApp Message object, see <a href="https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages">Messages</a> in the <i>WhatsApp Business Platform Cloud API Reference</i>.</p>
    pub fn message(&self) -> ::std::option::Option<&::aws_smithy_types::Blob> {
        self.message.as_ref()
    }
    /// <p>The API version for the request formatted as <code>v{VersionNumber}</code>. For a list of supported API versions and Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/end-user-messaging.html"> <i>Amazon Web Services End User Messaging Social API</i> Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn meta_api_version(&self) -> ::std::option::Option<&str> {
        self.meta_api_version.as_deref()
    }
}
impl ::std::fmt::Debug for SendWhatsAppMessageInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SendWhatsAppMessageInput");
        formatter.field("origination_phone_number_id", &self.origination_phone_number_id);
        formatter.field("message", &"*** Sensitive Data Redacted ***");
        formatter.field("meta_api_version", &self.meta_api_version);
        formatter.finish()
    }
}
impl SendWhatsAppMessageInput {
    /// Creates a new builder-style object to manufacture [`SendWhatsAppMessageInput`](crate::operation::send_whats_app_message::SendWhatsAppMessageInput).
    pub fn builder() -> crate::operation::send_whats_app_message::builders::SendWhatsAppMessageInputBuilder {
        crate::operation::send_whats_app_message::builders::SendWhatsAppMessageInputBuilder::default()
    }
}

/// A builder for [`SendWhatsAppMessageInput`](crate::operation::send_whats_app_message::SendWhatsAppMessageInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct SendWhatsAppMessageInputBuilder {
    pub(crate) origination_phone_number_id: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::aws_smithy_types::Blob>,
    pub(crate) meta_api_version: ::std::option::Option<::std::string::String>,
}
impl SendWhatsAppMessageInputBuilder {
    /// <p>The ID of the phone number used to send the WhatsApp message. If you are sending a media file only the <code>originationPhoneNumberId</code> used to upload the file can be used. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>. Use <a href="https://docs.aws.amazon.com/social-messaging/latest/APIReference/API_GetLinkedWhatsAppBusinessAccountPhoneNumber.html">GetLinkedWhatsAppBusinessAccount</a> to find a phone number's id.</p>
    /// This field is required.
    pub fn origination_phone_number_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.origination_phone_number_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the phone number used to send the WhatsApp message. If you are sending a media file only the <code>originationPhoneNumberId</code> used to upload the file can be used. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>. Use <a href="https://docs.aws.amazon.com/social-messaging/latest/APIReference/API_GetLinkedWhatsAppBusinessAccountPhoneNumber.html">GetLinkedWhatsAppBusinessAccount</a> to find a phone number's id.</p>
    pub fn set_origination_phone_number_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.origination_phone_number_id = input;
        self
    }
    /// <p>The ID of the phone number used to send the WhatsApp message. If you are sending a media file only the <code>originationPhoneNumberId</code> used to upload the file can be used. Phone number identifiers are formatted as <code>phone-number-id-01234567890123456789012345678901</code>. Use <a href="https://docs.aws.amazon.com/social-messaging/latest/APIReference/API_GetLinkedWhatsAppBusinessAccountPhoneNumber.html">GetLinkedWhatsAppBusinessAccount</a> to find a phone number's id.</p>
    pub fn get_origination_phone_number_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.origination_phone_number_id
    }
    /// <p>The message to send through WhatsApp. The length is in KB. The message field passes through a WhatsApp Message object, see <a href="https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages">Messages</a> in the <i>WhatsApp Business Platform Cloud API Reference</i>.</p>
    /// This field is required.
    pub fn message(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.message = ::std::option::Option::Some(input);
        self
    }
    /// <p>The message to send through WhatsApp. The length is in KB. The message field passes through a WhatsApp Message object, see <a href="https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages">Messages</a> in the <i>WhatsApp Business Platform Cloud API Reference</i>.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.message = input;
        self
    }
    /// <p>The message to send through WhatsApp. The length is in KB. The message field passes through a WhatsApp Message object, see <a href="https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages">Messages</a> in the <i>WhatsApp Business Platform Cloud API Reference</i>.</p>
    pub fn get_message(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.message
    }
    /// <p>The API version for the request formatted as <code>v{VersionNumber}</code>. For a list of supported API versions and Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/end-user-messaging.html"> <i>Amazon Web Services End User Messaging Social API</i> Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
    /// This field is required.
    pub fn meta_api_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.meta_api_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The API version for the request formatted as <code>v{VersionNumber}</code>. For a list of supported API versions and Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/end-user-messaging.html"> <i>Amazon Web Services End User Messaging Social API</i> Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn set_meta_api_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.meta_api_version = input;
        self
    }
    /// <p>The API version for the request formatted as <code>v{VersionNumber}</code>. For a list of supported API versions and Amazon Web Services Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/end-user-messaging.html"> <i>Amazon Web Services End User Messaging Social API</i> Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn get_meta_api_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.meta_api_version
    }
    /// Consumes the builder and constructs a [`SendWhatsAppMessageInput`](crate::operation::send_whats_app_message::SendWhatsAppMessageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::send_whats_app_message::SendWhatsAppMessageInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::send_whats_app_message::SendWhatsAppMessageInput {
            origination_phone_number_id: self.origination_phone_number_id,
            message: self.message,
            meta_api_version: self.meta_api_version,
        })
    }
}
impl ::std::fmt::Debug for SendWhatsAppMessageInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("SendWhatsAppMessageInputBuilder");
        formatter.field("origination_phone_number_id", &self.origination_phone_number_id);
        formatter.field("message", &"*** Sensitive Data Redacted ***");
        formatter.field("meta_api_version", &self.meta_api_version);
        formatter.finish()
    }
}
