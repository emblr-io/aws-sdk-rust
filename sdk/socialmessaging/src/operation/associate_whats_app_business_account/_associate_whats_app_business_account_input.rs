// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateWhatsAppBusinessAccountInput {
    /// <p>Contains the callback access token.</p>
    pub signup_callback: ::std::option::Option<crate::types::WhatsAppSignupCallback>,
    /// <p>A JSON object that contains the phone numbers and WhatsApp Business Account to link to your account.</p>
    pub setup_finalization: ::std::option::Option<crate::types::WhatsAppSetupFinalization>,
}
impl AssociateWhatsAppBusinessAccountInput {
    /// <p>Contains the callback access token.</p>
    pub fn signup_callback(&self) -> ::std::option::Option<&crate::types::WhatsAppSignupCallback> {
        self.signup_callback.as_ref()
    }
    /// <p>A JSON object that contains the phone numbers and WhatsApp Business Account to link to your account.</p>
    pub fn setup_finalization(&self) -> ::std::option::Option<&crate::types::WhatsAppSetupFinalization> {
        self.setup_finalization.as_ref()
    }
}
impl AssociateWhatsAppBusinessAccountInput {
    /// Creates a new builder-style object to manufacture [`AssociateWhatsAppBusinessAccountInput`](crate::operation::associate_whats_app_business_account::AssociateWhatsAppBusinessAccountInput).
    pub fn builder() -> crate::operation::associate_whats_app_business_account::builders::AssociateWhatsAppBusinessAccountInputBuilder {
        crate::operation::associate_whats_app_business_account::builders::AssociateWhatsAppBusinessAccountInputBuilder::default()
    }
}

/// A builder for [`AssociateWhatsAppBusinessAccountInput`](crate::operation::associate_whats_app_business_account::AssociateWhatsAppBusinessAccountInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociateWhatsAppBusinessAccountInputBuilder {
    pub(crate) signup_callback: ::std::option::Option<crate::types::WhatsAppSignupCallback>,
    pub(crate) setup_finalization: ::std::option::Option<crate::types::WhatsAppSetupFinalization>,
}
impl AssociateWhatsAppBusinessAccountInputBuilder {
    /// <p>Contains the callback access token.</p>
    pub fn signup_callback(mut self, input: crate::types::WhatsAppSignupCallback) -> Self {
        self.signup_callback = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains the callback access token.</p>
    pub fn set_signup_callback(mut self, input: ::std::option::Option<crate::types::WhatsAppSignupCallback>) -> Self {
        self.signup_callback = input;
        self
    }
    /// <p>Contains the callback access token.</p>
    pub fn get_signup_callback(&self) -> &::std::option::Option<crate::types::WhatsAppSignupCallback> {
        &self.signup_callback
    }
    /// <p>A JSON object that contains the phone numbers and WhatsApp Business Account to link to your account.</p>
    pub fn setup_finalization(mut self, input: crate::types::WhatsAppSetupFinalization) -> Self {
        self.setup_finalization = ::std::option::Option::Some(input);
        self
    }
    /// <p>A JSON object that contains the phone numbers and WhatsApp Business Account to link to your account.</p>
    pub fn set_setup_finalization(mut self, input: ::std::option::Option<crate::types::WhatsAppSetupFinalization>) -> Self {
        self.setup_finalization = input;
        self
    }
    /// <p>A JSON object that contains the phone numbers and WhatsApp Business Account to link to your account.</p>
    pub fn get_setup_finalization(&self) -> &::std::option::Option<crate::types::WhatsAppSetupFinalization> {
        &self.setup_finalization
    }
    /// Consumes the builder and constructs a [`AssociateWhatsAppBusinessAccountInput`](crate::operation::associate_whats_app_business_account::AssociateWhatsAppBusinessAccountInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_whats_app_business_account::AssociateWhatsAppBusinessAccountInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::associate_whats_app_business_account::AssociateWhatsAppBusinessAccountInput {
                signup_callback: self.signup_callback,
                setup_finalization: self.setup_finalization,
            },
        )
    }
}
