// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A collection of Amazon Redshift compute resources managed by AWS Glue.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ManagedWorkgroupListItem {
    /// <p>The name of the managed workgroup.</p>
    pub managed_workgroup_name: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the managed workgroup.</p>
    pub managed_workgroup_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) for the managed workgroup in the AWS Glue Data Catalog.</p>
    pub source_arn: ::std::option::Option<::std::string::String>,
    /// <p>The status of the managed workgroup.</p>
    pub status: ::std::option::Option<crate::types::ManagedWorkgroupStatus>,
    /// <p>The creation date of the managed workgroup.</p>
    pub creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ManagedWorkgroupListItem {
    /// <p>The name of the managed workgroup.</p>
    pub fn managed_workgroup_name(&self) -> ::std::option::Option<&str> {
        self.managed_workgroup_name.as_deref()
    }
    /// <p>The unique identifier of the managed workgroup.</p>
    pub fn managed_workgroup_id(&self) -> ::std::option::Option<&str> {
        self.managed_workgroup_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) for the managed workgroup in the AWS Glue Data Catalog.</p>
    pub fn source_arn(&self) -> ::std::option::Option<&str> {
        self.source_arn.as_deref()
    }
    /// <p>The status of the managed workgroup.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ManagedWorkgroupStatus> {
        self.status.as_ref()
    }
    /// <p>The creation date of the managed workgroup.</p>
    pub fn creation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
}
impl ManagedWorkgroupListItem {
    /// Creates a new builder-style object to manufacture [`ManagedWorkgroupListItem`](crate::types::ManagedWorkgroupListItem).
    pub fn builder() -> crate::types::builders::ManagedWorkgroupListItemBuilder {
        crate::types::builders::ManagedWorkgroupListItemBuilder::default()
    }
}

/// A builder for [`ManagedWorkgroupListItem`](crate::types::ManagedWorkgroupListItem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ManagedWorkgroupListItemBuilder {
    pub(crate) managed_workgroup_name: ::std::option::Option<::std::string::String>,
    pub(crate) managed_workgroup_id: ::std::option::Option<::std::string::String>,
    pub(crate) source_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ManagedWorkgroupStatus>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ManagedWorkgroupListItemBuilder {
    /// <p>The name of the managed workgroup.</p>
    pub fn managed_workgroup_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.managed_workgroup_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the managed workgroup.</p>
    pub fn set_managed_workgroup_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.managed_workgroup_name = input;
        self
    }
    /// <p>The name of the managed workgroup.</p>
    pub fn get_managed_workgroup_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.managed_workgroup_name
    }
    /// <p>The unique identifier of the managed workgroup.</p>
    pub fn managed_workgroup_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.managed_workgroup_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the managed workgroup.</p>
    pub fn set_managed_workgroup_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.managed_workgroup_id = input;
        self
    }
    /// <p>The unique identifier of the managed workgroup.</p>
    pub fn get_managed_workgroup_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.managed_workgroup_id
    }
    /// <p>The Amazon Resource Name (ARN) for the managed workgroup in the AWS Glue Data Catalog.</p>
    pub fn source_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the managed workgroup in the AWS Glue Data Catalog.</p>
    pub fn set_source_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the managed workgroup in the AWS Glue Data Catalog.</p>
    pub fn get_source_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_arn
    }
    /// <p>The status of the managed workgroup.</p>
    pub fn status(mut self, input: crate::types::ManagedWorkgroupStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the managed workgroup.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ManagedWorkgroupStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the managed workgroup.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ManagedWorkgroupStatus> {
        &self.status
    }
    /// <p>The creation date of the managed workgroup.</p>
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation date of the managed workgroup.</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The creation date of the managed workgroup.</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    /// Consumes the builder and constructs a [`ManagedWorkgroupListItem`](crate::types::ManagedWorkgroupListItem).
    pub fn build(self) -> crate::types::ManagedWorkgroupListItem {
        crate::types::ManagedWorkgroupListItem {
            managed_workgroup_name: self.managed_workgroup_name,
            managed_workgroup_id: self.managed_workgroup_id,
            source_arn: self.source_arn,
            status: self.status,
            creation_date: self.creation_date,
        }
    }
}
