// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A track that you can switch the current track to.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateTarget {
    /// <p>The name of the new track.</p>
    pub track_name: ::std::option::Option<::std::string::String>,
    /// <p>The workgroup version for the new track.</p>
    pub workgroup_version: ::std::option::Option<::std::string::String>,
}
impl UpdateTarget {
    /// <p>The name of the new track.</p>
    pub fn track_name(&self) -> ::std::option::Option<&str> {
        self.track_name.as_deref()
    }
    /// <p>The workgroup version for the new track.</p>
    pub fn workgroup_version(&self) -> ::std::option::Option<&str> {
        self.workgroup_version.as_deref()
    }
}
impl UpdateTarget {
    /// Creates a new builder-style object to manufacture [`UpdateTarget`](crate::types::UpdateTarget).
    pub fn builder() -> crate::types::builders::UpdateTargetBuilder {
        crate::types::builders::UpdateTargetBuilder::default()
    }
}

/// A builder for [`UpdateTarget`](crate::types::UpdateTarget).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateTargetBuilder {
    pub(crate) track_name: ::std::option::Option<::std::string::String>,
    pub(crate) workgroup_version: ::std::option::Option<::std::string::String>,
}
impl UpdateTargetBuilder {
    /// <p>The name of the new track.</p>
    pub fn track_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.track_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the new track.</p>
    pub fn set_track_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.track_name = input;
        self
    }
    /// <p>The name of the new track.</p>
    pub fn get_track_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.track_name
    }
    /// <p>The workgroup version for the new track.</p>
    pub fn workgroup_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workgroup_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The workgroup version for the new track.</p>
    pub fn set_workgroup_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workgroup_version = input;
        self
    }
    /// <p>The workgroup version for the new track.</p>
    pub fn get_workgroup_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.workgroup_version
    }
    /// Consumes the builder and constructs a [`UpdateTarget`](crate::types::UpdateTarget).
    pub fn build(self) -> crate::types::UpdateTarget {
        crate::types::UpdateTarget {
            track_name: self.track_name,
            workgroup_version: self.workgroup_version,
        }
    }
}
