// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Quick Setup type.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QuickSetupTypeOutput {
    /// <p>The type of the Quick Setup configuration.</p>
    pub r#type: ::std::option::Option<::std::string::String>,
    /// <p>The latest version number of the configuration.</p>
    pub latest_version: ::std::option::Option<::std::string::String>,
}
impl QuickSetupTypeOutput {
    /// <p>The type of the Quick Setup configuration.</p>
    pub fn r#type(&self) -> ::std::option::Option<&str> {
        self.r#type.as_deref()
    }
    /// <p>The latest version number of the configuration.</p>
    pub fn latest_version(&self) -> ::std::option::Option<&str> {
        self.latest_version.as_deref()
    }
}
impl QuickSetupTypeOutput {
    /// Creates a new builder-style object to manufacture [`QuickSetupTypeOutput`](crate::types::QuickSetupTypeOutput).
    pub fn builder() -> crate::types::builders::QuickSetupTypeOutputBuilder {
        crate::types::builders::QuickSetupTypeOutputBuilder::default()
    }
}

/// A builder for [`QuickSetupTypeOutput`](crate::types::QuickSetupTypeOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct QuickSetupTypeOutputBuilder {
    pub(crate) r#type: ::std::option::Option<::std::string::String>,
    pub(crate) latest_version: ::std::option::Option<::std::string::String>,
}
impl QuickSetupTypeOutputBuilder {
    /// <p>The type of the Quick Setup configuration.</p>
    pub fn r#type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.r#type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of the Quick Setup configuration.</p>
    pub fn set_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of the Quick Setup configuration.</p>
    pub fn get_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.r#type
    }
    /// <p>The latest version number of the configuration.</p>
    pub fn latest_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The latest version number of the configuration.</p>
    pub fn set_latest_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_version = input;
        self
    }
    /// <p>The latest version number of the configuration.</p>
    pub fn get_latest_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_version
    }
    /// Consumes the builder and constructs a [`QuickSetupTypeOutput`](crate::types::QuickSetupTypeOutput).
    pub fn build(self) -> crate::types::QuickSetupTypeOutput {
        crate::types::QuickSetupTypeOutput {
            r#type: self.r#type,
            latest_version: self.latest_version,
        }
    }
}
