// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateConfigurationManagerInput {
    /// <p>The ARN of the configuration manager.</p>
    pub manager_arn: ::std::option::Option<::std::string::String>,
    /// <p>A name for the configuration manager.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>A description of the configuration manager.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl UpdateConfigurationManagerInput {
    /// <p>The ARN of the configuration manager.</p>
    pub fn manager_arn(&self) -> ::std::option::Option<&str> {
        self.manager_arn.as_deref()
    }
    /// <p>A name for the configuration manager.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the configuration manager.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl UpdateConfigurationManagerInput {
    /// Creates a new builder-style object to manufacture [`UpdateConfigurationManagerInput`](crate::operation::update_configuration_manager::UpdateConfigurationManagerInput).
    pub fn builder() -> crate::operation::update_configuration_manager::builders::UpdateConfigurationManagerInputBuilder {
        crate::operation::update_configuration_manager::builders::UpdateConfigurationManagerInputBuilder::default()
    }
}

/// A builder for [`UpdateConfigurationManagerInput`](crate::operation::update_configuration_manager::UpdateConfigurationManagerInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateConfigurationManagerInputBuilder {
    pub(crate) manager_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl UpdateConfigurationManagerInputBuilder {
    /// <p>The ARN of the configuration manager.</p>
    /// This field is required.
    pub fn manager_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.manager_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the configuration manager.</p>
    pub fn set_manager_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.manager_arn = input;
        self
    }
    /// <p>The ARN of the configuration manager.</p>
    pub fn get_manager_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.manager_arn
    }
    /// <p>A name for the configuration manager.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A name for the configuration manager.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A name for the configuration manager.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A description of the configuration manager.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the configuration manager.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the configuration manager.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`UpdateConfigurationManagerInput`](crate::operation::update_configuration_manager::UpdateConfigurationManagerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_configuration_manager::UpdateConfigurationManagerInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_configuration_manager::UpdateConfigurationManagerInput {
            manager_arn: self.manager_arn,
            name: self.name,
            description: self.description,
        })
    }
}
