// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information required to setup hallucination reduction. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/hallucination-reduction.html"> hallucination reduction</a>.</p><note>
/// <p>The hallucination reduction feature won't work if chat orchestration controls are enabled for your application.</p>
/// </note>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HallucinationReductionConfiguration {
    /// <p>Controls whether hallucination reduction has been enabled or disabled for your application. The default status is <code>DISABLED</code>.</p>
    pub hallucination_reduction_control: ::std::option::Option<crate::types::HallucinationReductionControl>,
}
impl HallucinationReductionConfiguration {
    /// <p>Controls whether hallucination reduction has been enabled or disabled for your application. The default status is <code>DISABLED</code>.</p>
    pub fn hallucination_reduction_control(&self) -> ::std::option::Option<&crate::types::HallucinationReductionControl> {
        self.hallucination_reduction_control.as_ref()
    }
}
impl HallucinationReductionConfiguration {
    /// Creates a new builder-style object to manufacture [`HallucinationReductionConfiguration`](crate::types::HallucinationReductionConfiguration).
    pub fn builder() -> crate::types::builders::HallucinationReductionConfigurationBuilder {
        crate::types::builders::HallucinationReductionConfigurationBuilder::default()
    }
}

/// A builder for [`HallucinationReductionConfiguration`](crate::types::HallucinationReductionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HallucinationReductionConfigurationBuilder {
    pub(crate) hallucination_reduction_control: ::std::option::Option<crate::types::HallucinationReductionControl>,
}
impl HallucinationReductionConfigurationBuilder {
    /// <p>Controls whether hallucination reduction has been enabled or disabled for your application. The default status is <code>DISABLED</code>.</p>
    pub fn hallucination_reduction_control(mut self, input: crate::types::HallucinationReductionControl) -> Self {
        self.hallucination_reduction_control = ::std::option::Option::Some(input);
        self
    }
    /// <p>Controls whether hallucination reduction has been enabled or disabled for your application. The default status is <code>DISABLED</code>.</p>
    pub fn set_hallucination_reduction_control(mut self, input: ::std::option::Option<crate::types::HallucinationReductionControl>) -> Self {
        self.hallucination_reduction_control = input;
        self
    }
    /// <p>Controls whether hallucination reduction has been enabled or disabled for your application. The default status is <code>DISABLED</code>.</p>
    pub fn get_hallucination_reduction_control(&self) -> &::std::option::Option<crate::types::HallucinationReductionControl> {
        &self.hallucination_reduction_control
    }
    /// Consumes the builder and constructs a [`HallucinationReductionConfiguration`](crate::types::HallucinationReductionConfiguration).
    pub fn build(self) -> crate::types::HallucinationReductionConfiguration {
        crate::types::HallucinationReductionConfiguration {
            hallucination_reduction_control: self.hallucination_reduction_control,
        }
    }
}
