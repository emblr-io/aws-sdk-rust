// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageExtractionConfiguration {
    /// <p>Specify whether to extract semantic meaning from images and visuals from documents.</p>
    pub image_extraction_status: crate::types::ImageExtractionStatus,
}
impl ImageExtractionConfiguration {
    /// <p>Specify whether to extract semantic meaning from images and visuals from documents.</p>
    pub fn image_extraction_status(&self) -> &crate::types::ImageExtractionStatus {
        &self.image_extraction_status
    }
}
impl ImageExtractionConfiguration {
    /// Creates a new builder-style object to manufacture [`ImageExtractionConfiguration`](crate::types::ImageExtractionConfiguration).
    pub fn builder() -> crate::types::builders::ImageExtractionConfigurationBuilder {
        crate::types::builders::ImageExtractionConfigurationBuilder::default()
    }
}

/// A builder for [`ImageExtractionConfiguration`](crate::types::ImageExtractionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ImageExtractionConfigurationBuilder {
    pub(crate) image_extraction_status: ::std::option::Option<crate::types::ImageExtractionStatus>,
}
impl ImageExtractionConfigurationBuilder {
    /// <p>Specify whether to extract semantic meaning from images and visuals from documents.</p>
    /// This field is required.
    pub fn image_extraction_status(mut self, input: crate::types::ImageExtractionStatus) -> Self {
        self.image_extraction_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specify whether to extract semantic meaning from images and visuals from documents.</p>
    pub fn set_image_extraction_status(mut self, input: ::std::option::Option<crate::types::ImageExtractionStatus>) -> Self {
        self.image_extraction_status = input;
        self
    }
    /// <p>Specify whether to extract semantic meaning from images and visuals from documents.</p>
    pub fn get_image_extraction_status(&self) -> &::std::option::Option<crate::types::ImageExtractionStatus> {
        &self.image_extraction_status
    }
    /// Consumes the builder and constructs a [`ImageExtractionConfiguration`](crate::types::ImageExtractionConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`image_extraction_status`](crate::types::builders::ImageExtractionConfigurationBuilder::image_extraction_status)
    pub fn build(self) -> ::std::result::Result<crate::types::ImageExtractionConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ImageExtractionConfiguration {
            image_extraction_status: self.image_extraction_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "image_extraction_status",
                    "image_extraction_status was not specified but it is required when building ImageExtractionConfiguration",
                )
            })?,
        })
    }
}
