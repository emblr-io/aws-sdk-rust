// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source reference for an existing attachment in an existing conversation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConversationSource {
    /// <p>The unique identifier of the Amazon Q Business conversation.</p>
    pub conversation_id: ::std::string::String,
    /// <p>The unique identifier of the Amazon Q Business attachment.</p>
    pub attachment_id: ::std::string::String,
}
impl ConversationSource {
    /// <p>The unique identifier of the Amazon Q Business conversation.</p>
    pub fn conversation_id(&self) -> &str {
        use std::ops::Deref;
        self.conversation_id.deref()
    }
    /// <p>The unique identifier of the Amazon Q Business attachment.</p>
    pub fn attachment_id(&self) -> &str {
        use std::ops::Deref;
        self.attachment_id.deref()
    }
}
impl ConversationSource {
    /// Creates a new builder-style object to manufacture [`ConversationSource`](crate::types::ConversationSource).
    pub fn builder() -> crate::types::builders::ConversationSourceBuilder {
        crate::types::builders::ConversationSourceBuilder::default()
    }
}

/// A builder for [`ConversationSource`](crate::types::ConversationSource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConversationSourceBuilder {
    pub(crate) conversation_id: ::std::option::Option<::std::string::String>,
    pub(crate) attachment_id: ::std::option::Option<::std::string::String>,
}
impl ConversationSourceBuilder {
    /// <p>The unique identifier of the Amazon Q Business conversation.</p>
    /// This field is required.
    pub fn conversation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.conversation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Amazon Q Business conversation.</p>
    pub fn set_conversation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.conversation_id = input;
        self
    }
    /// <p>The unique identifier of the Amazon Q Business conversation.</p>
    pub fn get_conversation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.conversation_id
    }
    /// <p>The unique identifier of the Amazon Q Business attachment.</p>
    /// This field is required.
    pub fn attachment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attachment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Amazon Q Business attachment.</p>
    pub fn set_attachment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attachment_id = input;
        self
    }
    /// <p>The unique identifier of the Amazon Q Business attachment.</p>
    pub fn get_attachment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.attachment_id
    }
    /// Consumes the builder and constructs a [`ConversationSource`](crate::types::ConversationSource).
    /// This method will fail if any of the following fields are not set:
    /// - [`conversation_id`](crate::types::builders::ConversationSourceBuilder::conversation_id)
    /// - [`attachment_id`](crate::types::builders::ConversationSourceBuilder::attachment_id)
    pub fn build(self) -> ::std::result::Result<crate::types::ConversationSource, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ConversationSource {
            conversation_id: self.conversation_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "conversation_id",
                    "conversation_id was not specified but it is required when building ConversationSource",
                )
            })?,
            attachment_id: self.attachment_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attachment_id",
                    "attachment_id was not specified but it is required when building ConversationSource",
                )
            })?,
        })
    }
}
