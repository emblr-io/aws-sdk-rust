// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the SAML 2.0-compliant identity provider (IdP) used to authenticate end users of an Amazon Q Business web experience.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SamlProviderConfiguration {
    /// <p>The URL where Amazon Q Business end users will be redirected for authentication.</p>
    pub authentication_url: ::std::string::String,
}
impl SamlProviderConfiguration {
    /// <p>The URL where Amazon Q Business end users will be redirected for authentication.</p>
    pub fn authentication_url(&self) -> &str {
        use std::ops::Deref;
        self.authentication_url.deref()
    }
}
impl SamlProviderConfiguration {
    /// Creates a new builder-style object to manufacture [`SamlProviderConfiguration`](crate::types::SamlProviderConfiguration).
    pub fn builder() -> crate::types::builders::SamlProviderConfigurationBuilder {
        crate::types::builders::SamlProviderConfigurationBuilder::default()
    }
}

/// A builder for [`SamlProviderConfiguration`](crate::types::SamlProviderConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SamlProviderConfigurationBuilder {
    pub(crate) authentication_url: ::std::option::Option<::std::string::String>,
}
impl SamlProviderConfigurationBuilder {
    /// <p>The URL where Amazon Q Business end users will be redirected for authentication.</p>
    /// This field is required.
    pub fn authentication_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authentication_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL where Amazon Q Business end users will be redirected for authentication.</p>
    pub fn set_authentication_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authentication_url = input;
        self
    }
    /// <p>The URL where Amazon Q Business end users will be redirected for authentication.</p>
    pub fn get_authentication_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.authentication_url
    }
    /// Consumes the builder and constructs a [`SamlProviderConfiguration`](crate::types::SamlProviderConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`authentication_url`](crate::types::builders::SamlProviderConfigurationBuilder::authentication_url)
    pub fn build(self) -> ::std::result::Result<crate::types::SamlProviderConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SamlProviderConfiguration {
            authentication_url: self.authentication_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "authentication_url",
                    "authentication_url was not specified but it is required when building SamlProviderConfiguration",
                )
            })?,
        })
    }
}
