// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for extracting information from media in documents.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaExtractionConfiguration {
    /// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
    pub image_extraction_configuration: ::std::option::Option<crate::types::ImageExtractionConfiguration>,
    /// <p>Configuration settings for extracting and processing audio content from media files.</p>
    pub audio_extraction_configuration: ::std::option::Option<crate::types::AudioExtractionConfiguration>,
    /// <p>Configuration settings for extracting and processing video content from media files.</p>
    pub video_extraction_configuration: ::std::option::Option<crate::types::VideoExtractionConfiguration>,
}
impl MediaExtractionConfiguration {
    /// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
    pub fn image_extraction_configuration(&self) -> ::std::option::Option<&crate::types::ImageExtractionConfiguration> {
        self.image_extraction_configuration.as_ref()
    }
    /// <p>Configuration settings for extracting and processing audio content from media files.</p>
    pub fn audio_extraction_configuration(&self) -> ::std::option::Option<&crate::types::AudioExtractionConfiguration> {
        self.audio_extraction_configuration.as_ref()
    }
    /// <p>Configuration settings for extracting and processing video content from media files.</p>
    pub fn video_extraction_configuration(&self) -> ::std::option::Option<&crate::types::VideoExtractionConfiguration> {
        self.video_extraction_configuration.as_ref()
    }
}
impl MediaExtractionConfiguration {
    /// Creates a new builder-style object to manufacture [`MediaExtractionConfiguration`](crate::types::MediaExtractionConfiguration).
    pub fn builder() -> crate::types::builders::MediaExtractionConfigurationBuilder {
        crate::types::builders::MediaExtractionConfigurationBuilder::default()
    }
}

/// A builder for [`MediaExtractionConfiguration`](crate::types::MediaExtractionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MediaExtractionConfigurationBuilder {
    pub(crate) image_extraction_configuration: ::std::option::Option<crate::types::ImageExtractionConfiguration>,
    pub(crate) audio_extraction_configuration: ::std::option::Option<crate::types::AudioExtractionConfiguration>,
    pub(crate) video_extraction_configuration: ::std::option::Option<crate::types::VideoExtractionConfiguration>,
}
impl MediaExtractionConfigurationBuilder {
    /// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
    pub fn image_extraction_configuration(mut self, input: crate::types::ImageExtractionConfiguration) -> Self {
        self.image_extraction_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
    pub fn set_image_extraction_configuration(mut self, input: ::std::option::Option<crate::types::ImageExtractionConfiguration>) -> Self {
        self.image_extraction_configuration = input;
        self
    }
    /// <p>The configuration for extracting semantic meaning from images in documents. For more information, see <a href="https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/extracting-meaning-from-images.html">Extracting semantic meaning from images and visuals</a>.</p>
    pub fn get_image_extraction_configuration(&self) -> &::std::option::Option<crate::types::ImageExtractionConfiguration> {
        &self.image_extraction_configuration
    }
    /// <p>Configuration settings for extracting and processing audio content from media files.</p>
    pub fn audio_extraction_configuration(mut self, input: crate::types::AudioExtractionConfiguration) -> Self {
        self.audio_extraction_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings for extracting and processing audio content from media files.</p>
    pub fn set_audio_extraction_configuration(mut self, input: ::std::option::Option<crate::types::AudioExtractionConfiguration>) -> Self {
        self.audio_extraction_configuration = input;
        self
    }
    /// <p>Configuration settings for extracting and processing audio content from media files.</p>
    pub fn get_audio_extraction_configuration(&self) -> &::std::option::Option<crate::types::AudioExtractionConfiguration> {
        &self.audio_extraction_configuration
    }
    /// <p>Configuration settings for extracting and processing video content from media files.</p>
    pub fn video_extraction_configuration(mut self, input: crate::types::VideoExtractionConfiguration) -> Self {
        self.video_extraction_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings for extracting and processing video content from media files.</p>
    pub fn set_video_extraction_configuration(mut self, input: ::std::option::Option<crate::types::VideoExtractionConfiguration>) -> Self {
        self.video_extraction_configuration = input;
        self
    }
    /// <p>Configuration settings for extracting and processing video content from media files.</p>
    pub fn get_video_extraction_configuration(&self) -> &::std::option::Option<crate::types::VideoExtractionConfiguration> {
        &self.video_extraction_configuration
    }
    /// Consumes the builder and constructs a [`MediaExtractionConfiguration`](crate::types::MediaExtractionConfiguration).
    pub fn build(self) -> crate::types::MediaExtractionConfiguration {
        crate::types::MediaExtractionConfiguration {
            image_extraction_configuration: self.image_extraction_configuration,
            audio_extraction_configuration: self.audio_extraction_configuration,
            video_extraction_configuration: self.video_extraction_configuration,
        }
    }
}
