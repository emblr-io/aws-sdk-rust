// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration settings to define how Amazon Q Business generates and formats responses to user queries. This includes customization options for response style, tone, length, and other characteristics.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResponseConfiguration {
    /// <p>A collection of instructions that guide how Amazon Q Business generates responses, including parameters for response length, target audience, perspective, output style, identity, tone, and custom instructions.</p>
    pub instruction_collection: ::std::option::Option<crate::types::InstructionCollection>,
}
impl ResponseConfiguration {
    /// <p>A collection of instructions that guide how Amazon Q Business generates responses, including parameters for response length, target audience, perspective, output style, identity, tone, and custom instructions.</p>
    pub fn instruction_collection(&self) -> ::std::option::Option<&crate::types::InstructionCollection> {
        self.instruction_collection.as_ref()
    }
}
impl ResponseConfiguration {
    /// Creates a new builder-style object to manufacture [`ResponseConfiguration`](crate::types::ResponseConfiguration).
    pub fn builder() -> crate::types::builders::ResponseConfigurationBuilder {
        crate::types::builders::ResponseConfigurationBuilder::default()
    }
}

/// A builder for [`ResponseConfiguration`](crate::types::ResponseConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResponseConfigurationBuilder {
    pub(crate) instruction_collection: ::std::option::Option<crate::types::InstructionCollection>,
}
impl ResponseConfigurationBuilder {
    /// <p>A collection of instructions that guide how Amazon Q Business generates responses, including parameters for response length, target audience, perspective, output style, identity, tone, and custom instructions.</p>
    pub fn instruction_collection(mut self, input: crate::types::InstructionCollection) -> Self {
        self.instruction_collection = ::std::option::Option::Some(input);
        self
    }
    /// <p>A collection of instructions that guide how Amazon Q Business generates responses, including parameters for response length, target audience, perspective, output style, identity, tone, and custom instructions.</p>
    pub fn set_instruction_collection(mut self, input: ::std::option::Option<crate::types::InstructionCollection>) -> Self {
        self.instruction_collection = input;
        self
    }
    /// <p>A collection of instructions that guide how Amazon Q Business generates responses, including parameters for response length, target audience, perspective, output style, identity, tone, and custom instructions.</p>
    pub fn get_instruction_collection(&self) -> &::std::option::Option<crate::types::InstructionCollection> {
        &self.instruction_collection
    }
    /// Consumes the builder and constructs a [`ResponseConfiguration`](crate::types::ResponseConfiguration).
    pub fn build(self) -> crate::types::ResponseConfiguration {
        crate::types::ResponseConfiguration {
            instruction_collection: self.instruction_collection,
        }
    }
}
