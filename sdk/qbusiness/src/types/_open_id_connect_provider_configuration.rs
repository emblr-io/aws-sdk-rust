// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the OIDC-compliant identity provider (IdP) used to authenticate end users of an Amazon Q Business web experience.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OpenIdConnectProviderConfiguration {
    /// <p>The Amazon Resource Name (ARN) of a Secrets Manager secret containing the OIDC client secret.</p>
    pub secrets_arn: ::std::string::String,
    /// <p>An IAM role with permissions to access KMS to decrypt the Secrets Manager secret containing your OIDC client secret.</p>
    pub secrets_role: ::std::string::String,
}
impl OpenIdConnectProviderConfiguration {
    /// <p>The Amazon Resource Name (ARN) of a Secrets Manager secret containing the OIDC client secret.</p>
    pub fn secrets_arn(&self) -> &str {
        use std::ops::Deref;
        self.secrets_arn.deref()
    }
    /// <p>An IAM role with permissions to access KMS to decrypt the Secrets Manager secret containing your OIDC client secret.</p>
    pub fn secrets_role(&self) -> &str {
        use std::ops::Deref;
        self.secrets_role.deref()
    }
}
impl OpenIdConnectProviderConfiguration {
    /// Creates a new builder-style object to manufacture [`OpenIdConnectProviderConfiguration`](crate::types::OpenIdConnectProviderConfiguration).
    pub fn builder() -> crate::types::builders::OpenIdConnectProviderConfigurationBuilder {
        crate::types::builders::OpenIdConnectProviderConfigurationBuilder::default()
    }
}

/// A builder for [`OpenIdConnectProviderConfiguration`](crate::types::OpenIdConnectProviderConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OpenIdConnectProviderConfigurationBuilder {
    pub(crate) secrets_arn: ::std::option::Option<::std::string::String>,
    pub(crate) secrets_role: ::std::option::Option<::std::string::String>,
}
impl OpenIdConnectProviderConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of a Secrets Manager secret containing the OIDC client secret.</p>
    /// This field is required.
    pub fn secrets_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secrets_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a Secrets Manager secret containing the OIDC client secret.</p>
    pub fn set_secrets_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secrets_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a Secrets Manager secret containing the OIDC client secret.</p>
    pub fn get_secrets_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.secrets_arn
    }
    /// <p>An IAM role with permissions to access KMS to decrypt the Secrets Manager secret containing your OIDC client secret.</p>
    /// This field is required.
    pub fn secrets_role(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secrets_role = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An IAM role with permissions to access KMS to decrypt the Secrets Manager secret containing your OIDC client secret.</p>
    pub fn set_secrets_role(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secrets_role = input;
        self
    }
    /// <p>An IAM role with permissions to access KMS to decrypt the Secrets Manager secret containing your OIDC client secret.</p>
    pub fn get_secrets_role(&self) -> &::std::option::Option<::std::string::String> {
        &self.secrets_role
    }
    /// Consumes the builder and constructs a [`OpenIdConnectProviderConfiguration`](crate::types::OpenIdConnectProviderConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`secrets_arn`](crate::types::builders::OpenIdConnectProviderConfigurationBuilder::secrets_arn)
    /// - [`secrets_role`](crate::types::builders::OpenIdConnectProviderConfigurationBuilder::secrets_role)
    pub fn build(self) -> ::std::result::Result<crate::types::OpenIdConnectProviderConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OpenIdConnectProviderConfiguration {
            secrets_arn: self.secrets_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "secrets_arn",
                    "secrets_arn was not specified but it is required when building OpenIdConnectProviderConfiguration",
                )
            })?,
            secrets_role: self.secrets_role.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "secrets_role",
                    "secrets_role was not specified but it is required when building OpenIdConnectProviderConfiguration",
                )
            })?,
        })
    }
}
