// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An input event for a end user message in an Amazon Q Business web experience.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextInputEvent {
    /// <p>A user message in a text message input event.</p>
    pub user_message: ::std::string::String,
}
impl TextInputEvent {
    /// <p>A user message in a text message input event.</p>
    pub fn user_message(&self) -> &str {
        use std::ops::Deref;
        self.user_message.deref()
    }
}
impl TextInputEvent {
    /// Creates a new builder-style object to manufacture [`TextInputEvent`](crate::types::TextInputEvent).
    pub fn builder() -> crate::types::builders::TextInputEventBuilder {
        crate::types::builders::TextInputEventBuilder::default()
    }
}

/// A builder for [`TextInputEvent`](crate::types::TextInputEvent).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TextInputEventBuilder {
    pub(crate) user_message: ::std::option::Option<::std::string::String>,
}
impl TextInputEventBuilder {
    /// <p>A user message in a text message input event.</p>
    /// This field is required.
    pub fn user_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A user message in a text message input event.</p>
    pub fn set_user_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_message = input;
        self
    }
    /// <p>A user message in a text message input event.</p>
    pub fn get_user_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_message
    }
    /// Consumes the builder and constructs a [`TextInputEvent`](crate::types::TextInputEvent).
    /// This method will fail if any of the following fields are not set:
    /// - [`user_message`](crate::types::builders::TextInputEventBuilder::user_message)
    pub fn build(self) -> ::std::result::Result<crate::types::TextInputEvent, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TextInputEvent {
            user_message: self.user_message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "user_message",
                    "user_message was not specified but it is required when building TextInputEvent",
                )
            })?,
        })
    }
}
