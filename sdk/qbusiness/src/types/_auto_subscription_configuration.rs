// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Subscription configuration information for an Amazon Q Business application using IAM identity federation for user management.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoSubscriptionConfiguration {
    /// <p>Describes whether automatic subscriptions are enabled for an Amazon Q Business application using IAM identity federation for user management.</p>
    pub auto_subscribe: crate::types::AutoSubscriptionStatus,
    /// <p>Describes the default subscription type assigned to an Amazon Q Business application using IAM identity federation for user management. If the value for <code>autoSubscribe</code> is set to <code>ENABLED</code> you must select a value for this field.</p>
    pub default_subscription_type: ::std::option::Option<crate::types::SubscriptionType>,
}
impl AutoSubscriptionConfiguration {
    /// <p>Describes whether automatic subscriptions are enabled for an Amazon Q Business application using IAM identity federation for user management.</p>
    pub fn auto_subscribe(&self) -> &crate::types::AutoSubscriptionStatus {
        &self.auto_subscribe
    }
    /// <p>Describes the default subscription type assigned to an Amazon Q Business application using IAM identity federation for user management. If the value for <code>autoSubscribe</code> is set to <code>ENABLED</code> you must select a value for this field.</p>
    pub fn default_subscription_type(&self) -> ::std::option::Option<&crate::types::SubscriptionType> {
        self.default_subscription_type.as_ref()
    }
}
impl AutoSubscriptionConfiguration {
    /// Creates a new builder-style object to manufacture [`AutoSubscriptionConfiguration`](crate::types::AutoSubscriptionConfiguration).
    pub fn builder() -> crate::types::builders::AutoSubscriptionConfigurationBuilder {
        crate::types::builders::AutoSubscriptionConfigurationBuilder::default()
    }
}

/// A builder for [`AutoSubscriptionConfiguration`](crate::types::AutoSubscriptionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutoSubscriptionConfigurationBuilder {
    pub(crate) auto_subscribe: ::std::option::Option<crate::types::AutoSubscriptionStatus>,
    pub(crate) default_subscription_type: ::std::option::Option<crate::types::SubscriptionType>,
}
impl AutoSubscriptionConfigurationBuilder {
    /// <p>Describes whether automatic subscriptions are enabled for an Amazon Q Business application using IAM identity federation for user management.</p>
    /// This field is required.
    pub fn auto_subscribe(mut self, input: crate::types::AutoSubscriptionStatus) -> Self {
        self.auto_subscribe = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes whether automatic subscriptions are enabled for an Amazon Q Business application using IAM identity federation for user management.</p>
    pub fn set_auto_subscribe(mut self, input: ::std::option::Option<crate::types::AutoSubscriptionStatus>) -> Self {
        self.auto_subscribe = input;
        self
    }
    /// <p>Describes whether automatic subscriptions are enabled for an Amazon Q Business application using IAM identity federation for user management.</p>
    pub fn get_auto_subscribe(&self) -> &::std::option::Option<crate::types::AutoSubscriptionStatus> {
        &self.auto_subscribe
    }
    /// <p>Describes the default subscription type assigned to an Amazon Q Business application using IAM identity federation for user management. If the value for <code>autoSubscribe</code> is set to <code>ENABLED</code> you must select a value for this field.</p>
    pub fn default_subscription_type(mut self, input: crate::types::SubscriptionType) -> Self {
        self.default_subscription_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the default subscription type assigned to an Amazon Q Business application using IAM identity federation for user management. If the value for <code>autoSubscribe</code> is set to <code>ENABLED</code> you must select a value for this field.</p>
    pub fn set_default_subscription_type(mut self, input: ::std::option::Option<crate::types::SubscriptionType>) -> Self {
        self.default_subscription_type = input;
        self
    }
    /// <p>Describes the default subscription type assigned to an Amazon Q Business application using IAM identity federation for user management. If the value for <code>autoSubscribe</code> is set to <code>ENABLED</code> you must select a value for this field.</p>
    pub fn get_default_subscription_type(&self) -> &::std::option::Option<crate::types::SubscriptionType> {
        &self.default_subscription_type
    }
    /// Consumes the builder and constructs a [`AutoSubscriptionConfiguration`](crate::types::AutoSubscriptionConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`auto_subscribe`](crate::types::builders::AutoSubscriptionConfigurationBuilder::auto_subscribe)
    pub fn build(self) -> ::std::result::Result<crate::types::AutoSubscriptionConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutoSubscriptionConfiguration {
            auto_subscribe: self.auto_subscribe.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "auto_subscribe",
                    "auto_subscribe was not specified but it is required when building AutoSubscriptionConfiguration",
                )
            })?,
            default_subscription_type: self.default_subscription_type,
        })
    }
}
