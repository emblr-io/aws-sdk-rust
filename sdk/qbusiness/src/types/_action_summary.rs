// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information for an Amazon Q Business plugin action.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ActionSummary {
    /// <p>The identifier of an Amazon Q Business plugin action.</p>
    pub action_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The display name assigned by Amazon Q Business to a plugin action. You can't modify this value.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>An Amazon Q Business suggested prompt and end user can use to invoke a plugin action. This value can be modified and sent as input to initiate an action. For example:</p>
    /// <ul>
    /// <li>
    /// <p>Create a Jira task</p></li>
    /// <li>
    /// <p>Create a chat assistant task to find the root cause of a specific incident</p></li>
    /// </ul>
    pub instruction_example: ::std::option::Option<::std::string::String>,
    /// <p>The description of an Amazon Q Business plugin action.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl ActionSummary {
    /// <p>The identifier of an Amazon Q Business plugin action.</p>
    pub fn action_identifier(&self) -> ::std::option::Option<&str> {
        self.action_identifier.as_deref()
    }
    /// <p>The display name assigned by Amazon Q Business to a plugin action. You can't modify this value.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>An Amazon Q Business suggested prompt and end user can use to invoke a plugin action. This value can be modified and sent as input to initiate an action. For example:</p>
    /// <ul>
    /// <li>
    /// <p>Create a Jira task</p></li>
    /// <li>
    /// <p>Create a chat assistant task to find the root cause of a specific incident</p></li>
    /// </ul>
    pub fn instruction_example(&self) -> ::std::option::Option<&str> {
        self.instruction_example.as_deref()
    }
    /// <p>The description of an Amazon Q Business plugin action.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl ActionSummary {
    /// Creates a new builder-style object to manufacture [`ActionSummary`](crate::types::ActionSummary).
    pub fn builder() -> crate::types::builders::ActionSummaryBuilder {
        crate::types::builders::ActionSummaryBuilder::default()
    }
}

/// A builder for [`ActionSummary`](crate::types::ActionSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ActionSummaryBuilder {
    pub(crate) action_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) instruction_example: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl ActionSummaryBuilder {
    /// <p>The identifier of an Amazon Q Business plugin action.</p>
    pub fn action_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of an Amazon Q Business plugin action.</p>
    pub fn set_action_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_identifier = input;
        self
    }
    /// <p>The identifier of an Amazon Q Business plugin action.</p>
    pub fn get_action_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_identifier
    }
    /// <p>The display name assigned by Amazon Q Business to a plugin action. You can't modify this value.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name assigned by Amazon Q Business to a plugin action. You can't modify this value.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The display name assigned by Amazon Q Business to a plugin action. You can't modify this value.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>An Amazon Q Business suggested prompt and end user can use to invoke a plugin action. This value can be modified and sent as input to initiate an action. For example:</p>
    /// <ul>
    /// <li>
    /// <p>Create a Jira task</p></li>
    /// <li>
    /// <p>Create a chat assistant task to find the root cause of a specific incident</p></li>
    /// </ul>
    pub fn instruction_example(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instruction_example = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An Amazon Q Business suggested prompt and end user can use to invoke a plugin action. This value can be modified and sent as input to initiate an action. For example:</p>
    /// <ul>
    /// <li>
    /// <p>Create a Jira task</p></li>
    /// <li>
    /// <p>Create a chat assistant task to find the root cause of a specific incident</p></li>
    /// </ul>
    pub fn set_instruction_example(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instruction_example = input;
        self
    }
    /// <p>An Amazon Q Business suggested prompt and end user can use to invoke a plugin action. This value can be modified and sent as input to initiate an action. For example:</p>
    /// <ul>
    /// <li>
    /// <p>Create a Jira task</p></li>
    /// <li>
    /// <p>Create a chat assistant task to find the root cause of a specific incident</p></li>
    /// </ul>
    pub fn get_instruction_example(&self) -> &::std::option::Option<::std::string::String> {
        &self.instruction_example
    }
    /// <p>The description of an Amazon Q Business plugin action.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of an Amazon Q Business plugin action.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of an Amazon Q Business plugin action.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`ActionSummary`](crate::types::ActionSummary).
    pub fn build(self) -> crate::types::ActionSummary {
        crate::types::ActionSummary {
            action_identifier: self.action_identifier,
            display_name: self.display_name,
            instruction_example: self.instruction_example,
            description: self.description,
        }
    }
}
