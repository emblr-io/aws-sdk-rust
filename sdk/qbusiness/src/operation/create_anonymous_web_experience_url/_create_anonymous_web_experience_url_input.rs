// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateAnonymousWebExperienceUrlInput {
    /// <p>The identifier of the Amazon Q Business application environment attached to the web experience.</p>
    pub application_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the web experience.</p>
    pub web_experience_id: ::std::option::Option<::std::string::String>,
    /// <p>The duration of the session associated with the unique URL for the web experience.</p>
    pub session_duration_in_minutes: ::std::option::Option<i32>,
}
impl CreateAnonymousWebExperienceUrlInput {
    /// <p>The identifier of the Amazon Q Business application environment attached to the web experience.</p>
    pub fn application_id(&self) -> ::std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>The identifier of the web experience.</p>
    pub fn web_experience_id(&self) -> ::std::option::Option<&str> {
        self.web_experience_id.as_deref()
    }
    /// <p>The duration of the session associated with the unique URL for the web experience.</p>
    pub fn session_duration_in_minutes(&self) -> ::std::option::Option<i32> {
        self.session_duration_in_minutes
    }
}
impl CreateAnonymousWebExperienceUrlInput {
    /// Creates a new builder-style object to manufacture [`CreateAnonymousWebExperienceUrlInput`](crate::operation::create_anonymous_web_experience_url::CreateAnonymousWebExperienceUrlInput).
    pub fn builder() -> crate::operation::create_anonymous_web_experience_url::builders::CreateAnonymousWebExperienceUrlInputBuilder {
        crate::operation::create_anonymous_web_experience_url::builders::CreateAnonymousWebExperienceUrlInputBuilder::default()
    }
}

/// A builder for [`CreateAnonymousWebExperienceUrlInput`](crate::operation::create_anonymous_web_experience_url::CreateAnonymousWebExperienceUrlInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateAnonymousWebExperienceUrlInputBuilder {
    pub(crate) application_id: ::std::option::Option<::std::string::String>,
    pub(crate) web_experience_id: ::std::option::Option<::std::string::String>,
    pub(crate) session_duration_in_minutes: ::std::option::Option<i32>,
}
impl CreateAnonymousWebExperienceUrlInputBuilder {
    /// <p>The identifier of the Amazon Q Business application environment attached to the web experience.</p>
    /// This field is required.
    pub fn application_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Q Business application environment attached to the web experience.</p>
    pub fn set_application_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The identifier of the Amazon Q Business application environment attached to the web experience.</p>
    pub fn get_application_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_id
    }
    /// <p>The identifier of the web experience.</p>
    /// This field is required.
    pub fn web_experience_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.web_experience_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the web experience.</p>
    pub fn set_web_experience_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.web_experience_id = input;
        self
    }
    /// <p>The identifier of the web experience.</p>
    pub fn get_web_experience_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.web_experience_id
    }
    /// <p>The duration of the session associated with the unique URL for the web experience.</p>
    pub fn session_duration_in_minutes(mut self, input: i32) -> Self {
        self.session_duration_in_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The duration of the session associated with the unique URL for the web experience.</p>
    pub fn set_session_duration_in_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.session_duration_in_minutes = input;
        self
    }
    /// <p>The duration of the session associated with the unique URL for the web experience.</p>
    pub fn get_session_duration_in_minutes(&self) -> &::std::option::Option<i32> {
        &self.session_duration_in_minutes
    }
    /// Consumes the builder and constructs a [`CreateAnonymousWebExperienceUrlInput`](crate::operation::create_anonymous_web_experience_url::CreateAnonymousWebExperienceUrlInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_anonymous_web_experience_url::CreateAnonymousWebExperienceUrlInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_anonymous_web_experience_url::CreateAnonymousWebExperienceUrlInput {
                application_id: self.application_id,
                web_experience_id: self.web_experience_id,
                session_duration_in_minutes: self.session_duration_in_minutes,
            },
        )
    }
}
