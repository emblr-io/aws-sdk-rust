// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetChatResponseConfigurationOutput {
    /// <p>The unique identifier of the retrieved chat response configuration.</p>
    pub chat_response_configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the retrieved chat response configuration, which uniquely identifies the resource across all Amazon Web Services services.</p>
    pub chat_response_configuration_arn: ::std::option::Option<::std::string::String>,
    /// <p>The human-readable name of the retrieved chat response configuration, making it easier to identify among multiple configurations.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp indicating when the chat response configuration was initially created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The currently active configuration settings that are being used to generate responses in the Amazon Q Business application.</p>
    pub in_use_configuration: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>,
    /// <p>Information about the most recent update to the configuration, including timestamp and modification details.</p>
    pub last_update_configuration: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>,
    _request_id: Option<String>,
}
impl GetChatResponseConfigurationOutput {
    /// <p>The unique identifier of the retrieved chat response configuration.</p>
    pub fn chat_response_configuration_id(&self) -> ::std::option::Option<&str> {
        self.chat_response_configuration_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the retrieved chat response configuration, which uniquely identifies the resource across all Amazon Web Services services.</p>
    pub fn chat_response_configuration_arn(&self) -> ::std::option::Option<&str> {
        self.chat_response_configuration_arn.as_deref()
    }
    /// <p>The human-readable name of the retrieved chat response configuration, making it easier to identify among multiple configurations.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The timestamp indicating when the chat response configuration was initially created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The currently active configuration settings that are being used to generate responses in the Amazon Q Business application.</p>
    pub fn in_use_configuration(&self) -> ::std::option::Option<&crate::types::ChatResponseConfigurationDetail> {
        self.in_use_configuration.as_ref()
    }
    /// <p>Information about the most recent update to the configuration, including timestamp and modification details.</p>
    pub fn last_update_configuration(&self) -> ::std::option::Option<&crate::types::ChatResponseConfigurationDetail> {
        self.last_update_configuration.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetChatResponseConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetChatResponseConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`GetChatResponseConfigurationOutput`](crate::operation::get_chat_response_configuration::GetChatResponseConfigurationOutput).
    pub fn builder() -> crate::operation::get_chat_response_configuration::builders::GetChatResponseConfigurationOutputBuilder {
        crate::operation::get_chat_response_configuration::builders::GetChatResponseConfigurationOutputBuilder::default()
    }
}

/// A builder for [`GetChatResponseConfigurationOutput`](crate::operation::get_chat_response_configuration::GetChatResponseConfigurationOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetChatResponseConfigurationOutputBuilder {
    pub(crate) chat_response_configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) chat_response_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) in_use_configuration: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>,
    pub(crate) last_update_configuration: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>,
    _request_id: Option<String>,
}
impl GetChatResponseConfigurationOutputBuilder {
    /// <p>The unique identifier of the retrieved chat response configuration.</p>
    pub fn chat_response_configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.chat_response_configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the retrieved chat response configuration.</p>
    pub fn set_chat_response_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.chat_response_configuration_id = input;
        self
    }
    /// <p>The unique identifier of the retrieved chat response configuration.</p>
    pub fn get_chat_response_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.chat_response_configuration_id
    }
    /// <p>The Amazon Resource Name (ARN) of the retrieved chat response configuration, which uniquely identifies the resource across all Amazon Web Services services.</p>
    pub fn chat_response_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.chat_response_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the retrieved chat response configuration, which uniquely identifies the resource across all Amazon Web Services services.</p>
    pub fn set_chat_response_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.chat_response_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the retrieved chat response configuration, which uniquely identifies the resource across all Amazon Web Services services.</p>
    pub fn get_chat_response_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.chat_response_configuration_arn
    }
    /// <p>The human-readable name of the retrieved chat response configuration, making it easier to identify among multiple configurations.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The human-readable name of the retrieved chat response configuration, making it easier to identify among multiple configurations.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The human-readable name of the retrieved chat response configuration, making it easier to identify among multiple configurations.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The timestamp indicating when the chat response configuration was initially created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp indicating when the chat response configuration was initially created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp indicating when the chat response configuration was initially created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The currently active configuration settings that are being used to generate responses in the Amazon Q Business application.</p>
    pub fn in_use_configuration(mut self, input: crate::types::ChatResponseConfigurationDetail) -> Self {
        self.in_use_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The currently active configuration settings that are being used to generate responses in the Amazon Q Business application.</p>
    pub fn set_in_use_configuration(mut self, input: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>) -> Self {
        self.in_use_configuration = input;
        self
    }
    /// <p>The currently active configuration settings that are being used to generate responses in the Amazon Q Business application.</p>
    pub fn get_in_use_configuration(&self) -> &::std::option::Option<crate::types::ChatResponseConfigurationDetail> {
        &self.in_use_configuration
    }
    /// <p>Information about the most recent update to the configuration, including timestamp and modification details.</p>
    pub fn last_update_configuration(mut self, input: crate::types::ChatResponseConfigurationDetail) -> Self {
        self.last_update_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the most recent update to the configuration, including timestamp and modification details.</p>
    pub fn set_last_update_configuration(mut self, input: ::std::option::Option<crate::types::ChatResponseConfigurationDetail>) -> Self {
        self.last_update_configuration = input;
        self
    }
    /// <p>Information about the most recent update to the configuration, including timestamp and modification details.</p>
    pub fn get_last_update_configuration(&self) -> &::std::option::Option<crate::types::ChatResponseConfigurationDetail> {
        &self.last_update_configuration
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetChatResponseConfigurationOutput`](crate::operation::get_chat_response_configuration::GetChatResponseConfigurationOutput).
    pub fn build(self) -> crate::operation::get_chat_response_configuration::GetChatResponseConfigurationOutput {
        crate::operation::get_chat_response_configuration::GetChatResponseConfigurationOutput {
            chat_response_configuration_id: self.chat_response_configuration_id,
            chat_response_configuration_arn: self.chat_response_configuration_arn,
            display_name: self.display_name,
            created_at: self.created_at,
            in_use_configuration: self.in_use_configuration,
            last_update_configuration: self.last_update_configuration,
            _request_id: self._request_id,
        }
    }
}
