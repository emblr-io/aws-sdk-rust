// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a UDP ping beacon that can be used to measure network latency between a player device and an Amazon GameLift Servers hosting location.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PingBeacon {
    /// <p>The domain name and port of the UDP ping beacon.</p>
    pub udp_endpoint: ::std::option::Option<crate::types::UdpEndpoint>,
}
impl PingBeacon {
    /// <p>The domain name and port of the UDP ping beacon.</p>
    pub fn udp_endpoint(&self) -> ::std::option::Option<&crate::types::UdpEndpoint> {
        self.udp_endpoint.as_ref()
    }
}
impl PingBeacon {
    /// Creates a new builder-style object to manufacture [`PingBeacon`](crate::types::PingBeacon).
    pub fn builder() -> crate::types::builders::PingBeaconBuilder {
        crate::types::builders::PingBeaconBuilder::default()
    }
}

/// A builder for [`PingBeacon`](crate::types::PingBeacon).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PingBeaconBuilder {
    pub(crate) udp_endpoint: ::std::option::Option<crate::types::UdpEndpoint>,
}
impl PingBeaconBuilder {
    /// <p>The domain name and port of the UDP ping beacon.</p>
    pub fn udp_endpoint(mut self, input: crate::types::UdpEndpoint) -> Self {
        self.udp_endpoint = ::std::option::Option::Some(input);
        self
    }
    /// <p>The domain name and port of the UDP ping beacon.</p>
    pub fn set_udp_endpoint(mut self, input: ::std::option::Option<crate::types::UdpEndpoint>) -> Self {
        self.udp_endpoint = input;
        self
    }
    /// <p>The domain name and port of the UDP ping beacon.</p>
    pub fn get_udp_endpoint(&self) -> &::std::option::Option<crate::types::UdpEndpoint> {
        &self.udp_endpoint
    }
    /// Consumes the builder and constructs a [`PingBeacon`](crate::types::PingBeacon).
    pub fn build(self) -> crate::types::PingBeacon {
        crate::types::PingBeacon {
            udp_endpoint: self.udp_endpoint,
        }
    }
}
