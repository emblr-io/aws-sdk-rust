// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For a multi-location container fleet, describes the progress of a deployment across all fleet locations.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LocationalDeployment {
    /// <p>The status of fleet deployment activity in the location.</p>
    /// <ul>
    /// <li>
    /// <p><code>IN_PROGRESS</code> -- The deployment is in progress.</p></li>
    /// <li>
    /// <p><code>IMPAIRED</code> -- The deployment failed and the fleet has some impaired containers.</p></li>
    /// <li>
    /// <p><code>COMPLETE</code> -- The deployment has completed successfully.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_PROGRESS</code> -- The deployment failed and rollback has been initiated.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_COMPLETE</code> -- The deployment failed and rollback has been completed.</p></li>
    /// <li>
    /// <p><code>CANCELLED</code> -- The deployment was cancelled.</p></li>
    /// </ul>
    pub deployment_status: ::std::option::Option<crate::types::DeploymentStatus>,
}
impl LocationalDeployment {
    /// <p>The status of fleet deployment activity in the location.</p>
    /// <ul>
    /// <li>
    /// <p><code>IN_PROGRESS</code> -- The deployment is in progress.</p></li>
    /// <li>
    /// <p><code>IMPAIRED</code> -- The deployment failed and the fleet has some impaired containers.</p></li>
    /// <li>
    /// <p><code>COMPLETE</code> -- The deployment has completed successfully.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_PROGRESS</code> -- The deployment failed and rollback has been initiated.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_COMPLETE</code> -- The deployment failed and rollback has been completed.</p></li>
    /// <li>
    /// <p><code>CANCELLED</code> -- The deployment was cancelled.</p></li>
    /// </ul>
    pub fn deployment_status(&self) -> ::std::option::Option<&crate::types::DeploymentStatus> {
        self.deployment_status.as_ref()
    }
}
impl LocationalDeployment {
    /// Creates a new builder-style object to manufacture [`LocationalDeployment`](crate::types::LocationalDeployment).
    pub fn builder() -> crate::types::builders::LocationalDeploymentBuilder {
        crate::types::builders::LocationalDeploymentBuilder::default()
    }
}

/// A builder for [`LocationalDeployment`](crate::types::LocationalDeployment).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LocationalDeploymentBuilder {
    pub(crate) deployment_status: ::std::option::Option<crate::types::DeploymentStatus>,
}
impl LocationalDeploymentBuilder {
    /// <p>The status of fleet deployment activity in the location.</p>
    /// <ul>
    /// <li>
    /// <p><code>IN_PROGRESS</code> -- The deployment is in progress.</p></li>
    /// <li>
    /// <p><code>IMPAIRED</code> -- The deployment failed and the fleet has some impaired containers.</p></li>
    /// <li>
    /// <p><code>COMPLETE</code> -- The deployment has completed successfully.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_PROGRESS</code> -- The deployment failed and rollback has been initiated.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_COMPLETE</code> -- The deployment failed and rollback has been completed.</p></li>
    /// <li>
    /// <p><code>CANCELLED</code> -- The deployment was cancelled.</p></li>
    /// </ul>
    pub fn deployment_status(mut self, input: crate::types::DeploymentStatus) -> Self {
        self.deployment_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of fleet deployment activity in the location.</p>
    /// <ul>
    /// <li>
    /// <p><code>IN_PROGRESS</code> -- The deployment is in progress.</p></li>
    /// <li>
    /// <p><code>IMPAIRED</code> -- The deployment failed and the fleet has some impaired containers.</p></li>
    /// <li>
    /// <p><code>COMPLETE</code> -- The deployment has completed successfully.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_PROGRESS</code> -- The deployment failed and rollback has been initiated.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_COMPLETE</code> -- The deployment failed and rollback has been completed.</p></li>
    /// <li>
    /// <p><code>CANCELLED</code> -- The deployment was cancelled.</p></li>
    /// </ul>
    pub fn set_deployment_status(mut self, input: ::std::option::Option<crate::types::DeploymentStatus>) -> Self {
        self.deployment_status = input;
        self
    }
    /// <p>The status of fleet deployment activity in the location.</p>
    /// <ul>
    /// <li>
    /// <p><code>IN_PROGRESS</code> -- The deployment is in progress.</p></li>
    /// <li>
    /// <p><code>IMPAIRED</code> -- The deployment failed and the fleet has some impaired containers.</p></li>
    /// <li>
    /// <p><code>COMPLETE</code> -- The deployment has completed successfully.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_PROGRESS</code> -- The deployment failed and rollback has been initiated.</p></li>
    /// <li>
    /// <p><code>ROLLBACK_IN_COMPLETE</code> -- The deployment failed and rollback has been completed.</p></li>
    /// <li>
    /// <p><code>CANCELLED</code> -- The deployment was cancelled.</p></li>
    /// </ul>
    pub fn get_deployment_status(&self) -> &::std::option::Option<crate::types::DeploymentStatus> {
        &self.deployment_status
    }
    /// Consumes the builder and constructs a [`LocationalDeployment`](crate::types::LocationalDeployment).
    pub fn build(self) -> crate::types::LocationalDeployment {
        crate::types::LocationalDeployment {
            deployment_status: self.deployment_status,
        }
    }
}
