// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The domain name and port information for a UDP endpoint.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UdpEndpoint {
    /// <p>The domain name of the UDP endpoint.</p>
    pub domain: ::std::option::Option<::std::string::String>,
    /// <p>The port number of the UDP endpoint.</p>
    pub port: ::std::option::Option<i32>,
}
impl UdpEndpoint {
    /// <p>The domain name of the UDP endpoint.</p>
    pub fn domain(&self) -> ::std::option::Option<&str> {
        self.domain.as_deref()
    }
    /// <p>The port number of the UDP endpoint.</p>
    pub fn port(&self) -> ::std::option::Option<i32> {
        self.port
    }
}
impl UdpEndpoint {
    /// Creates a new builder-style object to manufacture [`UdpEndpoint`](crate::types::UdpEndpoint).
    pub fn builder() -> crate::types::builders::UdpEndpointBuilder {
        crate::types::builders::UdpEndpointBuilder::default()
    }
}

/// A builder for [`UdpEndpoint`](crate::types::UdpEndpoint).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UdpEndpointBuilder {
    pub(crate) domain: ::std::option::Option<::std::string::String>,
    pub(crate) port: ::std::option::Option<i32>,
}
impl UdpEndpointBuilder {
    /// <p>The domain name of the UDP endpoint.</p>
    pub fn domain(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The domain name of the UDP endpoint.</p>
    pub fn set_domain(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain = input;
        self
    }
    /// <p>The domain name of the UDP endpoint.</p>
    pub fn get_domain(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain
    }
    /// <p>The port number of the UDP endpoint.</p>
    pub fn port(mut self, input: i32) -> Self {
        self.port = ::std::option::Option::Some(input);
        self
    }
    /// <p>The port number of the UDP endpoint.</p>
    pub fn set_port(mut self, input: ::std::option::Option<i32>) -> Self {
        self.port = input;
        self
    }
    /// <p>The port number of the UDP endpoint.</p>
    pub fn get_port(&self) -> &::std::option::Option<i32> {
        &self.port
    }
    /// Consumes the builder and constructs a [`UdpEndpoint`](crate::types::UdpEndpoint).
    pub fn build(self) -> crate::types::UdpEndpoint {
        crate::types::UdpEndpoint {
            domain: self.domain,
            port: self.port,
        }
    }
}
