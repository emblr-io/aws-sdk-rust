// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetOciOnboardingStatusOutput {
    /// <p></p>
    pub status: ::std::option::Option<crate::types::OciOnboardingStatus>,
    /// <p>The existing OCI tenancy activation link for your Amazon Web Services account.</p>
    pub existing_tenancy_activation_link: ::std::option::Option<::std::string::String>,
    /// <p>A new OCI tenancy activation link for your Amazon Web Services account.</p>
    pub new_tenancy_activation_link: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetOciOnboardingStatusOutput {
    /// <p></p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::OciOnboardingStatus> {
        self.status.as_ref()
    }
    /// <p>The existing OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn existing_tenancy_activation_link(&self) -> ::std::option::Option<&str> {
        self.existing_tenancy_activation_link.as_deref()
    }
    /// <p>A new OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn new_tenancy_activation_link(&self) -> ::std::option::Option<&str> {
        self.new_tenancy_activation_link.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetOciOnboardingStatusOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetOciOnboardingStatusOutput {
    /// Creates a new builder-style object to manufacture [`GetOciOnboardingStatusOutput`](crate::operation::get_oci_onboarding_status::GetOciOnboardingStatusOutput).
    pub fn builder() -> crate::operation::get_oci_onboarding_status::builders::GetOciOnboardingStatusOutputBuilder {
        crate::operation::get_oci_onboarding_status::builders::GetOciOnboardingStatusOutputBuilder::default()
    }
}

/// A builder for [`GetOciOnboardingStatusOutput`](crate::operation::get_oci_onboarding_status::GetOciOnboardingStatusOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetOciOnboardingStatusOutputBuilder {
    pub(crate) status: ::std::option::Option<crate::types::OciOnboardingStatus>,
    pub(crate) existing_tenancy_activation_link: ::std::option::Option<::std::string::String>,
    pub(crate) new_tenancy_activation_link: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetOciOnboardingStatusOutputBuilder {
    /// <p></p>
    pub fn status(mut self, input: crate::types::OciOnboardingStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::OciOnboardingStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p></p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::OciOnboardingStatus> {
        &self.status
    }
    /// <p>The existing OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn existing_tenancy_activation_link(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.existing_tenancy_activation_link = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The existing OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn set_existing_tenancy_activation_link(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.existing_tenancy_activation_link = input;
        self
    }
    /// <p>The existing OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn get_existing_tenancy_activation_link(&self) -> &::std::option::Option<::std::string::String> {
        &self.existing_tenancy_activation_link
    }
    /// <p>A new OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn new_tenancy_activation_link(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.new_tenancy_activation_link = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A new OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn set_new_tenancy_activation_link(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.new_tenancy_activation_link = input;
        self
    }
    /// <p>A new OCI tenancy activation link for your Amazon Web Services account.</p>
    pub fn get_new_tenancy_activation_link(&self) -> &::std::option::Option<::std::string::String> {
        &self.new_tenancy_activation_link
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetOciOnboardingStatusOutput`](crate::operation::get_oci_onboarding_status::GetOciOnboardingStatusOutput).
    pub fn build(self) -> crate::operation::get_oci_onboarding_status::GetOciOnboardingStatusOutput {
        crate::operation::get_oci_onboarding_status::GetOciOnboardingStatusOutput {
            status: self.status,
            existing_tenancy_activation_link: self.existing_tenancy_activation_link,
            new_tenancy_activation_link: self.new_tenancy_activation_link,
            _request_id: self._request_id,
        }
    }
}
