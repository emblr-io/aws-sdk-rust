// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a specific version of Oracle Grid Infrastructure (GI) software that can be installed on a VM cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GiVersionSummary {
    /// <p>The GI software version.</p>
    pub version: ::std::option::Option<::std::string::String>,
}
impl GiVersionSummary {
    /// <p>The GI software version.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl GiVersionSummary {
    /// Creates a new builder-style object to manufacture [`GiVersionSummary`](crate::types::GiVersionSummary).
    pub fn builder() -> crate::types::builders::GiVersionSummaryBuilder {
        crate::types::builders::GiVersionSummaryBuilder::default()
    }
}

/// A builder for [`GiVersionSummary`](crate::types::GiVersionSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GiVersionSummaryBuilder {
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl GiVersionSummaryBuilder {
    /// <p>The GI software version.</p>
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The GI software version.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The GI software version.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`GiVersionSummary`](crate::types::GiVersionSummary).
    pub fn build(self) -> crate::types::GiVersionSummary {
        crate::types::GiVersionSummary { version: self.version }
    }
}
