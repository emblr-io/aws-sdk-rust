// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An enumeration of days of the week used for scheduling maintenance windows.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DayOfWeek {
    /// <p>The name of the day of the week.</p>
    pub name: ::std::option::Option<crate::types::DayOfWeekName>,
}
impl DayOfWeek {
    /// <p>The name of the day of the week.</p>
    pub fn name(&self) -> ::std::option::Option<&crate::types::DayOfWeekName> {
        self.name.as_ref()
    }
}
impl DayOfWeek {
    /// Creates a new builder-style object to manufacture [`DayOfWeek`](crate::types::DayOfWeek).
    pub fn builder() -> crate::types::builders::DayOfWeekBuilder {
        crate::types::builders::DayOfWeekBuilder::default()
    }
}

/// A builder for [`DayOfWeek`](crate::types::DayOfWeek).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DayOfWeekBuilder {
    pub(crate) name: ::std::option::Option<crate::types::DayOfWeekName>,
}
impl DayOfWeekBuilder {
    /// <p>The name of the day of the week.</p>
    pub fn name(mut self, input: crate::types::DayOfWeekName) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the day of the week.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::DayOfWeekName>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the day of the week.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::DayOfWeekName> {
        &self.name
    }
    /// Consumes the builder and constructs a [`DayOfWeek`](crate::types::DayOfWeek).
    pub fn build(self) -> crate::types::DayOfWeek {
        crate::types::DayOfWeek { name: self.name }
    }
}
