// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Resource details of an Autonomous VM cluster.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CloudAutonomousVmClusterResourceDetails {
    /// <p>The unique identifier of the Autonomous VM cluster.</p>
    pub cloud_autonomous_vm_cluster_id: ::std::option::Option<::std::string::String>,
    /// <p>The amount of unallocated Autonomous Database storage in the Autonomous VM cluster, in terabytes.</p>
    pub unallocated_adb_storage_in_tbs: ::std::option::Option<f64>,
}
impl CloudAutonomousVmClusterResourceDetails {
    /// <p>The unique identifier of the Autonomous VM cluster.</p>
    pub fn cloud_autonomous_vm_cluster_id(&self) -> ::std::option::Option<&str> {
        self.cloud_autonomous_vm_cluster_id.as_deref()
    }
    /// <p>The amount of unallocated Autonomous Database storage in the Autonomous VM cluster, in terabytes.</p>
    pub fn unallocated_adb_storage_in_tbs(&self) -> ::std::option::Option<f64> {
        self.unallocated_adb_storage_in_tbs
    }
}
impl CloudAutonomousVmClusterResourceDetails {
    /// Creates a new builder-style object to manufacture [`CloudAutonomousVmClusterResourceDetails`](crate::types::CloudAutonomousVmClusterResourceDetails).
    pub fn builder() -> crate::types::builders::CloudAutonomousVmClusterResourceDetailsBuilder {
        crate::types::builders::CloudAutonomousVmClusterResourceDetailsBuilder::default()
    }
}

/// A builder for [`CloudAutonomousVmClusterResourceDetails`](crate::types::CloudAutonomousVmClusterResourceDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CloudAutonomousVmClusterResourceDetailsBuilder {
    pub(crate) cloud_autonomous_vm_cluster_id: ::std::option::Option<::std::string::String>,
    pub(crate) unallocated_adb_storage_in_tbs: ::std::option::Option<f64>,
}
impl CloudAutonomousVmClusterResourceDetailsBuilder {
    /// <p>The unique identifier of the Autonomous VM cluster.</p>
    pub fn cloud_autonomous_vm_cluster_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cloud_autonomous_vm_cluster_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Autonomous VM cluster.</p>
    pub fn set_cloud_autonomous_vm_cluster_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cloud_autonomous_vm_cluster_id = input;
        self
    }
    /// <p>The unique identifier of the Autonomous VM cluster.</p>
    pub fn get_cloud_autonomous_vm_cluster_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.cloud_autonomous_vm_cluster_id
    }
    /// <p>The amount of unallocated Autonomous Database storage in the Autonomous VM cluster, in terabytes.</p>
    pub fn unallocated_adb_storage_in_tbs(mut self, input: f64) -> Self {
        self.unallocated_adb_storage_in_tbs = ::std::option::Option::Some(input);
        self
    }
    /// <p>The amount of unallocated Autonomous Database storage in the Autonomous VM cluster, in terabytes.</p>
    pub fn set_unallocated_adb_storage_in_tbs(mut self, input: ::std::option::Option<f64>) -> Self {
        self.unallocated_adb_storage_in_tbs = input;
        self
    }
    /// <p>The amount of unallocated Autonomous Database storage in the Autonomous VM cluster, in terabytes.</p>
    pub fn get_unallocated_adb_storage_in_tbs(&self) -> &::std::option::Option<f64> {
        &self.unallocated_adb_storage_in_tbs
    }
    /// Consumes the builder and constructs a [`CloudAutonomousVmClusterResourceDetails`](crate::types::CloudAutonomousVmClusterResourceDetails).
    pub fn build(self) -> crate::types::CloudAutonomousVmClusterResourceDetails {
        crate::types::CloudAutonomousVmClusterResourceDetails {
            cloud_autonomous_vm_cluster_id: self.cloud_autonomous_vm_cluster_id,
            unallocated_adb_storage_in_tbs: self.unallocated_adb_storage_in_tbs,
        }
    }
}
