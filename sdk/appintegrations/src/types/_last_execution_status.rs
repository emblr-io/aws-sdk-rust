// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The execution status of the last job.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LastExecutionStatus {
    /// <p>The job status enum string.</p>
    pub execution_status: ::std::option::Option<crate::types::ExecutionStatus>,
    /// <p>The status message of a job.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
}
impl LastExecutionStatus {
    /// <p>The job status enum string.</p>
    pub fn execution_status(&self) -> ::std::option::Option<&crate::types::ExecutionStatus> {
        self.execution_status.as_ref()
    }
    /// <p>The status message of a job.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
}
impl LastExecutionStatus {
    /// Creates a new builder-style object to manufacture [`LastExecutionStatus`](crate::types::LastExecutionStatus).
    pub fn builder() -> crate::types::builders::LastExecutionStatusBuilder {
        crate::types::builders::LastExecutionStatusBuilder::default()
    }
}

/// A builder for [`LastExecutionStatus`](crate::types::LastExecutionStatus).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LastExecutionStatusBuilder {
    pub(crate) execution_status: ::std::option::Option<crate::types::ExecutionStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
}
impl LastExecutionStatusBuilder {
    /// <p>The job status enum string.</p>
    pub fn execution_status(mut self, input: crate::types::ExecutionStatus) -> Self {
        self.execution_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The job status enum string.</p>
    pub fn set_execution_status(mut self, input: ::std::option::Option<crate::types::ExecutionStatus>) -> Self {
        self.execution_status = input;
        self
    }
    /// <p>The job status enum string.</p>
    pub fn get_execution_status(&self) -> &::std::option::Option<crate::types::ExecutionStatus> {
        &self.execution_status
    }
    /// <p>The status message of a job.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status message of a job.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>The status message of a job.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// Consumes the builder and constructs a [`LastExecutionStatus`](crate::types::LastExecutionStatus).
    pub fn build(self) -> crate::types::LastExecutionStatus {
        crate::types::LastExecutionStatus {
            execution_status: self.execution_status,
            status_message: self.status_message,
        }
    }
}
