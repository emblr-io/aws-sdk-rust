// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateDataIntegrationAssociationInput {
    /// <p>A unique identifier for the DataIntegration.</p>
    pub data_integration_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier. of the DataIntegrationAssociation resource</p>
    pub data_integration_association_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The configuration for how the files should be pulled from the source.</p>
    pub execution_configuration: ::std::option::Option<crate::types::ExecutionConfiguration>,
}
impl UpdateDataIntegrationAssociationInput {
    /// <p>A unique identifier for the DataIntegration.</p>
    pub fn data_integration_identifier(&self) -> ::std::option::Option<&str> {
        self.data_integration_identifier.as_deref()
    }
    /// <p>A unique identifier. of the DataIntegrationAssociation resource</p>
    pub fn data_integration_association_identifier(&self) -> ::std::option::Option<&str> {
        self.data_integration_association_identifier.as_deref()
    }
    /// <p>The configuration for how the files should be pulled from the source.</p>
    pub fn execution_configuration(&self) -> ::std::option::Option<&crate::types::ExecutionConfiguration> {
        self.execution_configuration.as_ref()
    }
}
impl UpdateDataIntegrationAssociationInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataIntegrationAssociationInput`](crate::operation::update_data_integration_association::UpdateDataIntegrationAssociationInput).
    pub fn builder() -> crate::operation::update_data_integration_association::builders::UpdateDataIntegrationAssociationInputBuilder {
        crate::operation::update_data_integration_association::builders::UpdateDataIntegrationAssociationInputBuilder::default()
    }
}

/// A builder for [`UpdateDataIntegrationAssociationInput`](crate::operation::update_data_integration_association::UpdateDataIntegrationAssociationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateDataIntegrationAssociationInputBuilder {
    pub(crate) data_integration_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) data_integration_association_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) execution_configuration: ::std::option::Option<crate::types::ExecutionConfiguration>,
}
impl UpdateDataIntegrationAssociationInputBuilder {
    /// <p>A unique identifier for the DataIntegration.</p>
    /// This field is required.
    pub fn data_integration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_integration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the DataIntegration.</p>
    pub fn set_data_integration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_integration_identifier = input;
        self
    }
    /// <p>A unique identifier for the DataIntegration.</p>
    pub fn get_data_integration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_integration_identifier
    }
    /// <p>A unique identifier. of the DataIntegrationAssociation resource</p>
    /// This field is required.
    pub fn data_integration_association_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_integration_association_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier. of the DataIntegrationAssociation resource</p>
    pub fn set_data_integration_association_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_integration_association_identifier = input;
        self
    }
    /// <p>A unique identifier. of the DataIntegrationAssociation resource</p>
    pub fn get_data_integration_association_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_integration_association_identifier
    }
    /// <p>The configuration for how the files should be pulled from the source.</p>
    /// This field is required.
    pub fn execution_configuration(mut self, input: crate::types::ExecutionConfiguration) -> Self {
        self.execution_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for how the files should be pulled from the source.</p>
    pub fn set_execution_configuration(mut self, input: ::std::option::Option<crate::types::ExecutionConfiguration>) -> Self {
        self.execution_configuration = input;
        self
    }
    /// <p>The configuration for how the files should be pulled from the source.</p>
    pub fn get_execution_configuration(&self) -> &::std::option::Option<crate::types::ExecutionConfiguration> {
        &self.execution_configuration
    }
    /// Consumes the builder and constructs a [`UpdateDataIntegrationAssociationInput`](crate::operation::update_data_integration_association::UpdateDataIntegrationAssociationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_data_integration_association::UpdateDataIntegrationAssociationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_data_integration_association::UpdateDataIntegrationAssociationInput {
                data_integration_identifier: self.data_integration_identifier,
                data_integration_association_identifier: self.data_integration_association_identifier,
                execution_configuration: self.execution_configuration,
            },
        )
    }
}
