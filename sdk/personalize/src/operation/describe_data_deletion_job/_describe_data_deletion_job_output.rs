// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeDataDeletionJobOutput {
    /// <p>Information about the data deletion job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p>PENDING</p></li>
    /// <li>
    /// <p>IN_PROGRESS</p></li>
    /// <li>
    /// <p>COMPLETED</p></li>
    /// <li>
    /// <p>FAILED</p></li>
    /// </ul>
    pub data_deletion_job: ::std::option::Option<crate::types::DataDeletionJob>,
    _request_id: Option<String>,
}
impl DescribeDataDeletionJobOutput {
    /// <p>Information about the data deletion job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p>PENDING</p></li>
    /// <li>
    /// <p>IN_PROGRESS</p></li>
    /// <li>
    /// <p>COMPLETED</p></li>
    /// <li>
    /// <p>FAILED</p></li>
    /// </ul>
    pub fn data_deletion_job(&self) -> ::std::option::Option<&crate::types::DataDeletionJob> {
        self.data_deletion_job.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeDataDeletionJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDataDeletionJobOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDataDeletionJobOutput`](crate::operation::describe_data_deletion_job::DescribeDataDeletionJobOutput).
    pub fn builder() -> crate::operation::describe_data_deletion_job::builders::DescribeDataDeletionJobOutputBuilder {
        crate::operation::describe_data_deletion_job::builders::DescribeDataDeletionJobOutputBuilder::default()
    }
}

/// A builder for [`DescribeDataDeletionJobOutput`](crate::operation::describe_data_deletion_job::DescribeDataDeletionJobOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeDataDeletionJobOutputBuilder {
    pub(crate) data_deletion_job: ::std::option::Option<crate::types::DataDeletionJob>,
    _request_id: Option<String>,
}
impl DescribeDataDeletionJobOutputBuilder {
    /// <p>Information about the data deletion job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p>PENDING</p></li>
    /// <li>
    /// <p>IN_PROGRESS</p></li>
    /// <li>
    /// <p>COMPLETED</p></li>
    /// <li>
    /// <p>FAILED</p></li>
    /// </ul>
    pub fn data_deletion_job(mut self, input: crate::types::DataDeletionJob) -> Self {
        self.data_deletion_job = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the data deletion job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p>PENDING</p></li>
    /// <li>
    /// <p>IN_PROGRESS</p></li>
    /// <li>
    /// <p>COMPLETED</p></li>
    /// <li>
    /// <p>FAILED</p></li>
    /// </ul>
    pub fn set_data_deletion_job(mut self, input: ::std::option::Option<crate::types::DataDeletionJob>) -> Self {
        self.data_deletion_job = input;
        self
    }
    /// <p>Information about the data deletion job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p>PENDING</p></li>
    /// <li>
    /// <p>IN_PROGRESS</p></li>
    /// <li>
    /// <p>COMPLETED</p></li>
    /// <li>
    /// <p>FAILED</p></li>
    /// </ul>
    pub fn get_data_deletion_job(&self) -> &::std::option::Option<crate::types::DataDeletionJob> {
        &self.data_deletion_job
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDataDeletionJobOutput`](crate::operation::describe_data_deletion_job::DescribeDataDeletionJobOutput).
    pub fn build(self) -> crate::operation::describe_data_deletion_job::DescribeDataDeletionJobOutput {
        crate::operation::describe_data_deletion_job::DescribeDataDeletionJobOutput {
            data_deletion_job: self.data_deletion_job,
            _request_id: self._request_id,
        }
    }
}
