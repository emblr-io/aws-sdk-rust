// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateVpcOriginInput {
    /// <p>The VPC origin endpoint configuration.</p>
    pub vpc_origin_endpoint_config: ::std::option::Option<crate::types::VpcOriginEndpointConfig>,
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub tags: ::std::option::Option<crate::types::Tags>,
}
impl CreateVpcOriginInput {
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn vpc_origin_endpoint_config(&self) -> ::std::option::Option<&crate::types::VpcOriginEndpointConfig> {
        self.vpc_origin_endpoint_config.as_ref()
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn tags(&self) -> ::std::option::Option<&crate::types::Tags> {
        self.tags.as_ref()
    }
}
impl CreateVpcOriginInput {
    /// Creates a new builder-style object to manufacture [`CreateVpcOriginInput`](crate::operation::create_vpc_origin::CreateVpcOriginInput).
    pub fn builder() -> crate::operation::create_vpc_origin::builders::CreateVpcOriginInputBuilder {
        crate::operation::create_vpc_origin::builders::CreateVpcOriginInputBuilder::default()
    }
}

/// A builder for [`CreateVpcOriginInput`](crate::operation::create_vpc_origin::CreateVpcOriginInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateVpcOriginInputBuilder {
    pub(crate) vpc_origin_endpoint_config: ::std::option::Option<crate::types::VpcOriginEndpointConfig>,
    pub(crate) tags: ::std::option::Option<crate::types::Tags>,
}
impl CreateVpcOriginInputBuilder {
    /// <p>The VPC origin endpoint configuration.</p>
    /// This field is required.
    pub fn vpc_origin_endpoint_config(mut self, input: crate::types::VpcOriginEndpointConfig) -> Self {
        self.vpc_origin_endpoint_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn set_vpc_origin_endpoint_config(mut self, input: ::std::option::Option<crate::types::VpcOriginEndpointConfig>) -> Self {
        self.vpc_origin_endpoint_config = input;
        self
    }
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn get_vpc_origin_endpoint_config(&self) -> &::std::option::Option<crate::types::VpcOriginEndpointConfig> {
        &self.vpc_origin_endpoint_config
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn tags(mut self, input: crate::types::Tags) -> Self {
        self.tags = ::std::option::Option::Some(input);
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<crate::types::Tags>) -> Self {
        self.tags = input;
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn get_tags(&self) -> &::std::option::Option<crate::types::Tags> {
        &self.tags
    }
    /// Consumes the builder and constructs a [`CreateVpcOriginInput`](crate::operation::create_vpc_origin::CreateVpcOriginInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_vpc_origin::CreateVpcOriginInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_vpc_origin::CreateVpcOriginInput {
            vpc_origin_endpoint_config: self.vpc_origin_endpoint_config,
            tags: self.tags,
        })
    }
}
