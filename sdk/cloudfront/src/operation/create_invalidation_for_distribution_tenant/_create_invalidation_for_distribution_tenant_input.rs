// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateInvalidationForDistributionTenantInput {
    /// <p>The ID of the distribution tenant.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>An invalidation batch.</p>
    pub invalidation_batch: ::std::option::Option<crate::types::InvalidationBatch>,
}
impl CreateInvalidationForDistributionTenantInput {
    /// <p>The ID of the distribution tenant.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>An invalidation batch.</p>
    pub fn invalidation_batch(&self) -> ::std::option::Option<&crate::types::InvalidationBatch> {
        self.invalidation_batch.as_ref()
    }
}
impl CreateInvalidationForDistributionTenantInput {
    /// Creates a new builder-style object to manufacture [`CreateInvalidationForDistributionTenantInput`](crate::operation::create_invalidation_for_distribution_tenant::CreateInvalidationForDistributionTenantInput).
    pub fn builder() -> crate::operation::create_invalidation_for_distribution_tenant::builders::CreateInvalidationForDistributionTenantInputBuilder {
        crate::operation::create_invalidation_for_distribution_tenant::builders::CreateInvalidationForDistributionTenantInputBuilder::default()
    }
}

/// A builder for [`CreateInvalidationForDistributionTenantInput`](crate::operation::create_invalidation_for_distribution_tenant::CreateInvalidationForDistributionTenantInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateInvalidationForDistributionTenantInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) invalidation_batch: ::std::option::Option<crate::types::InvalidationBatch>,
}
impl CreateInvalidationForDistributionTenantInputBuilder {
    /// <p>The ID of the distribution tenant.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the distribution tenant.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the distribution tenant.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>An invalidation batch.</p>
    /// This field is required.
    pub fn invalidation_batch(mut self, input: crate::types::InvalidationBatch) -> Self {
        self.invalidation_batch = ::std::option::Option::Some(input);
        self
    }
    /// <p>An invalidation batch.</p>
    pub fn set_invalidation_batch(mut self, input: ::std::option::Option<crate::types::InvalidationBatch>) -> Self {
        self.invalidation_batch = input;
        self
    }
    /// <p>An invalidation batch.</p>
    pub fn get_invalidation_batch(&self) -> &::std::option::Option<crate::types::InvalidationBatch> {
        &self.invalidation_batch
    }
    /// Consumes the builder and constructs a [`CreateInvalidationForDistributionTenantInput`](crate::operation::create_invalidation_for_distribution_tenant::CreateInvalidationForDistributionTenantInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_invalidation_for_distribution_tenant::CreateInvalidationForDistributionTenantInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_invalidation_for_distribution_tenant::CreateInvalidationForDistributionTenantInput {
                id: self.id,
                invalidation_batch: self.invalidation_batch,
            },
        )
    }
}
