// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteVpcOriginOutput {
    /// <p>The VPC origin.</p>
    pub vpc_origin: ::std::option::Option<crate::types::VpcOrigin>,
    /// <p>The VPC origin ETag.</p>
    pub e_tag: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DeleteVpcOriginOutput {
    /// <p>The VPC origin.</p>
    pub fn vpc_origin(&self) -> ::std::option::Option<&crate::types::VpcOrigin> {
        self.vpc_origin.as_ref()
    }
    /// <p>The VPC origin ETag.</p>
    pub fn e_tag(&self) -> ::std::option::Option<&str> {
        self.e_tag.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for DeleteVpcOriginOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteVpcOriginOutput {
    /// Creates a new builder-style object to manufacture [`DeleteVpcOriginOutput`](crate::operation::delete_vpc_origin::DeleteVpcOriginOutput).
    pub fn builder() -> crate::operation::delete_vpc_origin::builders::DeleteVpcOriginOutputBuilder {
        crate::operation::delete_vpc_origin::builders::DeleteVpcOriginOutputBuilder::default()
    }
}

/// A builder for [`DeleteVpcOriginOutput`](crate::operation::delete_vpc_origin::DeleteVpcOriginOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteVpcOriginOutputBuilder {
    pub(crate) vpc_origin: ::std::option::Option<crate::types::VpcOrigin>,
    pub(crate) e_tag: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DeleteVpcOriginOutputBuilder {
    /// <p>The VPC origin.</p>
    pub fn vpc_origin(mut self, input: crate::types::VpcOrigin) -> Self {
        self.vpc_origin = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VPC origin.</p>
    pub fn set_vpc_origin(mut self, input: ::std::option::Option<crate::types::VpcOrigin>) -> Self {
        self.vpc_origin = input;
        self
    }
    /// <p>The VPC origin.</p>
    pub fn get_vpc_origin(&self) -> &::std::option::Option<crate::types::VpcOrigin> {
        &self.vpc_origin
    }
    /// <p>The VPC origin ETag.</p>
    pub fn e_tag(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.e_tag = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC origin ETag.</p>
    pub fn set_e_tag(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.e_tag = input;
        self
    }
    /// <p>The VPC origin ETag.</p>
    pub fn get_e_tag(&self) -> &::std::option::Option<::std::string::String> {
        &self.e_tag
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteVpcOriginOutput`](crate::operation::delete_vpc_origin::DeleteVpcOriginOutput).
    pub fn build(self) -> crate::operation::delete_vpc_origin::DeleteVpcOriginOutput {
        crate::operation::delete_vpc_origin::DeleteVpcOriginOutput {
            vpc_origin: self.vpc_origin,
            e_tag: self.e_tag,
            _request_id: self._request_id,
        }
    }
}
