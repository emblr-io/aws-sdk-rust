// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListDistributionsByVpcOriginIdInput {
    /// <p>The marker associated with the VPC origin distributions list.</p>
    pub marker: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of items included in the list.</p>
    pub max_items: ::std::option::Option<i32>,
    /// <p>The VPC origin ID.</p>
    pub vpc_origin_id: ::std::option::Option<::std::string::String>,
}
impl ListDistributionsByVpcOriginIdInput {
    /// <p>The marker associated with the VPC origin distributions list.</p>
    pub fn marker(&self) -> ::std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>The maximum number of items included in the list.</p>
    pub fn max_items(&self) -> ::std::option::Option<i32> {
        self.max_items
    }
    /// <p>The VPC origin ID.</p>
    pub fn vpc_origin_id(&self) -> ::std::option::Option<&str> {
        self.vpc_origin_id.as_deref()
    }
}
impl ListDistributionsByVpcOriginIdInput {
    /// Creates a new builder-style object to manufacture [`ListDistributionsByVpcOriginIdInput`](crate::operation::list_distributions_by_vpc_origin_id::ListDistributionsByVpcOriginIdInput).
    pub fn builder() -> crate::operation::list_distributions_by_vpc_origin_id::builders::ListDistributionsByVpcOriginIdInputBuilder {
        crate::operation::list_distributions_by_vpc_origin_id::builders::ListDistributionsByVpcOriginIdInputBuilder::default()
    }
}

/// A builder for [`ListDistributionsByVpcOriginIdInput`](crate::operation::list_distributions_by_vpc_origin_id::ListDistributionsByVpcOriginIdInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListDistributionsByVpcOriginIdInputBuilder {
    pub(crate) marker: ::std::option::Option<::std::string::String>,
    pub(crate) max_items: ::std::option::Option<i32>,
    pub(crate) vpc_origin_id: ::std::option::Option<::std::string::String>,
}
impl ListDistributionsByVpcOriginIdInputBuilder {
    /// <p>The marker associated with the VPC origin distributions list.</p>
    pub fn marker(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.marker = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The marker associated with the VPC origin distributions list.</p>
    pub fn set_marker(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>The marker associated with the VPC origin distributions list.</p>
    pub fn get_marker(&self) -> &::std::option::Option<::std::string::String> {
        &self.marker
    }
    /// <p>The maximum number of items included in the list.</p>
    pub fn max_items(mut self, input: i32) -> Self {
        self.max_items = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of items included in the list.</p>
    pub fn set_max_items(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_items = input;
        self
    }
    /// <p>The maximum number of items included in the list.</p>
    pub fn get_max_items(&self) -> &::std::option::Option<i32> {
        &self.max_items
    }
    /// <p>The VPC origin ID.</p>
    /// This field is required.
    pub fn vpc_origin_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_origin_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC origin ID.</p>
    pub fn set_vpc_origin_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_origin_id = input;
        self
    }
    /// <p>The VPC origin ID.</p>
    pub fn get_vpc_origin_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_origin_id
    }
    /// Consumes the builder and constructs a [`ListDistributionsByVpcOriginIdInput`](crate::operation::list_distributions_by_vpc_origin_id::ListDistributionsByVpcOriginIdInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_distributions_by_vpc_origin_id::ListDistributionsByVpcOriginIdInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_distributions_by_vpc_origin_id::ListDistributionsByVpcOriginIdInput {
                marker: self.marker,
                max_items: self.max_items,
                vpc_origin_id: self.vpc_origin_id,
            },
        )
    }
}
