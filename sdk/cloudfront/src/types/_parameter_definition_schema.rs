// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about the parameter definition.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ParameterDefinitionSchema {
    /// <p>An object that contains information about the string schema.</p>
    pub string_schema: ::std::option::Option<crate::types::StringSchemaConfig>,
}
impl ParameterDefinitionSchema {
    /// <p>An object that contains information about the string schema.</p>
    pub fn string_schema(&self) -> ::std::option::Option<&crate::types::StringSchemaConfig> {
        self.string_schema.as_ref()
    }
}
impl ParameterDefinitionSchema {
    /// Creates a new builder-style object to manufacture [`ParameterDefinitionSchema`](crate::types::ParameterDefinitionSchema).
    pub fn builder() -> crate::types::builders::ParameterDefinitionSchemaBuilder {
        crate::types::builders::ParameterDefinitionSchemaBuilder::default()
    }
}

/// A builder for [`ParameterDefinitionSchema`](crate::types::ParameterDefinitionSchema).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ParameterDefinitionSchemaBuilder {
    pub(crate) string_schema: ::std::option::Option<crate::types::StringSchemaConfig>,
}
impl ParameterDefinitionSchemaBuilder {
    /// <p>An object that contains information about the string schema.</p>
    pub fn string_schema(mut self, input: crate::types::StringSchemaConfig) -> Self {
        self.string_schema = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains information about the string schema.</p>
    pub fn set_string_schema(mut self, input: ::std::option::Option<crate::types::StringSchemaConfig>) -> Self {
        self.string_schema = input;
        self
    }
    /// <p>An object that contains information about the string schema.</p>
    pub fn get_string_schema(&self) -> &::std::option::Option<crate::types::StringSchemaConfig> {
        &self.string_schema
    }
    /// Consumes the builder and constructs a [`ParameterDefinitionSchema`](crate::types::ParameterDefinitionSchema).
    pub fn build(self) -> crate::types::ParameterDefinitionSchema {
        crate::types::ParameterDefinitionSchema {
            string_schema: self.string_schema,
        }
    }
}
