// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An Amazon CloudFront VPC origin.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcOrigin {
    /// <p>The VPC origin ID.</p>
    pub id: ::std::string::String,
    /// <p>The VPC origin ARN.</p>
    pub arn: ::std::string::String,
    /// <p>The VPC origin status.</p>
    pub status: ::std::string::String,
    /// <p>The VPC origin created time.</p>
    pub created_time: ::aws_smithy_types::DateTime,
    /// <p>The VPC origin last modified time.</p>
    pub last_modified_time: ::aws_smithy_types::DateTime,
    /// <p>The VPC origin endpoint configuration.</p>
    pub vpc_origin_endpoint_config: ::std::option::Option<crate::types::VpcOriginEndpointConfig>,
}
impl VpcOrigin {
    /// <p>The VPC origin ID.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The VPC origin ARN.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The VPC origin status.</p>
    pub fn status(&self) -> &str {
        use std::ops::Deref;
        self.status.deref()
    }
    /// <p>The VPC origin created time.</p>
    pub fn created_time(&self) -> &::aws_smithy_types::DateTime {
        &self.created_time
    }
    /// <p>The VPC origin last modified time.</p>
    pub fn last_modified_time(&self) -> &::aws_smithy_types::DateTime {
        &self.last_modified_time
    }
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn vpc_origin_endpoint_config(&self) -> ::std::option::Option<&crate::types::VpcOriginEndpointConfig> {
        self.vpc_origin_endpoint_config.as_ref()
    }
}
impl VpcOrigin {
    /// Creates a new builder-style object to manufacture [`VpcOrigin`](crate::types::VpcOrigin).
    pub fn builder() -> crate::types::builders::VpcOriginBuilder {
        crate::types::builders::VpcOriginBuilder::default()
    }
}

/// A builder for [`VpcOrigin`](crate::types::VpcOrigin).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VpcOriginBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<::std::string::String>,
    pub(crate) created_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) vpc_origin_endpoint_config: ::std::option::Option<crate::types::VpcOriginEndpointConfig>,
}
impl VpcOriginBuilder {
    /// <p>The VPC origin ID.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC origin ID.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The VPC origin ID.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The VPC origin ARN.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC origin ARN.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The VPC origin ARN.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The VPC origin status.</p>
    /// This field is required.
    pub fn status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The VPC origin status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The VPC origin status.</p>
    pub fn get_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.status
    }
    /// <p>The VPC origin created time.</p>
    /// This field is required.
    pub fn created_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VPC origin created time.</p>
    pub fn set_created_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_time = input;
        self
    }
    /// <p>The VPC origin created time.</p>
    pub fn get_created_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_time
    }
    /// <p>The VPC origin last modified time.</p>
    /// This field is required.
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VPC origin last modified time.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The VPC origin last modified time.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The VPC origin endpoint configuration.</p>
    /// This field is required.
    pub fn vpc_origin_endpoint_config(mut self, input: crate::types::VpcOriginEndpointConfig) -> Self {
        self.vpc_origin_endpoint_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn set_vpc_origin_endpoint_config(mut self, input: ::std::option::Option<crate::types::VpcOriginEndpointConfig>) -> Self {
        self.vpc_origin_endpoint_config = input;
        self
    }
    /// <p>The VPC origin endpoint configuration.</p>
    pub fn get_vpc_origin_endpoint_config(&self) -> &::std::option::Option<crate::types::VpcOriginEndpointConfig> {
        &self.vpc_origin_endpoint_config
    }
    /// Consumes the builder and constructs a [`VpcOrigin`](crate::types::VpcOrigin).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::VpcOriginBuilder::id)
    /// - [`arn`](crate::types::builders::VpcOriginBuilder::arn)
    /// - [`status`](crate::types::builders::VpcOriginBuilder::status)
    /// - [`created_time`](crate::types::builders::VpcOriginBuilder::created_time)
    /// - [`last_modified_time`](crate::types::builders::VpcOriginBuilder::last_modified_time)
    pub fn build(self) -> ::std::result::Result<crate::types::VpcOrigin, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VpcOrigin {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building VpcOrigin",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building VpcOrigin",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building VpcOrigin",
                )
            })?,
            created_time: self.created_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_time",
                    "created_time was not specified but it is required when building VpcOrigin",
                )
            })?,
            last_modified_time: self.last_modified_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_modified_time",
                    "last_modified_time was not specified but it is required when building VpcOrigin",
                )
            })?,
            vpc_origin_endpoint_config: self.vpc_origin_endpoint_config,
        })
    }
}
