// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The toll summary for the complete route.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteTollSummary {
    /// <p>Total toll summary for the complete route. Total is the only summary available today.</p>
    pub total: ::std::option::Option<crate::types::RouteTollPriceSummary>,
}
impl RouteTollSummary {
    /// <p>Total toll summary for the complete route. Total is the only summary available today.</p>
    pub fn total(&self) -> ::std::option::Option<&crate::types::RouteTollPriceSummary> {
        self.total.as_ref()
    }
}
impl RouteTollSummary {
    /// Creates a new builder-style object to manufacture [`RouteTollSummary`](crate::types::RouteTollSummary).
    pub fn builder() -> crate::types::builders::RouteTollSummaryBuilder {
        crate::types::builders::RouteTollSummaryBuilder::default()
    }
}

/// A builder for [`RouteTollSummary`](crate::types::RouteTollSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteTollSummaryBuilder {
    pub(crate) total: ::std::option::Option<crate::types::RouteTollPriceSummary>,
}
impl RouteTollSummaryBuilder {
    /// <p>Total toll summary for the complete route. Total is the only summary available today.</p>
    pub fn total(mut self, input: crate::types::RouteTollPriceSummary) -> Self {
        self.total = ::std::option::Option::Some(input);
        self
    }
    /// <p>Total toll summary for the complete route. Total is the only summary available today.</p>
    pub fn set_total(mut self, input: ::std::option::Option<crate::types::RouteTollPriceSummary>) -> Self {
        self.total = input;
        self
    }
    /// <p>Total toll summary for the complete route. Total is the only summary available today.</p>
    pub fn get_total(&self) -> &::std::option::Option<crate::types::RouteTollPriceSummary> {
        &self.total
    }
    /// Consumes the builder and constructs a [`RouteTollSummary`](crate::types::RouteTollSummary).
    pub fn build(self) -> crate::types::RouteTollSummary {
        crate::types::RouteTollSummary { total: self.total }
    }
}
