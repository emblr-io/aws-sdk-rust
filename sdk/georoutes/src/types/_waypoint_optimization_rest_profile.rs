// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WaypointOptimizationRestProfile {
    /// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
    pub profile: ::std::string::String,
}
impl WaypointOptimizationRestProfile {
    /// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
    pub fn profile(&self) -> &str {
        use std::ops::Deref;
        self.profile.deref()
    }
}
impl WaypointOptimizationRestProfile {
    /// Creates a new builder-style object to manufacture [`WaypointOptimizationRestProfile`](crate::types::WaypointOptimizationRestProfile).
    pub fn builder() -> crate::types::builders::WaypointOptimizationRestProfileBuilder {
        crate::types::builders::WaypointOptimizationRestProfileBuilder::default()
    }
}

/// A builder for [`WaypointOptimizationRestProfile`](crate::types::WaypointOptimizationRestProfile).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WaypointOptimizationRestProfileBuilder {
    pub(crate) profile: ::std::option::Option<::std::string::String>,
}
impl WaypointOptimizationRestProfileBuilder {
    /// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
    /// This field is required.
    pub fn profile(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
    pub fn set_profile(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile = input;
        self
    }
    /// <p>Pre defined rest profiles for a driver schedule. The only currently supported profile is EU.</p>
    pub fn get_profile(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile
    }
    /// Consumes the builder and constructs a [`WaypointOptimizationRestProfile`](crate::types::WaypointOptimizationRestProfile).
    /// This method will fail if any of the following fields are not set:
    /// - [`profile`](crate::types::builders::WaypointOptimizationRestProfileBuilder::profile)
    pub fn build(self) -> ::std::result::Result<crate::types::WaypointOptimizationRestProfile, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WaypointOptimizationRestProfile {
            profile: self.profile.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "profile",
                    "profile was not specified but it is required when building WaypointOptimizationRestProfile",
                )
            })?,
        })
    }
}
