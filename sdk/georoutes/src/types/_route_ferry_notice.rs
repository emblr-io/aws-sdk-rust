// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Notices are additional information returned that indicate issues that occurred during route calculation.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteFerryNotice {
    /// <p>Code corresponding to the issue.</p>
    pub code: crate::types::RouteFerryNoticeCode,
    /// <p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High impact notices must be evaluated further to determine the impact.</p>
    pub impact: ::std::option::Option<crate::types::RouteNoticeImpact>,
}
impl RouteFerryNotice {
    /// <p>Code corresponding to the issue.</p>
    pub fn code(&self) -> &crate::types::RouteFerryNoticeCode {
        &self.code
    }
    /// <p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High impact notices must be evaluated further to determine the impact.</p>
    pub fn impact(&self) -> ::std::option::Option<&crate::types::RouteNoticeImpact> {
        self.impact.as_ref()
    }
}
impl RouteFerryNotice {
    /// Creates a new builder-style object to manufacture [`RouteFerryNotice`](crate::types::RouteFerryNotice).
    pub fn builder() -> crate::types::builders::RouteFerryNoticeBuilder {
        crate::types::builders::RouteFerryNoticeBuilder::default()
    }
}

/// A builder for [`RouteFerryNotice`](crate::types::RouteFerryNotice).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteFerryNoticeBuilder {
    pub(crate) code: ::std::option::Option<crate::types::RouteFerryNoticeCode>,
    pub(crate) impact: ::std::option::Option<crate::types::RouteNoticeImpact>,
}
impl RouteFerryNoticeBuilder {
    /// <p>Code corresponding to the issue.</p>
    /// This field is required.
    pub fn code(mut self, input: crate::types::RouteFerryNoticeCode) -> Self {
        self.code = ::std::option::Option::Some(input);
        self
    }
    /// <p>Code corresponding to the issue.</p>
    pub fn set_code(mut self, input: ::std::option::Option<crate::types::RouteFerryNoticeCode>) -> Self {
        self.code = input;
        self
    }
    /// <p>Code corresponding to the issue.</p>
    pub fn get_code(&self) -> &::std::option::Option<crate::types::RouteFerryNoticeCode> {
        &self.code
    }
    /// <p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High impact notices must be evaluated further to determine the impact.</p>
    pub fn impact(mut self, input: crate::types::RouteNoticeImpact) -> Self {
        self.impact = ::std::option::Option::Some(input);
        self
    }
    /// <p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High impact notices must be evaluated further to determine the impact.</p>
    pub fn set_impact(mut self, input: ::std::option::Option<crate::types::RouteNoticeImpact>) -> Self {
        self.impact = input;
        self
    }
    /// <p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High impact notices must be evaluated further to determine the impact.</p>
    pub fn get_impact(&self) -> &::std::option::Option<crate::types::RouteNoticeImpact> {
        &self.impact
    }
    /// Consumes the builder and constructs a [`RouteFerryNotice`](crate::types::RouteFerryNotice).
    /// This method will fail if any of the following fields are not set:
    /// - [`code`](crate::types::builders::RouteFerryNoticeBuilder::code)
    pub fn build(self) -> ::std::result::Result<crate::types::RouteFerryNotice, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RouteFerryNotice {
            code: self.code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "code",
                    "code was not specified but it is required when building RouteFerryNotice",
                )
            })?,
            impact: self.impact,
        })
    }
}
