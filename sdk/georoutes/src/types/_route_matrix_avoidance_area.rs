// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Area to be avoided.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteMatrixAvoidanceArea {
    /// <p>Geometry of the area to be avoided.</p>
    pub geometry: ::std::option::Option<crate::types::RouteMatrixAvoidanceAreaGeometry>,
}
impl RouteMatrixAvoidanceArea {
    /// <p>Geometry of the area to be avoided.</p>
    pub fn geometry(&self) -> ::std::option::Option<&crate::types::RouteMatrixAvoidanceAreaGeometry> {
        self.geometry.as_ref()
    }
}
impl RouteMatrixAvoidanceArea {
    /// Creates a new builder-style object to manufacture [`RouteMatrixAvoidanceArea`](crate::types::RouteMatrixAvoidanceArea).
    pub fn builder() -> crate::types::builders::RouteMatrixAvoidanceAreaBuilder {
        crate::types::builders::RouteMatrixAvoidanceAreaBuilder::default()
    }
}

/// A builder for [`RouteMatrixAvoidanceArea`](crate::types::RouteMatrixAvoidanceArea).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteMatrixAvoidanceAreaBuilder {
    pub(crate) geometry: ::std::option::Option<crate::types::RouteMatrixAvoidanceAreaGeometry>,
}
impl RouteMatrixAvoidanceAreaBuilder {
    /// <p>Geometry of the area to be avoided.</p>
    /// This field is required.
    pub fn geometry(mut self, input: crate::types::RouteMatrixAvoidanceAreaGeometry) -> Self {
        self.geometry = ::std::option::Option::Some(input);
        self
    }
    /// <p>Geometry of the area to be avoided.</p>
    pub fn set_geometry(mut self, input: ::std::option::Option<crate::types::RouteMatrixAvoidanceAreaGeometry>) -> Self {
        self.geometry = input;
        self
    }
    /// <p>Geometry of the area to be avoided.</p>
    pub fn get_geometry(&self) -> &::std::option::Option<crate::types::RouteMatrixAvoidanceAreaGeometry> {
        &self.geometry
    }
    /// Consumes the builder and constructs a [`RouteMatrixAvoidanceArea`](crate::types::RouteMatrixAvoidanceArea).
    pub fn build(self) -> crate::types::RouteMatrixAvoidanceArea {
        crate::types::RouteMatrixAvoidanceArea { geometry: self.geometry }
    }
}
