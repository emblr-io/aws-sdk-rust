// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>License plate information of the vehicle. Currently, only the last character is used where license plate based controlled access is enforced.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteVehicleLicensePlate {
    /// <p>The last character of the License Plate.</p>
    pub last_character: ::std::option::Option<::std::string::String>,
}
impl RouteVehicleLicensePlate {
    /// <p>The last character of the License Plate.</p>
    pub fn last_character(&self) -> ::std::option::Option<&str> {
        self.last_character.as_deref()
    }
}
impl RouteVehicleLicensePlate {
    /// Creates a new builder-style object to manufacture [`RouteVehicleLicensePlate`](crate::types::RouteVehicleLicensePlate).
    pub fn builder() -> crate::types::builders::RouteVehicleLicensePlateBuilder {
        crate::types::builders::RouteVehicleLicensePlateBuilder::default()
    }
}

/// A builder for [`RouteVehicleLicensePlate`](crate::types::RouteVehicleLicensePlate).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteVehicleLicensePlateBuilder {
    pub(crate) last_character: ::std::option::Option<::std::string::String>,
}
impl RouteVehicleLicensePlateBuilder {
    /// <p>The last character of the License Plate.</p>
    pub fn last_character(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_character = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The last character of the License Plate.</p>
    pub fn set_last_character(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_character = input;
        self
    }
    /// <p>The last character of the License Plate.</p>
    pub fn get_last_character(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_character
    }
    /// Consumes the builder and constructs a [`RouteVehicleLicensePlate`](crate::types::RouteVehicleLicensePlate).
    pub fn build(self) -> crate::types::RouteVehicleLicensePlate {
        crate::types::RouteVehicleLicensePlate {
            last_character: self.last_character,
        }
    }
}
