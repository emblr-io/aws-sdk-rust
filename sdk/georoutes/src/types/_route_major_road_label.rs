// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Important labels including names and route numbers that differentiate the current route from the alternatives presented.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteMajorRoadLabel {
    /// <p>Name of the road (localized).</p>
    pub road_name: ::std::option::Option<crate::types::LocalizedString>,
    /// <p>Route number of the road.</p>
    pub route_number: ::std::option::Option<crate::types::RouteNumber>,
}
impl RouteMajorRoadLabel {
    /// <p>Name of the road (localized).</p>
    pub fn road_name(&self) -> ::std::option::Option<&crate::types::LocalizedString> {
        self.road_name.as_ref()
    }
    /// <p>Route number of the road.</p>
    pub fn route_number(&self) -> ::std::option::Option<&crate::types::RouteNumber> {
        self.route_number.as_ref()
    }
}
impl RouteMajorRoadLabel {
    /// Creates a new builder-style object to manufacture [`RouteMajorRoadLabel`](crate::types::RouteMajorRoadLabel).
    pub fn builder() -> crate::types::builders::RouteMajorRoadLabelBuilder {
        crate::types::builders::RouteMajorRoadLabelBuilder::default()
    }
}

/// A builder for [`RouteMajorRoadLabel`](crate::types::RouteMajorRoadLabel).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteMajorRoadLabelBuilder {
    pub(crate) road_name: ::std::option::Option<crate::types::LocalizedString>,
    pub(crate) route_number: ::std::option::Option<crate::types::RouteNumber>,
}
impl RouteMajorRoadLabelBuilder {
    /// <p>Name of the road (localized).</p>
    pub fn road_name(mut self, input: crate::types::LocalizedString) -> Self {
        self.road_name = ::std::option::Option::Some(input);
        self
    }
    /// <p>Name of the road (localized).</p>
    pub fn set_road_name(mut self, input: ::std::option::Option<crate::types::LocalizedString>) -> Self {
        self.road_name = input;
        self
    }
    /// <p>Name of the road (localized).</p>
    pub fn get_road_name(&self) -> &::std::option::Option<crate::types::LocalizedString> {
        &self.road_name
    }
    /// <p>Route number of the road.</p>
    pub fn route_number(mut self, input: crate::types::RouteNumber) -> Self {
        self.route_number = ::std::option::Option::Some(input);
        self
    }
    /// <p>Route number of the road.</p>
    pub fn set_route_number(mut self, input: ::std::option::Option<crate::types::RouteNumber>) -> Self {
        self.route_number = input;
        self
    }
    /// <p>Route number of the road.</p>
    pub fn get_route_number(&self) -> &::std::option::Option<crate::types::RouteNumber> {
        &self.route_number
    }
    /// Consumes the builder and constructs a [`RouteMajorRoadLabel`](crate::types::RouteMajorRoadLabel).
    pub fn build(self) -> crate::types::RouteMajorRoadLabel {
        crate::types::RouteMajorRoadLabel {
            road_name: self.road_name,
            route_number: self.route_number,
        }
    }
}
