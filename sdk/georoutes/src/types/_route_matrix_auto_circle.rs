// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the circle that was used while calculating the route.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteMatrixAutoCircle {
    /// <p>The margin provided for the calculation.</p>
    pub margin: i64,
    /// <p>The maximum size of the radius provided for the calculation.</p>
    pub max_radius: i64,
}
impl RouteMatrixAutoCircle {
    /// <p>The margin provided for the calculation.</p>
    pub fn margin(&self) -> i64 {
        self.margin
    }
    /// <p>The maximum size of the radius provided for the calculation.</p>
    pub fn max_radius(&self) -> i64 {
        self.max_radius
    }
}
impl RouteMatrixAutoCircle {
    /// Creates a new builder-style object to manufacture [`RouteMatrixAutoCircle`](crate::types::RouteMatrixAutoCircle).
    pub fn builder() -> crate::types::builders::RouteMatrixAutoCircleBuilder {
        crate::types::builders::RouteMatrixAutoCircleBuilder::default()
    }
}

/// A builder for [`RouteMatrixAutoCircle`](crate::types::RouteMatrixAutoCircle).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteMatrixAutoCircleBuilder {
    pub(crate) margin: ::std::option::Option<i64>,
    pub(crate) max_radius: ::std::option::Option<i64>,
}
impl RouteMatrixAutoCircleBuilder {
    /// <p>The margin provided for the calculation.</p>
    pub fn margin(mut self, input: i64) -> Self {
        self.margin = ::std::option::Option::Some(input);
        self
    }
    /// <p>The margin provided for the calculation.</p>
    pub fn set_margin(mut self, input: ::std::option::Option<i64>) -> Self {
        self.margin = input;
        self
    }
    /// <p>The margin provided for the calculation.</p>
    pub fn get_margin(&self) -> &::std::option::Option<i64> {
        &self.margin
    }
    /// <p>The maximum size of the radius provided for the calculation.</p>
    pub fn max_radius(mut self, input: i64) -> Self {
        self.max_radius = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum size of the radius provided for the calculation.</p>
    pub fn set_max_radius(mut self, input: ::std::option::Option<i64>) -> Self {
        self.max_radius = input;
        self
    }
    /// <p>The maximum size of the radius provided for the calculation.</p>
    pub fn get_max_radius(&self) -> &::std::option::Option<i64> {
        &self.max_radius
    }
    /// Consumes the builder and constructs a [`RouteMatrixAutoCircle`](crate::types::RouteMatrixAutoCircle).
    pub fn build(self) -> crate::types::RouteMatrixAutoCircle {
        crate::types::RouteMatrixAutoCircle {
            margin: self.margin.unwrap_or_default(),
            max_radius: self.max_radius.unwrap_or_default(),
        }
    }
}
