// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Zone categories to be avoided.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RouteMatrixAvoidanceZoneCategory {
    /// <p>Zone category to be avoided.</p>
    pub category: ::std::option::Option<crate::types::RouteMatrixZoneCategory>,
}
impl RouteMatrixAvoidanceZoneCategory {
    /// <p>Zone category to be avoided.</p>
    pub fn category(&self) -> ::std::option::Option<&crate::types::RouteMatrixZoneCategory> {
        self.category.as_ref()
    }
}
impl RouteMatrixAvoidanceZoneCategory {
    /// Creates a new builder-style object to manufacture [`RouteMatrixAvoidanceZoneCategory`](crate::types::RouteMatrixAvoidanceZoneCategory).
    pub fn builder() -> crate::types::builders::RouteMatrixAvoidanceZoneCategoryBuilder {
        crate::types::builders::RouteMatrixAvoidanceZoneCategoryBuilder::default()
    }
}

/// A builder for [`RouteMatrixAvoidanceZoneCategory`](crate::types::RouteMatrixAvoidanceZoneCategory).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RouteMatrixAvoidanceZoneCategoryBuilder {
    pub(crate) category: ::std::option::Option<crate::types::RouteMatrixZoneCategory>,
}
impl RouteMatrixAvoidanceZoneCategoryBuilder {
    /// <p>Zone category to be avoided.</p>
    pub fn category(mut self, input: crate::types::RouteMatrixZoneCategory) -> Self {
        self.category = ::std::option::Option::Some(input);
        self
    }
    /// <p>Zone category to be avoided.</p>
    pub fn set_category(mut self, input: ::std::option::Option<crate::types::RouteMatrixZoneCategory>) -> Self {
        self.category = input;
        self
    }
    /// <p>Zone category to be avoided.</p>
    pub fn get_category(&self) -> &::std::option::Option<crate::types::RouteMatrixZoneCategory> {
        &self.category
    }
    /// Consumes the builder and constructs a [`RouteMatrixAvoidanceZoneCategory`](crate::types::RouteMatrixAvoidanceZoneCategory).
    pub fn build(self) -> crate::types::RouteMatrixAvoidanceZoneCategory {
        crate::types::RouteMatrixAvoidanceZoneCategory { category: self.category }
    }
}
