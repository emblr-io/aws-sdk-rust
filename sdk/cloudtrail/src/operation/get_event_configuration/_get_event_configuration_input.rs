// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetEventConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p>
    pub event_data_store: ::std::option::Option<::std::string::String>,
}
impl GetEventConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p>
    pub fn event_data_store(&self) -> ::std::option::Option<&str> {
        self.event_data_store.as_deref()
    }
}
impl GetEventConfigurationInput {
    /// Creates a new builder-style object to manufacture [`GetEventConfigurationInput`](crate::operation::get_event_configuration::GetEventConfigurationInput).
    pub fn builder() -> crate::operation::get_event_configuration::builders::GetEventConfigurationInputBuilder {
        crate::operation::get_event_configuration::builders::GetEventConfigurationInputBuilder::default()
    }
}

/// A builder for [`GetEventConfigurationInput`](crate::operation::get_event_configuration::GetEventConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetEventConfigurationInputBuilder {
    pub(crate) event_data_store: ::std::option::Option<::std::string::String>,
}
impl GetEventConfigurationInputBuilder {
    /// <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p>
    pub fn event_data_store(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_data_store = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p>
    pub fn set_event_data_store(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_data_store = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p>
    pub fn get_event_data_store(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_data_store
    }
    /// Consumes the builder and constructs a [`GetEventConfigurationInput`](crate::operation::get_event_configuration::GetEventConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_event_configuration::GetEventConfigurationInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_event_configuration::GetEventConfigurationInput {
            event_data_store: self.event_data_store,
        })
    }
}
