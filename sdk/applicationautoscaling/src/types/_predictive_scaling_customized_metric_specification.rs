// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a CloudWatch metric of your choosing for a predictive scaling policy.</p>
#[non_exhaustive]
#[cfg_attr(feature = "serde-serialize", derive(::serde::Serialize))]
#[cfg_attr(feature = "serde-deserialize", derive(::serde::Deserialize))]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PredictiveScalingCustomizedMetricSpecification {
    /// <p>One or more metric data queries to provide data points for a metric specification.</p>
    pub metric_data_queries: ::std::vec::Vec<crate::types::PredictiveScalingMetricDataQuery>,
}
impl PredictiveScalingCustomizedMetricSpecification {
    /// <p>One or more metric data queries to provide data points for a metric specification.</p>
    pub fn metric_data_queries(&self) -> &[crate::types::PredictiveScalingMetricDataQuery] {
        use std::ops::Deref;
        self.metric_data_queries.deref()
    }
}
impl PredictiveScalingCustomizedMetricSpecification {
    /// Creates a new builder-style object to manufacture [`PredictiveScalingCustomizedMetricSpecification`](crate::types::PredictiveScalingCustomizedMetricSpecification).
    pub fn builder() -> crate::types::builders::PredictiveScalingCustomizedMetricSpecificationBuilder {
        crate::types::builders::PredictiveScalingCustomizedMetricSpecificationBuilder::default()
    }
}

/// A builder for [`PredictiveScalingCustomizedMetricSpecification`](crate::types::PredictiveScalingCustomizedMetricSpecification).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PredictiveScalingCustomizedMetricSpecificationBuilder {
    pub(crate) metric_data_queries: ::std::option::Option<::std::vec::Vec<crate::types::PredictiveScalingMetricDataQuery>>,
}
impl PredictiveScalingCustomizedMetricSpecificationBuilder {
    /// Appends an item to `metric_data_queries`.
    ///
    /// To override the contents of this collection use [`set_metric_data_queries`](Self::set_metric_data_queries).
    ///
    /// <p>One or more metric data queries to provide data points for a metric specification.</p>
    pub fn metric_data_queries(mut self, input: crate::types::PredictiveScalingMetricDataQuery) -> Self {
        let mut v = self.metric_data_queries.unwrap_or_default();
        v.push(input);
        self.metric_data_queries = ::std::option::Option::Some(v);
        self
    }
    /// <p>One or more metric data queries to provide data points for a metric specification.</p>
    pub fn set_metric_data_queries(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::PredictiveScalingMetricDataQuery>>) -> Self {
        self.metric_data_queries = input;
        self
    }
    /// <p>One or more metric data queries to provide data points for a metric specification.</p>
    pub fn get_metric_data_queries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PredictiveScalingMetricDataQuery>> {
        &self.metric_data_queries
    }
    /// Consumes the builder and constructs a [`PredictiveScalingCustomizedMetricSpecification`](crate::types::PredictiveScalingCustomizedMetricSpecification).
    /// This method will fail if any of the following fields are not set:
    /// - [`metric_data_queries`](crate::types::builders::PredictiveScalingCustomizedMetricSpecificationBuilder::metric_data_queries)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::PredictiveScalingCustomizedMetricSpecification, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PredictiveScalingCustomizedMetricSpecification {
            metric_data_queries: self.metric_data_queries.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "metric_data_queries",
                    "metric_data_queries was not specified but it is required when building PredictiveScalingCustomizedMetricSpecification",
                )
            })?,
        })
    }
}
